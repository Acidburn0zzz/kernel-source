From: Jeff Mahoney <jeffm@suse.com>
Subject: ipvs: Fix building with CONFIG_KMSG_IDS=y

 The KMSG infrastructure imposes some interesting limitations on the
 parameters that can be passed to routines it governs.

 Specifically, all parameters passed to it must also result in valid
 preprocessor tokens when passed through the following filter:
 __KMSG_PRINT(level _FMT_ format _ARGS_ ##__VA_ARGS__ _END_)

 It doesn't actually need to build, but cpp does need to complete
 successfully.

 With the following statement:
 pr_info("Registered protocols (%s)\n", &protocols[2]);

  __KMSG_PRINT("<6>" _FMT_ "Registered protocols (%s)\n" _ARGS_ &protocols[2] _END_)

 .. which cpp thinks is invalid:
 net/netfilter/ipvs/ip_vs_proto.c:266:1: error: pasting "_ARGS_" and "&" does not give a valid preprocessing token

 I played around briefly with alternatives that could fix the limitations,
 but eventually decided just to work around it.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 net/netfilter/ipvs/ip_vs_ctl.c   |    9 ++++++---
 net/netfilter/ipvs/ip_vs_proto.c |    2 +-
 2 files changed, 7 insertions(+), 4 deletions(-)

--- a/net/netfilter/ipvs/ip_vs_ctl.c
+++ b/net/netfilter/ipvs/ip_vs_ctl.c
@@ -2357,8 +2357,9 @@ do_ip_vs_get_ctl(struct sock *sk, int cm
 		return -EPERM;
 
 	if (*len < get_arglen[GET_CMDID(cmd)]) {
+		int l = *len;
 		pr_err("get_ctl: len %u < %u\n",
-		       *len, get_arglen[GET_CMDID(cmd)]);
+		       l, get_arglen[GET_CMDID(cmd)]);
 		return -EINVAL;
 	}
 
@@ -2403,7 +2404,8 @@ do_ip_vs_get_ctl(struct sock *sk, int cm
 		size = sizeof(*get) +
 			sizeof(struct ip_vs_service_entry) * get->num_services;
 		if (*len != size) {
-			pr_err("length: %u != %u\n", *len, size);
+			int l = *len;
+			pr_err("length: %u != %u\n", l, size);
 			ret = -EINVAL;
 			goto out;
 		}
@@ -2443,7 +2445,8 @@ do_ip_vs_get_ctl(struct sock *sk, int cm
 		size = sizeof(*get) +
 			sizeof(struct ip_vs_dest_entry) * get->num_dests;
 		if (*len != size) {
-			pr_err("length: %u != %u\n", *len, size);
+			int l = *len;
+			pr_err("length: %u != %u\n", l, size);
 			ret = -EINVAL;
 			goto out;
 		}
--- a/net/netfilter/ipvs/ip_vs_proto.c
+++ b/net/netfilter/ipvs/ip_vs_proto.c
@@ -263,7 +263,7 @@ int __init ip_vs_protocol_init(void)
 #ifdef CONFIG_IP_VS_PROTO_ESP
 	REGISTER_PROTOCOL(&ip_vs_protocol_esp);
 #endif
-	pr_info("Registered protocols (%s)\n", &protocols[2]);
+	pr_info("Registered protocols (%s)\n", protocols + 2);
 
 	return 0;
 }
