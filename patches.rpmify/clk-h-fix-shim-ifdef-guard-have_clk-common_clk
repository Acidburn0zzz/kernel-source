From: Jeff Mahoney <jeffm@suse.com>
Subject: clk.h: Fix shim ifdef guard (HAVE_CLK -> COMMON_CLK)
Patch-mainline: Submitted 27 Aug 2012 to LKML

Commit 93abe8e4 (clk: add non HAVE_CLK routines) added shims for
the clk code but HAVE_CLK isn't enough. It's possible to have the
clk support but not enable it. We end up with full prototypes for code
that is never built - causing module linking to fail later.

This patch changes the guard to use COMMON_CLK, which actually guards
the code.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 include/linux/clk.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/include/linux/clk.h
+++ b/include/linux/clk.h
@@ -120,7 +120,7 @@ static inline void clk_unprepare(struct
 }
 #endif
 
-#ifdef CONFIG_HAVE_CLK
+#ifdef CONFIG_COMMON_CLK
 /**
  * clk_get - lookup and obtain a reference to a clock producer.
  * @dev: device for clock "consumer"
@@ -276,7 +276,7 @@ struct clk *clk_get_parent(struct clk *c
  */
 struct clk *clk_get_sys(const char *dev_id, const char *con_id);
 
-#else /* !CONFIG_HAVE_CLK */
+#else /* !CONFIG_COMMON_CLK */
 
 static inline struct clk *clk_get(struct device *dev, const char *id)
 {

