diff -purN linux-post-2.6.4-20040313/arch/alpha/kernel/alpha_ksyms.c linux-post-2.6.4-20040314/arch/alpha/kernel/alpha_ksyms.c
--- linux-post-2.6.4-20040313/arch/alpha/kernel/alpha_ksyms.c	2004-02-25 10:31:13.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/alpha/kernel/alpha_ksyms.c	2004-03-14 01:57:41.000000000 +0000
@@ -35,9 +35,6 @@
 #include <asm/cacheflush.h>
 #include <asm/vga.h>
 
-#define __KERNEL_SYSCALLS__
-#include <asm/unistd.h>
-
 extern struct hwrpb_struct *hwrpb;
 extern void dump_thread(struct pt_regs *, struct user *);
 extern spinlock_t rtc_lock;
diff -purN linux-post-2.6.4-20040313/arch/alpha/kernel/smp.c linux-post-2.6.4-20040314/arch/alpha/kernel/smp.c
--- linux-post-2.6.4-20040313/arch/alpha/kernel/smp.c	2003-10-08 02:53:37.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/alpha/kernel/smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -39,9 +39,6 @@
 #include <asm/mmu_context.h>
 #include <asm/tlbflush.h>
 
-#define __KERNEL_SYSCALLS__
-#include <asm/unistd.h>
-
 #include "proto.h"
 #include "irq_impl.h"
 
diff -purN linux-post-2.6.4-20040313/arch/cris/kernel/process.c linux-post-2.6.4-20040314/arch/cris/kernel/process.c
--- linux-post-2.6.4-20040313/arch/cris/kernel/process.c	2003-10-08 02:53:37.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/cris/kernel/process.c	2004-03-14 01:57:41.000000000 +0000
@@ -91,8 +91,6 @@
  * This file handles the architecture-dependent parts of process handling..
  */
 
-#define __KERNEL_SYSCALLS__
-
 #include <asm/atomic.h>
 #include <asm/pgtable.h>
 #include <asm/uaccess.h>
diff -purN linux-post-2.6.4-20040313/arch/i386/kernel/setup.c linux-post-2.6.4-20040314/arch/i386/kernel/setup.c
--- linux-post-2.6.4-20040313/arch/i386/kernel/setup.c	2004-03-12 09:30:22.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/i386/kernel/setup.c	2004-03-14 01:57:42.000000000 +0000
@@ -832,6 +832,13 @@ static unsigned long __init setup_memory
 	 */
 	reserve_bootmem(0, PAGE_SIZE);
 
+    /* could be an AMD 768MPX chipset. Reserve a page  before VGA to prevent
+       PCI prefetch into it (errata #56). Usually the page is reserved anyways,
+       unless you have no PS/2 mouse plugged in. */
+	if (boot_cpu_data.x86_vendor == X86_VENDOR_AMD &&
+	    boot_cpu_data.x86 == 6)
+	     reserve_bootmem(0xa0000 - 4096, 4096);
+
 #ifdef CONFIG_SMP
 	/*
 	 * But first pinch a few for the stack/trampoline stuff
diff -purN linux-post-2.6.4-20040313/arch/parisc/kernel/process.c linux-post-2.6.4-20040314/arch/parisc/kernel/process.c
--- linux-post-2.6.4-20040313/arch/parisc/kernel/process.c	2004-02-04 05:41:56.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/parisc/kernel/process.c	2004-03-14 01:57:41.000000000 +0000
@@ -32,7 +32,6 @@
  *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
 
-#define __KERNEL_SYSCALLS__
 #include <stdarg.h>
 
 #include <linux/elf.h>
diff -purN linux-post-2.6.4-20040313/arch/parisc/kernel/smp.c linux-post-2.6.4-20040314/arch/parisc/kernel/smp.c
--- linux-post-2.6.4-20040313/arch/parisc/kernel/smp.c	2003-12-18 05:48:39.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/parisc/kernel/smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -16,7 +16,6 @@
 **      the Free Software Foundation; either version 2 of the License, or
 **      (at your option) any later version.
 */
-#define __KERNEL_SYSCALLS__
 #undef ENTRY_SYS_CPUS	/* syscall support for iCOD-like functionality */
 
 #include <linux/autoconf.h>
diff -purN linux-post-2.6.4-20040313/arch/ppc/kernel/misc.S linux-post-2.6.4-20040314/arch/ppc/kernel/misc.S
--- linux-post-2.6.4-20040313/arch/ppc/kernel/misc.S	2004-02-13 15:24:55.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/ppc/kernel/misc.S	2004-03-14 01:57:41.000000000 +0000
@@ -1108,17 +1108,7 @@ _GLOBAL(name) \
 	li	r3,-1; \
 	blr
 
-#define __NR__exit __NR_exit
-
-SYSCALL(setsid)
-SYSCALL(open)
-SYSCALL(read)
-SYSCALL(write)
-SYSCALL(lseek)
-SYSCALL(close)
-SYSCALL(dup)
 SYSCALL(execve)
-SYSCALL(waitpid)
 
 /* Why isn't this a) automatic, b) written in 'C'? */
 	.data
diff -purN linux-post-2.6.4-20040313/arch/ppc/kernel/ppc_ksyms.c linux-post-2.6.4-20040314/arch/ppc/kernel/ppc_ksyms.c
--- linux-post-2.6.4-20040313/arch/ppc/kernel/ppc_ksyms.c	2004-02-05 05:59:19.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/ppc/kernel/ppc_ksyms.c	2004-03-14 01:57:41.000000000 +0000
@@ -32,8 +32,6 @@
 #include <linux/pmu.h>
 #include <asm/prom.h>
 #include <asm/system.h>
-#define __KERNEL_SYSCALLS__
-#include <asm/unistd.h>
 #include <asm/pci-bridge.h>
 #include <asm/irq.h>
 #include <asm/pmac_feature.h>
@@ -189,10 +187,6 @@ EXPORT_SYMBOL(consistent_sync);
 EXPORT_SYMBOL(flush_dcache_all);
 #endif
 
-EXPORT_SYMBOL(open);
-EXPORT_SYMBOL(read);
-EXPORT_SYMBOL(lseek);
-EXPORT_SYMBOL(close);
 EXPORT_SYMBOL(start_thread);
 EXPORT_SYMBOL(kernel_thread);
 
diff -purN linux-post-2.6.4-20040313/arch/ppc/kernel/smp.c linux-post-2.6.4-20040314/arch/ppc/kernel/smp.c
--- linux-post-2.6.4-20040313/arch/ppc/kernel/smp.c	2004-02-21 03:56:34.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/ppc/kernel/smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -17,8 +17,6 @@
 #include <linux/interrupt.h>
 #include <linux/kernel_stat.h>
 #include <linux/delay.h>
-#define __KERNEL_SYSCALLS__
-#include <linux/unistd.h>
 #include <linux/init.h>
 #include <linux/spinlock.h>
 #include <linux/cache.h>
diff -purN linux-post-2.6.4-20040313/arch/ppc/platforms/chrp_smp.c linux-post-2.6.4-20040314/arch/ppc/platforms/chrp_smp.c
--- linux-post-2.6.4-20040313/arch/ppc/platforms/chrp_smp.c	2003-03-31 22:29:49.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/ppc/platforms/chrp_smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -16,8 +16,6 @@
 #include <linux/interrupt.h>
 #include <linux/kernel_stat.h>
 #include <linux/delay.h>
-#define __KERNEL_SYSCALLS__
-#include <linux/unistd.h>
 #include <linux/init.h>
 #include <linux/spinlock.h>
 
diff -purN linux-post-2.6.4-20040313/arch/ppc/platforms/pmac_smp.c linux-post-2.6.4-20040314/arch/ppc/platforms/pmac_smp.c
--- linux-post-2.6.4-20040313/arch/ppc/platforms/pmac_smp.c	2004-02-05 05:31:23.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/ppc/platforms/pmac_smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -29,8 +29,6 @@
 #include <linux/interrupt.h>
 #include <linux/kernel_stat.h>
 #include <linux/delay.h>
-#define __KERNEL_SYSCALLS__
-#include <linux/unistd.h>
 #include <linux/init.h>
 #include <linux/spinlock.h>
 #include <linux/errno.h>
diff -purN linux-post-2.6.4-20040313/arch/ppc64/kernel/pmac_smp.c linux-post-2.6.4-20040314/arch/ppc64/kernel/pmac_smp.c
--- linux-post-2.6.4-20040313/arch/ppc64/kernel/pmac_smp.c	2004-02-27 04:00:48.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/ppc64/kernel/pmac_smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -29,8 +29,6 @@
 #include <linux/interrupt.h>
 #include <linux/kernel_stat.h>
 #include <linux/delay.h>
-#define __KERNEL_SYSCALLS__
-#include <linux/unistd.h>
 #include <linux/init.h>
 #include <linux/spinlock.h>
 #include <linux/errno.h>
diff -purN linux-post-2.6.4-20040313/arch/sparc/kernel/process.c linux-post-2.6.4-20040314/arch/sparc/kernel/process.c
--- linux-post-2.6.4-20040313/arch/sparc/kernel/process.c	2004-02-22 19:15:54.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/sparc/kernel/process.c	2004-03-14 01:57:41.000000000 +0000
@@ -9,7 +9,6 @@
  * This file handles the architecture-dependent parts of process handling..
  */
 
-#define __KERNEL_SYSCALLS__
 #include <stdarg.h>
 
 #include <linux/errno.h>
@@ -19,7 +18,6 @@
 #include <linux/kallsyms.h>
 #include <linux/mm.h>
 #include <linux/stddef.h>
-#include <linux/unistd.h>
 #include <linux/ptrace.h>
 #include <linux/slab.h>
 #include <linux/user.h>
diff -purN linux-post-2.6.4-20040313/arch/sparc/kernel/smp.c linux-post-2.6.4-20040314/arch/sparc/kernel/smp.c
--- linux-post-2.6.4-20040313/arch/sparc/kernel/smp.c	2004-02-22 22:34:53.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/sparc/kernel/smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -33,9 +33,6 @@
 #include <asm/cacheflush.h>
 #include <asm/tlbflush.h>
 
-#define __KERNEL_SYSCALLS__
-#include <linux/unistd.h>
-
 #define IRQ_RESCHEDULE		13
 #define IRQ_STOP_CPU		14
 #define IRQ_CROSS_CALL		15
diff -purN linux-post-2.6.4-20040313/arch/sparc/kernel/sun4d_smp.c linux-post-2.6.4-20040314/arch/sparc/kernel/sun4d_smp.c
--- linux-post-2.6.4-20040313/arch/sparc/kernel/sun4d_smp.c	2003-09-20 07:54:22.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/sparc/kernel/sun4d_smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -32,9 +32,6 @@
 #include <asm/sbus.h>
 #include <asm/sbi.h>
 
-#define __KERNEL_SYSCALLS__
-#include <linux/unistd.h>
-
 #define IRQ_CROSS_CALL		15
 
 extern ctxd_t *srmmu_ctx_table_phys;
diff -purN linux-post-2.6.4-20040313/arch/sparc/kernel/sun4m_smp.c linux-post-2.6.4-20040314/arch/sparc/kernel/sun4m_smp.c
--- linux-post-2.6.4-20040313/arch/sparc/kernel/sun4m_smp.c	2003-03-31 22:29:49.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/sparc/kernel/sun4m_smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -27,9 +27,6 @@
 #include <asm/oplib.h>
 #include <asm/hardirq.h>
 
-#define __KERNEL_SYSCALLS__
-#include <linux/unistd.h>
-
 #define IRQ_RESCHEDULE		13
 #define IRQ_STOP_CPU		14
 #define IRQ_CROSS_CALL		15
diff -purN linux-post-2.6.4-20040313/arch/sparc64/kernel/process.c linux-post-2.6.4-20040314/arch/sparc64/kernel/process.c
--- linux-post-2.6.4-20040313/arch/sparc64/kernel/process.c	2003-10-08 02:53:41.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/sparc64/kernel/process.c	2004-03-14 01:57:41.000000000 +0000
@@ -10,7 +10,6 @@
  * This file handles the architecture-dependent parts of process handling..
  */
 
-#define __KERNEL_SYSCALLS__
 #include <stdarg.h>
 
 #include <linux/errno.h>
@@ -22,7 +21,6 @@
 #include <linux/smp.h>
 #include <linux/smp_lock.h>
 #include <linux/stddef.h>
-#include <linux/unistd.h>
 #include <linux/ptrace.h>
 #include <linux/slab.h>
 #include <linux/user.h>
@@ -43,6 +41,7 @@
 #include <asm/fpumacro.h>
 #include <asm/head.h>
 #include <asm/cpudata.h>
+#include <asm/unistd.h>
 
 /* #define VERBOSE_SHOWREGS */
 
diff -purN linux-post-2.6.4-20040313/arch/sparc64/kernel/smp.c linux-post-2.6.4-20040314/arch/sparc64/kernel/smp.c
--- linux-post-2.6.4-20040313/arch/sparc64/kernel/smp.c	2004-02-25 00:11:02.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/sparc64/kernel/smp.c	2004-03-14 01:57:41.000000000 +0000
@@ -36,9 +36,6 @@
 #include <asm/timer.h>
 #include <asm/starfire.h>
 
-#define __KERNEL_SYSCALLS__
-#include <linux/unistd.h>
-
 extern int linux_num_cpus;
 extern void calibrate_delay(void);
 
diff -purN linux-post-2.6.4-20040313/arch/x86_64/kernel/process.c linux-post-2.6.4-20040314/arch/x86_64/kernel/process.c
--- linux-post-2.6.4-20040313/arch/x86_64/kernel/process.c	2004-03-08 14:23:47.000000000 +0000
+++ linux-post-2.6.4-20040314/arch/x86_64/kernel/process.c	2004-03-14 01:57:41.000000000 +0000
@@ -16,7 +16,6 @@
  * This file handles the architecture-dependent parts of process handling..
  */
 
-#define __KERNEL_SYSCALLS__
 #include <stdarg.h>
 
 #include <linux/errno.h>
@@ -25,7 +24,6 @@
 #include <linux/mm.h>
 #include <linux/elfcore.h>
 #include <linux/smp.h>
-#include <linux/unistd.h>
 #include <linux/slab.h>
 #include <linux/user.h>
 #include <linux/module.h>
diff -purN linux-post-2.6.4-20040313/drivers/block/carmel.c linux-post-2.6.4-20040314/drivers/block/carmel.c
--- linux-post-2.6.4-20040313/drivers/block/carmel.c	2004-03-12 18:46:21.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/block/carmel.c	2004-03-13 06:15:10.000000000 +0000
@@ -33,7 +33,7 @@ MODULE_DESCRIPTION("Promise SX8 (carmel)
 #undef CARM_NDEBUG
 
 #define DRV_NAME "carmel"
-#define DRV_VERSION "0.6"
+#define DRV_VERSION "0.7"
 #define PFX DRV_NAME ": "
 
 #define NEXT_RESP(idx)	((idx + 1) % RMSG_Q_LEN)
@@ -115,7 +115,10 @@ enum {
 	CARM_HAVE_RESP		= 0x01,
 	CARM_MSG_READ		= 1,
 	CARM_MSG_WRITE		= 2,
-	CARM_MSG_IOCTL		= 4,
+	CARM_MSG_VERIFY		= 3,
+	CARM_MSG_GET_CAPACITY	= 4,
+	CARM_MSG_FLUSH		= 5,
+	CARM_MSG_IOCTL		= 6,
 	CARM_MSG_ARRAY		= 8,
 	CARM_MSG_MISC		= 9,
 	CARM_CME		= (1 << 2),
@@ -127,7 +130,9 @@ enum {
 	CARM_Q_LEN		= 48,
 
 	/* CARM_MSG_IOCTL messages */
-	CARM_IOC_SCAN_CHAN	= 5,
+	CARM_IOC_SCAN_CHAN	= 5,	/* scan channels for devices */
+	CARM_IOC_GET_TCQ	= 13,	/* get tcq/ncq depth */
+	CARM_IOC_SET_TCQ	= 14,	/* set tcq/ncq depth */
 
 	IOC_SCAN_CHAN_NODEV	= 0x1f,
 	IOC_SCAN_CHAN_OFFSET	= 0x40,
@@ -149,7 +154,7 @@ enum {
 	/* CARM_MSG_MISC messages */
 	MISC_GET_FW_VER		= 2,
 	MISC_ALLOC_MEM		= 3,
-	MISC_SYNC_TIME		= 5,
+	MISC_SET_TIME		= 5,
 
 	/* MISC_GET_FW_VER feature bits */
 	FW_VER_4PORT		= (1 << 2), /* 1=4 ports, 0=8 ports */
@@ -657,7 +662,7 @@ static unsigned int carm_fill_sync_time(
 
 	memset(st, 0, sizeof(*st));
 	st->type	= CARM_MSG_MISC;
-	st->subtype	= MISC_SYNC_TIME;
+	st->subtype	= MISC_SET_TIME;
 	st->handle	= cpu_to_le32(TAG_ENCODE(idx));
 	st->timestamp	= cpu_to_le32(tv.tv_sec);
 
@@ -1097,7 +1102,7 @@ static inline void carm_handle_resp(stru
 			carm_handle_generic(host, crq, is_ok,
 					    HST_ALLOC_BUF, HST_SYNC_TIME);
 			break;
-		case MISC_SYNC_TIME:
+		case MISC_SET_TIME:
 			carm_handle_generic(host, crq, is_ok,
 					    HST_SYNC_TIME, HST_GET_FW_VER);
 			break;
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/advantechwdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/advantechwdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/advantechwdt.c	2004-02-11 19:44:47.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/advantechwdt.c	2004-03-13 22:48:20.000000000 +0000
@@ -256,8 +256,6 @@ static struct miscdevice advwdt_miscdev 
 
 static struct notifier_block advwdt_notifier = {
 	.notifier_call = advwdt_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 static int __init
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/alim1535_wdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/alim1535_wdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/alim1535_wdt.c	2004-02-11 19:44:47.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/alim1535_wdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -385,8 +385,6 @@ static struct miscdevice ali_miscdev = {
 
 static struct notifier_block ali_notifier = {
 	.notifier_call =	ali_notify_sys,
-	.next =			NULL,
-	.priority =		0,
 };
 
 /*
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/alim7101_wdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/alim7101_wdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/alim7101_wdt.c	2004-02-11 19:44:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/alim7101_wdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -303,8 +303,6 @@ static int wdt_notify_sys(struct notifie
 static struct notifier_block wdt_notifier=
 {
 	.notifier_call = wdt_notify_sys,
-	.next = 0,
-	.priority = 0,
 };
 
 static void __exit alim7101_wdt_unload(void)
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/ib700wdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/ib700wdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/ib700wdt.c	2004-03-02 03:01:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/ib700wdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -284,8 +284,6 @@ static struct miscdevice ibwdt_miscdev =
 
 static struct notifier_block ibwdt_notifier = {
 	.notifier_call = ibwdt_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 static int __init ibwdt_init(void)
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/machzwd.c linux-post-2.6.4-20040314/drivers/char/watchdog/machzwd.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/machzwd.c	2004-03-02 03:01:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/machzwd.c	2004-03-13 22:48:21.000000000 +0000
@@ -447,8 +447,6 @@ static struct miscdevice zf_miscdev = {
  */
 static struct notifier_block zf_notifier = {
 	.notifier_call = zf_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 static void __init zf_show_action(int act)
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/pcwd_pci.c linux-post-2.6.4-20040314/drivers/char/watchdog/pcwd_pci.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/pcwd_pci.c	2004-02-11 20:28:17.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/pcwd_pci.c	2004-03-13 22:19:17.000000000 +0000
@@ -49,7 +49,7 @@
 
 /* Module and version information */
 #define WATCHDOG_VERSION "1.00"
-#define WATCHDOG_DATE "09/02/2004"
+#define WATCHDOG_DATE "13/03/2004"
 #define WATCHDOG_DRIVER_NAME "PCI-PC Watchdog"
 #define WATCHDOG_NAME "pcwd_pci"
 #define PFX WATCHDOG_NAME ": "
@@ -82,6 +82,9 @@
 #define CMD_READ_WATCHDOG_TIMEOUT	0x18
 #define CMD_WRITE_WATCHDOG_TIMEOUT	0x19
 
+/* We can only use 1 card due to the /dev/watchdog restriction */
+static int cards_found;
+
 /* internal variables */
 static int temp_panic;
 static unsigned long is_active;
@@ -505,7 +508,6 @@ static inline void check_temperature_sup
 static int __devinit pcipcwd_card_init(struct pci_dev *pdev,
 		const struct pci_device_id *ent)
 {
-	static int cards_found;
 	int ret = -EIO;
 	int got_fw_rev, fw_rev_major, fw_rev_minor;
 	char fw_ver_str[20];
@@ -527,7 +529,8 @@ static int __devinit pcipcwd_card_init(s
 
 	if (pci_resource_start(pdev, 0) == 0x0000) {
 		printk(KERN_ERR PFX "No I/O-Address for card detected\n");
-		return -ENODEV;
+		ret = -ENODEV;
+		goto err_out_disable_device;
 	}
 
 	pcipcwd_private.pdev = pdev;
@@ -643,6 +646,7 @@ static void __devexit pcipcwd_card_exit(
 	unregister_reboot_notifier(&pcipcwd_notifier);
 	pci_release_regions(pdev);
 	pci_disable_device(pdev);
+	cards_found--;
 }
 
 static struct pci_device_id pcipcwd_pci_tbl[] = {
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/sbc60xxwdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/sbc60xxwdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/sbc60xxwdt.c	2004-02-11 19:44:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/sbc60xxwdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -322,8 +322,6 @@ static int wdt_notify_sys(struct notifie
 static struct notifier_block wdt_notifier=
 {
 	.notifier_call = wdt_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 static void __exit sbc60xxwdt_unload(void)
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/sc520_wdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/sc520_wdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/sc520_wdt.c	2004-02-11 19:44:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/sc520_wdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -354,8 +354,6 @@ static int wdt_notify_sys(struct notifie
 static struct notifier_block wdt_notifier=
 {
 	.notifier_call = wdt_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 static void __exit sc520_wdt_unload(void)
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/w83627hf_wdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/w83627hf_wdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/w83627hf_wdt.c	2004-03-02 03:01:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/w83627hf_wdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -257,8 +257,6 @@ static struct miscdevice wdt_miscdev = {
 
 static struct notifier_block wdt_notifier = {
 	.notifier_call = wdt_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 static int __init
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/w83877f_wdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/w83877f_wdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/w83877f_wdt.c	2004-03-02 03:01:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/w83877f_wdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -341,8 +341,6 @@ static int wdt_notify_sys(struct notifie
 static struct notifier_block wdt_notifier=
 {
 	.notifier_call = wdt_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 static void __exit w83877f_wdt_unload(void)
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/wafer5823wdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/wafer5823wdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/wafer5823wdt.c	2004-02-11 19:44:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/wafer5823wdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -252,8 +252,6 @@ static struct miscdevice wafwdt_miscdev 
 
 static struct notifier_block wafwdt_notifier = {
 	.notifier_call = wafwdt_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 static int __init wafwdt_init(void)
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/wdt.c linux-post-2.6.4-20040314/drivers/char/watchdog/wdt.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/wdt.c	2004-03-12 09:33:00.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/wdt.c	2004-03-13 22:48:21.000000000 +0000
@@ -459,8 +459,6 @@ static struct miscdevice temp_miscdev=
 static struct notifier_block wdt_notifier=
 {
 	.notifier_call = wdt_notify_sys,
-	.next = NULL,
-	.priority = 0,
 };
 
 /**
diff -purN linux-post-2.6.4-20040313/drivers/char/watchdog/wdt977.c linux-post-2.6.4-20040314/drivers/char/watchdog/wdt977.c
--- linux-post-2.6.4-20040313/drivers/char/watchdog/wdt977.c	2004-03-02 03:01:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/char/watchdog/wdt977.c	2004-03-13 22:36:45.000000000 +0000
@@ -1,5 +1,5 @@
 /*
- *	Wdt977	0.02:	A Watchdog Device for Netwinder W83977AF chip
+ *	Wdt977	0.03:	A Watchdog Device for Netwinder W83977AF chip
  *
  *	(c) Copyright 1998 Rebel.com (Woody Suwalski <woody@netwinder.org>)
  *
@@ -29,24 +29,27 @@
 #include <linux/miscdevice.h>
 #include <linux/init.h>
 #include <linux/watchdog.h>
+#include <linux/notifier.h>
+#include <linux/reboot.h>
 
 #include <asm/io.h>
 #include <asm/system.h>
 #include <asm/mach-types.h>
 #include <asm/uaccess.h>
 
+#define PFX "Wdt977: "
 #define WATCHDOG_MINOR	130
 
-#define	DEFAULT_TIMEOUT	1	/* default timeout = 1 minute */
+#define	DEFAULT_TIMEOUT	60			/* default timeout in seconds */
 
-static	int timeout = DEFAULT_TIMEOUT*60;	/* TO in seconds from user */
-static	int timeoutM = DEFAULT_TIMEOUT;		/* timeout in minutes */
+static	int timeout = DEFAULT_TIMEOUT;
+static	int timeoutM;				/* timeout in minutes */
 static	unsigned long timer_alive;
 static	int testmode;
 static	char expect_close;
 
 module_param(timeout, int, 0);
-MODULE_PARM_DESC(timeout,"Watchdog timeout in seconds (60..15300), default=60");
+MODULE_PARM_DESC(timeout,"Watchdog timeout in seconds (60..15300), default=" __MODULE_STRING(DEFAULT_TIMEOUT) ")");
 module_param(testmode, int, 0);
 MODULE_PARM_DESC(testmode,"Watchdog testmode (1 = no reboot), default=0");
 
@@ -59,21 +62,102 @@ static int nowayout = 0;
 module_param(nowayout, int, 0);
 MODULE_PARM_DESC(nowayout, "Watchdog cannot be stopped once started (default=CONFIG_WATCHDOG_NOWAYOUT)");
 
+/*
+ * Start the watchdog
+ */
 
-/* This is kicking the watchdog by simply re-writing the timeout to reg. 0xF2 */
-static int kick_wdog(void)
+static int wdt977_start(void)
 {
-	/*
-	 *	Refresh the timer.
+	/* unlock the SuperIO chip */
+	outb(0x87,0x370);
+	outb(0x87,0x370);
+
+	/* select device Aux2 (device=8) and set watchdog regs F2, F3 and F4
+	 * F2 has the timeout in minutes
+	 * F3 could be set to the POWER LED blink (with GP17 set to PowerLed)
+	 *   at timeout, and to reset timer on kbd/mouse activity (not impl.)
+	 * F4 is used to just clear the TIMEOUT'ed state (bit 0)
 	 */
+	outb(0x07,0x370);
+	outb(0x08,0x371);
+	outb(0xF2,0x370);
+	outb(timeoutM,0x371);
+	outb(0xF3,0x370);
+	outb(0x00,0x371);	/* another setting is 0E for kbd/mouse/LED */
+	outb(0xF4,0x370);
+	outb(0x00,0x371);
+
+	/* at last select device Aux1 (dev=7) and set GP16 as a watchdog output */
+	/* in test mode watch the bit 1 on F4 to indicate "triggered" */
+	if (!testmode)
+	{
+		outb(0x07,0x370);
+		outb(0x07,0x371);
+		outb(0xE6,0x370);
+		outb(0x08,0x371);
+	}
 
+	/* lock the SuperIO chip */
+	outb(0xAA,0x370);
+
+	printk(KERN_INFO PFX "activated.\n");
+
+	return 0;
+}
+
+/*
+ * Stop the watchdog
+ */
+
+static int wdt977_stop(void)
+{
+	/* unlock the SuperIO chip */
+	outb(0x87,0x370);
+	outb(0x87,0x370);
+
+	/* select device Aux2 (device=8) and set watchdog regs F2,F3 and F4
+	* F3 is reset to its default state
+	* F4 can clear the TIMEOUT'ed state (bit 0) - back to default
+	* We can not use GP17 as a PowerLed, as we use its usage as a RedLed
+	*/
+	outb(0x07,0x370);
+	outb(0x08,0x371);
+	outb(0xF2,0x370);
+	outb(0xFF,0x371);
+	outb(0xF3,0x370);
+	outb(0x00,0x371);
+	outb(0xF4,0x370);
+	outb(0x00,0x371);
+	outb(0xF2,0x370);
+	outb(0x00,0x371);
+
+	/* at last select device Aux1 (dev=7) and set GP16 as a watchdog output */
+	outb(0x07,0x370);
+	outb(0x07,0x371);
+	outb(0xE6,0x370);
+	outb(0x08,0x371);
+
+	/* lock the SuperIO chip */
+	outb(0xAA,0x370);
+
+	printk(KERN_INFO PFX "shutdown.\n");
+
+	return 0;
+}
+
+/*
+ * Send a keepalive ping to the watchdog
+ * This is done by simply re-writing the timeout to reg. 0xF2
+ */
+
+static int wdt977_keepalive(void)
+{
 	/* unlock the SuperIO chip */
 	outb(0x87,0x370);
 	outb(0x87,0x370);
 
 	/* select device Aux2 (device=8) and kicks watchdog reg F2 */
 	/* F2 has the timeout in minutes */
-
 	outb(0x07,0x370);
 	outb(0x08,0x371);
 	outb(0xF2,0x370);
@@ -85,77 +169,77 @@ static int kick_wdog(void)
 	return 0;
 }
 
-
 /*
- *	Allow only one person to hold it open
+ * Set the watchdog timeout value
  */
 
-static int wdt977_open(struct inode *inode, struct file *file)
+static int wdt977_set_timeout(int t)
 {
-
-	if( test_and_set_bit(0,&timer_alive) )
-		return -EBUSY;
+	int tmrval;
 
 	/* convert seconds to minutes, rounding up */
-	timeoutM = timeout + 59;
-	timeoutM /= 60;
-
-	if (nowayout)
-	{
-		__module_get(THIS_MODULE);
+	tmrval = (t + 59) / 60;
 
-		/* do not permit disabling the watchdog by writing 0 to reg. 0xF2 */
-		if (!timeoutM) timeoutM = DEFAULT_TIMEOUT;
-	}
-
-	if (machine_is_netwinder())
-	{
+	if (machine_is_netwinder()) {
 		/* we have a hw bug somewhere, so each 977 minute is actually only 30sec
 		 *  this limits the max timeout to half of device max of 255 minutes...
 		 */
-		timeoutM += timeoutM;
+		tmrval += tmrval;
 	}
 
-	/* max timeout value = 255 minutes (0xFF). Write 0 to disable WatchDog. */
-	if (timeoutM > 255) timeoutM = 255;
+	if ((tmrval < 1) || (tmrval > 255))
+		return -EINVAL;
 
-	/* convert seconds to minutes */
-	printk(KERN_INFO "Wdt977 Watchdog activated: timeout = %d sec, nowayout = %i, testmode = %i.\n",
-		machine_is_netwinder() ? (timeoutM>>1)*60 : timeoutM*60,
-		nowayout, testmode);
+	/* timeout is the timeout in seconds, timeoutM is the timeout in minutes) */
+	timeout = t;
+	timeoutM = tmrval;
+	return 0;
+}
+
+/*
+ * Get the watchdog status
+ */
+
+static int wdt977_get_status(int *status)
+{
+	int new_status;
+
+	*status=0;
 
 	/* unlock the SuperIO chip */
 	outb(0x87,0x370);
 	outb(0x87,0x370);
 
-	/* select device Aux2 (device=8) and set watchdog regs F2, F3 and F4
-	 * F2 has the timeout in minutes
-	 * F3 could be set to the POWER LED blink (with GP17 set to PowerLed)
-	 *   at timeout, and to reset timer on kbd/mouse activity (not impl.)
-	 * F4 is used to just clear the TIMEOUT'ed state (bit 0)
-	 */
+	/* select device Aux2 (device=8) and read watchdog reg F4 */
 	outb(0x07,0x370);
 	outb(0x08,0x371);
-	outb(0xF2,0x370);
-	outb(timeoutM,0x371);
-	outb(0xF3,0x370);
-	outb(0x00,0x371);	/* another setting is 0E for kbd/mouse/LED */
 	outb(0xF4,0x370);
-	outb(0x00,0x371);
-
-	/* at last select device Aux1 (dev=7) and set GP16 as a watchdog output */
-	/* in test mode watch the bit 1 on F4 to indicate "triggered" */
-	if (!testmode)
-	{
-		outb(0x07,0x370);
-		outb(0x07,0x371);
-		outb(0xE6,0x370);
-		outb(0x08,0x371);
-	}
+	new_status = inb(0x371);
 
 	/* lock the SuperIO chip */
 	outb(0xAA,0x370);
 
+	if (new_status & 1)
+		*status |= WDIOF_CARDRESET;
+
+	return 0;
+}
+
+
+/*
+ *	/dev/watchdog handling
+ */
+
+static int wdt977_open(struct inode *inode, struct file *file)
+{
+	/* If the watchdog is alive we don't need to start it again */
+	if( test_and_set_bit(0,&timer_alive) )
+		return -EBUSY;
+
+	if (nowayout)
+		__module_get(THIS_MODULE);
+
+	wdt977_start();
 	return 0;
 }
 
@@ -167,40 +251,11 @@ static int wdt977_release(struct inode *
 	 */
 	if (expect_close == 42)
 	{
-		/* unlock the SuperIO chip */
-		outb(0x87,0x370);
-		outb(0x87,0x370);
-
-		/* select device Aux2 (device=8) and set watchdog regs F2,F3 and F4
-		* F3 is reset to its default state
-		* F4 can clear the TIMEOUT'ed state (bit 0) - back to default
-		* We can not use GP17 as a PowerLed, as we use its usage as a RedLed
-		*/
-		outb(0x07,0x370);
-		outb(0x08,0x371);
-		outb(0xF2,0x370);
-		outb(0xFF,0x371);
-		outb(0xF3,0x370);
-		outb(0x00,0x371);
-		outb(0xF4,0x370);
-		outb(0x00,0x371);
-		outb(0xF2,0x370);
-		outb(0x00,0x371);
-
-		/* at last select device Aux1 (dev=7) and set GP16 as a watchdog output */
-		outb(0x07,0x370);
-		outb(0x07,0x371);
-		outb(0xE6,0x370);
-		outb(0x08,0x371);
-
-		/* lock the SuperIO chip */
-		outb(0xAA,0x370);
-
+		wdt977_stop();
 		clear_bit(0,&timer_alive);
-
-		printk(KERN_INFO "Wdt977 Watchdog: shutdown\n");
 	} else {
-		printk(KERN_CRIT "WDT device closed unexpectedly.  WDT will not stop!\n");
+		printk(KERN_CRIT PFX "Unexpected close, not stopping watchdog!\n");
+		wdt977_keepalive();
 	}
 	expect_close = 0;
 	return 0;
@@ -240,7 +295,7 @@ static ssize_t wdt977_write(struct file 
 			}
 		}
 
-		kick_wdog();
+		wdt977_keepalive();
 	}
 	return count;
 }
@@ -257,14 +312,19 @@ static ssize_t wdt977_write(struct file 
  */
 
 static struct watchdog_info ident = {
-	.options	= WDIOF_SETTIMEOUT,
-	.identity	= "Winbond 83977",
+	.options =		WDIOF_SETTIMEOUT |
+				WDIOF_MAGICCLOSE |
+				WDIOF_KEEPALIVEPING,
+	.firmware_version =	1,
+	.identity =		"Winbond 83977",
 };
 
 static int wdt977_ioctl(struct inode *inode, struct file *file,
 	unsigned int cmd, unsigned long arg)
 {
-	int temp;
+	int status;
+	int new_options, retval = -EINVAL;
+	int new_timeout;
 
 	switch(cmd)
 	{
@@ -272,62 +332,59 @@ static int wdt977_ioctl(struct inode *in
 		return -ENOIOCTLCMD;
 
 	case WDIOC_GETSUPPORT:
-	    return copy_to_user((struct watchdog_info *)arg, &ident,
+		return copy_to_user((struct watchdog_info *)arg, &ident,
 			sizeof(ident)) ? -EFAULT : 0;
 
+	case WDIOC_GETSTATUS:
+		wdt977_get_status(&status);
+		return put_user(status, (int *) arg);
+
 	case WDIOC_GETBOOTSTATUS:
 		return put_user(0, (int *) arg);
 
-	case WDIOC_GETSTATUS:
-		/* unlock the SuperIO chip */
-		outb(0x87,0x370);
-		outb(0x87,0x370);
+	case WDIOC_KEEPALIVE:
+		wdt977_keepalive();
+		return 0;
 
-		/* select device Aux2 (device=8) and read watchdog reg F4 */
-		outb(0x07,0x370);
-		outb(0x08,0x371);
-		outb(0xF4,0x370);
-		temp = inb(0x371);
+	case WDIOC_SETOPTIONS:
+		if (get_user (new_options, (int *) arg))
+			return -EFAULT;
 
-		/* lock the SuperIO chip */
-		outb(0xAA,0x370);
+		if (new_options & WDIOS_DISABLECARD) {
+			wdt977_stop();
+			retval = 0;
+		}
 
-		/* return info if "expired" in test mode */
-		return put_user(temp & 1, (int *) arg);
+		if (new_options & WDIOS_ENABLECARD) {
+			wdt977_start();
+			retval = 0;
+		}
 
-	case WDIOC_KEEPALIVE:
-		kick_wdog();
-		return 0;
+		return retval;
 
 	case WDIOC_SETTIMEOUT:
-		if (copy_from_user(&temp, (int *) arg, sizeof(int)))
+		if (get_user(new_timeout, (int *) arg))
 			return -EFAULT;
 
-		/* convert seconds to minutes, rounding up */
-		temp += 59;
-		temp /= 60;
-
-		/* we have a hw bug somewhere, so each 977 minute is actually only 30sec
-		*  this limits the max timeout to half of device max of 255 minutes...
-		*/
-		if (machine_is_netwinder())
-		{
-		    temp += temp;
-		}
+		if (wdt977_set_timeout(new_timeout))
+		    return -EINVAL;
 
-		/* Sanity check */
-		if (temp < 0 || temp > 255)
-			return -EINVAL;
+		wdt977_keepalive();
+		/* Fall */
 
-		if (!temp && nowayout)
-			return -EINVAL;
+	case WDIOC_GETTIMEOUT:
+		return put_user(timeout, (int *)arg);
 
-		timeoutM = temp;
-		kick_wdog();
-		return 0;
 	}
 }
 
+static int wdt977_notify_sys(struct notifier_block *this, unsigned long code,
+	void *unused)
+{
+	if(code==SYS_DOWN || code==SYS_HALT)
+		wdt977_stop();
+	return NOTIFY_DONE;
+}
 
 static struct file_operations wdt977_fops=
 {
@@ -345,21 +402,48 @@ static struct miscdevice wdt977_miscdev=
 	.fops		= &wdt977_fops,
 };
 
+static struct notifier_block wdt977_notifier = {
+	.notifier_call = wdt977_notify_sys,
+};
+
 static int __init nwwatchdog_init(void)
 {
 	int retval;
 	if (!machine_is_netwinder())
 		return -ENODEV;
 
+	/* Check that the timeout value is within it's range ; if not reset to the default */
+	if (wdt977_set_timeout(timeout)) {
+		wdt977_set_timeout(DEFAULT_TIMEOUT);
+		printk(KERN_INFO PFX "timeout value must be 60<timeout<15300, using %d\n",
+			DEFAULT_TIMEOUT);
+	}
+
+	retval = register_reboot_notifier(&wdt977_notifier);
+	if (retval) {
+		printk(KERN_ERR PFX "cannot register reboot notifier (err=%d)\n",
+			retval);
+		return retval;
+	}
+
 	retval = misc_register(&wdt977_miscdev);
-	if (!retval)
-		printk(KERN_INFO "Wdt977 Watchdog sleeping.\n");
-	return retval;
+	if (retval) {
+		printk(KERN_ERR PFX "cannot register miscdev on minor=%d (err=%d)\n",
+			WATCHDOG_MINOR, retval);
+		unregister_reboot_notifier(&wdt977_notifier);
+		return retval;
+	}
+
+	printk(KERN_INFO PFX "initialized. timeout=%d sec (nowayout=%d, testmode = %i)\n",
+		timeout, nowayout, testmode);
+
+	return 0;
 }
 
 static void __exit nwwatchdog_exit(void)
 {
 	misc_deregister(&wdt977_miscdev);
+	unregister_reboot_notifier(&wdt977_notifier);
 }
 
 module_init(nwwatchdog_init);
diff -purN linux-post-2.6.4-20040313/drivers/macintosh/mediabay.c linux-post-2.6.4-20040314/drivers/macintosh/mediabay.c
--- linux-post-2.6.4-20040313/drivers/macintosh/mediabay.c	2004-02-05 05:56:30.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/macintosh/mediabay.c	2004-03-14 01:57:41.000000000 +0000
@@ -10,8 +10,6 @@
  *  as published by the Free Software Foundation; either version
  *  2 of the License, or (at your option) any later version.
  */
-#define __KERNEL_SYSCALLS__
-
 #include <linux/config.h>
 #include <linux/types.h>
 #include <linux/errno.h>
@@ -21,7 +19,6 @@
 #include <linux/timer.h>
 #include <linux/hdreg.h>
 #include <linux/stddef.h>
-#include <linux/unistd.h>
 #include <linux/init.h>
 #include <linux/ide.h>
 #include <asm/prom.h>
diff -purN linux-post-2.6.4-20040313/drivers/md/md.c linux-post-2.6.4-20040314/drivers/md/md.c
--- linux-post-2.6.4-20040313/drivers/md/md.c	2004-02-26 11:26:02.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/md/md.c	2004-03-14 01:57:41.000000000 +0000
@@ -57,7 +57,7 @@
 
 
 #ifndef MODULE
-static void autostart_arrays (void);
+static void autostart_arrays (int part);
 #endif
 
 static mdk_personality_t *pers[MAX_PERSONALITY];
@@ -1447,7 +1447,7 @@ abort:
 	return 1;
 }
 
-static int mdp_major = 0;
+int mdp_major = 0;
 
 static struct kobject *md_probe(dev_t dev, int *part, void *data)
 {
@@ -1792,7 +1792,7 @@ static void autorun_array(mddev_t *mddev
  *
  * If "unit" is allocated, then bump its reference count
  */
-static void autorun_devices(void)
+static void autorun_devices(int part)
 {
 	struct list_head candidates;
 	struct list_head *tmp;
@@ -1825,7 +1825,12 @@ static void autorun_devices(void)
 			       bdevname(rdev0->bdev, b), rdev0->preferred_minor);
 			break;
 		}
-		dev = MKDEV(MD_MAJOR, rdev0->preferred_minor);
+		if (part)
+			dev = MKDEV(mdp_major,
+				    rdev0->preferred_minor << MdpMinorShift);
+		else
+			dev = MKDEV(MD_MAJOR, rdev0->preferred_minor);
+
 		md_probe(dev, NULL, NULL);
 		mddev = mddev_find(dev);
 		if (!mddev) {
@@ -1922,7 +1927,7 @@ static int autostart_array(dev_t startde
 	/*
 	 * possibly return codes
 	 */
-	autorun_devices();
+	autorun_devices(0);
 	return 0;
 
 }
@@ -2407,7 +2412,7 @@ static int md_ioctl(struct inode *inode,
 #ifndef MODULE
 		case RAID_AUTORUN:
 			err = 0;
-			autostart_arrays();
+			autostart_arrays(arg);
 			goto done;
 #endif
 		default:;
@@ -3577,7 +3582,7 @@ void md_autodetect_dev(dev_t dev)
 }
 
 
-static void autostart_arrays(void)
+static void autostart_arrays(int part)
 {
 	char b[BDEVNAME_SIZE];
 	mdk_rdev_t *rdev;
@@ -3602,7 +3607,7 @@ static void autostart_arrays(void)
 	}
 	dev_cnt = 0;
 
-	autorun_devices();
+	autorun_devices(part);
 }
 
 #endif
diff -purN linux-post-2.6.4-20040313/drivers/md/raid5.c linux-post-2.6.4-20040314/drivers/md/raid5.c
--- linux-post-2.6.4-20040313/drivers/md/raid5.c	2004-03-12 09:33:03.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/md/raid5.c	2004-03-14 01:57:41.000000000 +0000
@@ -1409,7 +1409,8 @@ static int sync_request (mddev_t *mddev,
 		/* make sure we don't swamp the stripe cache if someone else
 		 * is trying to get access 
 		 */
-		yield();
+		set_current_state(TASK_UNINTERRUPTIBLE);
+		schedule_timeout(1);
 	}
 	spin_lock(&sh->lock);	
 	set_bit(STRIPE_SYNCING, &sh->state);
diff -purN linux-post-2.6.4-20040313/drivers/md/raid6main.c linux-post-2.6.4-20040314/drivers/md/raid6main.c
--- linux-post-2.6.4-20040313/drivers/md/raid6main.c	2004-03-12 09:33:03.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/md/raid6main.c	2004-03-14 01:57:41.000000000 +0000
@@ -1571,7 +1571,8 @@ static int sync_request (mddev_t *mddev,
 		/* make sure we don't swamp the stripe cache if someone else
 		 * is trying to get access
 		 */
-		yield();
+		set_current_state(TASK_UNINTERRUPTIBLE);
+		schedule_timeout(1);
 	}
 	spin_lock(&sh->lock);
 	set_bit(STRIPE_SYNCING, &sh->state);
diff -purN linux-post-2.6.4-20040313/drivers/media/dvb/frontends/alps_tdlb7.c linux-post-2.6.4-20040314/drivers/media/dvb/frontends/alps_tdlb7.c
--- linux-post-2.6.4-20040313/drivers/media/dvb/frontends/alps_tdlb7.c	2004-02-26 11:26:05.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/media/dvb/frontends/alps_tdlb7.c	2004-03-14 01:57:41.000000000 +0000
@@ -29,8 +29,6 @@
 */  
 
 
-
-#define __KERNEL_SYSCALLS__
 #include <linux/module.h>
 #include <linux/init.h>
 #include <linux/vmalloc.h>
@@ -58,8 +56,6 @@ static int debug = 0;
 #define SP8870_FIRMWARE_OFFSET 0x0A
 
 
-static int errno;
-
 static struct dvb_frontend_info tdlb7_info = {
 	.name			= "Alps TDLB7",
 	.type			= FE_OFDM,
@@ -174,13 +170,13 @@ static int sp8870_read_firmware_file (co
 	loff_t filesize;
 	char *dp;
 
-	fd = open(fn, 0, 0);
+	fd = sys_open(fn, 0, 0);
 	if (fd == -1) {
                 printk("%s: unable to open '%s'.\n", __FUNCTION__, fn);
 		return -EIO;
 	}
 
-	filesize = lseek(fd, 0L, 2);
+	filesize = sys_lseek(fd, 0L, 2);
 	if (filesize <= 0 || filesize < SP8870_FIRMWARE_OFFSET + SP8870_FIRMWARE_SIZE) {
 	        printk("%s: firmware filesize to small '%s'\n", __FUNCTION__, fn);
 		sys_close(fd);
@@ -194,8 +190,8 @@ static int sp8870_read_firmware_file (co
 		return -EIO;
 	}
 
-	lseek(fd, SP8870_FIRMWARE_OFFSET, 0);
-	if (read(fd, dp, SP8870_FIRMWARE_SIZE) != SP8870_FIRMWARE_SIZE) {
+	sys_lseek(fd, SP8870_FIRMWARE_OFFSET, 0);
+	if (sys_read(fd, dp, SP8870_FIRMWARE_SIZE) != SP8870_FIRMWARE_SIZE) {
 		printk("%s: failed to read '%s'.\n",__FUNCTION__, fn);
 		vfree(dp);
 		sys_close(fd);
diff -purN linux-post-2.6.4-20040313/drivers/media/dvb/frontends/sp887x.c linux-post-2.6.4-20040314/drivers/media/dvb/frontends/sp887x.c
--- linux-post-2.6.4-20040313/drivers/media/dvb/frontends/sp887x.c	2004-02-26 11:26:05.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/media/dvb/frontends/sp887x.c	2004-03-14 01:57:41.000000000 +0000
@@ -12,7 +12,6 @@
    next 0x4000 loaded. This may change in future versions.
  */
 
-#define __KERNEL_SYSCALLS__
 #include <linux/kernel.h>
 #include <linux/vmalloc.h>
 #include <linux/module.h>
@@ -68,8 +67,6 @@ struct dvb_frontend_info sp887x_info = {
 		FE_CAN_QPSK | FE_CAN_QAM_16 | FE_CAN_QAM_64 | FE_CAN_RECOVER
 };
 
-static int errno;
-
 static
 int i2c_writebytes (struct dvb_frontend *fe, u8 addr, u8 *buf, u8 len)
 {
@@ -216,13 +213,13 @@ int sp887x_initial_setup (struct dvb_fro
 
 	// Load the firmware
 	set_fs(get_ds());
-	fd = open(sp887x_firmware, 0, 0);
+	fd = sys_open(sp887x_firmware, 0, 0);
 	if (fd < 0) {
 		printk(KERN_WARNING "%s: Unable to open firmware %s\n", __FUNCTION__,
 		       sp887x_firmware);
 		return -EIO;
 	}
-	filesize = lseek(fd, 0L, 2);
+	filesize = sys_lseek(fd, 0L, 2);
 	if (filesize <= 0) {
 		printk(KERN_WARNING "%s: Firmware %s is empty\n", __FUNCTION__,
 		       sp887x_firmware);
@@ -244,8 +241,8 @@ int sp887x_initial_setup (struct dvb_fro
 	// read it!
 	// read the first 16384 bytes from the file
 	// ignore the first 10 bytes
-	lseek(fd, 10, 0);
-	if (read(fd, firmware, fw_size) != fw_size) {
+	sys_lseek(fd, 10, 0);
+	if (sys_read(fd, firmware, fw_size) != fw_size) {
 		printk(KERN_WARNING "%s: Failed to read firmware\n", __FUNCTION__);
 		vfree(firmware);
 		sys_close(fd);
diff -purN linux-post-2.6.4-20040313/drivers/media/dvb/frontends/tda1004x.c linux-post-2.6.4-20040314/drivers/media/dvb/frontends/tda1004x.c
--- linux-post-2.6.4-20040313/drivers/media/dvb/frontends/tda1004x.c	2004-02-26 11:22:00.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/media/dvb/frontends/tda1004x.c	2004-03-14 01:57:41.000000000 +0000
@@ -32,7 +32,6 @@
  */
 
 
-#define __KERNEL_SYSCALLS__
 #include <linux/kernel.h>
 #include <linux/vmalloc.h>
 #include <linux/module.h>
@@ -41,7 +40,6 @@
 #include <linux/slab.h>
 #include <linux/syscalls.h>
 #include <linux/fs.h>
-#include <linux/unistd.h>
 #include <linux/fcntl.h>
 #include <linux/errno.h>
 #include "dvb_frontend.h"
@@ -399,13 +397,13 @@ static int tda1004x_fwupload(struct dvb_
 
 	// Load the firmware
 	set_fs(get_ds());
-	fd = open(tda1004x_firmware, 0, 0);
+	fd = sys_open(tda1004x_firmware, 0, 0);
 	if (fd < 0) {
 		printk("%s: Unable to open firmware %s\n", __FUNCTION__,
 		       tda1004x_firmware);
 		return -EIO;
 	}
-	filesize = lseek(fd, 0L, 2);
+	filesize = sys_lseek(fd, 0L, 2);
 	if (filesize <= 0) {
 		printk("%s: Firmware %s is empty\n", __FUNCTION__,
 		       tda1004x_firmware);
@@ -436,8 +434,8 @@ static int tda1004x_fwupload(struct dvb_
 	}
 
 	// read it!
-        lseek(fd, fw_offset, 0);
-	if (read(fd, firmware, fw_size) != fw_size) {
+        sys_lseek(fd, fw_offset, 0);
+	if (sys_read(fd, firmware, fw_size) != fw_size) {
 		printk("%s: Failed to read firmware\n", __FUNCTION__);
 		vfree(firmware);
 		sys_close(fd);
diff -purN linux-post-2.6.4-20040313/drivers/message/fusion/mptlan.c linux-post-2.6.4-20040314/drivers/message/fusion/mptlan.c
--- linux-post-2.6.4-20040313/drivers/message/fusion/mptlan.c	2004-03-10 16:36:33.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/message/fusion/mptlan.c	2004-03-02 20:52:10.000000000 +0000
@@ -337,7 +337,7 @@ static int
 mpt_lan_ioc_reset(MPT_ADAPTER *ioc, int reset_phase)
 {
 	struct net_device *dev = mpt_landev[ioc->id];
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *) dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 
 	dlprintk((KERN_INFO MYNAM ": IOC %s_reset routed to LAN driver!\n",
 			reset_phase==MPT_IOC_SETUP_RESET ? "setup" : (
@@ -409,7 +409,7 @@ mpt_lan_event_process(MPT_ADAPTER *ioc, 
 static int
 mpt_lan_open(struct net_device *dev)
 {
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *) dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 	int i;
 
 	if (mpt_lan_reset(dev) != 0) {
@@ -500,7 +500,7 @@ mpt_lan_reset(struct net_device *dev)
 {
 	MPT_FRAME_HDR *mf;
 	LANResetRequest_t *pResetReq;
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *)dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 
 	mf = mpt_get_msg_frame(LanCtx, priv->mpt_dev->id);
 
@@ -529,7 +529,7 @@ mpt_lan_reset(struct net_device *dev)
 static int
 mpt_lan_close(struct net_device *dev)
 {
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *) dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 	MPT_ADAPTER *mpt_dev = priv->mpt_dev;
 	unsigned int timeout;
 	int i;
@@ -590,7 +590,7 @@ mpt_lan_close(struct net_device *dev)
 static struct net_device_stats *
 mpt_lan_get_stats(struct net_device *dev)
 {
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *)dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 
 	return (struct net_device_stats *) &priv->stats;
 }
@@ -610,7 +610,7 @@ mpt_lan_change_mtu(struct net_device *de
 static void
 mpt_lan_tx_timeout(struct net_device *dev)
 {
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *) dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 	MPT_ADAPTER *mpt_dev = priv->mpt_dev;
 
 	if (mpt_dev->active) {
@@ -624,7 +624,7 @@ mpt_lan_tx_timeout(struct net_device *de
 static int
 mpt_lan_send_turbo(struct net_device *dev, u32 tmsg)
 {
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *) dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 	MPT_ADAPTER *mpt_dev = priv->mpt_dev;
 	struct sk_buff *sent;
 	unsigned long flags;
@@ -657,7 +657,7 @@ mpt_lan_send_turbo(struct net_device *de
 static int
 mpt_lan_send_reply(struct net_device *dev, LANSendReply_t *pSendRep)
 {
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *) dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 	MPT_ADAPTER *mpt_dev = priv->mpt_dev;
 	struct sk_buff *sent;
 	unsigned long flags;
@@ -730,7 +730,7 @@ out:
 static int
 mpt_lan_sdu_send (struct sk_buff *skb, struct net_device *dev)
 {
-	struct mpt_lan_priv *priv = (struct mpt_lan_priv *) dev->priv;
+	struct mpt_lan_priv *priv = netdev_priv(dev);
 	MPT_ADAPTER *mpt_dev = priv->mpt_dev;
 	MPT_FRAME_HDR *mf;
 	LANSendRequest_t *pSendReq;
@@ -1372,7 +1372,7 @@ mpt_register_lan_device (MPT_ADAPTER *mp
 
 	dev->mtu = MPT_LAN_MTU;
 
-	priv = (struct mpt_lan_priv *) dev->priv;
+	priv = netdev_priv(dev);
 
 	priv->mpt_dev = mpt_dev;
 	priv->pnum = pnum;
diff -purN linux-post-2.6.4-20040313/drivers/net/3c501.c linux-post-2.6.4-20040314/drivers/net/3c501.c
--- linux-post-2.6.4-20040313/drivers/net/3c501.c	2004-01-10 14:36:52.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/3c501.c	2004-03-03 19:12:56.000000000 +0000
@@ -306,7 +306,7 @@ static int __init el1_probe1(struct net_
 		printk(KERN_DEBUG "%s", version);
 
 	memset(dev->priv, 0, sizeof(struct net_local));
-	lp=dev->priv;
+	lp = netdev_priv(dev);
 	spin_lock_init(&lp->lock);
 	
 	/*
@@ -341,7 +341,7 @@ static int el_open(struct net_device *de
 {
 	int retval;
 	int ioaddr = dev->base_addr;
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	if (el_debug > 2)
@@ -371,7 +371,7 @@ static int el_open(struct net_device *de
  
 static void el_timeout(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
  
 	if (el_debug)
@@ -411,7 +411,7 @@ static void el_timeout(struct net_device
 
 static int el_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	unsigned long flags;
 
@@ -524,7 +524,7 @@ static irqreturn_t el_interrupt(int irq,
 	int axsr;			/* Aux. status reg. */
 
 	ioaddr = dev->base_addr;
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 
 	spin_lock(&lp->lock);
 	
@@ -698,7 +698,7 @@ out:
 
 static void el_receive(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int pkt_len;
 	struct sk_buff *skb;
@@ -764,7 +764,7 @@ static void el_receive(struct net_device
 
 static void  el_reset(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	if (el_debug> 2)
@@ -828,7 +828,7 @@ static int el1_close(struct net_device *
  
 static struct net_device_stats *el1_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
diff -purN linux-post-2.6.4-20040313/drivers/net/3c507.c linux-post-2.6.4-20040314/drivers/net/3c507.c
--- linux-post-2.6.4-20040313/drivers/net/3c507.c	2004-01-10 14:48:53.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/3c507.c	2004-03-03 19:16:05.000000000 +0000
@@ -441,7 +441,7 @@ static int __init el16_probe1(struct net
 	if (net_debug)
 		printk(version);
 
-	lp = dev->priv;
+	lp = netdev_priv(dev);
  	memset(lp, 0, sizeof(*lp));
 	spin_lock_init(&lp->lock);
 
@@ -471,7 +471,7 @@ static int el16_open(struct net_device *
 
 static void el16_tx_timeout (struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *) dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	unsigned long shmem = dev->mem_start;
 
@@ -501,7 +501,7 @@ static void el16_tx_timeout (struct net_
 
 static int el16_send_packet (struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *) dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	unsigned long flags;
 	short length = ETH_ZLEN < skb->len ? skb->len : ETH_ZLEN;
@@ -546,7 +546,7 @@ static irqreturn_t el16_interrupt(int ir
 	}
 
 	ioaddr = dev->base_addr;
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 	shmem = dev->mem_start;
 
 	spin_lock(&lp->lock);
@@ -660,7 +660,7 @@ static int el16_close(struct net_device 
    closed. */
 static struct net_device_stats *el16_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	/* ToDo: decide if there are any useful statistics from the SCB. */
 
@@ -670,7 +670,7 @@ static struct net_device_stats *el16_get
 /* Initialize the Rx-block list. */
 static void init_rx_bufs(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned long write_ptr;
 	unsigned short SCB_base = SCB_BASE;
 
@@ -713,7 +713,7 @@ static void init_rx_bufs(struct net_devi
 
 static void init_82586_mem(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	short ioaddr = dev->base_addr;
 	unsigned long shmem = dev->mem_start;
 
@@ -771,7 +771,7 @@ static void init_82586_mem(struct net_de
 
 static void hardware_send_packet(struct net_device *dev, void *buf, short length, short pad)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	short ioaddr = dev->base_addr;
 	ushort tx_block = lp->tx_head;
 	unsigned long write_ptr = dev->mem_start + tx_block;
@@ -820,7 +820,7 @@ static void hardware_send_packet(struct 
 
 static void el16_rx(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned long shmem = dev->mem_start;
 	ushort rx_head = lp->rx_head;
 	ushort rx_tail = lp->rx_tail;
diff -purN linux-post-2.6.4-20040313/drivers/net/3c509.c linux-post-2.6.4-20040314/drivers/net/3c509.c
--- linux-post-2.6.4-20040313/drivers/net/3c509.c	2004-01-11 00:18:02.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/3c509.c	2004-03-03 19:19:54.000000000 +0000
@@ -304,7 +304,7 @@ static int nopnp;
 
 static int __init el3_common_init(struct net_device *dev)
 {
-	struct el3_private *lp = dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	short i;
 	int err;
 
@@ -355,7 +355,7 @@ static int __init el3_common_init(struct
 
 static void el3_common_remove (struct net_device *dev)
 {
-		struct el3_private *lp = dev->priv;
+		struct el3_private *lp = netdev_priv(dev);
 
 		(void) lp;				/* Keep gcc quiet... */
 #ifdef CONFIG_PM
@@ -575,7 +575,7 @@ no_pnp:
 	dev->base_addr = ioaddr;
 	dev->irq = irq;
 	dev->if_port = if_port;
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 #if defined(__ISAPNP__) && !defined(CONFIG_X86_PC9800)
 	lp->dev = &idev->dev;
 #endif
@@ -671,7 +671,7 @@ static int __init el3_mca_probe(struct d
 		dev->base_addr = ioaddr;
 		dev->irq = irq;
 		dev->if_port = if_port;
-		lp = dev->priv;
+		lp = netdev_priv(dev);
 		lp->dev = device;
 		lp->type = EL3_MCA;
 		device->driver_data = dev;
@@ -732,7 +732,7 @@ static int __init el3_eisa_probe (struct
 	dev->base_addr = ioaddr;
 	dev->irq = irq;
 	dev->if_port = if_port;
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 	lp->dev = device;
 	lp->type = EL3_EISA;
 	eisa_set_drvdata (edev, dev);
@@ -829,7 +829,7 @@ el3_open(struct net_device *dev)
 static void
 el3_tx_timeout (struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	/* Transmitter timeout, serious problems. */
@@ -849,7 +849,7 @@ el3_tx_timeout (struct net_device *dev)
 static int
 el3_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	unsigned long flags;
 
@@ -943,7 +943,7 @@ el3_interrupt(int irq, void *dev_id, str
 		return IRQ_NONE;
 	}
 
-	lp = (struct el3_private *)dev->priv;
+	lp = netdev_priv(dev);
 	spin_lock(&lp->lock);
 
 	ioaddr = dev->base_addr;
@@ -975,7 +975,7 @@ el3_interrupt(int irq, void *dev_id, str
 				outw(AckIntr | RxEarly, ioaddr + EL3_CMD);
 			}
 			if (status & TxComplete) {			/* Really Tx error. */
-				struct el3_private *lp = (struct el3_private *)dev->priv;
+				struct el3_private *lp = netdev_priv(dev);
 				short tx_status;
 				int i = 4;
 
@@ -1022,7 +1022,7 @@ el3_interrupt(int irq, void *dev_id, str
 static struct net_device_stats *
 el3_get_stats(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	/*
@@ -1043,7 +1043,7 @@ el3_get_stats(struct net_device *dev)
 	*/
 static void update_stats(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	if (el3_debug > 5)
@@ -1073,7 +1073,7 @@ static void update_stats(struct net_devi
 static int
 el3_rx(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	short rx_status;
 
@@ -1145,7 +1145,7 @@ static void
 set_multicast_list(struct net_device *dev)
 {
 	unsigned long flags;
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	if (el3_debug > 1) {
@@ -1172,7 +1172,7 @@ static int
 el3_close(struct net_device *dev)
 {
 	int ioaddr = dev->base_addr;
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	
 	if (el3_debug > 2)
 		printk("%s: Shutting down ethercard.\n", dev->name);
@@ -1317,7 +1317,7 @@ static int
 netdev_ethtool_ioctl (struct net_device *dev, void *useraddr)
 {
 	u32 ethcmd;
-	struct el3_private *lp = dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 
 	/* dev_ioctl() in ../../net/core/dev.c has already checked
 	   capable(CAP_NET_ADMIN), so don't bother with that here.  */
@@ -1558,7 +1558,7 @@ el3_suspend(struct pm_dev *pdev)
 		return -EINVAL;
 
 	dev = (struct net_device *)pdev->data;
-	lp = (struct el3_private *)dev->priv;
+	lp = netdev_priv(dev);
 	ioaddr = dev->base_addr;
 
 	spin_lock_irqsave(&lp->lock, flags);
@@ -1585,7 +1585,7 @@ el3_resume(struct pm_dev *pdev)
 		return -EINVAL;
 
 	dev = (struct net_device *)pdev->data;
-	lp = (struct el3_private *)dev->priv;
+	lp = netdev_priv(dev);
 	ioaddr = dev->base_addr;
 
 	spin_lock_irqsave(&lp->lock, flags);
diff -purN linux-post-2.6.4-20040313/drivers/net/3c527.c linux-post-2.6.4-20040314/drivers/net/3c527.c
--- linux-post-2.6.4-20040313/drivers/net/3c527.c	2004-01-19 23:27:20.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/3c527.c	2004-03-03 19:37:11.000000000 +0000
@@ -226,7 +226,7 @@ static struct ethtool_ops netdev_ethtool
 
 static void cleanup_card(struct net_device *dev)
 {
-	struct mc32_local *lp=dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	unsigned slot = lp->slot;
 	mca_mark_as_unused(slot);
 	mca_set_adapter_name(slot, NULL);
@@ -307,7 +307,7 @@ static int __init mc32_probe1(struct net
 	int i, err;
 	u8 POS;
 	u32 base;
-	struct mc32_local *lp = dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	static u16 mca_io_bases[]={
 		0x7280,0x7290,
 		0x7680,0x7690,
@@ -573,7 +573,7 @@ static inline void mc32_ready_poll(struc
 
 static int mc32_command_nowait(struct net_device *dev, u16 cmd, void *data, int len)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int ret = -1;
 
@@ -619,7 +619,7 @@ static int mc32_command_nowait(struct ne
   
 static int mc32_command(struct net_device *dev, u16 cmd, void *data, int len)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int ret = 0;
 	
@@ -671,7 +671,7 @@ static int mc32_command(struct net_devic
 
 static void mc32_start_transceiver(struct net_device *dev) {
 
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	/* Ignore RX overflow on device closure */ 
@@ -706,7 +706,7 @@ static void mc32_start_transceiver(struc
 
 static void mc32_halt_transceiver(struct net_device *dev) 
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	mc32_ready_poll(dev);	
@@ -743,7 +743,7 @@ static void mc32_halt_transceiver(struct
 	 
 static int mc32_load_rx_ring(struct net_device *dev)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	int i;
 	u16 rx_base;
 	volatile struct skb_header *p;
@@ -792,7 +792,7 @@ static int mc32_load_rx_ring(struct net_
 
 static void mc32_flush_rx_ring(struct net_device *dev)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	int i; 
 
 	for(i=0; i < RX_RING_LEN; i++) 
@@ -824,7 +824,7 @@ static void mc32_flush_rx_ring(struct ne
 
 static void mc32_load_tx_ring(struct net_device *dev)
 { 
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	volatile struct skb_header *p;
 	int i; 
 	u16 tx_base;
@@ -861,7 +861,7 @@ static void mc32_load_tx_ring(struct net
 
 static void mc32_flush_tx_ring(struct net_device *dev)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	int i;
 
 	for (i=0; i < TX_RING_LEN; i++)
@@ -899,7 +899,7 @@ static void mc32_flush_tx_ring(struct ne
 static int mc32_open(struct net_device *dev)
 {
 	int ioaddr = dev->base_addr;
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	u8 one=1;
 	u8 regs;
 	u16 descnumbuffs[2] = {TX_RING_LEN, RX_RING_LEN};
@@ -1022,7 +1022,7 @@ static void mc32_timeout(struct net_devi
 
 static int mc32_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	u32 head = atomic_read(&lp->tx_ring_head);
 	
 	volatile struct skb_header *p, *np;
@@ -1092,7 +1092,7 @@ static int mc32_send_packet(struct sk_bu
 
 static void mc32_update_stats(struct net_device *dev)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	volatile struct mc32_stats *st = lp->stats; 
 
 	u32 rx_errors=0; 
@@ -1143,7 +1143,7 @@ static void mc32_update_stats(struct net
 
 static void mc32_rx_ring(struct net_device *dev)
 {
-	struct mc32_local *lp=dev->priv;		
+	struct mc32_local *lp = netdev_priv(dev);
 	volatile struct skb_header *p;
 	u16 rx_ring_tail;
 	u16 rx_old_tail;
@@ -1236,7 +1236,7 @@ static void mc32_rx_ring(struct net_devi
 
 static void mc32_tx_ring(struct net_device *dev) 
 {
-	struct mc32_local *lp=(struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	volatile struct skb_header *np;
 
 	/*
@@ -1333,7 +1333,7 @@ static irqreturn_t mc32_interrupt(int ir
 	}
  
 	ioaddr = dev->base_addr;
-	lp = (struct mc32_local *)dev->priv;
+	lp = netdev_priv(dev);
 
 	/* See whats cooking */
 
@@ -1450,7 +1450,7 @@ static irqreturn_t mc32_interrupt(int ir
 
 static int mc32_close(struct net_device *dev)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	u8 regs;
@@ -1499,7 +1499,7 @@ static int mc32_close(struct net_device 
 
 static struct net_device_stats *mc32_get_stats(struct net_device *dev)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	
 	mc32_update_stats(dev); 
 	return &lp->net_stats;
@@ -1531,7 +1531,7 @@ static struct net_device_stats *mc32_get
 
 static void do_mc32_set_multicast_list(struct net_device *dev, int retry)
 {
-	struct mc32_local *lp = (struct mc32_local *)dev->priv;
+	struct mc32_local *lp = netdev_priv(dev);
 	u16 filt = (1<<2); /* Save Bad Packets, for stats purposes */ 
 
 	if (dev->flags&IFF_PROMISC)
diff -purN linux-post-2.6.4-20040313/drivers/net/3c59x.c linux-post-2.6.4-20040314/drivers/net/3c59x.c
--- linux-post-2.6.4-20040313/drivers/net/3c59x.c	2004-02-24 06:29:58.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/3c59x.c	2004-03-13 14:11:07.000000000 +0000
@@ -1025,7 +1025,7 @@ static int vortex_eisa_remove (struct de
 		BUG();
 	}
 
-	vp = dev->priv;
+	vp = netdev_priv(dev);
 	ioaddr = dev->base_addr;
 	
 	unregister_netdev (dev);
@@ -1127,7 +1127,7 @@ static int __devinit vortex_probe1(struc
 	}
 	SET_MODULE_OWNER(dev);
 	SET_NETDEV_DEV(dev, gendev);
-	vp = dev->priv;
+	vp = netdev_priv(dev);
 
 	option = global_options;
 
@@ -1531,7 +1531,7 @@ static void
 vortex_up(struct net_device *dev)
 {
 	long ioaddr = dev->base_addr;
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	unsigned int config;
 	int i;
 
@@ -1729,7 +1729,7 @@ vortex_up(struct net_device *dev)
 static int
 vortex_open(struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	int i;
 	int retval;
 
@@ -1787,7 +1787,7 @@ static void
 vortex_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int next_tick = 60*HZ;
 	int ok = 0;
@@ -1913,7 +1913,7 @@ leave_media_alone:
 
 static void vortex_tx_timeout(struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	printk(KERN_ERR "%s: transmit timed out, tx_status %2.2x status %4.4x.\n",
@@ -1983,7 +1983,7 @@ static void vortex_tx_timeout(struct net
 static void
 vortex_error(struct net_device *dev, int status)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int do_tx_reset = 0, reset_mask = 0;
 	unsigned char tx_status = 0;
@@ -2085,7 +2085,7 @@ vortex_error(struct net_device *dev, int
 static int
 vortex_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	/* Put out the doubleword header... */
@@ -2140,7 +2140,7 @@ vortex_start_xmit(struct sk_buff *skb, s
 static int
 boomerang_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	/* Calculate the next Tx descriptor entry. */
 	int entry = vp->cur_tx % TX_RING_SIZE;
@@ -2240,7 +2240,7 @@ static irqreturn_t
 vortex_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = dev_id;
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr;
 	int status;
 	int work_done = max_interrupt_work;
@@ -2345,7 +2345,7 @@ static irqreturn_t
 boomerang_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = dev_id;
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr;
 	int status;
 	int work_done = max_interrupt_work;
@@ -2470,7 +2470,7 @@ handler_exit:
 
 static int vortex_rx(struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int i;
 	short rx_status;
@@ -2540,7 +2540,7 @@ static int vortex_rx(struct net_device *
 static int
 boomerang_rx(struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	int entry = vp->cur_rx % RX_RING_SIZE;
 	long ioaddr = dev->base_addr;
 	int rx_status;
@@ -2642,7 +2642,7 @@ static void
 rx_oom_timer(unsigned long arg)
 {
 	struct net_device *dev = (struct net_device *)arg;
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 
 	spin_lock_irq(&vp->lock);
 	if ((vp->cur_rx - vp->dirty_rx) == RX_RING_SIZE)	/* This test is redundant, but makes me feel good */
@@ -2657,7 +2657,7 @@ rx_oom_timer(unsigned long arg)
 static void
 vortex_down(struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	netif_stop_queue (dev);
@@ -2693,7 +2693,7 @@ vortex_down(struct net_device *dev)
 static int
 vortex_close(struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int i;
 
@@ -2755,7 +2755,7 @@ static void
 dump_tx_ring(struct net_device *dev)
 {
 	if (vortex_debug > 0) {
-		struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 		long ioaddr = dev->base_addr;
 		
 		if (vp->full_bus_master_tx) {
@@ -2788,7 +2788,7 @@ dump_tx_ring(struct net_device *dev)
 
 static struct net_device_stats *vortex_get_stats(struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	unsigned long flags;
 
 	if (netif_device_present(dev)) {	/* AKPM: Used to be netif_running */
@@ -2808,7 +2808,7 @@ static struct net_device_stats *vortex_g
 	*/
 static void update_stats(long ioaddr, struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	int old_window = inw(ioaddr + EL3_CMD);
 
 	if (old_window == 0xffff)	/* Chip suspended or ejected. */
@@ -2849,7 +2849,7 @@ static void update_stats(long ioaddr, st
 static void vortex_get_drvinfo(struct net_device *dev,
 					struct ethtool_drvinfo *info)
 {
-	struct vortex_private *vp = dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 
 	strcpy(info->driver, DRV_NAME);
 	strcpy(info->version, DRV_VERSION);
@@ -2870,7 +2870,7 @@ static struct ethtool_ops vortex_ethtool
 
 static int vortex_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	struct mii_ioctl_data *data = (struct mii_ioctl_data *)&rq->ifr_data;
 	int phy = vp->phys[0] & 0x1f;
@@ -2957,7 +2957,7 @@ static void mdio_sync(long ioaddr, int b
 
 static int mdio_read(struct net_device *dev, int phy_id, int location)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	int i;
 	long ioaddr = dev->base_addr;
 	int read_cmd = (0xf6 << 10) | (phy_id << 5) | location;
@@ -2991,7 +2991,7 @@ static int mdio_read(struct net_device *
 
 static void mdio_write(struct net_device *dev, int phy_id, int location, int value)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int write_cmd = 0x50020000 | (phy_id << 23) | (location << 18) | value;
 	long mdio_addr = ioaddr + Wn4_PhysicalMgmt;
@@ -3025,7 +3025,7 @@ static void mdio_write(struct net_device
 /* Set Wake-On-LAN mode and put the board into D3 (power-down) state. */
 static void acpi_set_WOL(struct net_device *dev)
 {
-	struct vortex_private *vp = (struct vortex_private *)dev->priv;
+	struct vortex_private *vp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	/* Power up on: 1==Downloaded Filter, 2==Magic Packets, 4==Link Status. */
@@ -3051,7 +3051,7 @@ static void __devexit vortex_remove_one 
 		BUG();
 	}
 
-	vp = dev->priv;
+	vp = netdev_priv(dev);
 
 	/* AKPM: FIXME: we should have
 	 *	if (vp->cb_fn_base) iounmap(vp->cb_fn_base);
diff -purN linux-post-2.6.4-20040313/drivers/net/7990.c linux-post-2.6.4-20040314/drivers/net/7990.c
--- linux-post-2.6.4-20040313/drivers/net/7990.c	2003-04-28 03:36:18.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/7990.c	2004-03-03 20:28:46.000000000 +0000
@@ -99,7 +99,7 @@ static void load_csrs (struct lance_priv
 /* Set up the Lance Rx and Tx rings and the init block */
 static void lance_init_ring (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *) dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         volatile struct lance_init_block *ib = lp->init_block;
         volatile struct lance_init_block *aib; /* for LANCE_ADDR computations */
         int leptr;
@@ -216,7 +216,7 @@ static int init_restart_lance (struct la
 
 static int lance_reset (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *)dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         int status;
         DECLARE_LL;
     
@@ -236,7 +236,7 @@ static int lance_reset (struct net_devic
 
 static int lance_rx (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *) dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         volatile struct lance_init_block *ib = lp->init_block;
         volatile struct lance_rx_desc *rd;
         unsigned char bits;
@@ -316,7 +316,7 @@ static int lance_rx (struct net_device *
 
 static int lance_tx (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *) dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         volatile struct lance_init_block *ib = lp->init_block;
         volatile struct lance_tx_desc *td;
         int i, j;
@@ -401,7 +401,7 @@ static irqreturn_t
 lance_interrupt (int irq, void *dev_id, struct pt_regs *regs)
 {
         struct net_device *dev = (struct net_device *)dev_id;
-        struct lance_private *lp = (struct lance_private *)dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         int csr0;
         DECLARE_LL;
 
@@ -457,7 +457,7 @@ lance_interrupt (int irq, void *dev_id, 
 
 int lance_open (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *)dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
 	int res;
         DECLARE_LL;
         
@@ -474,7 +474,7 @@ int lance_open (struct net_device *dev)
 
 int lance_close (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *) dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         DECLARE_LL;
         
 	netif_stop_queue (dev);
@@ -499,7 +499,7 @@ void lance_tx_timeout(struct net_device 
 
 int lance_start_xmit (struct sk_buff *skb, struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *)dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         volatile struct lance_init_block *ib = lp->init_block;
         int entry, skblen, len;
         static int outs;
@@ -556,7 +556,7 @@ int lance_start_xmit (struct sk_buff *sk
 
 struct net_device_stats *lance_get_stats (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *) dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
 
         return &lp->stats;
 }
@@ -564,7 +564,7 @@ struct net_device_stats *lance_get_stats
 /* taken from the depca driver via a2065.c */
 static void lance_load_multicast (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *) dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         volatile struct lance_init_block *ib = lp->init_block;
         volatile u16 *mcast_table = (u16 *)&ib->filter;
         struct dev_mc_list *dmi=dev->mc_list;
@@ -601,7 +601,7 @@ static void lance_load_multicast (struct
 
 void lance_set_multicast (struct net_device *dev)
 {
-        struct lance_private *lp = (struct lance_private *) dev->priv;
+        struct lance_private *lp = netdev_priv(dev);
         volatile struct lance_init_block *ib = lp->init_block;
 	int stopped;
         DECLARE_LL;
diff -purN linux-post-2.6.4-20040313/drivers/net/8139too.c linux-post-2.6.4-20040314/drivers/net/8139too.c
--- linux-post-2.6.4-20040313/drivers/net/8139too.c	2004-01-10 16:02:20.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/8139too.c	2004-03-10 22:00:49.000000000 +0000
@@ -968,12 +968,11 @@ static int __devinit rtl8139_init_one (s
 	if (i < 0)
 		return i;
 
+	assert (dev != NULL);
 	tp = dev->priv;
+	assert (tp != NULL);
 	ioaddr = tp->mmio_addr;
-
 	assert (ioaddr != NULL);
-	assert (dev != NULL);
-	assert (tp != NULL);
 
 	addr_len = read_eeprom (ioaddr, 0, 8) == 0x8129 ? 8 : 6;
 	for (i = 0; i < 3; i++)
diff -purN linux-post-2.6.4-20040313/drivers/net/82596.c linux-post-2.6.4-20040314/drivers/net/82596.c
--- linux-post-2.6.4-20040313/drivers/net/82596.c	2004-01-10 14:37:01.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/82596.c	2004-03-03 20:03:40.000000000 +0000
@@ -458,7 +458,7 @@ static inline int wait_cfg(struct net_de
  
 static void i596_display_data(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	struct i596_cmd *cmd;
 	struct i596_rfd *rfd;
 	struct i596_rbd *rbd;
@@ -528,7 +528,7 @@ static irqreturn_t i596_error(int irq, v
 
 static inline void init_rx_bufs(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *)dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	int i;
 	struct i596_rfd *rfd;
 	struct i596_rbd *rbd;
@@ -579,7 +579,7 @@ static inline void init_rx_bufs(struct n
 
 static inline void remove_rx_bufs(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *)dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	struct i596_rbd *rbd;
 	int i;
 
@@ -593,7 +593,7 @@ static inline void remove_rx_bufs(struct
 
 static void rebuild_rx_bufs(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	int i;
 
 	/* Ensure rx frame/buffer descriptors are tidy */
@@ -612,7 +612,7 @@ static void rebuild_rx_bufs(struct net_d
 
 static int init_i596_mem(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 #if !defined(ENABLE_MVME16x_NET) && !defined(ENABLE_BVME6000_NET)
 	short ioaddr = dev->base_addr;
 #endif
@@ -765,7 +765,7 @@ failed:
 
 static inline int i596_rx(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *)dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	struct i596_rfd *rfd;
 	struct i596_rbd *rbd;
 	int frames = 0;
@@ -960,7 +960,7 @@ static inline void i596_reset(struct net
 
 static void i596_add_cmd(struct net_device *dev, struct i596_cmd *cmd)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	unsigned long flags;
 
@@ -1030,7 +1030,7 @@ static int i596_open(struct net_device *
 
 static void i596_tx_timeout (struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	/* Transmitter timeout, serious problems. */
@@ -1059,7 +1059,7 @@ static void i596_tx_timeout (struct net_
 
 static int i596_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	struct tx_cmd *tx_cmd;
 	struct i596_tbd *tbd;
 	short length = skb->len;
@@ -1245,7 +1245,7 @@ struct net_device * __init i82596_probe(
 
 	dev->priv = (void *)(dev->mem_start);
 
-	lp = (struct i596_private *) dev->priv;
+	lp = netdev_priv(dev);
 	DEB(DEB_INIT,printk(KERN_DEBUG "%s: lp at 0x%08lx (%d bytes), lp->scb at 0x%08lx\n",
 			dev->name, (unsigned long)lp,
 			sizeof(struct i596_private), (unsigned long)&lp->scb));
@@ -1305,7 +1305,7 @@ static irqreturn_t i596_interrupt(int ir
 	}
 
 	ioaddr = dev->base_addr;
-	lp = (struct i596_private *) dev->priv;
+	lp = netdev_priv(dev);
 
 	spin_lock (&lp->lock);
 
@@ -1448,7 +1448,7 @@ static irqreturn_t i596_interrupt(int ir
 
 static int i596_close(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	netif_stop_queue(dev);
@@ -1495,7 +1495,7 @@ static int i596_close(struct net_device 
 static struct net_device_stats *
  i596_get_stats(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -1506,7 +1506,7 @@ static struct net_device_stats *
 
 static void set_multicast_list(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	int config = 0, cnt;
 
 	DEB(DEB_MULTI,printk(KERN_DEBUG "%s: set multicast list, %d entries, promisc %s, allmulti %s\n",
diff -purN linux-post-2.6.4-20040313/drivers/net/a2065.c linux-post-2.6.4-20040314/drivers/net/a2065.c
--- linux-post-2.6.4-20040313/drivers/net/a2065.c	2004-02-20 15:09:56.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/a2065.c	2004-03-03 20:27:50.000000000 +0000
@@ -164,7 +164,7 @@ static void load_csrs (struct lance_priv
 /* Setup the Lance Rx and Tx rings */
 static void lance_init_ring (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	volatile struct lance_init_block *aib; /* for LANCE_ADDR computations */
 	int leptr;
@@ -265,7 +265,7 @@ static int init_restart_lance (struct la
 
 static int lance_rx (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	volatile struct lance_regs *ll = lp->ll;
 	volatile struct lance_rx_desc *rd;
@@ -342,7 +342,7 @@ static int lance_rx (struct net_device *
 
 static int lance_tx (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	volatile struct lance_regs *ll = lp->ll;
 	volatile struct lance_tx_desc *td;
@@ -433,7 +433,7 @@ lance_interrupt (int irq, void *dev_id, 
 
 	dev = (struct net_device *) dev_id;
 
-	lp = (struct lance_private *) dev->priv;
+	lp = netdev_priv(dev);
 	ll = lp->ll;
 
 	ll->rap = LE_CSR0;		/* LANCE Controller Status */
@@ -481,7 +481,7 @@ struct net_device *last_dev = 0;
 
 static int lance_open (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 	int ret;
 
@@ -506,7 +506,7 @@ static int lance_open (struct net_device
 
 static int lance_close (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 
 	netif_stop_queue(dev);
@@ -522,7 +522,7 @@ static int lance_close (struct net_devic
 
 static inline int lance_reset (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 	int status;
     
@@ -545,7 +545,7 @@ static inline int lance_reset (struct ne
 
 static void lance_tx_timeout(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 
 	printk(KERN_ERR "%s: transmit timed out, status %04x, reset\n",
@@ -556,7 +556,7 @@ static void lance_tx_timeout(struct net_
 
 static int lance_start_xmit (struct sk_buff *skb, struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 	volatile struct lance_init_block *ib = lp->init_block;
 	int entry, skblen, len;
@@ -624,7 +624,7 @@ static int lance_start_xmit (struct sk_b
 
 static struct net_device_stats *lance_get_stats (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -632,7 +632,7 @@ static struct net_device_stats *lance_ge
 /* taken from the depca driver */
 static void lance_load_multicast (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	volatile u16 *mcast_table = (u16 *)&ib->filter;
 	struct dev_mc_list *dmi=dev->mc_list;
@@ -668,7 +668,7 @@ static void lance_load_multicast (struct
 
 static void lance_set_multicast (struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	volatile struct lance_regs *ll = lp->ll;
 
@@ -748,7 +748,7 @@ static int __devinit a2065_init_one(stru
 	}
 
 	SET_MODULE_OWNER(dev);
-	priv = dev->priv;
+	priv = netdev_priv(dev);
 
 	r1->name = dev->name;
 	r2->name = dev->name;
diff -purN linux-post-2.6.4-20040313/drivers/net/amd8111e.c linux-post-2.6.4-20040314/drivers/net/amd8111e.c
--- linux-post-2.6.4-20040313/drivers/net/amd8111e.c	2004-03-02 07:35:14.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/amd8111e.c	2004-03-13 14:11:07.000000000 +0000
@@ -174,7 +174,7 @@ This is the mii register read function p
 */ 
 static int amd8111e_mdio_read(struct net_device * dev, int phy_id, int reg_num)
 {
-	struct amd8111e_priv* lp = dev->priv;
+	struct amd8111e_priv* lp = netdev_priv(dev);
 	unsigned int reg_val;
 
 	amd8111e_read_phy(lp,phy_id,reg_num,&reg_val);
@@ -187,7 +187,7 @@ This is the mii register write function 
 */ 
 static void amd8111e_mdio_write(struct net_device * dev, int phy_id, int reg_num, int val)
 {
-	struct amd8111e_priv* lp = dev->priv;
+	struct amd8111e_priv* lp = netdev_priv(dev);
 
 	amd8111e_write_phy(lp, phy_id, reg_num, val);
 }
@@ -197,7 +197,7 @@ This function will set PHY speed. During
 */
 static void amd8111e_set_ext_phy(struct net_device *dev)
 {
-	struct amd8111e_priv *lp = (struct amd8111e_priv *)dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	u32 bmcr,advert,tmp;
 	
 	/* Determine mii register values to set the speed */
@@ -239,7 +239,7 @@ all transmit and receive skbuffs.
 */
 static int amd8111e_free_skbs(struct net_device *dev)
 {
-	struct amd8111e_priv *lp = (struct amd8111e_priv *)dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	struct sk_buff* rx_skbuff;
 	int i;
 
@@ -272,7 +272,7 @@ This will set the receive buffer length 
 */
 static inline void amd8111e_set_rx_buff_len(struct net_device* dev)
 {
-	struct amd8111e_priv* lp = dev->priv;
+	struct amd8111e_priv* lp = netdev_priv(dev);
 	unsigned int mtu = dev->mtu;
 	
 	if (mtu > ETH_DATA_LEN){
@@ -290,7 +290,7 @@ This function will free all the previous
  */
 static int amd8111e_init_ring(struct net_device *dev)
 {
-	struct amd8111e_priv *lp = (struct amd8111e_priv *)dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	int i;
 
 	lp->rx_idx = lp->tx_idx = 0;
@@ -371,7 +371,7 @@ static int amd8111e_set_coalesce(struct 
 	unsigned int timeout;
 	unsigned int event_count;
 
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	void* mmio = lp->mmio;
 	struct amd8111e_coalesce_conf * coal_conf = &lp->coal_conf;
 
@@ -429,7 +429,7 @@ This function initializes the device reg
 */
 static int amd8111e_restart(struct net_device *dev)
 {
-	struct amd8111e_priv *lp = (struct amd8111e_priv* )dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	void * mmio = lp->mmio;
 	int i,reg_val;
 
@@ -663,7 +663,7 @@ This function will free all the transmit
 */
 static int amd8111e_tx(struct net_device *dev)
 {
-	struct amd8111e_priv* lp = dev->priv;
+	struct amd8111e_priv* lp = netdev_priv(dev);
 	int tx_index = lp->tx_complete_idx & TX_RING_DR_MOD_MASK;
 	int status;
 	/* Complete all the transmit packet */
@@ -705,7 +705,7 @@ This function will check the ownership o
 */
 static int amd8111e_rx(struct net_device *dev)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	struct sk_buff *skb,*new_skb;
 	int rx_index = lp->rx_idx & RX_RING_DR_MOD_MASK;
 	int min_pkt_len, status;
@@ -809,7 +809,7 @@ This function will indicate the link sta
 */
 static int amd8111e_link_change(struct net_device* dev)
 {	
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	int status0,speed;
 
 	/* read the link change */
@@ -871,7 +871,7 @@ This function reads the mib registers an
 */ 
 static struct net_device_stats *amd8111e_get_stats(struct net_device * dev)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	void * mmio = lp->mmio;
 	unsigned long flags;
 	/* struct net_device_stats *prev_stats = &lp->prev_stats; */
@@ -966,7 +966,7 @@ according to the datarate and the packet
 */
 static int amd8111e_calc_coalesce(struct net_device *dev)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	struct amd8111e_coalesce_conf * coal_conf = &lp->coal_conf;
 	int tx_pkt_rate;
 	int rx_pkt_rate;
@@ -1102,7 +1102,7 @@ static irqreturn_t amd8111e_interrupt(in
 {
 
 	struct net_device * dev = (struct net_device *) dev_id;
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	void * mmio = lp->mmio;
 	unsigned int intr0;
 	unsigned int handled = 1;
@@ -1169,7 +1169,7 @@ This function closes the network interfa
 */
 static int amd8111e_close(struct net_device * dev)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	netif_stop_queue(dev);
 	
 	spin_lock_irq(&lp->lock);
@@ -1196,7 +1196,7 @@ static int amd8111e_close(struct net_dev
 */
 static int amd8111e_open(struct net_device * dev )
 {
-	struct amd8111e_priv *lp = (struct amd8111e_priv *)dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 
 	if(dev->irq ==0 || request_irq(dev->irq, amd8111e_interrupt, SA_SHIRQ,
 					 dev->name, dev)) 
@@ -1242,7 +1242,7 @@ This function will queue the transmit pa
 
 static int amd8111e_start_xmit(struct sk_buff *skb, struct net_device * dev)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	int tx_index;
 	unsigned long flags;
 
@@ -1349,7 +1349,7 @@ list to the device.
 static void amd8111e_set_multicast_list(struct net_device *dev)
 {
 	struct dev_mc_list* mc_ptr;
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	u32 mc_filter[2] ;
 	int i,bit_num;
 	if(dev->flags & IFF_PROMISC){
@@ -1399,7 +1399,7 @@ This function handles all the  ethtool i
 	
 static int amd8111e_ethtool_ioctl(struct net_device* dev, void* useraddr)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	struct pci_dev *pci_dev = lp->pci_dev;
 	u32 ethcmd;
 	
@@ -1521,7 +1521,7 @@ static int amd8111e_ethtool_ioctl(struct
 static int amd8111e_ioctl(struct net_device * dev , struct ifreq *ifr, int cmd)
 {
 	struct mii_ioctl_data *data = (struct mii_ioctl_data *)&ifr->ifr_data;
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	int err;
 	u32 mii_regval;
 
@@ -1565,7 +1565,7 @@ This function changes the mtu of the dev
 */  
 int amd8111e_change_mtu(struct net_device *dev, int new_mtu)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	int err;
 
 	if ((new_mtu < AMD8111E_MIN_MTU) || (new_mtu > AMD8111E_MAX_MTU))
@@ -1595,7 +1595,7 @@ int amd8111e_change_mtu(struct net_devic
 #if AMD8111E_VLAN_TAG_USED
 static void amd8111e_vlan_rx_register(struct net_device *dev, struct vlan_group *grp)
 {
-	struct  amd8111e_priv *lp = dev->priv;
+	struct  amd8111e_priv *lp = netdev_priv(dev);
 	spin_lock_irq(&lp->lock);
 	lp->vlgrp = grp;
 	spin_unlock_irq(&lp->lock);
@@ -1603,7 +1603,7 @@ static void amd8111e_vlan_rx_register(st
 	
 static void amd8111e_vlan_rx_kill_vid(struct net_device *dev, unsigned short vid)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	spin_lock_irq(&lp->lock);
 	if (lp->vlgrp)
 		lp->vlgrp->vlan_devices[vid] = NULL;
@@ -1634,7 +1634,7 @@ static int amd8111e_enable_link_change(s
 
 static void amd8111e_tx_timeout(struct net_device *dev)
 {
-	struct amd8111e_priv* lp = dev->priv;
+	struct amd8111e_priv* lp = netdev_priv(dev);
 	int err;
 
 	printk(KERN_ERR "%s: transmit timed out, resetting\n",
@@ -1648,7 +1648,7 @@ static void amd8111e_tx_timeout(struct n
 static int amd8111e_suspend(struct pci_dev *pci_dev, u32 state)
 {	
 	struct net_device *dev = pci_get_drvdata(pci_dev);
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	
 	if (!netif_running(dev))
 		return 0;
@@ -1691,7 +1691,7 @@ static int amd8111e_suspend(struct pci_d
 static int amd8111e_resume(struct pci_dev *pci_dev)
 {
 	struct net_device *dev = pci_get_drvdata(pci_dev);
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	
 	if (!netif_running(dev))
 		return 0;
@@ -1730,7 +1730,7 @@ static void __devexit amd8111e_remove_on
 }
 static void amd8111e_config_ipg(struct net_device* dev)
 {
-	struct amd8111e_priv *lp = dev->priv;
+	struct amd8111e_priv *lp = netdev_priv(dev);
 	struct ipg_info* ipg_data = &lp->ipg_data;
 	void * mmio = lp->mmio;
 	unsigned int prev_col_cnt = ipg_data->col_cnt;
@@ -1852,7 +1852,7 @@ static int __devinit amd8111e_probe_one(
 	dev->vlan_rx_kill_vid = amd8111e_vlan_rx_kill_vid;
 #endif	
 	
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 	lp->pci_dev = pdev;
 	lp->amd8111e_net_dev = dev;
 	lp->pm_cap = pm_cap;
diff -purN linux-post-2.6.4-20040313/drivers/net/appletalk/cops.c linux-post-2.6.4-20040314/drivers/net/appletalk/cops.c
--- linux-post-2.6.4-20040313/drivers/net/appletalk/cops.c	2004-01-11 00:16:53.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/appletalk/cops.c	2004-03-02 23:27:01.000000000 +0000
@@ -333,7 +333,7 @@ static int __init cops_probe1(struct net
 
 	dev->base_addr = ioaddr;
 
-        lp = (struct cops_local *)dev->priv;
+        lp = netdev_priv(dev);
         memset(lp, 0, sizeof(struct cops_local));
         spin_lock_init(&lp->lock);
 
@@ -422,7 +422,7 @@ static int __init cops_irq (int ioaddr, 
  */
 static int cops_open(struct net_device *dev)
 {
-    struct cops_local *lp = (struct cops_local *)dev->priv;
+    struct cops_local *lp = netdev_priv(dev);
 
 	if(dev->irq==0)
 	{
@@ -456,7 +456,7 @@ static int cops_open(struct net_device *
  */
 static int cops_jumpstart(struct net_device *dev)
 {
-	struct cops_local *lp = (struct cops_local *)dev->priv;
+	struct cops_local *lp = netdev_priv(dev);
 
 	/*
          *      Once the card has the firmware loaded and has acquired
@@ -490,7 +490,7 @@ static void tangent_wait_reset(int ioadd
  */
 static void cops_reset(struct net_device *dev, int sleep)
 {
-        struct cops_local *lp = (struct cops_local *)dev->priv;
+        struct cops_local *lp = netdev_priv(dev);
         int ioaddr=dev->base_addr;
 
         if(lp->board==TANGENT)
@@ -525,7 +525,7 @@ static void cops_load (struct net_device
 {
         struct ifreq ifr;
         struct ltfirmware *ltf= (struct ltfirmware *)&ifr.ifr_data;
-        struct cops_local *lp=(struct cops_local *)dev->priv;
+        struct cops_local *lp = netdev_priv(dev);
         int ioaddr=dev->base_addr;
 	int length, i = 0;
 
@@ -618,7 +618,7 @@ static void cops_load (struct net_device
  */
 static int cops_nodeid (struct net_device *dev, int nodeid)
 {
-	struct cops_local *lp = (struct cops_local *) dev->priv;
+	struct cops_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	if(lp->board == DAYNA)
@@ -730,7 +730,7 @@ static irqreturn_t cops_interrupt(int ir
         int boguscount = 0;
 
         ioaddr = dev->base_addr;
-        lp = (struct cops_local *)dev->priv;
+        lp = netdev_priv(dev);
 
 	if(lp->board==DAYNA)
 	{
@@ -765,7 +765,7 @@ static void cops_rx(struct net_device *d
         int pkt_len = 0;
         int rsp_type = 0;
         struct sk_buff *skb = NULL;
-        struct cops_local *lp = dev->priv;
+        struct cops_local *lp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
         int boguscount = 0;
         unsigned long flags;
@@ -869,7 +869,7 @@ static void cops_rx(struct net_device *d
 
 static void cops_timeout(struct net_device *dev)
 {
-        struct cops_local *lp = (struct cops_local *)dev->priv;
+        struct cops_local *lp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
 
 	lp->stats.tx_errors++;
@@ -891,7 +891,7 @@ static void cops_timeout(struct net_devi
 
 static int cops_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-        struct cops_local *lp = (struct cops_local *)dev->priv;
+        struct cops_local *lp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
         unsigned long flags;
 
@@ -966,7 +966,7 @@ static int cops_hard_header(struct sk_bu
  
 static int cops_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
 {
-        struct cops_local *lp = (struct cops_local *)dev->priv;
+        struct cops_local *lp = netdev_priv(dev);
         struct sockaddr_at *sa = (struct sockaddr_at *)&ifr->ifr_addr;
         struct atalk_addr *aa = (struct atalk_addr *)&lp->node_addr;
 
@@ -1002,7 +1002,7 @@ static int cops_ioctl(struct net_device 
  
 static int cops_close(struct net_device *dev)
 {
-	struct cops_local *lp = (struct cops_local *)dev->priv;
+	struct cops_local *lp = netdev_priv(dev);
 
 	/* If we were running polled, yank the timer.
 	 */
@@ -1019,7 +1019,7 @@ static int cops_close(struct net_device 
  */
 static struct net_device_stats *cops_get_stats(struct net_device *dev)
 {
-        struct cops_local *lp = (struct cops_local *)dev->priv;
+        struct cops_local *lp = netdev_priv(dev);
         return &lp->stats;
 }
 
diff -purN linux-post-2.6.4-20040313/drivers/net/ariadne.c linux-post-2.6.4-20040314/drivers/net/ariadne.c
--- linux-post-2.6.4-20040313/drivers/net/ariadne.c	2004-02-20 15:10:35.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/ariadne.c	2004-03-02 22:56:06.000000000 +0000
@@ -184,7 +184,7 @@ static int __devinit ariadne_init_one(st
     }
 
     SET_MODULE_OWNER(dev);
-    priv = dev->priv;
+    priv = netdev_priv(dev);
 
     r1->name = dev->name;
     r2->name = dev->name;
@@ -333,7 +333,7 @@ static int ariadne_open(struct net_devic
 
 static void ariadne_init_ring(struct net_device *dev)
 {
-    struct ariadne_private *priv = (struct ariadne_private *)dev->priv;
+    struct ariadne_private *priv = netdev_priv(dev);
     volatile struct lancedata *lancedata = (struct lancedata *)dev->mem_start;
     int i;
 
@@ -379,7 +379,7 @@ static void ariadne_init_ring(struct net
 
 static int ariadne_close(struct net_device *dev)
 {
-    struct ariadne_private *priv = (struct ariadne_private *)dev->priv;
+    struct ariadne_private *priv = netdev_priv(dev);
     volatile struct Am79C960 *lance = (struct Am79C960*)dev->base_addr;
 
     netif_stop_queue(dev);
@@ -434,7 +434,7 @@ static irqreturn_t ariadne_interrupt(int
     if (!(lance->RDP & INTR))		/* Check if any interrupt has been */
 	return IRQ_NONE;		/* generated by the board. */
 
-    priv = (struct ariadne_private *)dev->priv;
+    priv = netdev_priv(dev);
 
     boguscnt = 10;
     while ((csr0 = lance->RDP) & (ERR|RINT|TINT) && --boguscnt >= 0) {
@@ -589,7 +589,7 @@ static void ariadne_tx_timeout(struct ne
 
 static int ariadne_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-    struct ariadne_private *priv = (struct ariadne_private *)dev->priv;
+    struct ariadne_private *priv = netdev_priv(dev);
     volatile struct Am79C960 *lance = (struct Am79C960*)dev->base_addr;
     int entry;
     unsigned long flags;
@@ -697,7 +697,7 @@ static int ariadne_start_xmit(struct sk_
 
 static int ariadne_rx(struct net_device *dev)
 {
-    struct ariadne_private *priv = (struct ariadne_private *)dev->priv;
+    struct ariadne_private *priv = netdev_priv(dev);
     int entry = priv->cur_rx % RX_RING_SIZE;
     int i;
 
@@ -787,7 +787,7 @@ static int ariadne_rx(struct net_device 
 
 static struct net_device_stats *ariadne_get_stats(struct net_device *dev)
 {
-    struct ariadne_private *priv = (struct ariadne_private *)dev->priv;
+    struct ariadne_private *priv = netdev_priv(dev);
     volatile struct Am79C960 *lance = (struct Am79C960*)dev->base_addr;
     short saved_addr;
     unsigned long flags;
diff -purN linux-post-2.6.4-20040313/drivers/net/arm/am79c961a.c linux-post-2.6.4-20040314/drivers/net/arm/am79c961a.c
--- linux-post-2.6.4-20040313/drivers/net/arm/am79c961a.c	2004-01-11 00:20:58.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/arm/am79c961a.c	2004-03-02 23:15:12.000000000 +0000
@@ -196,7 +196,7 @@ am79c961_ramtest(struct net_device *dev,
 static void
 am79c961_init_for_open(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	unsigned long flags;
 	unsigned char *p;
 	u_int hdr_addr, first_free_addr;
@@ -271,7 +271,7 @@ am79c961_init_for_open(struct net_device
 static void am79c961_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	unsigned int lnkstat, carrier;
 
 	lnkstat = read_ireg(dev->base_addr, ISALED0) & ISALED0_LNKST;
@@ -291,7 +291,7 @@ static void am79c961_timer(unsigned long
 static int
 am79c961_open(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	int ret;
 
 	memset (&priv->stats, 0, sizeof (priv->stats));
@@ -318,7 +318,7 @@ am79c961_open(struct net_device *dev)
 static int
 am79c961_close(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	unsigned long flags;
 
 	del_timer_sync(&priv->timer);
@@ -341,7 +341,7 @@ am79c961_close(struct net_device *dev)
  */
 static struct net_device_stats *am79c961_getstats (struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	return &priv->stats;
 }
 
@@ -365,7 +365,7 @@ static void am79c961_mc_hash(struct dev_
  */
 static void am79c961_setmulticastlist (struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	unsigned long flags;
 	unsigned short multi_hash[4], mode;
 	int i, stopped;
@@ -444,7 +444,7 @@ static void am79c961_timeout(struct net_
 static int
 am79c961_sendpacket(struct sk_buff *skb, struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	unsigned int hdraddr, bufaddr;
 	unsigned int head;
 	unsigned long flags;
@@ -593,7 +593,7 @@ static irqreturn_t
 am79c961_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_id;
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	u_int status, n = 100;
 	int handled = 0;
 
@@ -630,7 +630,7 @@ am79c961_interrupt(int irq, void *dev_id
 static int
 am79c961_hw_init(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 
 	spin_lock_irq(&priv->chip_lock);
 	write_rreg (dev->base_addr, CSR0, CSR0_STOP);
@@ -662,7 +662,7 @@ static int __init am79c961_init(void)
 	if (!dev)
 		goto out;
 
-	priv = dev->priv;
+	priv = netdev_priv(dev);
 
 	/*
 	 * Fixed address and IRQ lines here.
diff -purN linux-post-2.6.4-20040313/drivers/net/arm/ether1.c linux-post-2.6.4-20040314/drivers/net/arm/ether1.c
--- linux-post-2.6.4-20040313/drivers/net/arm/ether1.c	2004-02-08 16:26:21.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/arm/ether1.c	2004-03-02 23:11:48.000000000 +0000
@@ -447,7 +447,7 @@ static rbd_t  init_rbd	= {
 static int
 ether1_init_for_open (struct net_device *dev)
 {
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 	int i, status, addr, next, next2;
 	int failures = 0;
 	unsigned long timeout;
@@ -616,7 +616,7 @@ ether1_init_for_open (struct net_device 
 static int
 ether1_txalloc (struct net_device *dev, int size)
 {
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 	int start, tail;
 
 	size = (size + 1) & ~1;
@@ -642,7 +642,7 @@ ether1_txalloc (struct net_device *dev, 
 static int
 ether1_open (struct net_device *dev)
 {
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 
 	if (!is_valid_ether_addr(dev->dev_addr)) {
 		printk(KERN_WARNING "%s: invalid ethernet MAC address\n",
@@ -668,7 +668,7 @@ ether1_open (struct net_device *dev)
 static void
 ether1_timeout(struct net_device *dev)
 {
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 
 	printk(KERN_WARNING "%s: transmit timeout, network cable problem?\n",
 		dev->name);
@@ -686,7 +686,7 @@ ether1_timeout(struct net_device *dev)
 static int
 ether1_sendpacket (struct sk_buff *skb, struct net_device *dev)
 {
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 	int tmp, tst, nopaddr, txaddr, tbdaddr, dataddr;
 	unsigned long flags;
 	tx_t tx;
@@ -762,7 +762,7 @@ ether1_sendpacket (struct sk_buff *skb, 
 static void
 ether1_xmit_done (struct net_device *dev)
 {
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 	nop_t nop;
 	int caddr, tst;
 
@@ -863,7 +863,7 @@ again:
 static void
 ether1_recv_done (struct net_device *dev)
 {
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 	int status;
 	int nexttail, rbdaddr;
 	rbd_t rbd;
@@ -919,7 +919,7 @@ static irqreturn_t
 ether1_interrupt (int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_id;
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 	int status;
 
 	status = ether1_inw (dev, SCB_ADDR, scb_t, scb_status, NORMALIRQS);
@@ -978,7 +978,7 @@ ether1_close (struct net_device *dev)
 static struct net_device_stats *
 ether1_getstats (struct net_device *dev)
 {
-	struct ether1_priv *priv = (struct ether1_priv *)dev->priv;
+	struct ether1_priv *priv = netdev_priv(dev);
 	return &priv->stats;
 }
 
@@ -1030,7 +1030,7 @@ ether1_probe(struct expansion_card *ec, 
 	request_region(dev->base_addr, 16, dev->name);
 	request_region(dev->base_addr + 0x800, 4096, dev->name);
 
-	priv = (struct ether1_priv *)dev->priv;
+	priv = netdev_priv(dev);
 	if ((priv->bus_type = ether1_reset(dev)) == 0) {
 		ret = -ENODEV;
 		goto release;
diff -purN linux-post-2.6.4-20040313/drivers/net/arm/ether3.c linux-post-2.6.4-20040314/drivers/net/arm/ether3.c
--- linux-post-2.6.4-20040313/drivers/net/arm/ether3.c	2004-01-10 15:31:38.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/arm/ether3.c	2004-03-02 23:13:34.000000000 +0000
@@ -121,7 +121,7 @@ static inline void ether3_outw(int v, co
 static int
 ether3_setbuffer(struct net_device *dev, buffer_rw_t read, int start)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	int timeout = 1000;
 
 	ether3_outw(priv->regs.config1 | CFG1_LOCBUFMEM, REG_CONFIG1);
@@ -180,7 +180,7 @@ static void
 ether3_ledoff(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	ether3_outw(priv->regs.config2 |= CFG2_CTRLO, REG_CONFIG2);
 }
 
@@ -280,7 +280,7 @@ ether3_ramtest(struct net_device *dev, u
 static int __init
 ether3_init_2(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	int i;
 
 	priv->regs.config1 = CFG1_RECVCOMPSTAT0|CFG1_DMABURST8;
@@ -330,7 +330,7 @@ ether3_init_2(struct net_device *dev)
 static void
 ether3_init_for_open(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	int i;
 
 	memset(&priv->stats, 0, sizeof(struct net_device_stats));
@@ -434,7 +434,7 @@ ether3_open(struct net_device *dev)
 static int
 ether3_close(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 
 	netif_stop_queue(dev);
 
@@ -457,7 +457,7 @@ ether3_close(struct net_device *dev)
  */
 static struct net_device_stats *ether3_getstats(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	return &priv->stats;
 }
 
@@ -469,7 +469,7 @@ static struct net_device_stats *ether3_g
  */
 static void ether3_setmulticastlist(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 
 	priv->regs.config1 &= ~CFG1_RECVPROMISC;
 
@@ -487,7 +487,7 @@ static void ether3_setmulticastlist(stru
 static void
 ether3_timeout(struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	unsigned long flags;
 
 	del_timer(&priv->timer);
@@ -518,7 +518,7 @@ ether3_timeout(struct net_device *dev)
 static int
 ether3_sendpacket(struct sk_buff *skb, struct net_device *dev)
 {
-	struct dev_priv *priv = (struct dev_priv *)dev->priv;
+	struct dev_priv *priv = netdev_priv(dev);
 	unsigned long flags;
 	unsigned int length = ETH_ZLEN < skb->len ? skb->len : ETH_ZLEN;
 	unsigned int ptr, next_ptr;
@@ -594,7 +594,7 @@ ether3_interrupt(int irq, void *dev_id, 
 		printk("eth3irq: %d ", irq);
 #endif
 
-	priv = (struct dev_priv *)dev->priv;
+	priv = netdev_priv(dev);
 
 	status = ether3_inw(REG_STATUS);
 
@@ -844,7 +844,7 @@ ether3_probe(struct expansion_card *ec, 
 		goto free;
 	}
 
-	priv = (struct dev_priv *) dev->priv;
+	priv = netdev_priv(dev);
 	init_timer(&priv->timer);
 
 	/* Reset card...
diff -purN linux-post-2.6.4-20040313/drivers/net/arm/etherh.c linux-post-2.6.4-20040314/drivers/net/arm/etherh.c
--- linux-post-2.6.4-20040313/drivers/net/arm/etherh.c	2004-01-10 16:09:55.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/arm/etherh.c	2004-03-02 23:15:42.000000000 +0000
@@ -144,7 +144,7 @@ static expansioncard_ops_t etherh_ops = 
 static void
 etherh_setif(struct net_device *dev)
 {
-	struct etherh_priv *eh = (struct etherh_priv *)dev->priv;
+	struct etherh_priv *eh = netdev_priv(dev);
 	struct ei_device *ei_local = &eh->eidev;
 	unsigned long addr, flags;
 
@@ -188,7 +188,7 @@ etherh_setif(struct net_device *dev)
 static int
 etherh_getifstat(struct net_device *dev)
 {
-	struct etherh_priv *eh = (struct etherh_priv *)dev->priv;
+	struct etherh_priv *eh = netdev_priv(dev);
 	struct ei_device *ei_local = &eh->eidev;
 	int stat = 0;
 
@@ -256,7 +256,7 @@ static int etherh_set_config(struct net_
 static void
 etherh_reset(struct net_device *dev)
 {
-	struct ei_device *ei_local = (struct ei_device *) dev->priv;
+	struct ei_device *ei_local = netdev_priv(dev);
 
 	outb_p(E8390_NODMA+E8390_PAGE0+E8390_STOP, dev->base_addr);
 
@@ -283,7 +283,7 @@ etherh_reset(struct net_device *dev)
 static void
 etherh_block_output (struct net_device *dev, int count, const unsigned char *buf, int start_page)
 {
-	struct ei_device *ei_local = (struct ei_device *) dev->priv;
+	struct ei_device *ei_local = netdev_priv(dev);
 	unsigned int addr, dma_addr;
 	unsigned long dma_start;
 
@@ -349,7 +349,7 @@ etherh_block_output (struct net_device *
 static void
 etherh_block_input (struct net_device *dev, int count, struct sk_buff *skb, int ring_offset)
 {
-	struct ei_device *ei_local = (struct ei_device *) dev->priv;
+	struct ei_device *ei_local = netdev_priv(dev);
 	unsigned int addr, dma_addr;
 	unsigned char *buf;
 
@@ -390,7 +390,7 @@ etherh_block_input (struct net_device *d
 static void
 etherh_get_header (struct net_device *dev, struct e8390_pkt_hdr *hdr, int ring_page)
 {
-	struct ei_device *ei_local = (struct ei_device *) dev->priv;
+	struct ei_device *ei_local = netdev_priv(dev);
 	unsigned int addr, dma_addr;
 
 	if (ei_local->dmaing) {
@@ -432,7 +432,7 @@ etherh_get_header (struct net_device *de
 static int
 etherh_open(struct net_device *dev)
 {
-	struct ei_device *ei_local = (struct ei_device *) dev->priv;
+	struct ei_device *ei_local = netdev_priv(dev);
 
 	if (!is_valid_ether_addr(dev->dev_addr)) {
 		printk(KERN_WARNING "%s: invalid ethernet MAC address\n",
@@ -557,7 +557,7 @@ etherh_probe(struct expansion_card *ec, 
 		goto out;
 	}
 
-	eh = dev->priv;
+	eh = netdev_priv(dev);
 
 	spin_lock_init(&eh->eidev.page_lock);
 
@@ -653,7 +653,7 @@ etherh_probe(struct expansion_card *ec, 
 		break;
 	}
 
-	ei_local = (struct ei_device *) dev->priv;
+	ei_local = netdev_priv(dev);
 	if (ec->cid.product == PROD_ANT_ETHERM) {
 		ei_local->tx_start_page = ETHERM_TX_START_PAGE;
 		ei_local->stop_page     = ETHERM_STOP_PAGE;
diff -purN linux-post-2.6.4-20040313/drivers/net/at1700.c linux-post-2.6.4-20040314/drivers/net/at1700.c
--- linux-post-2.6.4-20040313/drivers/net/at1700.c	2004-01-10 14:52:59.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/at1700.c	2004-03-02 21:49:57.000000000 +0000
@@ -241,7 +241,7 @@ static int irq;
 static void cleanup_card(struct net_device *dev)
 {
 #ifdef CONFIG_MCA	
-	struct net_local *lp = dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	if (lp->mca_slot)
 		mca_mark_as_unused(lp->mca_slot);
 #endif	
@@ -319,8 +319,8 @@ static int __init at1700_probe1(struct n
 	char at1700_irqmap[8] = {3, 4, 5, 9, 10, 11, 14, 15};
 	unsigned int i, irq, is_fmv18x = 0, is_at1700 = 0;
 	int slot, ret = -ENODEV;
-	struct net_local *lp = dev->priv;
-	
+	struct net_local *lp = netdev_priv(dev);
+
 #ifndef CONFIG_X86_PC9800
 	if (!request_region(ioaddr, AT1700_IO_EXTENT, dev->name))
 		return -EBUSY;
@@ -618,7 +618,7 @@ static int __init read_eeprom(long ioadd
 
 static int net_open(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	/* Set the configuration register 0 to 32K 100ns. byte-wide memory, 16 bit
@@ -649,7 +649,7 @@ static int net_open(struct net_device *d
 
 static void net_tx_timeout (struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	printk ("%s: transmit timed out with status %04x, %s?\n", dev->name,
@@ -683,7 +683,7 @@ static void net_tx_timeout (struct net_d
 
 static int net_send_packet (struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *) dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	short length = ETH_ZLEN < skb->len ? skb->len : ETH_ZLEN;
 	short len = skb->len;
@@ -748,7 +748,7 @@ net_interrupt(int irq, void *dev_id, str
 	}
 
 	ioaddr = dev->base_addr;
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 	
 	spin_lock (&lp->lock);
 	
@@ -808,7 +808,7 @@ net_interrupt(int irq, void *dev_id, str
 static void
 net_rx(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int boguscount = 5;
 
@@ -891,7 +891,7 @@ net_rx(struct net_device *dev)
 /* The inverse routine to net_open(). */
 static int net_close(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	netif_stop_queue(dev);
@@ -919,7 +919,7 @@ static int net_close(struct net_device *
 static struct net_device_stats *
 net_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
@@ -931,7 +931,7 @@ static void
 set_rx_mode(struct net_device *dev)
 {
 	int ioaddr = dev->base_addr;
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned char mc_filter[8];		 /* Multicast hash filter */
 	unsigned long flags;
 	int i;
diff -purN linux-post-2.6.4-20040313/drivers/net/atari_bionet.c linux-post-2.6.4-20040314/drivers/net/atari_bionet.c
--- linux-post-2.6.4-20040313/drivers/net/atari_bionet.c	2004-01-10 15:09:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/atari_bionet.c	2004-03-02 21:53:42.000000000 +0000
@@ -408,7 +408,7 @@ struct net_device * __init bionet_probe(
  */
 static int
 bionet_open(struct net_device *dev) {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (bionet_debug > 0)
 		printk("bionet_open\n");
@@ -433,7 +433,7 @@ bionet_open(struct net_device *dev) {
 
 static int
 bionet_send_packet(struct sk_buff *skb, struct net_device *dev) {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	/* Block a timer-based transmit from overlapping.  This could better be
@@ -499,7 +499,7 @@ bionet_send_packet(struct sk_buff *skb, 
  */
 static void
 bionet_poll_rx(struct net_device *dev) {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int boguscount = 10;
 	int pkt_len, status;
 	unsigned long flags;
@@ -601,7 +601,7 @@ bionet_poll_rx(struct net_device *dev) {
 static void
 bionet_tick(unsigned long data) {
 	struct net_device	 *dev = (struct net_device *)data;
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if( bionet_debug > 0 && (lp->open_time++ & 7) == 8 )
 		printk("bionet_tick: %ld\n", lp->open_time);
@@ -616,7 +616,7 @@ bionet_tick(unsigned long data) {
  */
 static int
 bionet_close(struct net_device *dev) {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (bionet_debug > 0)
 		printk("bionet_close, open_time=%ld\n", lp->open_time);
@@ -638,7 +638,7 @@ bionet_close(struct net_device *dev) {
  */
 static struct net_device_stats *net_get_stats(struct net_device *dev) 
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
diff -purN linux-post-2.6.4-20040313/drivers/net/atari_pamsnet.c linux-post-2.6.4-20040314/drivers/net/atari_pamsnet.c
--- linux-post-2.6.4-20040313/drivers/net/atari_pamsnet.c	2004-02-20 15:09:17.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/atari_pamsnet.c	2004-03-03 20:25:05.000000000 +0000
@@ -667,7 +667,7 @@ struct net_device * __init pamsnet_probe
  */
 static int
 pamsnet_open(struct net_device *dev) {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (pamsnet_debug > 0)
 		printk("pamsnet_open\n");
@@ -696,7 +696,7 @@ pamsnet_open(struct net_device *dev) {
 
 static int
 pamsnet_send_packet(struct sk_buff *skb, struct net_device *dev) {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	/* Block a timer-based transmit from overlapping.  This could better be
@@ -742,7 +742,7 @@ pamsnet_send_packet(struct sk_buff *skb,
  */
 static void
 pamsnet_poll_rx(struct net_device *dev) {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int boguscount;
 	int pkt_len;
 	struct sk_buff *skb;
@@ -817,7 +817,7 @@ pamsnet_poll_rx(struct net_device *dev) 
 static void
 pamsnet_tick(unsigned long data) {
 	struct net_device	 *dev = (struct net_device *)data;
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if( pamsnet_debug > 0 && (lp->open_time++ & 7) == 8 )
 		printk("pamsnet_tick: %ld\n", lp->open_time);
@@ -832,7 +832,7 @@ pamsnet_tick(unsigned long data) {
  */
 static int
 pamsnet_close(struct net_device *dev) {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (pamsnet_debug > 0)
 		printk("pamsnet_close, open_time=%ld\n", lp->open_time);
@@ -859,7 +859,7 @@ pamsnet_close(struct net_device *dev) {
  */
 static struct net_device_stats *net_get_stats(struct net_device *dev) 
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
diff -purN linux-post-2.6.4-20040313/drivers/net/atp.c linux-post-2.6.4-20040314/drivers/net/atp.c
--- linux-post-2.6.4-20040313/drivers/net/atp.c	2004-01-10 15:31:12.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/atp.c	2004-03-02 21:55:41.000000000 +0000
@@ -335,7 +335,7 @@ static int __init atp_probe1(long ioaddr
 	/* Reset the ethernet hardware and activate the printer pass-through. */
 	write_reg_high(ioaddr, CMR1, CMR1h_RESET | CMR1h_MUX);
 
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 	lp->chip_type = RTL8002;
 	lp->addr_mode = CMR2h_Normal;
 	spin_lock_init(&lp->lock);
@@ -432,7 +432,7 @@ static unsigned short __init eeprom_op(l
    */
 static int net_open(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ret;
 
 	/* The interrupt line is turned off (tri-stated) when the device isn't in
@@ -458,7 +458,7 @@ static int net_open(struct net_device *d
    the hardware may have been temporarily detached. */
 static void hardware_init(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
     int i;
 
@@ -541,7 +541,7 @@ static void write_packet(long ioaddr, in
 
 static void tx_timeout(struct net_device *dev)
 {
-	struct net_local *np = (struct net_local *)dev->priv;
+	struct net_local *np = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	printk(KERN_WARNING "%s: Transmit timed out, %s?\n", dev->name,
@@ -557,7 +557,7 @@ static void tx_timeout(struct net_device
 
 static int atp_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int length;
 	unsigned long flags;
@@ -611,7 +611,7 @@ atp_interrupt(int irq, void *dev_instanc
 		return IRQ_NONE;
 	}
 	ioaddr = dev->base_addr;
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 
 	spin_lock(&lp->lock);
 
@@ -726,7 +726,7 @@ static void atp_timed_checker(unsigned l
 {
 	struct net_device *dev = (struct net_device *)data;
 	long ioaddr = dev->base_addr;
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int tickssofar = jiffies - lp->last_rx_time;
 	int i;
 
@@ -740,7 +740,7 @@ static void atp_timed_checker(unsigned l
 		for (i = 0; i < 6; i++)
 			if (read_cmd_byte(ioaddr, PAR0 + i) != atp_timed_dev->dev_addr[i])
 				{
-			struct net_local *lp = (struct net_local *)atp_timed_dev->priv;
+			struct net_local *lp = netdev_priv(atp_timed_dev);
 			write_reg_byte(ioaddr, PAR0 + i, atp_timed_dev->dev_addr[i]);
 			if (i == 2)
 			  lp->stats.tx_errors++;
@@ -762,7 +762,7 @@ static void atp_timed_checker(unsigned l
 /* We have a good packet(s), get it/them out of the buffers. */
 static void net_rx(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	struct rx_header rx_head;
 
@@ -838,7 +838,7 @@ static void read_block(long ioaddr, int 
 static int
 net_close(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	netif_stop_queue(dev);
@@ -863,7 +863,7 @@ net_close(struct net_device *dev)
 static struct net_device_stats *
 net_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
@@ -873,7 +873,7 @@ net_get_stats(struct net_device *dev)
 
 static void set_rx_mode_8002(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	if ( dev->mc_count > 0 || (dev->flags & (IFF_ALLMULTI|IFF_PROMISC))) {
@@ -890,7 +890,7 @@ static void set_rx_mode_8002(struct net_
 
 static void set_rx_mode_8012(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	unsigned char new_mode, mc_filter[8]; /* Multicast hash filter */
 	int i;
diff -purN linux-post-2.6.4-20040313/drivers/net/bagetlance.c linux-post-2.6.4-20040314/drivers/net/bagetlance.c
--- linux-post-2.6.4-20040313/drivers/net/bagetlance.c	2004-01-10 15:08:25.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/bagetlance.c	2004-03-03 20:30:25.000000000 +0000
@@ -594,7 +594,7 @@ static int __init lance_probe1( struct n
 	return( 0 );
 
   probe_ok:
-	lp = (struct lance_private *)dev->priv;
+	lp = netdev_priv(dev);
 	MEM = (struct lance_memory *)memaddr;
 	IO = lp->iobase = (struct lance_ioreg *)ioaddr;
 	dev->base_addr = (unsigned long)ioaddr; /* informational only */
@@ -736,7 +736,7 @@ static int __init lance_probe1( struct n
 
 static int lance_open( struct net_device *dev )
 
-{	struct lance_private *lp = (struct lance_private *)dev->priv;
+{	struct lance_private *lp = netdev_priv(dev);
 	struct lance_ioreg	 *IO = lp->iobase;
 	int i;
 
@@ -778,7 +778,7 @@ static int lance_open( struct net_device
 
 static void lance_init_ring( struct net_device *dev )
 
-{	struct lance_private *lp = (struct lance_private *)dev->priv;
+{	struct lance_private *lp = netdev_priv(dev);
 	int i;
 	unsigned offset;
 
@@ -834,7 +834,7 @@ static void lance_init_ring( struct net_
 
 static int lance_start_xmit( struct sk_buff *skb, struct net_device *dev )
 
-{	struct lance_private *lp = (struct lance_private *)dev->priv;
+{	struct lance_private *lp = netdev_priv(dev);
 	struct lance_ioreg	 *IO = lp->iobase;
 	int entry, len;
 	struct lance_tx_head *head;
@@ -988,7 +988,7 @@ static irqreturn_t lance_interrupt( int 
 		return IRQ_NONE;
 	}
 
-	lp = (struct lance_private *)dev->priv;
+	lp = netdev_priv(dev);
 	IO = lp->iobase;
 	AREG = CSR0;
 
@@ -1101,7 +1101,7 @@ static irqreturn_t lance_interrupt( int 
 
 static int lance_rx( struct net_device *dev )
 
-{	struct lance_private *lp = (struct lance_private *)dev->priv;
+{	struct lance_private *lp = netdev_priv(dev);
 	int entry = lp->cur_rx & RX_RING_MOD_MASK;
 	int i;
 
@@ -1225,7 +1225,7 @@ static int lance_rx( struct net_device *
 
 static int lance_close( struct net_device *dev )
 
-{	struct lance_private *lp = (struct lance_private *)dev->priv;
+{	struct lance_private *lp = netdev_priv(dev);
 	struct lance_ioreg	 *IO = lp->iobase;
 
 	dev->start = 0;
@@ -1247,7 +1247,7 @@ static int lance_close( struct net_devic
 static struct net_device_stats *lance_get_stats( struct net_device *dev )
 
 {	
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
@@ -1261,7 +1261,7 @@ static struct net_device_stats *lance_ge
 
 static void set_multicast_list( struct net_device *dev )
 
-{	struct lance_private *lp = (struct lance_private *)dev->priv;
+{	struct lance_private *lp = netdev_priv(dev);
 	struct lance_ioreg	 *IO = lp->iobase;
 
 	if (!dev->start)
@@ -1303,7 +1303,7 @@ static void set_multicast_list( struct n
 
 static int lance_set_mac_address( struct net_device *dev, void *addr )
 
-{	struct lance_private *lp = (struct lance_private *)dev->priv;
+{	struct lance_private *lp = netdev_priv(dev);
 	struct sockaddr *saddr = addr;
 	int i;
 
diff -purN linux-post-2.6.4-20040313/drivers/net/bmac.c linux-post-2.6.4-20040314/drivers/net/bmac.c
--- linux-post-2.6.4-20040313/drivers/net/bmac.c	2004-02-05 16:39:14.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/bmac.c	2004-03-02 22:04:18.000000000 +0000
@@ -226,7 +226,7 @@ volatile unsigned short bmread(struct ne
 static void
 bmac_enable_and_reset_chip(struct net_device *dev)
 {
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	volatile struct dbdma_regs *rd = bp->rx_dma;
 	volatile struct dbdma_regs *td = bp->tx_dma;
 
@@ -310,7 +310,7 @@ bmac_mif_write(struct net_device *dev, u
 static void
 bmac_init_registers(struct net_device *dev)
 {
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	volatile unsigned short regValue;
 	unsigned short *pWord16;
 	int i;
@@ -405,7 +405,7 @@ bmac_enable_interrupts(struct net_device
 static void
 bmac_start_chip(struct net_device *dev)
 {
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	volatile struct dbdma_regs *rd = bp->rx_dma;
 	unsigned short	oldConfig;
 
@@ -425,7 +425,7 @@ static void
 bmac_init_phy(struct net_device *dev)
 {
 	unsigned int addr;
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 
 	printk(KERN_DEBUG "phy registers:");
 	for (addr = 0; addr < 32; ++addr) {
@@ -458,7 +458,7 @@ static void bmac_init_chip(struct net_de
 static int bmac_suspend(struct macio_dev *mdev, u32 state)
 {
 	struct net_device* dev = macio_get_drvdata(mdev);	
-	struct bmac_data *bp = dev->priv;	
+	struct bmac_data *bp = netdev_priv(dev);
 	unsigned long flags;
 	unsigned short config;
 	int i;
@@ -508,7 +508,7 @@ static int bmac_suspend(struct macio_dev
 static int bmac_resume(struct macio_dev *mdev)
 {
 	struct net_device* dev = macio_get_drvdata(mdev);	
-	struct bmac_data *bp = dev->priv;	
+	struct bmac_data *bp = netdev_priv(dev);
 
 	/* see if this is enough */
 	if (bp->opened)
@@ -525,7 +525,7 @@ static int bmac_resume(struct macio_dev 
 
 static int bmac_set_address(struct net_device *dev, void *addr)
 {
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	unsigned char *p = addr;
 	unsigned short *pWord16;
 	unsigned long flags;
@@ -550,7 +550,7 @@ static int bmac_set_address(struct net_d
 
 static inline void bmac_set_timeout(struct net_device *dev)
 {
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	unsigned long flags;
 
 	spin_lock_irqsave(&bp->lock, flags);
@@ -656,7 +656,7 @@ bmac_init_rx_ring(struct bmac_data *bp)
 
 static int bmac_transmit_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	volatile struct dbdma_regs *td = bp->tx_dma;
 	int i;
 
@@ -692,7 +692,7 @@ static int rxintcount;
 static irqreturn_t bmac_rxdma_intr(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) dev_id;
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	volatile struct dbdma_regs *rd = bp->rx_dma;
 	volatile struct dbdma_cmd *cp;
 	int i, nb, stat;
@@ -769,7 +769,7 @@ static int txintcount;
 static irqreturn_t bmac_txdma_intr(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) dev_id;
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	volatile struct dbdma_cmd *cp;
 	int stat;
 	unsigned long flags;
@@ -822,7 +822,7 @@ static irqreturn_t bmac_txdma_intr(int i
 
 static struct net_device_stats *bmac_stats(struct net_device *dev)
 {
-	struct bmac_data *p = (struct bmac_data *) dev->priv;
+	struct bmac_data *p = netdev_priv(dev);
 
 	return &p->stats;
 }
@@ -995,7 +995,7 @@ bmac_remove_multi(struct net_device *dev
 static void bmac_set_multicast(struct net_device *dev)
 {
 	struct dev_mc_list *dmi;
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	int num_addrs = dev->mc_count;
 	unsigned short rx_cfg;
 	int i;
@@ -1086,7 +1086,7 @@ static int miscintcount;
 static irqreturn_t bmac_misc_intr(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) dev_id;
-	struct bmac_data *bp = (struct bmac_data *)dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	unsigned int status = bmread(dev, STATUS);
 	if (miscintcount++ < 10) {
 		XXDEBUG(("bmac_misc_intr\n"));
@@ -1232,7 +1232,7 @@ bmac_get_station_address(struct net_devi
 
 static void bmac_reset_and_enable(struct net_device *dev)
 {
-	struct bmac_data *bp = dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	unsigned long flags;
 	struct sk_buff *skb;
 	unsigned char *data;
@@ -1288,7 +1288,7 @@ static int __devinit bmac_probe(struct m
 		return -ENOMEM;
 	}
 		
-	bp = (struct bmac_data *) dev->priv;
+	bp = netdev_priv(dev);
 	SET_MODULE_OWNER(dev);
 	SET_NETDEV_DEV(dev, &mdev->ofdev.dev);
 	macio_set_drvdata(mdev, dev);
@@ -1408,7 +1408,7 @@ out_free:
 
 static int bmac_open(struct net_device *dev)
 {
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	/* XXDEBUG(("bmac: enter open\n")); */
 	/* reset the chip */
 	bp->opened = 1;
@@ -1420,7 +1420,7 @@ static int bmac_open(struct net_device *
 
 static int bmac_close(struct net_device *dev)
 {
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	volatile struct dbdma_regs *rd = bp->rx_dma;
 	volatile struct dbdma_regs *td = bp->tx_dma;
 	unsigned short config;
@@ -1469,7 +1469,7 @@ static int bmac_close(struct net_device 
 static void
 bmac_start(struct net_device *dev)
 {
-	struct bmac_data *bp = dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	int i;
 	struct sk_buff *skb;
 	unsigned long flags;
@@ -1495,7 +1495,7 @@ bmac_start(struct net_device *dev)
 static int
 bmac_output(struct sk_buff *skb, struct net_device *dev)
 {
-	struct bmac_data *bp = dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	skb_queue_tail(bp->queue, skb);
 	bmac_start(dev);
 	return 0;
@@ -1504,7 +1504,7 @@ bmac_output(struct sk_buff *skb, struct 
 static void bmac_tx_timeout(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *) data;
-	struct bmac_data *bp = (struct bmac_data *) dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 	volatile struct dbdma_regs *td = bp->tx_dma;
 	volatile struct dbdma_regs *rd = bp->rx_dma;
 	volatile struct dbdma_cmd *cp;
@@ -1630,7 +1630,7 @@ bmac_proc_info(char *buffer, char **star
 static int __devexit bmac_remove(struct macio_dev *mdev)
 {
 	struct net_device *dev = macio_get_drvdata(mdev);
-	struct bmac_data *bp = dev->priv;
+	struct bmac_data *bp = netdev_priv(dev);
 
 	unregister_netdev(dev);
 
diff -purN linux-post-2.6.4-20040313/drivers/net/cs89x0.c linux-post-2.6.4-20040314/drivers/net/cs89x0.c
--- linux-post-2.6.4-20040313/drivers/net/cs89x0.c	2004-01-10 14:53:07.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/cs89x0.c	2004-03-02 22:55:07.000000000 +0000
@@ -399,7 +399,7 @@ get_eeprom_cksum(int off, int len, int *
 static int __init
 cs89x0_probe1(struct net_device *dev, int ioaddr, int modular)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	static unsigned version_printed;
 	int i;
 	unsigned rev_type = 0;
@@ -735,7 +735,7 @@ out1:
 static void
 get_dma_channel(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (lp->dma) {
 		dev->dma = lp->dma;
@@ -757,7 +757,7 @@ get_dma_channel(struct net_device *dev)
 static void
 write_dma(struct net_device *dev, int chip_type, int dma)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	if ((lp->isa_config & ANY_ISA_DMA) == 0)
 		return;
 	if (chip_type == CS8900) {
@@ -770,7 +770,7 @@ write_dma(struct net_device *dev, int ch
 static void
 set_dma_cfg(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (lp->use_dma) {
 		if ((lp->isa_config & ANY_ISA_DMA) == 0) {
@@ -793,7 +793,7 @@ set_dma_cfg(struct net_device *dev)
 static int
 dma_bufcfg(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	if (lp->use_dma)
 		return (lp->isa_config & ANY_ISA_DMA)? RX_DMA_ENBL : 0;
 	else
@@ -804,7 +804,7 @@ static int
 dma_busctl(struct net_device *dev)
 {
 	int retval = 0;
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	if (lp->use_dma) {
 		if (lp->isa_config & ANY_ISA_DMA)
 			retval |= RESET_RX_DMA; /* Reset the DMA pointer */
@@ -820,7 +820,7 @@ dma_busctl(struct net_device *dev)
 static void
 dma_rx(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	struct sk_buff *skb;
 	int status, length;
 	unsigned char *bp = lp->rx_dma_ptr;
@@ -882,7 +882,7 @@ skip_this_frame:
 
 void  __init reset_chip(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int reset_start_time;
 
@@ -912,7 +912,7 @@ void  __init reset_chip(struct net_devic
 static void
 control_dc_dc(struct net_device *dev, int on_not_off)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned int selfcontrol;
 	int timenow = jiffies;
 	/* control the DC to DC convertor in the SelfControl register.  
@@ -940,7 +940,7 @@ control_dc_dc(struct net_device *dev, in
 static int
 detect_tp(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int timenow = jiffies;
 	int fdx;
 
@@ -1055,7 +1055,7 @@ send_test_pkt(struct net_device *dev)
 static int
 detect_aui(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (net_debug > 1) printk("%s: Attempting AUI\n", dev->name);
 	control_dc_dc(dev, 0);
@@ -1071,7 +1071,7 @@ detect_aui(struct net_device *dev)
 static int
 detect_bnc(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (net_debug > 1) printk("%s: Attempting BNC\n", dev->name);
 	control_dc_dc(dev, 1);
@@ -1117,7 +1117,7 @@ write_irq(struct net_device *dev, int ch
 static int
 net_open(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int result = 0;
 	int i;
 	int ret;
@@ -1358,7 +1358,7 @@ static void net_timeout(struct net_devic
 
 static int net_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (net_debug > 3) {
 		printk("%s: sent %d byte packet of type %x\n",
@@ -1419,7 +1419,7 @@ static irqreturn_t net_interrupt(int irq
  	int handled = 0;
 
 	ioaddr = dev->base_addr;
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 
 	/* we MUST read all the events out of the ISQ, otherwise we'll never
            get interrupted again.  As a consequence, we can't have any limit
@@ -1517,7 +1517,7 @@ count_rx_errors(int status, struct net_l
 static void
 net_rx(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	struct sk_buff *skb;
 	int status, length;
 
@@ -1573,7 +1573,7 @@ static void release_dma_buff(struct net_
 static int
 net_close(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	netif_stop_queue(dev);
 	
@@ -1600,7 +1600,7 @@ net_close(struct net_device *dev)
 static struct net_device_stats *
 net_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	spin_lock_irqsave(&lp->lock, flags);
@@ -1614,7 +1614,7 @@ net_get_stats(struct net_device *dev)
 
 static void set_multicast_list(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	spin_lock_irqsave(&lp->lock, flags);
@@ -1758,7 +1758,7 @@ init_module(void)
 
 	dev->irq = irq;
 	dev->base_addr = io;
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 
 #if ALLOW_DMA
 	if (use_dma) {
diff -purN linux-post-2.6.4-20040313/drivers/net/declance.c linux-post-2.6.4-20040314/drivers/net/declance.c
--- linux-post-2.6.4-20040313/drivers/net/declance.c	2004-01-10 15:29:00.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/declance.c	2004-03-03 20:29:44.000000000 +0000
@@ -433,7 +433,7 @@ void cp_from_buf(const int type, void *t
 /* Setup the Lance Rx and Tx rings */
 static void lance_init_ring(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib;
 	int leptr;
 	int i;
@@ -530,7 +530,7 @@ static int init_restart_lance(struct lan
 
 static int lance_rx(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib;
 	volatile struct lance_rx_desc *rd = 0;
 	unsigned char bits;
@@ -617,7 +617,7 @@ static int lance_rx(struct net_device *d
 
 static void lance_tx(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib;
 	volatile struct lance_regs *ll = lp->ll;
 	volatile struct lance_tx_desc *td;
@@ -709,7 +709,7 @@ static irqreturn_t
 lance_interrupt(const int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) dev_id;
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 	int csr0;
 
@@ -757,7 +757,7 @@ struct net_device *last_dev = 0;
 static int lance_open(struct net_device *dev)
 {
 	volatile struct lance_init_block *ib = (struct lance_init_block *) (dev->mem_start);
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 	int status = 0;
 
@@ -822,7 +822,7 @@ static int lance_open(struct net_device 
 
 static int lance_close(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 
 	netif_stop_queue(dev);
@@ -856,7 +856,7 @@ static int lance_close(struct net_device
 
 static inline int lance_reset(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 	int status;
 
@@ -873,7 +873,7 @@ static inline int lance_reset(struct net
 
 static void lance_tx_timeout(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 
 	printk(KERN_ERR "%s: transmit timed out, status %04x, reset\n",
@@ -884,7 +884,7 @@ static void lance_tx_timeout(struct net_
 
 static int lance_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_regs *ll = lp->ll;
 	volatile struct lance_init_block *ib = (struct lance_init_block *) (dev->mem_start);
 	int entry, skblen, len;
@@ -936,7 +936,7 @@ static int lance_start_xmit(struct sk_bu
 
 static struct net_device_stats *lance_get_stats(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -982,7 +982,7 @@ static void lance_load_multicast(struct 
 
 static void lance_set_multicast(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib;
 	volatile struct lance_regs *ll = lp->ll;
 
@@ -1048,7 +1048,7 @@ static int __init dec_lance_init(const i
 	 * alloc_etherdev ensures the data structures used by the LANCE
 	 * are aligned.
 	 */
-	lp = (struct lance_private *) dev->priv;
+	lp = netdev_priv(dev);
 	spin_lock_init(&lp->lock);
 
 	lp->type = type;
@@ -1287,7 +1287,7 @@ static void __exit dec_lance_cleanup(voi
 {
 	while (root_lance_dev) {
 		struct net_device *dev = root_lance_dev;
-		struct lance_private *lp = (struct lance_private *)dev->priv;
+		struct lance_private *lp = netdev_priv(dev);
 		unregister_netdev(dev);
 #ifdef CONFIG_TC
 		if (lp->slot >= 0)
diff -purN linux-post-2.6.4-20040313/drivers/net/e100.c linux-post-2.6.4-20040314/drivers/net/e100.c
--- linux-post-2.6.4-20040313/drivers/net/e100.c	2004-03-04 17:30:48.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/e100.c	2004-03-12 23:32:31.000000000 +0000
@@ -158,7 +158,7 @@
 
 
 #define DRV_NAME		"e100"
-#define DRV_VERSION		"3.0.16"
+#define DRV_VERSION		"3.0.17"
 #define DRV_DESCRIPTION		"Intel(R) PRO/100 Network Driver"
 #define DRV_COPYRIGHT		"Copyright(c) 1999-2004 Intel Corporation"
 #define PFX			DRV_NAME ": "
@@ -1285,6 +1285,7 @@ static inline int e100_tx_clean(struct n
 				le16_to_cpu(cb->u.tcb.tbd.size),
 				PCI_DMA_TODEVICE);
 			dev_kfree_skb_any(cb->skb);
+			cb->skb = NULL;
 			tx_cleaned = 1;
 		}
 		cb->status = 0;
@@ -1347,6 +1348,7 @@ static int e100_alloc_cbs(struct nic *ni
 		cb->dma_addr = nic->cbs_dma_addr + i * sizeof(struct cb);
 		cb->link = cpu_to_le32(nic->cbs_dma_addr +
 			((i+1) % count) * sizeof(struct cb));
+		cb->skb = NULL;
 	}
 
 	nic->cb_to_use = nic->cb_to_send = nic->cb_to_clean = nic->cbs;
diff -purN linux-post-2.6.4-20040313/drivers/net/eepro.c linux-post-2.6.4-20040314/drivers/net/eepro.c
--- linux-post-2.6.4-20040313/drivers/net/eepro.c	2004-01-10 14:52:24.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/eepro.c	2004-03-03 20:06:42.000000000 +0000
@@ -662,7 +662,7 @@ static void eepro_recalc (struct net_dev
 {
 	struct eepro_local *	lp;
 
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 	lp->xmt_ram = RAM_SIZE - lp->rcv_ram;
 
 	if (lp->eepro == LAN595FX_10ISA) {
@@ -680,9 +680,9 @@ static void eepro_recalc (struct net_dev
 }
 
 /* prints boot-time info */
-static void eepro_print_info (struct net_device *dev)
+static void __init eepro_print_info (struct net_device *dev)
 {
-	struct eepro_local *	lp = dev->priv;
+	struct eepro_local *	lp = netdev_priv(dev);
 	int			i;
 	const char *		ifmap[] = {"AUI", "10Base2", "10BaseT"};
 
@@ -769,7 +769,7 @@ static int __init eepro_probe1(struct ne
 	if ((inb(ioaddr + ID_REG) & R_ROBIN_BITS) != (counter + 0x40))
 		goto exit;
 
-	lp = (struct eepro_local *)dev->priv;
+	lp = netdev_priv(dev);
 	memset(lp, 0, sizeof(struct eepro_local));
 	lp->xmt_bar = XMT_BAR_PRO;
 	lp->xmt_lower_limit_reg = XMT_LOWER_LIMIT_REG_PRO;
@@ -932,7 +932,7 @@ static int eepro_open(struct net_device 
 	unsigned short temp_reg, old8, old9;
 	int irqMask;
 	int i, ioaddr = dev->base_addr;
-	struct eepro_local *lp = (struct eepro_local *)dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 
 	if (net_debug > 3)
 		printk(KERN_DEBUG "%s: entering eepro_open routine.\n", dev->name);
@@ -1106,7 +1106,7 @@ static int eepro_open(struct net_device 
 
 static void eepro_tx_timeout (struct net_device *dev)
 {
-	struct eepro_local *lp = (struct eepro_local *) dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	/* if (net_debug > 1) */
@@ -1122,7 +1122,7 @@ static void eepro_tx_timeout (struct net
 
 static int eepro_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct eepro_local *lp = (struct eepro_local *)dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 	unsigned long flags;
 	int ioaddr = dev->base_addr;
 	short length = skb->len;
@@ -1187,7 +1187,7 @@ eepro_interrupt(int irq, void *dev_id, s
                 return IRQ_NONE;
         }
 
-	lp = (struct eepro_local *)dev->priv;
+	lp = netdev_priv(dev);
 
         spin_lock(&lp->lock);
 
@@ -1235,7 +1235,7 @@ eepro_interrupt(int irq, void *dev_id, s
 
 static int eepro_close(struct net_device *dev)
 {
-	struct eepro_local *lp = (struct eepro_local *)dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	short temp_reg;
 
@@ -1280,7 +1280,7 @@ static int eepro_close(struct net_device
 static struct net_device_stats *
 eepro_get_stats(struct net_device *dev)
 {
-	struct eepro_local *lp = (struct eepro_local *)dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -1290,7 +1290,7 @@ eepro_get_stats(struct net_device *dev)
 static void
 set_multicast_list(struct net_device *dev)
 {
-	struct eepro_local *lp = (struct eepro_local *)dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 	short ioaddr = dev->base_addr;
 	unsigned short mode;
 	struct dev_mc_list *dmi=dev->mc_list;
@@ -1424,7 +1424,7 @@ read_eeprom(int ioaddr, int location, st
 {
 	int i;
 	unsigned short retval = 0;
-	struct eepro_local *lp = dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 	short ee_addr = ioaddr + lp->eeprom_reg;
 	int read_cmd = location | EE_READ_CMD;
 	short ctrl_val = EECS ;
@@ -1468,7 +1468,7 @@ read_eeprom(int ioaddr, int location, st
 static int
 hardware_send_packet(struct net_device *dev, void *buf, short length)
 {
-	struct eepro_local *lp = (struct eepro_local *)dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 	short ioaddr = dev->base_addr;
 	unsigned status, tx_available, last, end;
 
@@ -1553,7 +1553,7 @@ hardware_send_packet(struct net_device *
 static void
 eepro_rx(struct net_device *dev)
 {
-	struct eepro_local *lp = (struct eepro_local *)dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 	short ioaddr = dev->base_addr;
 	short boguscount = 20;
 	short rcv_car = lp->rx_start;
@@ -1651,7 +1651,7 @@ eepro_rx(struct net_device *dev)
 static void
 eepro_transmit_interrupt(struct net_device *dev)
 {
-	struct eepro_local *lp = (struct eepro_local *)dev->priv;
+	struct eepro_local *lp = netdev_priv(dev);
 	short ioaddr = dev->base_addr;
 	short boguscount = 25; 
 	short xmt_status;
diff -purN linux-post-2.6.4-20040313/drivers/net/eepro100.c linux-post-2.6.4-20040314/drivers/net/eepro100.c
--- linux-post-2.6.4-20040313/drivers/net/eepro100.c	2004-01-23 04:00:41.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/eepro100.c	2004-03-13 14:11:07.000000000 +0000
@@ -856,7 +856,7 @@ static int __devinit speedo_found1(struc
 
 	dev->irq = pdev->irq;
 
-	sp = dev->priv;
+	sp = netdev_priv(dev);
 	sp->pdev = pdev;
 	sp->msg_enable = DEBUG;
 	sp->acpi_pwr = acpi_idle_state;
@@ -1015,7 +1015,7 @@ static void mdio_write(struct net_device
 static int
 speedo_open(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int retval;
 
@@ -1102,7 +1102,7 @@ speedo_open(struct net_device *dev)
 /* Start the chip hardware after a full reset. */
 static void speedo_resume(struct net_device *dev)
 {
-	struct speedo_private *sp = dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	/* Start with a Tx threshold of 256 (0x..20.... 8 byte units). */
@@ -1182,7 +1182,7 @@ static void speedo_resume(struct net_dev
 static void
 speedo_rx_soft_reset(struct net_device *dev)
 {
-	struct speedo_private *sp = dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	struct RxFD *rfd;
 	long ioaddr;
 
@@ -1214,7 +1214,7 @@ speedo_rx_soft_reset(struct net_device *
 static void speedo_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int phy_num = sp->phy[0] & 0x1f;
 
@@ -1259,7 +1259,7 @@ static void speedo_timer(unsigned long d
 
 static void speedo_show_state(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	int i;
 
 	if (netif_msg_pktdata(sp)) {
@@ -1302,7 +1302,7 @@ static void speedo_show_state(struct net
 static void
 speedo_init_rx_ring(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	struct RxFD *rxf, *last_rxf = NULL;
 	dma_addr_t last_rxf_dma = 0 /* to shut up the compiler */;
 	int i;
@@ -1350,7 +1350,7 @@ speedo_init_rx_ring(struct net_device *d
 
 static void speedo_purge_tx(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	int entry;
 
 	while ((int)(sp->cur_tx - sp->dirty_tx) > 0) {
@@ -1382,7 +1382,7 @@ static void speedo_purge_tx(struct net_d
 
 static void reset_mii(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 
 	/* Reset the MII transceiver, suggested by Fred Young @ scalable.com. */
 	if ((sp->phy[0] & 0x8000) == 0) {
@@ -1405,7 +1405,7 @@ static void reset_mii(struct net_device 
 
 static void speedo_tx_timeout(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int status = inw(ioaddr + SCBStatus);
 	unsigned long flags;
@@ -1467,7 +1467,7 @@ static void speedo_tx_timeout(struct net
 static int
 speedo_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int entry;
 
@@ -1538,7 +1538,7 @@ speedo_start_xmit(struct sk_buff *skb, s
 static void speedo_tx_buffer_gc(struct net_device *dev)
 {
 	unsigned int dirty_tx;
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 
 	dirty_tx = sp->dirty_tx;
 	while ((int)(sp->cur_tx - dirty_tx) > 0) {
@@ -1605,7 +1605,7 @@ static irqreturn_t speedo_interrupt(int 
 	unsigned int handled = 0;
 
 	ioaddr = dev->base_addr;
-	sp = (struct speedo_private *)dev->priv;
+	sp = netdev_priv(dev);
 
 #ifndef final_version
 	/* A lock to prevent simultaneous entry on SMP machines. */
@@ -1697,7 +1697,7 @@ static irqreturn_t speedo_interrupt(int 
 
 static inline struct RxFD *speedo_rx_alloc(struct net_device *dev, int entry)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	struct RxFD *rxf;
 	struct sk_buff *skb;
 	/* Get a fresh skbuff to replace the consumed one. */
@@ -1724,7 +1724,7 @@ static inline struct RxFD *speedo_rx_all
 static inline void speedo_rx_link(struct net_device *dev, int entry,
 								  struct RxFD *rxf, dma_addr_t rxf_dma)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	rxf->status = cpu_to_le32(0xC0000001); 	/* '1' for driver use only. */
 	rxf->link = 0;			/* None yet. */
 	rxf->count = cpu_to_le32(PKT_BUF_SZ << 16);
@@ -1738,7 +1738,7 @@ static inline void speedo_rx_link(struct
 
 static int speedo_refill_rx_buf(struct net_device *dev, int force)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	int entry;
 	struct RxFD *rxf;
 
@@ -1780,7 +1780,7 @@ static int speedo_refill_rx_buf(struct n
 
 static void speedo_refill_rx_buffers(struct net_device *dev, int force)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 
 	/* Refill the RX ring. */
 	while ((int)(sp->cur_rx - sp->dirty_rx) > 0 &&
@@ -1790,7 +1790,7 @@ static void speedo_refill_rx_buffers(str
 static int
 speedo_rx(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	int entry = sp->cur_rx % RX_RING_SIZE;
 	int rx_work_limit = sp->dirty_rx + RX_RING_SIZE - sp->cur_rx;
 	int alloc_ok = 1;
@@ -1904,7 +1904,7 @@ static int
 speedo_close(struct net_device *dev)
 {
 	long ioaddr = dev->base_addr;
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	int i;
 
 	netdevice_stop(dev);
@@ -1982,7 +1982,7 @@ speedo_close(struct net_device *dev)
 static struct net_device_stats *
 speedo_get_stats(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	/* Update only if the previous dump finished. */
@@ -2015,7 +2015,7 @@ speedo_get_stats(struct net_device *dev)
 static int netdev_ethtool_ioctl(struct net_device *dev, void *useraddr)
 {
 	u32 ethcmd;
-	struct speedo_private *sp = dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 		
 	if (copy_from_user(&ethcmd, useraddr, sizeof(ethcmd)))
 		return -EFAULT;
@@ -2090,7 +2090,7 @@ static int netdev_ethtool_ioctl(struct n
 
 static int speedo_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	struct mii_ioctl_data *data = (struct mii_ioctl_data *)&rq->ifr_data;
 	int phy = sp->phy[0] & 0x1f;
 	int saved_acpi;
@@ -2141,7 +2141,7 @@ static int speedo_ioctl(struct net_devic
 */
 static void set_rx_mode(struct net_device *dev)
 {
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	struct descriptor *last_cmd;
 	char new_rx_mode;
@@ -2333,7 +2333,7 @@ static void set_rx_mode(struct net_devic
 static int eepro100_suspend(struct pci_dev *pdev, u32 state)
 {
 	struct net_device *dev = pci_get_drvdata (pdev);
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	pci_save_state(pdev, sp->pm_state);
@@ -2353,7 +2353,7 @@ static int eepro100_suspend(struct pci_d
 static int eepro100_resume(struct pci_dev *pdev)
 {
 	struct net_device *dev = pci_get_drvdata (pdev);
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	pci_restore_state(pdev, sp->pm_state);
@@ -2383,7 +2383,7 @@ static int eepro100_resume(struct pci_de
 static void __devexit eepro100_remove_one (struct pci_dev *pdev)
 {
 	struct net_device *dev = pci_get_drvdata (pdev);
-	struct speedo_private *sp = (struct speedo_private *)dev->priv;
+	struct speedo_private *sp = netdev_priv(dev);
 	
 	unregister_netdev(dev);
 
diff -purN linux-post-2.6.4-20040313/drivers/net/eexpress.c linux-post-2.6.4-20040314/drivers/net/eexpress.c
--- linux-post-2.6.4-20040313/drivers/net/eexpress.c	2004-01-10 14:52:33.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/eexpress.c	2004-03-03 20:07:35.000000000 +0000
@@ -452,7 +452,7 @@ static int eexp_open(struct net_device *
 {
 	int ret;
 	unsigned short ioaddr = dev->base_addr;
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 #if NET_DEBUG > 6
 	printk(KERN_DEBUG "%s: eexp_open()\n", dev->name);
@@ -515,7 +515,7 @@ static int eexp_open(struct net_device *
 static int eexp_close(struct net_device *dev)
 {
 	unsigned short ioaddr = dev->base_addr;
-	struct net_local *lp = dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	int irq = dev->irq;
 
@@ -541,7 +541,7 @@ static int eexp_close(struct net_device 
 
 static struct net_device_stats *eexp_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -553,7 +553,7 @@ static struct net_device_stats *eexp_sta
 
 static void unstick_cu(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short ioaddr = dev->base_addr;
 
 	if (lp->started)
@@ -627,7 +627,7 @@ static void unstick_cu(struct net_device
 
 static void eexp_timeout(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 #ifdef CONFIG_SMP
 	unsigned long flags;
 #endif
@@ -667,7 +667,7 @@ static void eexp_timeout(struct net_devi
  */
 static int eexp_xmit(struct sk_buff *buf, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	short length = buf->len;
 #ifdef CONFIG_SMP
 	unsigned long flags;
@@ -728,7 +728,7 @@ static unsigned short eexp_start_irq(str
 				     unsigned short status)
 {
 	unsigned short ack_cmd = SCB_ack(status);
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short ioaddr = dev->base_addr;
 	if ((dev->flags & IFF_UP) && !(lp->started & STARTED_CU)) {
 		short diag_status, tdr_status;
@@ -806,7 +806,7 @@ static irqreturn_t eexp_irq(int irq, voi
 		return IRQ_NONE;
 	}
 
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 	ioaddr = dev->base_addr;
 
 	spin_lock(&lp->lock);
@@ -925,7 +925,7 @@ static void eexp_hw_set_interface(struct
 
 static void eexp_hw_rx_pio(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short rx_block = lp->rx_ptr;
 	unsigned short boguscount = lp->num_rx_bufs;
 	unsigned short ioaddr = dev->base_addr;
@@ -1022,7 +1022,7 @@ static void eexp_hw_rx_pio(struct net_de
 static void eexp_hw_tx_pio(struct net_device *dev, unsigned short *buf,
 		       unsigned short len)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short ioaddr = dev->base_addr;
 
 	if (LOCKUP16 || lp->width) {
@@ -1090,7 +1090,7 @@ static int __init eexp_hw_probe(struct n
 	unsigned int memory_size;
 	int i;
 	unsigned short xsum = 0;
-	struct net_local *lp = dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	printk("%s: EtherExpress 16 at %#x ",dev->name,ioaddr);
 
@@ -1262,7 +1262,7 @@ static unsigned short __init eexp_hw_rea
 
 static unsigned short eexp_hw_lasttxstat(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short tx_block = lp->tx_reap;
 	unsigned short status;
 
@@ -1332,7 +1332,7 @@ static unsigned short eexp_hw_lasttxstat
 
 static void eexp_hw_txrestart(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short ioaddr = dev->base_addr;
 
 	lp->last_tx_restart = lp->tx_link;
@@ -1377,7 +1377,7 @@ static void eexp_hw_txrestart(struct net
 
 static void eexp_hw_txinit(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short tx_block = TX_BUF_START;
 	unsigned short curtbuf;
 	unsigned short ioaddr = dev->base_addr;
@@ -1419,7 +1419,7 @@ static void eexp_hw_txinit(struct net_de
 
 static void eexp_hw_rxinit(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short rx_block = lp->rx_buf_start;
 	unsigned short ioaddr = dev->base_addr;
 
@@ -1478,7 +1478,7 @@ static void eexp_hw_rxinit(struct net_de
 
 static void eexp_hw_init586(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned short ioaddr = dev->base_addr;
 	int i;
 
@@ -1639,7 +1639,7 @@ static void
 eexp_set_multicast(struct net_device *dev)
 {
         unsigned short ioaddr = dev->base_addr;
-        struct net_local *lp = (struct net_local *)dev->priv;
+        struct net_local *lp = netdev_priv(dev);
         int kick = 0, i;
         if ((dev->flags & IFF_PROMISC) != lp->was_promisc) {
                 outw(CONF_PROMISC & ~31, ioaddr+SM_PTR);
diff -purN linux-post-2.6.4-20040313/drivers/net/eth16i.c linux-post-2.6.4-20040314/drivers/net/eth16i.c
--- linux-post-2.6.4-20040313/drivers/net/eth16i.c	2004-01-10 14:52:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/eth16i.c	2004-03-02 22:13:00.000000000 +0000
@@ -486,7 +486,7 @@ out:
 
 static int __init eth16i_probe1(struct net_device *dev, int ioaddr)
 {
-	struct eth16i_local *lp = dev->priv;
+	struct eth16i_local *lp = netdev_priv(dev);
 	static unsigned version_printed;
 	int retval;
 
@@ -950,7 +950,7 @@ static void eth16i_eeprom_cmd(int ioaddr
 
 static int eth16i_open(struct net_device *dev)
 {
-	struct eth16i_local *lp = (struct eth16i_local *)dev->priv;
+	struct eth16i_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	
 	/* Powerup the chip */
@@ -986,7 +986,7 @@ static int eth16i_open(struct net_device
 
 static int eth16i_close(struct net_device *dev)
 {
-	struct eth16i_local *lp = (struct eth16i_local *)dev->priv;
+	struct eth16i_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	eth16i_reset(dev);
@@ -1012,7 +1012,7 @@ static int eth16i_close(struct net_devic
 
 static void eth16i_timeout(struct net_device *dev)
 {
-	struct eth16i_local *lp = (struct eth16i_local *)dev->priv;
+	struct eth16i_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	/* 
 	   If we get here, some higher level has decided that 
@@ -1053,7 +1053,7 @@ static void eth16i_timeout(struct net_de
 
 static int eth16i_tx(struct sk_buff *skb, struct net_device *dev)
 {
-	struct eth16i_local *lp = (struct eth16i_local *)dev->priv;
+	struct eth16i_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int status = 0;
 	ushort length = skb->len;
@@ -1130,7 +1130,7 @@ static int eth16i_tx(struct sk_buff *skb
 
 static void eth16i_rx(struct net_device *dev)
 {
-	struct eth16i_local *lp = (struct eth16i_local *)dev->priv;
+	struct eth16i_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int boguscount = MAX_RX_LOOP;
 
@@ -1232,7 +1232,7 @@ static irqreturn_t eth16i_interrupt(int 
 	int handled = 0;
 
 	ioaddr = dev->base_addr;
-	lp = (struct eth16i_local *)dev->priv;
+	lp = netdev_priv(dev);
 
 	/* Turn off all interrupts from adapter */
 	outw(ETH16I_INTR_OFF, ioaddr + TX_INTR_REG);
@@ -1340,7 +1340,7 @@ static void eth16i_skip_packet(struct ne
 
 static void eth16i_reset(struct net_device *dev)
 {
-	struct eth16i_local *lp = (struct eth16i_local *)dev->priv;
+	struct eth16i_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	if(eth16i_debug > 1) 
@@ -1372,7 +1372,7 @@ static void eth16i_multicast(struct net_
 
 static struct net_device_stats *eth16i_get_stats(struct net_device *dev)
 {
-	struct eth16i_local *lp = (struct eth16i_local *)dev->priv;
+	struct eth16i_local *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
diff -purN linux-post-2.6.4-20040313/drivers/net/ethertap.c linux-post-2.6.4-20040314/drivers/net/ethertap.c
--- linux-post-2.6.4-20040313/drivers/net/ethertap.c	2004-01-10 15:34:03.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/ethertap.c	2004-03-03 18:53:18.000000000 +0000
@@ -121,7 +121,7 @@ out:
 
 static int ethertap_open(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local*)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (ethertap_debug > 2)
 		printk(KERN_DEBUG "%s: Doing ethertap_open()...", dev->name);
@@ -150,7 +150,7 @@ static unsigned ethertap_mc_hash(__u8 *d
 static void set_multicast_list(struct net_device *dev)
 {
 	unsigned groups = ~0;
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if (!(dev->flags&(IFF_NOARP|IFF_PROMISC|IFF_ALLMULTI))) {
 		struct dev_mc_list *dmi;
@@ -176,7 +176,7 @@ static void set_multicast_list(struct ne
  
 static int ethertap_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 #ifdef CONFIG_ETHERTAP_MC
 	struct ethhdr *eth = (struct ethhdr*)skb->data;
 #endif
@@ -234,7 +234,7 @@ static int ethertap_start_xmit(struct sk
 
 static __inline__ int ethertap_rx_skb(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 #ifdef CONFIG_ETHERTAP_MC
 	struct ethhdr *eth = (struct ethhdr*)(skb->data + 2);
 #endif
@@ -320,7 +320,7 @@ static void ethertap_rx(struct sock *sk,
 
 static int ethertap_close(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	struct sock *sk = lp->nl;
 
 	if (ethertap_debug > 2)
@@ -338,7 +338,7 @@ static int ethertap_close(struct net_dev
 
 static struct net_device_stats *ethertap_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
diff -purN linux-post-2.6.4-20040313/drivers/net/fc/iph5526.c linux-post-2.6.4-20040314/drivers/net/fc/iph5526.c
--- linux-post-2.6.4-20040313/drivers/net/fc/iph5526.c	2004-01-11 00:16:53.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/fc/iph5526.c	2004-03-02 23:30:14.000000000 +0000
@@ -238,7 +238,7 @@ int __init iph5526_probe(struct net_devi
 
 static int __init iph5526_probe_pci(struct net_device *dev)
 {
-	struct fc_info *fi = (struct fc_info *)dev->priv;
+	struct fc_info *fi = netdev_priv(dev);
 	fi->dev = dev;
 	dev->base_addr = fi->base_addr;
 	dev->irq = fi->irq;
@@ -2908,7 +2908,7 @@ static int iph5526_close(struct net_devi
 
 static void iph5526_timeout(struct net_device *dev)
 {
-	struct fc_info *fi = (struct fc_info*)dev->priv;
+	struct fc_info *fi = netdev_priv(dev);
 	printk(KERN_WARNING "%s: timed out on send.\n", dev->name);
 	fi->fc_stats.rx_dropped++;
 	dev->trans_start = jiffies;
@@ -2917,7 +2917,7 @@ static void iph5526_timeout(struct net_d
 
 static int iph5526_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct fc_info *fi = (struct fc_info*)dev->priv;
+	struct fc_info *fi = netdev_priv(dev);
 	int status = 0;
 	short type = 0;
 	u_long flags;
@@ -3688,7 +3688,7 @@ int count = 0, j;
 
 static struct net_device_stats * iph5526_get_stats(struct net_device *dev)
 {	
-struct fc_info *fi = (struct fc_info*)dev->priv; 
+struct fc_info *fi = netdev_priv(dev);
 	return (struct net_device_stats *) &fi->fc_stats;
 }
 
diff -purN linux-post-2.6.4-20040313/drivers/net/fec.c linux-post-2.6.4-20040314/drivers/net/fec.c
--- linux-post-2.6.4-20040313/drivers/net/fec.c	2004-01-11 00:15:01.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/fec.c	2004-03-02 22:53:25.000000000 +0000
@@ -269,7 +269,7 @@ fec_enet_start_xmit(struct sk_buff *skb,
 	volatile fec_t	*fecp;
 	volatile cbd_t	*bdp;
 
-	fep = dev->priv;
+	fep = netdev_priv(dev);
 	fecp = (volatile fec_t*)dev->base_addr;
 
 	if (!fep->link) {
@@ -349,7 +349,7 @@ fec_enet_start_xmit(struct sk_buff *skb,
 static void
 fec_timeout(struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 
 	printk("%s: transmit timed out.\n", dev->name);
 	fep->stats.tx_errors++;
@@ -445,7 +445,7 @@ fec_enet_tx(struct net_device *dev)
 	volatile cbd_t	*bdp;
 	struct	sk_buff	*skb;
 
-	fep = dev->priv;
+	fep = netdev_priv(dev);
 	spin_lock(&fep->lock);
 	bdp = fep->dirty_tx;
 
@@ -524,7 +524,7 @@ fec_enet_rx(struct net_device *dev)
 	ushort	pkt_len;
 	__u8 *data;
 
-	fep = dev->priv;
+	fep = netdev_priv(dev);
 	fecp = (volatile fec_t*)dev->base_addr;
 
 	/* First, grab all of the stats for the incoming packet.
@@ -645,7 +645,7 @@ fec_enet_mii(struct net_device *dev)
 	mii_list_t	*mip;
 	uint		mii_reg;
 
-	fep = (struct fec_enet_private *)dev->priv;
+	fep = netdev_priv(dev);
 	ep = fec_hwp;
 	mii_reg = ep->fec_mii_data;
 	
@@ -675,7 +675,7 @@ mii_queue(struct net_device *dev, int re
 
 	/* Add PHY address to register command.
 	*/
-	fep = dev->priv;
+	fep = netdev_priv(dev);
 	regval |= fep->phy_addr << 23;
 
 	retval = 0;
@@ -720,7 +720,7 @@ static void mii_do_cmd(struct net_device
 
 static void mii_parse_sr(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	*s &= ~(PHY_STAT_LINK | PHY_STAT_FAULT | PHY_STAT_ANC);
@@ -735,7 +735,7 @@ static void mii_parse_sr(uint mii_reg, s
 
 static void mii_parse_cr(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	*s &= ~(PHY_CONF_ANE | PHY_CONF_LOOP);
@@ -748,7 +748,7 @@ static void mii_parse_cr(uint mii_reg, s
 
 static void mii_parse_anar(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	*s &= ~(PHY_CONF_SPMASK);
@@ -774,7 +774,7 @@ static void mii_parse_anar(uint mii_reg,
 
 static void mii_parse_lxt970_csr(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	*s &= ~(PHY_STAT_SPMASK);
@@ -841,7 +841,7 @@ static phy_info_t phy_info_lxt970 = {
 
 static void mii_parse_lxt971_sr2(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	*s &= ~(PHY_STAT_SPMASK | PHY_STAT_LINK | PHY_STAT_ANC);
@@ -919,7 +919,7 @@ static phy_info_t phy_info_lxt971 = {
 
 static void mii_parse_qs6612_pcr(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	*s &= ~(PHY_STAT_SPMASK);
@@ -983,7 +983,7 @@ static phy_info_t phy_info_qs6612 = {
 
 static void mii_parse_am79c874_dr(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	*s &= ~(PHY_STAT_SPMASK | PHY_STAT_ANC);
@@ -1280,7 +1280,7 @@ static void __inline__ fec_uncache(unsig
 
 static void mii_display_status(struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	if (!fep->link && !fep->old_link) {
@@ -1316,7 +1316,7 @@ static void mii_display_status(struct ne
 
 static void mii_display_config(struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	volatile uint *s = &(fep->phy_status);
 
 	printk("%s: config: auto-negotiation ", dev->name);
@@ -1347,7 +1347,7 @@ static void mii_display_config(struct ne
 
 static void mii_relink(struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	int duplex;
 
 	fep->link = (fep->phy_status & PHY_STAT_LINK) ? 1 : 0;
@@ -1372,7 +1372,7 @@ static void mii_relink(struct net_device
 
 static void mii_queue_relink(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 
 	INIT_WORK(&fep->phy_task, (void*)mii_relink, dev);
 	schedule_work(&fep->phy_task);
@@ -1380,7 +1380,7 @@ static void mii_queue_relink(uint mii_re
 
 static void mii_queue_config(uint mii_reg, struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 
 	INIT_WORK(&fep->phy_task, (void*)mii_display_config, dev);
 	schedule_work(&fep->phy_task);
@@ -1403,7 +1403,7 @@ mii_discover_phy3(uint mii_reg, struct n
 	struct fec_enet_private *fep;
 	int	i;
 
-	fep = dev->priv;
+	fep = netdev_priv(dev);
 	fep->phy_id |= (mii_reg & 0xffff);
 	printk("fec: PHY @ 0x%x, ID 0x%08x", fep->phy_addr, fep->phy_id);
 
@@ -1431,7 +1431,7 @@ mii_discover_phy(uint mii_reg, struct ne
 	volatile fec_t *fecp;
 	uint phytype;
 
-	fep = dev->priv;
+	fep = netdev_priv(dev);
 	fecp = fec_hwp;
 
 	if (fep->phy_addr < 32) {
@@ -1466,7 +1466,7 @@ mii_link_interrupt(int irq, void * dev_i
 #endif
 {
 	struct	net_device *dev = dev_id;
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 
 	fec_phy_ack_intr();
 
@@ -1482,7 +1482,7 @@ mii_link_interrupt(int irq, void * dev_i
 static int
 fec_enet_open(struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 
 	/* I should reset the ring buffers here, but I don't yet know
 	 * a simple way to do that.
@@ -1531,7 +1531,7 @@ fec_enet_close(struct net_device *dev)
 
 static struct net_device_stats *fec_enet_get_stats(struct net_device *dev)
 {
-	struct fec_enet_private *fep = (struct fec_enet_private *)dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 
 	return &fep->stats;
 }
@@ -1557,7 +1557,7 @@ static void set_multicast_list(struct ne
 	unsigned int i, j, bit, data, crc;
 	unsigned char hash;
 
-	fep = (struct fec_enet_private *)dev->priv;
+	fep = netdev_priv(dev);
 	ep = fec_hwp;
 
 	if (dev->flags&IFF_PROMISC) {
@@ -1643,7 +1643,7 @@ fec_set_mac_address(struct net_device *d
   */
 int __init fec_enet_init(struct net_device *dev)
 {
-	struct fec_enet_private *fep = dev->priv;
+	struct fec_enet_private *fep = netdev_priv(dev);
 	unsigned long	mem_addr;
 	volatile cbd_t	*bdp;
 	cbd_t		*cbd_base;
@@ -1807,7 +1807,7 @@ fec_restart(struct net_device *dev, int 
 
 	fecp = fec_hwp;
 
-	fep = dev->priv;
+	fep = netdev_priv(dev);
 
 	/* Whack a reset.  We should wait for this.
 	*/
@@ -1924,7 +1924,7 @@ fec_stop(struct net_device *dev)
 	struct fec_enet_private *fep;
 
 	fecp = fec_hwp;
-	fep = dev->priv;
+	fep = netdev_priv(dev);
 
 	fecp->fec_x_cntrl = 0x01;	/* Graceful transmit stop */
 
diff -purN linux-post-2.6.4-20040313/drivers/net/forcedeth.c linux-post-2.6.4-20040314/drivers/net/forcedeth.c
--- linux-post-2.6.4-20040313/drivers/net/forcedeth.c	2004-02-05 01:15:27.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/forcedeth.c	2004-03-09 18:53:13.000000000 +0000
@@ -11,6 +11,7 @@
  * countries.
  *
  * Copyright (C) 2003 Manfred Spraul
+ * Copyright (C) 2004 Andrew de Quincey (wol support)
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -28,7 +29,7 @@
  *
  * Changelog:
  * 	0.01: 05 Oct 2003: First release that compiles without warnings.
- * 	0.02: 05 Oct 2003: Fix bug for drain_tx: do not try to free NULL skbs.
+ * 	0.02: 05 Oct 2003: Fix bug for nv_drain_tx: do not try to free NULL skbs.
  * 			   Check all PCI BARs for the register window.
  * 			   udelay added to mii_rw.
  * 	0.03: 06 Oct 2003: Initialize dev->irq.
@@ -37,7 +38,7 @@
  * 	0.06: 10 Oct 2003: MAC Address read updated, pff flag generation updated,
  * 			   irq mask updated
  * 	0.07: 14 Oct 2003: Further irq mask updates.
- * 	0.08: 20 Oct 2003: rx_desc.Length initialization added, alloc_rx refill
+ * 	0.08: 20 Oct 2003: rx_desc.Length initialization added, nv_alloc_rx refill
  * 			   added into irq handler, NULL check for drain_ring.
  * 	0.09: 20 Oct 2003: Basic link speed irq implementation. Only handle the
  * 			   requested interrupt sources.
@@ -47,7 +48,7 @@
  * 	0.12: 23 Oct 2003: Cleanups for release.
  * 	0.13: 25 Oct 2003: Limit for concurrent tx packets increased to 10.
  * 			   Set link speed correctly. start rx before starting
- * 			   tx (start_rx sets the link speed).
+ * 			   tx (nv_start_rx sets the link speed).
  * 	0.14: 25 Oct 2003: Nic dependant irq mask.
  * 	0.15: 08 Nov 2003: fix smp deadlock with set_multicast_list during
  * 			   open.
@@ -58,7 +59,7 @@
  * 	0.18: 17 Nov 2003: fix oops due to late initialization of dev_stats
  * 	0.19: 29 Nov 2003: Handle RxNoBuf, detect & handle invalid mac
  * 			   addresses, really stop rx if already running
- * 			   in start_rx, clean up a bit.
+ * 			   in nv_start_rx, clean up a bit.
  * 				(C) Carl-Daniel Hailfinger
  * 	0.20: 07 Dec 2003: alloc fixes
  * 	0.21: 12 Jan 2004: additional alloc fix, nic polling fix.
@@ -66,6 +67,8 @@
  * 			   on close.
  * 				(C) Carl-Daniel Hailfinger, Manfred Spraul
  *	0.23: 26 Jan 2004: various small cleanups
+ *	0.24: 27 Feb 2004: make driver even less anonymous in backtraces
+ *	0.25: 09 Mar 2004: wol support
  *
  * Known bugs:
  * We suspect that on some hardware no TX done interrupts are generated.
@@ -77,7 +80,7 @@
  * DEV_NEED_TIMERIRQ will not harm you on sane hardware, only generating a few
  * superfluous timer interrupts from the nic.
  */
-#define FORCEDETH_VERSION		"0.23"
+#define FORCEDETH_VERSION		"0.25"
 
 #include <linux/module.h>
 #include <linux/types.h>
@@ -232,6 +235,7 @@ enum {
 #define NVREG_WAKEUPFLAGS_ACCEPT_MAGPAT		0x01
 #define NVREG_WAKEUPFLAGS_ACCEPT_WAKEUPPAT	0x02
 #define NVREG_WAKEUPFLAGS_ACCEPT_LINKCHANGE	0x04
+#define NVREG_WAKEUPFLAGS_ENABLE	0x1111
 
 	NvRegPatternCRC = 0x204,
 	NvRegPatternMask = 0x208,
@@ -340,6 +344,7 @@ struct fe_priv {
 	u32 linkspeed;
 	int duplex;
 	int phyaddr;
+	int wolenabled;
 
 	/* General data: RO fields */
 	dma_addr_t ring_addr;
@@ -468,12 +473,12 @@ static int mii_rw(struct net_device *dev
 	return retval;
 }
 
-static void start_rx(struct net_device *dev)
+static void nv_start_rx(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 	u8 *base = get_hwbase(dev);
 
-	dprintk(KERN_DEBUG "%s: start_rx\n", dev->name);
+	dprintk(KERN_DEBUG "%s: nv_start_rx\n", dev->name);
 	/* Already running? Stop it. */
 	if (readl(base + NvRegReceiverControl) & NVREG_RCVCTL_START) {
 		writel(0, base + NvRegReceiverControl);
@@ -485,48 +490,48 @@ static void start_rx(struct net_device *
 	pci_push(base);
 }
 
-static void stop_rx(struct net_device *dev)
+static void nv_stop_rx(struct net_device *dev)
 {
 	u8 *base = get_hwbase(dev);
 
-	dprintk(KERN_DEBUG "%s: stop_rx\n", dev->name);
+	dprintk(KERN_DEBUG "%s: nv_stop_rx\n", dev->name);
 	writel(0, base + NvRegReceiverControl);
 	reg_delay(dev, NvRegReceiverStatus, NVREG_RCVSTAT_BUSY, 0,
 		       NV_RXSTOP_DELAY1, NV_RXSTOP_DELAY1MAX,
-		       KERN_INFO "stop_rx: ReceiverStatus remained busy");
+		       KERN_INFO "nv_stop_rx: ReceiverStatus remained busy");
 
 	udelay(NV_RXSTOP_DELAY2);
 	writel(0, base + NvRegLinkSpeed);
 }
 
-static void start_tx(struct net_device *dev)
+static void nv_start_tx(struct net_device *dev)
 {
 	u8 *base = get_hwbase(dev);
 
-	dprintk(KERN_DEBUG "%s: start_tx\n", dev->name);
+	dprintk(KERN_DEBUG "%s: nv_start_tx\n", dev->name);
 	writel(NVREG_XMITCTL_START, base + NvRegTransmitterControl);
 	pci_push(base);
 }
 
-static void stop_tx(struct net_device *dev)
+static void nv_stop_tx(struct net_device *dev)
 {
 	u8 *base = get_hwbase(dev);
 
-	dprintk(KERN_DEBUG "%s: stop_tx\n", dev->name);
+	dprintk(KERN_DEBUG "%s: nv_stop_tx\n", dev->name);
 	writel(0, base + NvRegTransmitterControl);
 	reg_delay(dev, NvRegTransmitterStatus, NVREG_XMITSTAT_BUSY, 0,
 		       NV_TXSTOP_DELAY1, NV_TXSTOP_DELAY1MAX,
-		       KERN_INFO "stop_tx: TransmitterStatus remained busy");
+		       KERN_INFO "nv_stop_tx: TransmitterStatus remained busy");
 
 	udelay(NV_TXSTOP_DELAY2);
 	writel(0, base + NvRegUnknownTransmitterReg);
 }
 
-static void txrx_reset(struct net_device *dev)
+static void nv_txrx_reset(struct net_device *dev)
 {
 	u8 *base = get_hwbase(dev);
 
-	dprintk(KERN_DEBUG "%s: txrx_reset\n", dev->name);
+	dprintk(KERN_DEBUG "%s: nv_txrx_reset\n", dev->name);
 	writel(NVREG_TXRXCTL_BIT2 | NVREG_TXRXCTL_RESET, base + NvRegTxRxControl);
 	pci_push(base);
 	udelay(NV_TXRX_RESET_DELAY);
@@ -551,9 +556,10 @@ static struct net_device_stats *nv_get_s
 	return &np->stats;
 }
 
-static int nv_ethtool_ioctl (struct net_device *dev, void *useraddr)
+static int nv_ethtool_ioctl(struct net_device *dev, void *useraddr)
 {
 	struct fe_priv *np = get_nvpriv(dev);
+	u8 *base = get_hwbase(dev);
 	u32 ethcmd;
 
 	if (copy_from_user(&ethcmd, useraddr, sizeof (ethcmd)))
@@ -580,6 +586,39 @@ static int nv_ethtool_ioctl (struct net_
 			return -EFAULT;
 		return 0;
 	}
+	case ETHTOOL_GWOL:
+	{
+		struct ethtool_wolinfo wolinfo;
+		memset(&wolinfo, 0, sizeof(wolinfo));
+		wolinfo.supported = WAKE_MAGIC;
+
+		spin_lock_irq(&np->lock);
+		if (np->wolenabled)
+			wolinfo.wolopts = WAKE_MAGIC;
+		spin_unlock_irq(&np->lock);
+
+		if (copy_to_user(useraddr, &wolinfo, sizeof(wolinfo)))
+			return -EFAULT;
+		return 0;
+	}
+	case ETHTOOL_SWOL:
+	{
+		struct ethtool_wolinfo wolinfo;
+		if (copy_from_user(&wolinfo, useraddr, sizeof(wolinfo)))
+			return -EFAULT;
+
+		spin_lock_irq(&np->lock);
+		if (wolinfo.wolopts == 0) {
+			writel(0, base + NvRegWakeUpFlags);
+			np->wolenabled = 0;
+		}
+		if (wolinfo.wolopts & WAKE_MAGIC) {
+			writel(NVREG_WAKEUPFLAGS_ENABLE, base + NvRegWakeUpFlags);
+			np->wolenabled = 1;
+		}
+		spin_unlock_irq(&np->lock);
+		return 0;
+	}
 
 	default:
 		break;
@@ -603,11 +642,11 @@ static int nv_ioctl(struct net_device *d
 }
 
 /*
- * alloc_rx: fill rx ring entries.
+ * nv_alloc_rx: fill rx ring entries.
  * Return 1 if the allocations for the skbs failed and the
  * rx engine is without Available descriptors
  */
-static int alloc_rx(struct net_device *dev)
+static int nv_alloc_rx(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 	unsigned int refill_rx = np->refill_rx;
@@ -633,7 +672,7 @@ static int alloc_rx(struct net_device *d
 		np->rx_ring[nr].Length = cpu_to_le16(RX_NIC_BUFSIZE);
 		wmb();
 		np->rx_ring[nr].Flags = cpu_to_le16(NV_RX_AVAIL);
-		dprintk(KERN_DEBUG "%s: alloc_rx: Packet  %d marked as Available\n",
+		dprintk(KERN_DEBUG "%s: nv_alloc_rx: Packet  %d marked as Available\n",
 					dev->name, refill_rx);
 		refill_rx++;
 	}
@@ -643,13 +682,13 @@ static int alloc_rx(struct net_device *d
 	return 0;
 }
 
-static void do_rx_refill(unsigned long data)
+static void nv_do_rx_refill(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *) data;
 	struct fe_priv *np = get_nvpriv(dev);
 
 	disable_irq(dev->irq);
-	if (alloc_rx(dev)) {
+	if (nv_alloc_rx(dev)) {
 		spin_lock(&np->lock);
 		if (!np->in_shutdown)
 			mod_timer(&np->oom_kick, jiffies + OOM_REFILL);
@@ -658,7 +697,7 @@ static void do_rx_refill(unsigned long d
 	enable_irq(dev->irq);
 }
 
-static int init_ring(struct net_device *dev)
+static int nv_init_ring(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 	int i;
@@ -673,10 +712,10 @@ static int init_ring(struct net_device *
 	for (i = 0; i < RX_RING; i++) {
 		np->rx_ring[i].Flags = 0;
 	}
-	return alloc_rx(dev);
+	return nv_alloc_rx(dev);
 }
 
-static void drain_tx(struct net_device *dev)
+static void nv_drain_tx(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 	int i;
@@ -693,7 +732,7 @@ static void drain_tx(struct net_device *
 	}
 }
 
-static void drain_rx(struct net_device *dev)
+static void nv_drain_rx(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 	int i;
@@ -712,8 +751,8 @@ static void drain_rx(struct net_device *
 
 static void drain_ring(struct net_device *dev)
 {
-	drain_tx(dev);
-	drain_rx(dev);
+	nv_drain_tx(dev);
+	nv_drain_rx(dev);
 }
 
 /*
@@ -759,11 +798,11 @@ static int nv_start_xmit(struct sk_buff 
 }
 
 /*
- * tx_done: check for completed packets, release the skbs.
+ * nv_tx_done: check for completed packets, release the skbs.
  *
  * Caller must own np->lock.
  */
-static void tx_done(struct net_device *dev)
+static void nv_tx_done(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 
@@ -773,7 +812,7 @@ static void tx_done(struct net_device *d
 
 		prd = &np->tx_ring[i];
 
-		dprintk(KERN_DEBUG "%s: tx_done: looking at packet %d, Flags 0x%x.\n",
+		dprintk(KERN_DEBUG "%s: nv_tx_done: looking at packet %d, Flags 0x%x.\n",
 					dev->name, np->nic_tx, prd->Flags);
 		if (prd->Flags & cpu_to_le16(NV_TX_VALID))
 			break;
@@ -814,26 +853,26 @@ static void nv_tx_timeout(struct net_dev
 	spin_lock_irq(&np->lock);
 
 	/* 1) stop tx engine */
-	stop_tx(dev);
+	nv_stop_tx(dev);
 
 	/* 2) check that the packets were not sent already: */
-	tx_done(dev);
+	nv_tx_done(dev);
 
 	/* 3) if there are dead entries: clear everything */
 	if (np->next_tx != np->nic_tx) {
 		printk(KERN_DEBUG "%s: tx_timeout: dead entries!\n", dev->name);
-		drain_tx(dev);
+		nv_drain_tx(dev);
 		np->next_tx = np->nic_tx = 0;
 		writel((u32) (np->ring_addr + RX_RING*sizeof(struct ring_desc)), base + NvRegTxRingPhysAddr);
 		netif_wake_queue(dev);
 	}
 
 	/* 4) restart tx engine */
-	start_tx(dev);
+	nv_start_tx(dev);
 	spin_unlock_irq(&np->lock);
 }
 
-static void rx_process(struct net_device *dev)
+static void nv_rx_process(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 
@@ -847,7 +886,7 @@ static void rx_process(struct net_device
 
 		i = np->cur_rx % RX_RING;
 		prd = &np->rx_ring[i];
-		dprintk(KERN_DEBUG "%s: rx_process: looking at packet %d, Flags 0x%x.\n",
+		dprintk(KERN_DEBUG "%s: nv_rx_process: looking at packet %d, Flags 0x%x.\n",
 					dev->name, np->cur_rx, prd->Flags);
 
 		if (prd->Flags & cpu_to_le16(NV_RX_AVAIL))
@@ -915,7 +954,7 @@ static void rx_process(struct net_device
 
 		skb_put(skb, len);
 		skb->protocol = eth_type_trans(skb, dev);
-		dprintk(KERN_DEBUG "%s: rx_process: packet %d with %d bytes, proto %d accepted.\n",
+		dprintk(KERN_DEBUG "%s: nv_rx_process: packet %d with %d bytes, proto %d accepted.\n",
 					dev->name, np->cur_rx, len, skb->protocol);
 		netif_rx(skb);
 		dev->last_rx = jiffies;
@@ -990,24 +1029,24 @@ static void nv_set_multicast(struct net_
 	addr[0] |= NVREG_MCASTADDRA_FORCE;
 	pff |= NVREG_PFF_ALWAYS;
 	spin_lock_irq(&np->lock);
-	stop_rx(dev);
+	nv_stop_rx(dev);
 	writel(addr[0], base + NvRegMulticastAddrA);
 	writel(addr[1], base + NvRegMulticastAddrB);
 	writel(mask[0], base + NvRegMulticastMaskA);
 	writel(mask[1], base + NvRegMulticastMaskB);
 	writel(pff, base + NvRegPacketFilterFlags);
-	start_rx(dev);
+	nv_start_rx(dev);
 	spin_unlock_irq(&np->lock);
 }
 
-static int update_linkspeed(struct net_device *dev)
+static int nv_update_linkspeed(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 	int adv, lpa, newls, newdup;
 
 	adv = mii_rw(dev, np->phyaddr, MII_ADVERTISE, MII_READ);
 	lpa = mii_rw(dev, np->phyaddr, MII_LPA, MII_READ);
-	dprintk(KERN_DEBUG "%s: update_linkspeed: PHY advertises 0x%04x, lpa 0x%04x.\n",
+	dprintk(KERN_DEBUG "%s: nv_update_linkspeed: PHY advertises 0x%04x, lpa 0x%04x.\n",
 				dev->name, adv, lpa);
 
 	/* FIXME: handle parallel detection properly, handle gigabit ethernet */
@@ -1037,7 +1076,7 @@ static int update_linkspeed(struct net_d
 	return 0;
 }
 
-static void link_irq(struct net_device *dev)
+static void nv_link_irq(struct net_device *dev)
 {
 	struct fe_priv *np = get_nvpriv(dev);
 	u8 *base = get_hwbase(dev);
@@ -1050,29 +1089,29 @@ static void link_irq(struct net_device *
 
 	miival = mii_rw(dev, np->phyaddr, MII_BMSR, MII_READ);
 	if (miival & BMSR_ANEGCOMPLETE) {
-		update_linkspeed(dev);
+		nv_update_linkspeed(dev);
 
 		if (netif_carrier_ok(dev)) {
-			stop_rx(dev);
+			nv_stop_rx(dev);
 		} else {
 			netif_carrier_on(dev);
 			printk(KERN_INFO "%s: link up.\n", dev->name);
 		}
 		writel(NVREG_MISC1_FORCE | ( np->duplex ? 0 : NVREG_MISC1_HD),
 					base + NvRegMisc1);
-		start_rx(dev);
+		nv_start_rx(dev);
 	} else {
 		if (netif_carrier_ok(dev)) {
 			netif_carrier_off(dev);
 			printk(KERN_INFO "%s: link down.\n", dev->name);
-			stop_rx(dev);
+			nv_stop_rx(dev);
 		}
 		writel(np->linkspeed, base + NvRegLinkSpeed);
 		pci_push(base);
 	}
 }
 
-static irqreturn_t nic_irq(int foo, void *data, struct pt_regs *regs)
+static irqreturn_t nv_nic_irq(int foo, void *data, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) data;
 	struct fe_priv *np = get_nvpriv(dev);
@@ -1080,7 +1119,7 @@ static irqreturn_t nic_irq(int foo, void
 	u32 events;
 	int i;
 
-	dprintk(KERN_DEBUG "%s: nic_irq\n", dev->name);
+	dprintk(KERN_DEBUG "%s: nv_nic_irq\n", dev->name);
 
 	for (i=0; ; i++) {
 		events = readl(base + NvRegIrqStatus) & NVREG_IRQSTAT_MASK;
@@ -1092,13 +1131,13 @@ static irqreturn_t nic_irq(int foo, void
 
 		if (events & (NVREG_IRQ_TX1|NVREG_IRQ_TX2|NVREG_IRQ_TX_ERR)) {
 			spin_lock(&np->lock);
-			tx_done(dev);
+			nv_tx_done(dev);
 			spin_unlock(&np->lock);
 		}
 
 		if (events & (NVREG_IRQ_RX|NVREG_IRQ_RX_NOBUF)) {
-			rx_process(dev);
-			if (alloc_rx(dev)) {
+			nv_rx_process(dev);
+			if (nv_alloc_rx(dev)) {
 				spin_lock(&np->lock);
 				if (!np->in_shutdown)
 					mod_timer(&np->oom_kick, jiffies + OOM_REFILL);
@@ -1108,7 +1147,7 @@ static irqreturn_t nic_irq(int foo, void
 
 		if (events & NVREG_IRQ_LINK) {
 			spin_lock(&np->lock);
-			link_irq(dev);
+			nv_link_irq(dev);
 			spin_unlock(&np->lock);
 		}
 		if (events & (NVREG_IRQ_TX_ERR)) {
@@ -1127,31 +1166,32 @@ static irqreturn_t nic_irq(int foo, void
 
 			if (!np->in_shutdown)
 				mod_timer(&np->nic_poll, jiffies + POLL_WAIT);
-			printk(KERN_DEBUG "%s: too many iterations (%d) in nic_irq.\n", dev->name, i);
+			printk(KERN_DEBUG "%s: too many iterations (%d) in nv_nic_irq.\n", dev->name, i);
 			spin_unlock(&np->lock);
 			break;
 		}
 
 	}
-	dprintk(KERN_DEBUG "%s: nic_irq completed\n", dev->name);
+	dprintk(KERN_DEBUG "%s: nv_nic_irq completed\n", dev->name);
 
 	return IRQ_RETVAL(i);
 }
 
-static void do_nic_poll(unsigned long data)
+static void nv_do_nic_poll(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *) data;
 	struct fe_priv *np = get_nvpriv(dev);
 	u8 *base = get_hwbase(dev);
 
 	disable_irq(dev->irq);
+	/* FIXME: Do we need synchronize_irq(dev->irq) here? */
 	/*
 	 * reenable interrupts on the nic, we have to do this before calling
-	 * nic_irq because that may decide to do otherwise
+	 * nv_nic_irq because that may decide to do otherwise
 	 */
 	writel(np->irqmask, base + NvRegIrqMask);
 	pci_push(base);
-	nic_irq((int) 0, (void *) data, (struct pt_regs *) NULL);
+	nv_nic_irq((int) 0, (void *) data, (struct pt_regs *) NULL);
 	enable_irq(dev->irq);
 }
 
@@ -1173,12 +1213,12 @@ static int nv_open(struct net_device *de
 	writel(0, base + NvRegAdapterControl);
 	writel(0, base + NvRegLinkSpeed);
 	writel(0, base + NvRegUnknownTransmitterReg);
-	txrx_reset(dev);
+	nv_txrx_reset(dev);
 	writel(0, base + NvRegUnknownSetupReg6);
 
 	/* 2) initialize descriptor rings */
 	np->in_shutdown = 0;
-	oom = init_ring(dev);
+	oom = nv_init_ring(dev);
 
 	/* 3) set mac address */
 	{
@@ -1224,7 +1264,7 @@ static int nv_open(struct net_device *de
 		np->phyaddr = i;
 
 		spin_lock_irq(&np->lock);
-		update_linkspeed(dev);
+		nv_update_linkspeed(dev);
 		spin_unlock_irq(&np->lock);
 
 		break;
@@ -1279,7 +1319,7 @@ static int nv_open(struct net_device *de
 	writel(NVREG_IRQSTAT_MASK, base + NvRegIrqStatus);
 	pci_push(base);
 
-	ret = request_irq(dev->irq, &nic_irq, SA_SHIRQ, dev->name, dev);
+	ret = request_irq(dev->irq, &nv_nic_irq, SA_SHIRQ, dev->name, dev);
 	if (ret)
 		goto out_drain;
 
@@ -1291,8 +1331,8 @@ static int nv_open(struct net_device *de
 	writel(0, base + NvRegMulticastMaskA);
 	writel(0, base + NvRegMulticastMaskB);
 	writel(NVREG_PFF_ALWAYS|NVREG_PFF_MYADDR, base + NvRegPacketFilterFlags);
-	start_rx(dev);
-	start_tx(dev);
+	nv_start_rx(dev);
+	nv_start_tx(dev);
 	netif_start_queue(dev);
 	if (oom)
 		mod_timer(&np->oom_kick, jiffies + OOM_REFILL);
@@ -1326,8 +1366,8 @@ static int nv_close(struct net_device *d
 
 	netif_stop_queue(dev);
 	spin_lock_irq(&np->lock);
-	stop_tx(dev);
-	stop_rx(dev);
+	nv_stop_tx(dev);
+	nv_stop_rx(dev);
 	base = get_hwbase(dev);
 
 	/* disable interrupts on the nic or we will lock up */
@@ -1341,6 +1381,9 @@ static int nv_close(struct net_device *d
 
 	drain_ring(dev);
 
+	if (np->wolenabled)
+		nv_start_rx(dev);
+
 	/* FIXME: power down nic */
 
 	return 0;
@@ -1367,10 +1410,10 @@ static int __devinit nv_probe(struct pci
 
 	init_timer(&np->oom_kick);
 	np->oom_kick.data = (unsigned long) dev;
-	np->oom_kick.function = &do_rx_refill;	/* timer handler */
+	np->oom_kick.function = &nv_do_rx_refill;	/* timer handler */
 	init_timer(&np->nic_poll);
 	np->nic_poll.data = (unsigned long) dev;
-	np->nic_poll.function = &do_nic_poll;	/* timer handler */
+	np->nic_poll.function = &nv_do_nic_poll;	/* timer handler */
 
 	err = pci_enable_device(pci_dev);
 	if (err) {
@@ -1459,6 +1502,10 @@ static int __devinit nv_probe(struct pci
 			dev->dev_addr[0], dev->dev_addr[1], dev->dev_addr[2],
 			dev->dev_addr[3], dev->dev_addr[4], dev->dev_addr[5]);
 
+	/* disable WOL */
+	writel(0, base + NvRegWakeUpFlags);
+	np->wolenabled = 0;
+
 	np->tx_flags = cpu_to_le16(NV_TX_LASTPACKET|NV_TX_LASTPACKET1|NV_TX_VALID);
 	if (id->driver_data & DEV_NEED_LASTPACKET1)
 		np->tx_flags |= cpu_to_le16(NV_TX_LASTPACKET1);
diff -purN linux-post-2.6.4-20040313/drivers/net/gt96100eth.c linux-post-2.6.4-20040314/drivers/net/gt96100eth.c
--- linux-post-2.6.4-20040313/drivers/net/gt96100eth.c	2004-02-17 23:23:37.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/gt96100eth.c	2004-03-02 22:55:22.000000000 +0000
@@ -277,7 +277,7 @@ read_MII(int phy_addr, u32 reg)
 static void
 dump_tx_desc(int dbg_lvl, struct net_device *dev, int i)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	gt96100_td_t *td = &gp->tx_ring[i];
 
 	dbg(dbg_lvl, "Tx descriptor at 0x%08lx:\n", virt_to_phys(td));
@@ -292,7 +292,7 @@ dump_tx_desc(int dbg_lvl, struct net_dev
 static void
 dump_rx_desc(int dbg_lvl, struct net_device *dev, int i)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	gt96100_rd_t *rd = &gp->rx_ring[i];
 
 	dbg(dbg_lvl, "Rx descriptor at 0x%08lx:\n", virt_to_phys(rd));
@@ -332,7 +332,7 @@ write_MII(int phy_addr, u32 reg, u16 dat
 static void
 dump_tx_ring(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	int i;
 
 	dbg(0, "%s: txno/txni/cnt=%d/%d/%d\n", __FUNCTION__,
@@ -345,7 +345,7 @@ dump_tx_ring(struct net_device *dev)
 static void
 dump_rx_ring(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	int i;
 
 	dbg(0, "%s: rxno=%d\n", __FUNCTION__, gp->rx_next_out);
@@ -359,7 +359,7 @@ static void
 dump_MII(int dbg_lvl, struct net_device *dev)
 {
 	int i, val;
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
     
 	if (dbg_lvl <= GT96100_DEBUG) {
 		for (i=0; i<7; i++) {
@@ -419,7 +419,7 @@ dump_skb(int dbg_lvl, struct net_device 
 static int
 gt96100_add_hash_entry(struct net_device *dev, unsigned char* addr)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	//u16 hashResult, stmp;
 	//unsigned char ctmp, hash_ea[6];
 	u32 tblEntry1, tblEntry0, *tblEntryAddr;
@@ -544,7 +544,7 @@ update_stats(struct gt96100_private *gp)
 static void
 abort(struct net_device *dev, u32 abort_bits)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	int timedout = 100; // wait up to 100 msec for hard stop to complete
 
 	dbg(3, "%s\n", __FUNCTION__);
@@ -582,7 +582,7 @@ abort(struct net_device *dev, u32 abort_
 static void
 hard_stop(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 
 	dbg(3, "%s\n", __FUNCTION__);
 
@@ -598,7 +598,7 @@ hard_stop(struct net_device *dev)
 static void
 enable_ether_irq(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	u32 intMask;
 	/*
 	 * route ethernet interrupt to GT_SERINT0 for port 0,
@@ -631,7 +631,7 @@ enable_ether_irq(struct net_device *dev)
 static void
 disable_ether_irq(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	u32 intMask;
 	int intr_mask_reg = (gp->port_num == 0) ?
 		GT96100_SERINT0_MASK : GT96100_INT0_HIGH_MASK;
@@ -745,7 +745,7 @@ gt96100_probe1(int port_num)
 		goto out1;
 	}
 
-	gp = dev->priv;
+	gp = netdev_priv(dev);
 
 	memset(gp, 0, sizeof(*gp)); // clear it
 
@@ -839,7 +839,7 @@ out:
 static void
 reset_tx(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	int i;
 
 	abort(dev, sdcmrAT);
@@ -877,7 +877,7 @@ reset_tx(struct net_device *dev)
 static void
 reset_rx(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	int i;
 
 	abort(dev, sdcmrAR);
@@ -934,7 +934,7 @@ gt96100_check_tx_consistent(struct gt961
 static int
 gt96100_init(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	u32 tmp;
 	u16 mii_reg;
     
@@ -1115,7 +1115,7 @@ gt96100_close(struct net_device *dev)
 static int
 gt96100_tx(struct sk_buff *skb, struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	unsigned long flags;
 	int nextIn;
 
@@ -1187,7 +1187,7 @@ gt96100_tx(struct sk_buff *skb, struct n
 static int
 gt96100_rx(struct net_device *dev, u32 status)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	struct sk_buff *skb;
 	int pkt_len, nextOut, cdp;
 	gt96100_rd_t *rd;
@@ -1296,7 +1296,7 @@ gt96100_rx(struct net_device *dev, u32 s
 static void
 gt96100_tx_complete(struct net_device *dev, u32 status)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	int nextOut, cdp;
 	gt96100_td_t *td;
 	u32 cmdstat;
@@ -1385,7 +1385,7 @@ static irqreturn_t
 gt96100_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_id;
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	u32 status;
     	int handled = 0;
 
@@ -1486,7 +1486,7 @@ gt96100_interrupt(int irq, void *dev_id,
 static void
 gt96100_tx_timeout(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	unsigned long flags;
     
 	spin_lock_irqsave(&gp->lock, flags);
@@ -1511,7 +1511,7 @@ gt96100_tx_timeout(struct net_device *de
 static void
 gt96100_set_rx_mode(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	unsigned long flags;
 	//struct dev_mc_list *mcptr;
     
@@ -1555,7 +1555,7 @@ gt96100_set_rx_mode(struct net_device *d
 static struct net_device_stats *
 gt96100_get_stats(struct net_device *dev)
 {
-	struct gt96100_private *gp = (struct gt96100_private *)dev->priv;
+	struct gt96100_private *gp = netdev_priv(dev);
 	unsigned long flags;
 
 	dbg(3, "%s: dev=%p\n", __FUNCTION__, dev);
diff -purN linux-post-2.6.4-20040313/drivers/net/hamradio/baycom_epp.c linux-post-2.6.4-20040314/drivers/net/hamradio/baycom_epp.c
--- linux-post-2.6.4-20040313/drivers/net/hamradio/baycom_epp.c	2004-02-26 11:26:02.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/hamradio/baycom_epp.c	2004-03-02 23:49:09.000000000 +0000
@@ -646,7 +646,7 @@ static int transmit(struct baycom_state 
 
 static void do_rxpacket(struct net_device *dev)
 {
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 	struct sk_buff *skb;
 	unsigned char *cp;
 	unsigned pktlen;
@@ -705,7 +705,7 @@ static void do_rxpacket(struct net_devic
         
 static int receive(struct net_device *dev, int cnt)
 {
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 	struct parport *pp = bc->pdev->port;
         unsigned int bitbuf, notbitstream, bitstream, numbits, state;
 	unsigned char tmp[128];
@@ -790,7 +790,7 @@ static void epp_bh(struct net_device *de
 	int cnt, cnt2;
 	
 	baycom_paranoia_check_void(dev, "epp_bh");
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 	if (!bc->work_running)
 		return;
 	baycom_int_freq(bc);
@@ -908,7 +908,7 @@ static int baycom_send_packet(struct sk_
 	struct baycom_state *bc;
 
 	baycom_paranoia_check(dev, "baycom_send_packet", 0);
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 	if (skb->data[0] != 0) {
 		do_kiss_params(bc, skb->data, skb->len);
 		dev_kfree_skb(skb);
@@ -944,7 +944,7 @@ static struct net_device_stats *baycom_g
 	struct baycom_state *bc;
 
 	baycom_paranoia_check(dev, "baycom_get_stats", NULL);
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 	/* 
 	 * Get the current statistics.  This may be called with the
 	 * card open or closed. 
@@ -960,7 +960,7 @@ static void epp_wakeup(void *handle)
         struct baycom_state *bc;
 
 	baycom_paranoia_check_void(dev, "epp_wakeup");
-        bc = (struct baycom_state *)dev->priv;
+        bc = netdev_priv(dev);
         printk(KERN_DEBUG "baycom_epp: %s: why am I being woken up?\n", dev->name);
         if (!parport_claim(bc->pdev))
                 printk(KERN_DEBUG "baycom_epp: %s: I'm broken.\n", dev->name);
@@ -987,7 +987,7 @@ static int epp_open(struct net_device *d
 	unsigned long tstart;
 	
 	baycom_paranoia_check(dev, "epp_open", -ENXIO);
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
         pp = parport_find_base(dev->base_addr);
         if (!pp) {
                 printk(KERN_ERR "%s: parport at 0x%lx unknown\n", bc_drvname, dev->base_addr);
@@ -1102,7 +1102,7 @@ static int epp_close(struct net_device *
 	unsigned char tmp[1];
 
 	baycom_paranoia_check(dev, "epp_close", -EINVAL);
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 	pp = bc->pdev->port;
 	bc->work_running = 0;
 	flush_scheduled_work();
@@ -1163,7 +1163,7 @@ static int baycom_ioctl(struct net_devic
 	struct hdlcdrv_ioctl hi;
 
 	baycom_paranoia_check(dev, "baycom_ioctl", -EINVAL);
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 	if (cmd != SIOCDEVPRIVATE)
 		return -ENOIOCTLCMD;
 	if (get_user(cmd, (int *)ifr->ifr_data))
@@ -1290,7 +1290,7 @@ static void baycom_probe(struct net_devi
 	/*
 	 * not a real probe! only initialize data structures
 	 */
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 	/*
 	 * initialize the baycom_state struct
 	 */
@@ -1351,7 +1351,7 @@ MODULE_LICENSE("GPL");
 
 static void __init baycom_epp_dev_setup(struct net_device *dev)
 {
-	struct baycom_state *bc = dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 
 	/*
 	 * initialize part of the baycom_state struct
@@ -1415,7 +1415,7 @@ static void __exit cleanup_baycomepp(voi
 		struct net_device *dev = baycom_device[i];
 
 		if (dev) {
-			struct baycom_state *bc = dev->priv;
+			struct baycom_state *bc = netdev_priv(dev);
 			if (bc->magic == BAYCOM_MAGIC) {
 				unregister_netdev(dev);
 				free_netdev(dev);
diff -purN linux-post-2.6.4-20040313/drivers/net/hamradio/baycom_par.c linux-post-2.6.4-20040314/drivers/net/hamradio/baycom_par.c
--- linux-post-2.6.4-20040313/drivers/net/hamradio/baycom_par.c	2004-02-05 08:47:37.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/hamradio/baycom_par.c	2004-03-02 23:46:19.000000000 +0000
@@ -272,7 +272,7 @@ static __inline__ void par96_rx(struct n
 static void par96_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_id;
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 
 	if (!dev || !bc || bc->hdrv.magic != HDLCDRV_MAGIC)
 		return;
@@ -302,7 +302,7 @@ static void par96_interrupt(int irq, voi
 static void par96_wakeup(void *handle)
 {
         struct net_device *dev = (struct net_device *)handle;
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 
 	printk(KERN_DEBUG "baycom_par: %s: why am I being woken up?\n", dev->name);
 	if (!parport_claim(bc->pdev))
@@ -313,7 +313,7 @@ static void par96_wakeup(void *handle)
 
 static int par96_open(struct net_device *dev)
 {
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 	struct parport *pp;
 
 	if (!dev || !bc)
@@ -362,7 +362,7 @@ static int par96_open(struct net_device 
 
 static int par96_close(struct net_device *dev)
 {
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 	struct parport *pp;
 
 	if (!dev || !bc)
@@ -424,7 +424,7 @@ static int baycom_ioctl(struct net_devic
 		printk(KERN_ERR "bc_ioctl: invalid device struct\n");
 		return -EINVAL;
 	}
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 
 	if (cmd != SIOCDEVPRIVATE)
 		return -ENOIOCTLCMD;
@@ -524,7 +524,7 @@ static int __init init_baycompar(void)
 		if (IS_ERR(dev)) 
 			break;
 
-		bc = (struct baycom_state *)dev->priv;
+		bc = netdev_priv(dev);
 		if (set_hw && baycom_setmode(bc, mode[i]))
 			set_hw = 0;
 		found++;
diff -purN linux-post-2.6.4-20040313/drivers/net/hamradio/baycom_ser_fdx.c linux-post-2.6.4-20040314/drivers/net/hamradio/baycom_ser_fdx.c
--- linux-post-2.6.4-20040313/drivers/net/hamradio/baycom_ser_fdx.c	2003-09-19 13:31:27.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/hamradio/baycom_ser_fdx.c	2004-03-02 23:44:37.000000000 +0000
@@ -281,7 +281,7 @@ static __inline__ void ser12_rx(struct n
 static irqreturn_t ser12_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_id;
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 	struct timeval tv;
 	unsigned char iir, msr;
 	unsigned int txcount = 0;
@@ -407,7 +407,7 @@ static enum uart ser12_check_uart(unsign
 
 static int ser12_open(struct net_device *dev)
 {
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 	enum uart u;
 
 	if (!dev || !bc)
@@ -466,7 +466,7 @@ static int ser12_open(struct net_device 
 
 static int ser12_close(struct net_device *dev)
 {
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 
 	if (!dev || !bc)
 		return -EINVAL;
@@ -536,7 +536,7 @@ static int baycom_ioctl(struct net_devic
 		printk(KERN_ERR "bc_ioctl: invalid device struct\n");
 		return -EINVAL;
 	}
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 
 	if (cmd != SIOCDEVPRIVATE)
 		return -ENOIOCTLCMD;
@@ -644,7 +644,7 @@ static int __init init_baycomserfdx(void
 		if (IS_ERR(dev)) 
 			break;
 
-		bc = (struct baycom_state *)dev->priv;
+		bc = netdev_priv(dev);
 		if (set_hw && baycom_setmode(bc, mode[i]))
 			set_hw = 0;
 		bc->baud = baud[i];
diff -purN linux-post-2.6.4-20040313/drivers/net/hamradio/baycom_ser_hdx.c linux-post-2.6.4-20040314/drivers/net/hamradio/baycom_ser_hdx.c
--- linux-post-2.6.4-20040313/drivers/net/hamradio/baycom_ser_hdx.c	2003-09-19 13:31:27.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/hamradio/baycom_ser_hdx.c	2004-03-02 23:49:54.000000000 +0000
@@ -375,7 +375,7 @@ static inline void ser12_rx(struct net_d
 static irqreturn_t ser12_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_id;
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 	unsigned char iir;
 
 	if (!dev || !bc || bc->hdrv.magic != HDLCDRV_MAGIC)
@@ -468,7 +468,7 @@ static enum uart ser12_check_uart(unsign
 
 static int ser12_open(struct net_device *dev)
 {
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 	enum uart u;
 
 	if (!dev || !bc)
@@ -511,7 +511,7 @@ static int ser12_open(struct net_device 
 
 static int ser12_close(struct net_device *dev)
 {
-	struct baycom_state *bc = (struct baycom_state *)dev->priv;
+	struct baycom_state *bc = netdev_priv(dev);
 
 	if (!dev || !bc)
 		return -EINVAL;
@@ -576,7 +576,7 @@ static int baycom_ioctl(struct net_devic
 		printk(KERN_ERR "bc_ioctl: invalid device struct\n");
 		return -EINVAL;
 	}
-	bc = (struct baycom_state *)dev->priv;
+	bc = netdev_priv(dev);
 
 	if (cmd != SIOCDEVPRIVATE)
 		return -ENOIOCTLCMD;
@@ -681,7 +681,7 @@ static int __init init_baycomserhdx(void
 		if (IS_ERR(dev)) 
 			break;
 
-		bc = (struct baycom_state *)dev->priv;
+		bc = netdev_priv(dev);
 		if (set_hw && baycom_setmode(bc, mode[i]))
 			set_hw = 0;
 		found++;
diff -purN linux-post-2.6.4-20040313/drivers/net/hplance.c linux-post-2.6.4-20040314/drivers/net/hplance.c
--- linux-post-2.6.4-20040313/drivers/net/hplance.c	2004-01-10 15:09:25.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/hplance.c	2004-03-03 20:24:34.000000000 +0000
@@ -63,7 +63,7 @@ static struct hplance_private *root_hpla
 
 static void cleanup_card(struct net_device *dev)
 {
-        struct hplance_private *lp = dev->priv;
+        struct hplance_private *lp = netdev_priv(dev);
 	dio_unconfig_board(lp->scode);
 }
 
@@ -97,7 +97,7 @@ struct net_device * __init hplance_probe
 		dio_config_board(scode);
                 hplance_init(dev, scode);
 		if (!register_netdev(dev)) {
-			struct hplance_private *lp = dev->priv;
+			struct hplance_private *lp = netdev_priv(dev);
 			lp->next_module = root_hplance_dev;
 			root_hplance_dev = lp;
 			return dev;
@@ -141,7 +141,7 @@ static void __init hplance_init(struct n
                 printk("%c%2.2x", i == 0 ? ' ' : ':', dev->dev_addr[i]);
         }
         
-        lp = (struct hplance_private *)dev->priv;
+        lp = netdev_priv(dev);
         lp->lance.name = (char*)name;                   /* discards const, shut up gcc */
         lp->lance.ll = (struct lance_regs *)(va + HPLANCE_REGOFF);
         lp->lance.init_block = (struct lance_init_block *)(va + HPLANCE_MEMOFF); /* CPU addr */
@@ -195,7 +195,7 @@ static unsigned short hplance_readrdp(vo
 static int hplance_open(struct net_device *dev)
 {
         int status;
-        struct hplance_private *lp = (struct hplance_private *)dev->priv;
+        struct hplance_private *lp = netdev_priv(dev);
         struct hplance_reg *hpregs = (struct hplance_reg *)lp->base;
         
         status = lance_open(dev);                 /* call generic lance open code */
@@ -209,7 +209,7 @@ static int hplance_open(struct net_devic
 
 static int hplance_close(struct net_device *dev)
 {
-        struct hplance_private *lp = (struct hplance_private *)dev->priv;
+        struct hplance_private *lp = netdev_priv(dev);
         struct hplance_reg *hpregs = (struct hplance_reg *)lp->base;
         out_8(&(hpregs->status), 8);              /* disable interrupts at boardlevel */
         lance_close(dev);
diff -purN linux-post-2.6.4-20040313/drivers/net/isa-skeleton.c linux-post-2.6.4-20040314/drivers/net/isa-skeleton.c
--- linux-post-2.6.4-20040313/drivers/net/isa-skeleton.c	2004-01-11 00:16:04.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/isa-skeleton.c	2004-03-03 18:54:41.000000000 +0000
@@ -303,7 +303,7 @@ static int __init netcard_probe1(struct 
 	}
 #endif	/* jumpered DMA */
 
-	np = (struct net_local *)dev->priv;
+	np = netdev_priv(dev);
 	spin_lock_init(&np->lock);
 
 	dev->open		= net_open;
@@ -326,7 +326,7 @@ out:
 
 static void net_tx_timeout(struct net_device *dev)
 {
-	struct net_local *np = (struct net_local *)dev->priv;
+	struct net_local *np = netdev_priv(dev);
 
 	printk(KERN_WARNING "%s: transmit timed out, %s?\n", dev->name,
 	       tx_done(dev) ? "IRQ conflict" : "network cable problem");
@@ -361,7 +361,7 @@ static void net_tx_timeout(struct net_de
 static int
 net_open(struct net_device *dev)
 {
-	struct net_local *np = (struct net_local *)dev->priv;
+	struct net_local *np = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	/*
 	 * This is used if the interrupt line can turned off (shared).
@@ -399,7 +399,7 @@ net_open(struct net_device *dev)
  */
 static int net_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *np = (struct net_local *)dev->priv;
+	struct net_local *np = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	short length = ETH_ZLEN < skb->len ? skb->len : ETH_ZLEN;
 	unsigned char *buf = skb->data;
@@ -465,7 +465,7 @@ static int net_send_packet(struct sk_buf
  */
 void net_tx(struct net_device *dev)
 {
-	struct net_local *np = (struct net_local *)dev->priv;
+	struct net_local *np = netdev_priv(dev);
 	int entry;
 
 	/* This protects us from concurrent execution of
@@ -508,7 +508,7 @@ static irqreturn_t net_interrupt(int irq
 
 	ioaddr = dev->base_addr;
 
-	np = (struct net_local *)dev->priv;
+	np = netdev_priv(dev);
 	status = inw(ioaddr + 0);
 
 	if (status == 0)
@@ -539,7 +539,7 @@ out:
 static void
 net_rx(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int boguscount = 10;
 
@@ -591,7 +591,7 @@ net_rx(struct net_device *dev)
 static int
 net_close(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	lp->open_time = 0;
@@ -620,7 +620,7 @@ net_close(struct net_device *dev)
  */
 static struct net_device_stats *net_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	short ioaddr = dev->base_addr;
 
 	/* Update the statistics from the device registers. */
diff -purN linux-post-2.6.4-20040313/drivers/net/lasi_82596.c linux-post-2.6.4-20040314/drivers/net/lasi_82596.c
--- linux-post-2.6.4-20040313/drivers/net/lasi_82596.c	2004-02-22 20:30:38.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/lasi_82596.c	2004-03-03 20:10:55.000000000 +0000
@@ -426,7 +426,7 @@ static inline void CA(struct net_device 
 
 static inline void MPU_PORT(struct net_device *dev, int c, dma_addr_t x)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 
 	u32 v = (u32) (c) | (u32) (x);
 	u16 a, b;
@@ -481,7 +481,7 @@ static inline int wait_cmd(struct net_de
 
 static void i596_display_data(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	struct i596_cmd *cmd;
 	struct i596_rfd *rfd;
 	struct i596_rbd *rbd;
@@ -541,7 +541,7 @@ static void i596_error(int irq, void *de
 
 static inline void init_rx_bufs(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *)dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	int i;
 	struct i596_rfd *rfd;
 	struct i596_rbd *rbd;
@@ -595,7 +595,7 @@ static inline void init_rx_bufs(struct n
 
 static inline void remove_rx_bufs(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *)dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	struct i596_rbd *rbd;
 	int i;
 
@@ -612,7 +612,7 @@ static inline void remove_rx_bufs(struct
 
 static void rebuild_rx_bufs(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	int i;
 
 	/* Ensure rx frame/buffer descriptors are tidy */
@@ -633,7 +633,7 @@ static void rebuild_rx_bufs(struct net_d
 
 static int init_i596_mem(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	disable_irq(dev->irq);	/* disable IRQs from LAN */
@@ -727,7 +727,7 @@ failed:
 
 static inline int i596_rx(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *)dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	struct i596_rfd *rfd;
 	struct i596_rbd *rbd;
 	int frames = 0;
@@ -939,7 +939,7 @@ static inline void i596_reset(struct net
 
 static void i596_add_cmd(struct net_device *dev, struct i596_cmd *cmd)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	DEB(DEB_ADDCMD,printk("i596_add_cmd cmd_head %p\n", lp->cmd_head));
@@ -987,7 +987,7 @@ static void i596_add_cmd(struct net_devi
    device list */
 static int i596_test(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	volatile int *tint;
 	u32 data;
 
@@ -1041,7 +1041,7 @@ out:
 
 static void i596_tx_timeout (struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 
 	/* Transmitter timeout, serious problems. */
 	DEB(DEB_ERRORS,printk("%s: transmit timed out, status resetting.\n",
@@ -1070,7 +1070,7 @@ static void i596_tx_timeout (struct net_
 
 static int i596_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	struct tx_cmd *tx_cmd;
 	struct i596_tbd *tbd;
 	short length = skb->len;
@@ -1219,7 +1219,7 @@ static int __devinit i82596_probe(struct
 
 	dev->priv = (void *)(dev->mem_start);
 
-	lp = (struct i596_private *) dev->priv;
+	lp = netdev_priv(dev);
 	DEB(DEB_INIT,printk ("%s: lp at 0x%08lx (%d bytes), lp->scb at 0x%08lx\n",
 		dev->name, (unsigned long)lp,
 		sizeof(struct i596_private), (unsigned long)&lp->scb));
@@ -1249,7 +1249,7 @@ static irqreturn_t i596_interrupt(int ir
 		return IRQ_NONE;
 	}
 
-	lp = (struct i596_private *) dev->priv;
+	lp = netdev_priv(dev);
 
 	spin_lock (&lp->lock);
 
@@ -1395,7 +1395,7 @@ static irqreturn_t i596_interrupt(int ir
 
 static int i596_close(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	netif_stop_queue(dev);
@@ -1429,7 +1429,7 @@ static int i596_close(struct net_device 
 static struct net_device_stats *
  i596_get_stats(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -1440,7 +1440,7 @@ static struct net_device_stats *
 
 static void set_multicast_list(struct net_device *dev)
 {
-	struct i596_private *lp = (struct i596_private *) dev->priv;
+	struct i596_private *lp = netdev_priv(dev);
 	int config = 0, cnt;
 
 	DEB(DEB_MULTI,printk("%s: set multicast list, %d entries, promisc %s, allmulti %s\n", dev->name, dev->mc_count, dev->flags & IFF_PROMISC ? "ON" : "OFF", dev->flags & IFF_ALLMULTI ? "ON" : "OFF"));
@@ -1540,7 +1540,7 @@ lan_init_chip(struct parisc_device *dev)
 
 	retval = register_netdev(netdevice);
 	if (retval) {
-		struct i596_private *lp = netdevice->priv;
+		struct i596_private *lp = netdev_priv(netdevice);
 		printk(KERN_WARNING __FILE__ ": register_netdevice ret'd %d\n", retval);
 		dma_free_noncoherent(lp->dev, sizeof(struct i596_private), 
 				    (void *)netdevice->mem_start, lp->dma_addr);
@@ -1594,7 +1594,7 @@ static void __exit lasi_82596_exit(void)
 		
 		unregister_netdev(netdevice);
 
-		lp = (struct i596_private *) netdevice->priv;
+		lp = netdev_priv(netdevice);
 		dma_free_noncoherent(lp->dev, sizeof(struct i596_private), 
 				       (void *)netdevice->mem_start, lp->dma_addr);
 		free_netdev(netdevice);
diff -purN linux-post-2.6.4-20040313/drivers/net/loopback.c linux-post-2.6.4-20040314/drivers/net/loopback.c
--- linux-post-2.6.4-20040313/drivers/net/loopback.c	2004-02-18 06:58:03.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/loopback.c	2004-03-03 18:42:24.000000000 +0000
@@ -123,7 +123,7 @@ static void emulate_large_send_offload(s
  */
 static int loopback_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_device_stats *stats = (struct net_device_stats *)dev->priv;
+	struct net_device_stats *stats = netdev_priv(dev);
 
 	skb_orphan(skb);
 
diff -purN linux-post-2.6.4-20040313/drivers/net/mac89x0.c linux-post-2.6.4-20040314/drivers/net/mac89x0.c
--- linux-post-2.6.4-20040313/drivers/net/mac89x0.c	2004-01-10 15:08:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/mac89x0.c	2004-03-02 22:23:13.000000000 +0000
@@ -225,7 +225,7 @@ struct net_device * __init mac89x0_probe
 		goto out;
 
 	/* Initialize the net_device structure. */
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 
 	/* Fill in the 'dev' fields. */
 	dev->base_addr = ioaddr;
@@ -328,7 +328,7 @@ void __init reset_chip(struct net_device
 static int
 net_open(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int i;
 
 	/* Disable the interrupt for now */
@@ -392,7 +392,7 @@ net_send_packet(struct sk_buff *skb, str
 	if (test_and_set_bit(0, (void*)&dev->tbusy) != 0)
 		printk("%s: Transmitter access conflict.\n", dev->name);
 	else {
-		struct net_local *lp = (struct net_local *)dev->priv;
+		struct net_local *lp = netdev_priv(dev);
 		unsigned long flags;
 
 		if (net_debug > 3)
@@ -446,7 +446,7 @@ static irqreturn_t net_interrupt(int irq
 	dev->interrupt = 1;
 
 	ioaddr = dev->base_addr;
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 
 	/* we MUST read all the events out of the ISQ, otherwise we'll never
            get interrupted again.  As a consequence, we can't have any limit
@@ -505,7 +505,7 @@ static irqreturn_t net_interrupt(int irq
 static void
 net_rx(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	struct sk_buff *skb;
 	int status, length;
 
@@ -571,7 +571,7 @@ net_close(struct net_device *dev)
 static struct net_device_stats *
 net_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	local_irq_save(flags);
@@ -585,7 +585,7 @@ net_get_stats(struct net_device *dev)
 
 static void set_multicast_list(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	if(dev->flags&IFF_PROMISC)
 	{
diff -purN linux-post-2.6.4-20040313/drivers/net/ni5010.c linux-post-2.6.4-20040314/drivers/net/ni5010.c
--- linux-post-2.6.4-20040313/drivers/net/ni5010.c	2004-01-10 14:36:01.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/ni5010.c	2004-03-02 22:24:14.000000000 +0000
@@ -309,7 +309,7 @@ static int __init ni5010_probe1(struct n
 	PRINTK2((KERN_DEBUG "%s: I/O #9 passed!\n", dev->name));
 
 	/* DMA is not supported (yet?), so no use detecting it */
-	lp = (struct ni5010_local*)dev->priv;
+	lp = netdev_priv(dev);
 
 	spin_lock_init(&lp->lock);
 
@@ -484,7 +484,7 @@ static irqreturn_t ni5010_interrupt(int 
 	PRINTK2((KERN_DEBUG "%s: entering ni5010_interrupt\n", dev->name));
 
 	ioaddr = dev->base_addr;
-	lp = (struct ni5010_local *)dev->priv;
+	lp = netdev_priv(dev);
 	
 	spin_lock(&lp->lock);
 	status = inb(IE_ISTAT); 
@@ -527,7 +527,7 @@ static void dump_packet(void *buf, int l
 /* We have a good packet, get it out of the buffer. */
 static void ni5010_rx(struct net_device *dev)
 {
-	struct ni5010_local *lp = (struct ni5010_local *)dev->priv;
+	struct ni5010_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	unsigned char rcv_stat;
 	struct sk_buff *skb;
@@ -592,7 +592,7 @@ static void ni5010_rx(struct net_device 
 
 static int process_xmt_interrupt(struct net_device *dev)
 {
-	struct ni5010_local *lp = (struct ni5010_local *)dev->priv;
+	struct ni5010_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int xmit_stat;
 
@@ -651,7 +651,7 @@ static int ni5010_close(struct net_devic
    closed. */
 static struct net_device_stats *ni5010_get_stats(struct net_device *dev)
 {
-	struct ni5010_local *lp = (struct ni5010_local *)dev->priv;
+	struct ni5010_local *lp = netdev_priv(dev);
 
 	PRINTK2((KERN_DEBUG "%s: entering ni5010_get_stats\n", dev->name));
 	
@@ -693,7 +693,7 @@ static void ni5010_set_multicast_list(st
 
 static void hardware_send_packet(struct net_device *dev, char *buf, int length, int pad)
 {
-	struct ni5010_local *lp = (struct ni5010_local *)dev->priv;
+	struct ni5010_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	unsigned long flags;
 	unsigned int buf_offs;
diff -purN linux-post-2.6.4-20040313/drivers/net/pcmcia/3c574_cs.c linux-post-2.6.4-20040314/drivers/net/pcmcia/3c574_cs.c
--- linux-post-2.6.4-20040313/drivers/net/pcmcia/3c574_cs.c	2004-01-19 23:34:56.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/pcmcia/3c574_cs.c	2004-03-03 00:02:45.000000000 +0000
@@ -283,7 +283,7 @@ static dev_link_t *tc574_attach(void)
 	dev = alloc_etherdev(sizeof(struct el3_private));
 	if (!dev)
 		return NULL;
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 	link = &lp->link;
 	link->priv = dev;
 
@@ -388,7 +388,7 @@ static void tc574_config(dev_link_t *lin
 {
 	client_handle_t handle = link->handle;
 	struct net_device *dev = link->priv;
-	struct el3_private *lp = dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	tuple_t tuple;
 	cisparse_t parse;
 	unsigned short buf[32];
@@ -733,7 +733,7 @@ static void mdio_write(ioaddr_t ioaddr, 
 /* Reset and restore all of the 3c574 registers. */
 static void tc574_reset(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	int i, ioaddr = dev->base_addr;
 	unsigned long flags;
 
@@ -814,7 +814,7 @@ static void tc574_reset(struct net_devic
 
 static int el3_open(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	dev_link_t *link = &lp->link;
 
 	if (!DEV_OK(link))
@@ -837,7 +837,7 @@ static int el3_open(struct net_device *d
 
 static void el3_tx_timeout(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	ioaddr_t ioaddr = dev->base_addr;
 	
 	printk(KERN_NOTICE "%s: Transmit timed out!\n", dev->name);
@@ -852,7 +852,7 @@ static void el3_tx_timeout(struct net_de
 
 static void pop_tx_status(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	ioaddr_t ioaddr = dev->base_addr;
 	int i;
     
@@ -877,7 +877,7 @@ static void pop_tx_status(struct net_dev
 static int el3_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
 	ioaddr_t ioaddr = dev->base_addr;
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	unsigned long flags;
 
 	DEBUG(3, "%s: el3_start_xmit(length = %ld) called, "
@@ -909,7 +909,7 @@ static int el3_start_xmit(struct sk_buff
 static irqreturn_t el3_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) dev_id;
-	struct el3_private *lp = dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	ioaddr_t ioaddr, status;
 	int work_budget = max_interrupt_work;
 	int handled = 0;
@@ -1002,7 +1002,7 @@ static irqreturn_t el3_interrupt(int irq
 static void media_check(unsigned long arg)
 {
 	struct net_device *dev = (struct net_device *) arg;
-	struct el3_private *lp = dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	ioaddr_t ioaddr = dev->base_addr;
 	unsigned long flags;
 	unsigned short /* cable, */ media, partner;
@@ -1074,7 +1074,7 @@ reschedule:
 
 static struct net_device_stats *el3_get_stats(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 
 	if (netif_device_present(dev)) {
 		unsigned long flags;
@@ -1091,7 +1091,7 @@ static struct net_device_stats *el3_get_
  */
 static void update_stats(struct net_device *dev)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	ioaddr_t ioaddr = dev->base_addr;
 	u8 rx, tx, up;
 
@@ -1128,7 +1128,7 @@ static void update_stats(struct net_devi
 
 static int el3_rx(struct net_device *dev, int worklimit)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	ioaddr_t ioaddr = dev->base_addr;
 	short rx_status;
 	
@@ -1190,7 +1190,7 @@ static struct ethtool_ops netdev_ethtool
 /* Provide ioctl() calls to examine the MII xcvr state. */
 static int el3_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
-	struct el3_private *lp = (struct el3_private *)dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	ioaddr_t ioaddr = dev->base_addr;
 	u16 *data = (u16 *)&rq->ifr_data;
 	int phy = lp->phys & 0x1f;
@@ -1259,7 +1259,7 @@ static void set_rx_mode(struct net_devic
 static int el3_close(struct net_device *dev)
 {
 	ioaddr_t ioaddr = dev->base_addr;
-	struct el3_private *lp = dev->priv;
+	struct el3_private *lp = netdev_priv(dev);
 	dev_link_t *link = &lp->link;
 
 	DEBUG(2, "%s: shutting down ethercard.\n", dev->name);
diff -purN linux-post-2.6.4-20040313/drivers/net/pcmcia/3c589_cs.c linux-post-2.6.4-20040314/drivers/net/pcmcia/3c589_cs.c
--- linux-post-2.6.4-20040313/drivers/net/pcmcia/3c589_cs.c	2004-01-19 23:34:56.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/pcmcia/3c589_cs.c	2004-03-03 00:03:51.000000000 +0000
@@ -196,7 +196,7 @@ static dev_link_t *tc589_attach(void)
     dev = alloc_etherdev(sizeof(struct el3_private));
     if (!dev)
 	 return NULL;
-    lp = dev->priv;
+    lp = netdev_priv(dev);
     link = &lp->link;
     link->priv = dev;
 
@@ -304,7 +304,7 @@ static void tc589_config(dev_link_t *lin
 {
     client_handle_t handle = link->handle;
     struct net_device *dev = link->priv;
-    struct el3_private *lp = dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     tuple_t tuple;
     cisparse_t parse;
     u16 buf[32], *phys_addr;
@@ -526,7 +526,7 @@ static u16 read_eeprom(ioaddr_t ioaddr, 
 */
 static void tc589_set_xcvr(struct net_device *dev, int if_port)
 {
-    struct el3_private *lp = (struct el3_private *)dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     
     EL3WINDOW(0);
@@ -648,7 +648,7 @@ static int el3_config(struct net_device 
 
 static int el3_open(struct net_device *dev)
 {
-    struct el3_private *lp = (struct el3_private *)dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     dev_link_t *link = &lp->link;
     
     if (!DEV_OK(link))
@@ -672,7 +672,7 @@ static int el3_open(struct net_device *d
 
 static void el3_tx_timeout(struct net_device *dev)
 {
-    struct el3_private *lp = (struct el3_private *)dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     
     printk(KERN_WARNING "%s: Transmit timed out!\n", dev->name);
@@ -687,7 +687,7 @@ static void el3_tx_timeout(struct net_de
 
 static void pop_tx_status(struct net_device *dev)
 {
-    struct el3_private *lp = (struct el3_private *)dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     int i;
     
@@ -741,7 +741,7 @@ static int el3_start_xmit(struct sk_buff
 static irqreturn_t el3_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
     struct net_device *dev = (struct net_device *) dev_id;
-    struct el3_private *lp = dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     ioaddr_t ioaddr, status;
     int i = 0, handled = 1;
     
@@ -826,7 +826,7 @@ static irqreturn_t el3_interrupt(int irq
 static void media_check(unsigned long arg)
 {
     struct net_device *dev = (struct net_device *)(arg);
-    struct el3_private *lp = dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     u16 media, errs;
     unsigned long flags;
@@ -906,7 +906,7 @@ reschedule:
 
 static struct net_device_stats *el3_get_stats(struct net_device *dev)
 {
-    struct el3_private *lp = (struct el3_private *)dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     unsigned long flags;
     dev_link_t *link = &lp->link;
 
@@ -928,7 +928,7 @@ static struct net_device_stats *el3_get_
 */
 static void update_stats(struct net_device *dev)
 {
-    struct el3_private *lp = (struct el3_private *)dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
 
     DEBUG(2, "%s: updating the statistics.\n", dev->name);
@@ -955,7 +955,7 @@ static void update_stats(struct net_devi
 
 static int el3_rx(struct net_device *dev)
 {
-    struct el3_private *lp = (struct el3_private *)dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     int worklimit = 32;
     short rx_status;
@@ -1009,7 +1009,7 @@ static int el3_rx(struct net_device *dev
 
 static void set_multicast_list(struct net_device *dev)
 {
-    struct el3_private *lp = dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     dev_link_t *link = &lp->link;
     ioaddr_t ioaddr = dev->base_addr;
     u16 opts = SetRxFilter | RxStation | RxBroadcast;
@@ -1024,7 +1024,7 @@ static void set_multicast_list(struct ne
 
 static int el3_close(struct net_device *dev)
 {
-    struct el3_private *lp = dev->priv;
+    struct el3_private *lp = netdev_priv(dev);
     dev_link_t *link = &lp->link;
     ioaddr_t ioaddr = dev->base_addr;
     
diff -purN linux-post-2.6.4-20040313/drivers/net/pcmcia/com20020_cs.c linux-post-2.6.4-20040314/drivers/net/pcmcia/com20020_cs.c
--- linux-post-2.6.4-20040313/drivers/net/pcmcia/com20020_cs.c	2004-01-19 23:34:56.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/pcmcia/com20020_cs.c	2004-03-03 00:04:30.000000000 +0000
@@ -179,7 +179,7 @@ static dev_link_t *com20020_attach(void)
 
     memset(info, 0, sizeof(struct com20020_dev_t));
     memset(link, 0, sizeof(struct dev_link_t));
-    lp = dev->priv;
+    lp = netdev_priv(dev);
     lp->timeout = timeout;
     lp->backplane = backplane;
     lp->clockp = clockp;
@@ -394,7 +394,7 @@ static void com20020_config(dev_link_t *
 	goto failed;
     }
     
-    lp = dev->priv;
+    lp = netdev_priv(dev);
     lp->card_name = "PCMCIA COM20020";
     lp->card_flags = ARC_CAN_10MBIT; /* pretend all of them can 10Mbit */
 
@@ -492,7 +492,7 @@ static int com20020_event(event_t event,
             pcmcia_request_configuration(link->handle, &link->conf);
             if (link->open) {
 		int ioaddr = dev->base_addr;
-		struct arcnet_local *lp = (struct arcnet_local *)dev->priv;
+		struct arcnet_local *lp = netdev_priv(dev);
 		ARCRESET;
             }
         }
diff -purN linux-post-2.6.4-20040313/drivers/net/pcmcia/fmvj18x_cs.c linux-post-2.6.4-20040314/drivers/net/pcmcia/fmvj18x_cs.c
--- linux-post-2.6.4-20040313/drivers/net/pcmcia/fmvj18x_cs.c	2004-01-19 23:34:56.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/pcmcia/fmvj18x_cs.c	2004-03-03 00:05:23.000000000 +0000
@@ -256,7 +256,7 @@ static dev_link_t *fmvj18x_attach(void)
     dev = alloc_etherdev(sizeof(local_info_t));
     if (!dev)
 	return NULL;
-    lp = dev->priv;
+    lp = netdev_priv(dev);
     link = &lp->link;
     link->priv = dev;
 
@@ -394,7 +394,7 @@ static void fmvj18x_config(dev_link_t *l
 {
     client_handle_t handle = link->handle;
     struct net_device *dev = link->priv;
-    local_info_t *lp = dev->priv;
+    local_info_t *lp = netdev_priv(dev);
     tuple_t tuple;
     cisparse_t parse;
     u_short buf[32];
@@ -803,7 +803,7 @@ module_exit(exit_fmvj18x_cs);
 static irqreturn_t fjn_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
     struct net_device *dev = dev_id;
-    local_info_t *lp = dev->priv;
+    local_info_t *lp = netdev_priv(dev);
     ioaddr_t ioaddr;
     unsigned short tx_stat, rx_stat;
 
@@ -862,7 +862,7 @@ static irqreturn_t fjn_interrupt(int irq
 
 static void fjn_tx_timeout(struct net_device *dev)
 {
-    struct local_info_t *lp = (struct local_info_t *)dev->priv;
+    struct local_info_t *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
 
     printk(KERN_NOTICE "%s: transmit timed out with status %04x, %s?\n",
@@ -892,7 +892,7 @@ static void fjn_tx_timeout(struct net_de
 
 static int fjn_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-    struct local_info_t *lp = (struct local_info_t *)dev->priv;
+    struct local_info_t *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     short length = skb->len;
     
@@ -966,7 +966,7 @@ static int fjn_start_xmit(struct sk_buff
 
 static void fjn_reset(struct net_device *dev)
 {
-    struct local_info_t *lp = (struct local_info_t *)dev->priv;
+    struct local_info_t *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     int i;
 
@@ -1052,7 +1052,7 @@ static void fjn_reset(struct net_device 
 
 static void fjn_rx(struct net_device *dev)
 {
-    struct local_info_t *lp = (struct local_info_t *)dev->priv;
+    struct local_info_t *lp = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     int boguscount = 10;	/* 5 -> 10: by agy 19940922 */
 
@@ -1181,7 +1181,7 @@ static int fjn_config(struct net_device 
 
 static int fjn_open(struct net_device *dev)
 {
-    struct local_info_t *lp = (struct local_info_t *)dev->priv;
+    struct local_info_t *lp = netdev_priv(dev);
     dev_link_t *link = &lp->link;
 
     DEBUG(4, "fjn_open('%s').\n", dev->name);
@@ -1206,7 +1206,7 @@ static int fjn_open(struct net_device *d
 
 static int fjn_close(struct net_device *dev)
 {
-    struct local_info_t *lp = (struct local_info_t *)dev->priv;
+    struct local_info_t *lp = netdev_priv(dev);
     dev_link_t *link = &lp->link;
     ioaddr_t ioaddr = dev->base_addr;
 
@@ -1239,7 +1239,7 @@ static int fjn_close(struct net_device *
 
 static struct net_device_stats *fjn_get_stats(struct net_device *dev)
 {
-    local_info_t *lp = (local_info_t *)dev->priv;
+    local_info_t *lp = netdev_priv(dev);
     return &lp->stats;
 } /* fjn_get_stats */
 
@@ -1252,7 +1252,7 @@ static struct net_device_stats *fjn_get_
 static void set_rx_mode(struct net_device *dev)
 {
     ioaddr_t ioaddr = dev->base_addr;
-    struct local_info_t *lp = (struct local_info_t *)dev->priv;
+    struct local_info_t *lp = netdev_priv(dev);
     u_char mc_filter[8];		 /* Multicast hash filter */
     u_long flags;
     int i;
diff -purN linux-post-2.6.4-20040313/drivers/net/pcmcia/ibmtr_cs.c linux-post-2.6.4-20040314/drivers/net/pcmcia/ibmtr_cs.c
--- linux-post-2.6.4-20040313/drivers/net/pcmcia/ibmtr_cs.c	2004-01-19 23:37:59.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/pcmcia/ibmtr_cs.c	2004-03-03 00:06:03.000000000 +0000
@@ -178,7 +178,7 @@ static dev_link_t *ibmtr_attach(void)
 
     link = &info->link;
     link->priv = info;
-    info->ti = dev->priv; 
+    info->ti = netdev_priv(dev);
 
     link->io.Attributes1 = IO_DATA_PATH_WIDTH_8;
     link->io.NumPorts1 = 4;
@@ -256,7 +256,7 @@ static void ibmtr_detach(dev_link_t *lin
 	unregister_netdev(dev);
 
     {
-	struct tok_info *ti = (struct tok_info *)dev->priv;
+	struct tok_info *ti = netdev_priv(dev);
 	del_timer_sync(&(ti->tr_timer));
     }
     if (link->state & DEV_CONFIG)
@@ -287,7 +287,7 @@ static void ibmtr_config(dev_link_t *lin
     client_handle_t handle = link->handle;
     ibmtr_dev_t *info = link->priv;
     struct net_device *dev = info->dev;
-    struct tok_info *ti = dev->priv;
+    struct tok_info *ti = netdev_priv(dev);
     tuple_t tuple;
     cisparse_t parse;
     win_req_t req;
@@ -412,7 +412,7 @@ static void ibmtr_release(dev_link_t *li
     pcmcia_release_io(link->handle, &link->io);
     pcmcia_release_irq(link->handle, &link->irq);
     if (link->win) {
-	struct tok_info *ti = dev->priv;
+	struct tok_info *ti = netdev_priv(dev);
 	iounmap((void *)ti->mmio);
 	pcmcia_release_window(link->win);
 	pcmcia_release_window(info->sram_win_handle);
diff -purN linux-post-2.6.4-20040313/drivers/net/pcmcia/smc91c92_cs.c linux-post-2.6.4-20040314/drivers/net/pcmcia/smc91c92_cs.c
--- linux-post-2.6.4-20040313/drivers/net/pcmcia/smc91c92_cs.c	2004-01-19 23:34:56.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/pcmcia/smc91c92_cs.c	2004-03-03 00:07:05.000000000 +0000
@@ -327,7 +327,7 @@ static dev_link_t *smc91c92_attach(void)
     dev = alloc_etherdev(sizeof(struct smc_private));
     if (!dev)
 	return NULL;
-    smc = dev->priv;
+    smc = netdev_priv(dev);
     link = &smc->link;
     link->priv = dev;
 
@@ -483,7 +483,7 @@ static int next_tuple(client_handle_t ha
 static int mhz_3288_power(dev_link_t *link)
 {
     struct net_device *dev = link->priv;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     u_char tmp;
 
     /* Read the ISR twice... */
@@ -505,7 +505,7 @@ static int mhz_3288_power(dev_link_t *li
 static int mhz_mfc_config(dev_link_t *link)
 {
     struct net_device *dev = link->priv;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     tuple_t tuple;
     cisparse_t parse;
     u_char buf[255];
@@ -618,7 +618,7 @@ static int mhz_setup(dev_link_t *link)
 static void mot_config(dev_link_t *link)
 {
     struct net_device *dev = link->priv;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     ioaddr_t iouart = link->io.BasePort2;
 
@@ -894,7 +894,7 @@ static void smc91c92_config(dev_link_t *
 {
     client_handle_t handle = link->handle;
     struct net_device *dev = link->priv;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     tuple_t tuple;
     cisparse_t parse;
     u_short buf[32];
@@ -1069,7 +1069,7 @@ static void smc91c92_release(dev_link_t 
     pcmcia_release_irq(link->handle, &link->irq);
     if (link->win) {
 	struct net_device *dev = link->priv;
-	struct smc_private *smc = dev->priv;
+	struct smc_private *smc = netdev_priv(dev);
 	iounmap(smc->base);
 	pcmcia_release_window(link->win);
     }
@@ -1091,7 +1091,7 @@ static int smc91c92_event(event_t event,
 {
     dev_link_t *link = args->client_data;
     struct net_device *dev = link->priv;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     int i;
 
     DEBUG(1, "smc91c92_event(0x%06x)\n", event);
@@ -1240,7 +1240,7 @@ static void smc_dump(struct net_device *
 
 static int smc_open(struct net_device *dev)
 {
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     dev_link_t *link = &smc->link;
 
 #ifdef PCMCIA_DEBUG
@@ -1277,7 +1277,7 @@ static int smc_open(struct net_device *d
 
 static int smc_close(struct net_device *dev)
 {
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     dev_link_t *link = &smc->link;
     ioaddr_t ioaddr = dev->base_addr;
 
@@ -1314,7 +1314,7 @@ static int smc_close(struct net_device *
 
 static void smc_hardware_send_packet(struct net_device * dev)
 {
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     struct sk_buff *skb = smc->saved_skb;
     ioaddr_t ioaddr = dev->base_addr;
     u_char packet_no;
@@ -1379,7 +1379,7 @@ static void smc_hardware_send_packet(str
 
 static void smc_tx_timeout(struct net_device *dev)
 {
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
 
     printk(KERN_NOTICE "%s: SMC91c92 transmit timed out, "
@@ -1394,7 +1394,7 @@ static void smc_tx_timeout(struct net_de
 
 static int smc_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     u_short num_pages;
     short time_out, ir;
@@ -1460,7 +1460,7 @@ static int smc_start_xmit(struct sk_buff
 
 static void smc_tx_err(struct net_device * dev)
 {
-    struct smc_private *smc = (struct smc_private *)dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     int saved_packet = inw(ioaddr + PNR_ARR) & 0xff;
     int packet_no = inw(ioaddr + FIFO_PORTS) & 0x7f;
@@ -1504,7 +1504,7 @@ static void smc_tx_err(struct net_device
 
 static void smc_eph_irq(struct net_device *dev)
 {
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     u_short card_stats, ephs;
 
@@ -1539,7 +1539,7 @@ static void smc_eph_irq(struct net_devic
 static irqreturn_t smc_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
     struct net_device *dev = dev_id;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr;
     u_short saved_bank, saved_pointer, mask, status;
     unsigned int handled = 1;
@@ -1657,7 +1657,7 @@ irq_done:
 
 static void smc_rx(struct net_device *dev)
 {
-    struct smc_private *smc = (struct smc_private *)dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     int rx_status;
     int packet_length;	/* Caution: not frame length, rather words
@@ -1725,7 +1725,7 @@ static void smc_rx(struct net_device *de
 
 static struct net_device_stats *smc_get_stats(struct net_device *dev)
 {
-    struct smc_private *smc = (struct smc_private *)dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     /* Nothing to update - the 91c92 is a pretty primative chip. */
     return &smc->stats;
 }
@@ -1765,7 +1765,7 @@ static void fill_multicast_tbl(int count
 static void set_rx_mode(struct net_device *dev)
 {
     ioaddr_t ioaddr = dev->base_addr;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     u_int multicast_table[ 2 ] = { 0, };
     unsigned long flags;
     u_short rx_cfg_setting;
@@ -1804,7 +1804,7 @@ static void set_rx_mode(struct net_devic
 
 static int s9k_config(struct net_device *dev, struct ifmap *map)
 {
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     if ((map->port != (u_char)(-1)) && (map->port != dev->if_port)) {
 	if (smc->cfg & CFG_MII_SELECT)
 	    return -EOPNOTSUPP;
@@ -1830,7 +1830,7 @@ static int s9k_config(struct net_device 
 */
 static void smc_set_xcvr(struct net_device *dev, int if_port)
 {
-    struct smc_private *smc = (struct smc_private *)dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     u_short saved_bank;
 
@@ -1855,7 +1855,7 @@ static void smc_set_xcvr(struct net_devi
 static void smc_reset(struct net_device *dev)
 {
     ioaddr_t ioaddr = dev->base_addr;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     int i;
 
     DEBUG(0, "%s: smc91c92 reset called.\n", dev->name);
@@ -1930,7 +1930,7 @@ static void smc_reset(struct net_device 
 static void media_check(u_long arg)
 {
     struct net_device *dev = (struct net_device *) arg;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     ioaddr_t ioaddr = dev->base_addr;
     u_short i, media, saved_bank;
     u_short link;
@@ -2044,7 +2044,7 @@ reschedule:
 static int smc_link_ok(struct net_device *dev)
 {
     ioaddr_t ioaddr = dev->base_addr;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
 
     if (smc->cfg & CFG_MII_SELECT) {
 	return mii_link_ok(&smc->mii_if);
@@ -2109,7 +2109,7 @@ static int smc_netdev_set_ecmd(struct ne
 static int smc_ethtool_ioctl (struct net_device *dev, void *useraddr)
 {
     u32 ethcmd;
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
 
     if (get_user(ethcmd, (u32 *)useraddr))
 	return -EFAULT;
@@ -2202,7 +2202,7 @@ static int smc_ethtool_ioctl (struct net
 
 static int smc_ioctl (struct net_device *dev, struct ifreq *rq, int cmd)
 {
-    struct smc_private *smc = dev->priv;
+    struct smc_private *smc = netdev_priv(dev);
     struct mii_ioctl_data *mii;
     int rc = 0;
     u_short saved_bank;
diff -purN linux-post-2.6.4-20040313/drivers/net/pcmcia/xirc2ps_cs.c linux-post-2.6.4-20040314/drivers/net/pcmcia/xirc2ps_cs.c
--- linux-post-2.6.4-20040313/drivers/net/pcmcia/xirc2ps_cs.c	2004-01-19 23:29:56.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/pcmcia/xirc2ps_cs.c	2004-03-12 00:00:00.000000000 +0000
@@ -1666,6 +1666,7 @@ static void netdev_get_drvinfo(struct ne
 			       struct ethtool_drvinfo *info)
 {
 	strcpy(info->driver, "xirc2ps_cs");
+	sprintf(info->bus_info, "PCMCIA 0x%lx", dev->base_addr);
 }
 
 static struct ethtool_ops netdev_ethtool_ops = {
diff -purN linux-post-2.6.4-20040313/drivers/net/pcnet32.c linux-post-2.6.4-20040314/drivers/net/pcnet32.c
--- linux-post-2.6.4-20040313/drivers/net/pcnet32.c	2004-03-11 04:09:53.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/pcnet32.c	2004-03-13 14:11:07.000000000 +0000
@@ -225,10 +225,12 @@ static int full_duplex[MAX_UNITS];
  * v1.27b  Sep 30 2002 Kent Yoder <yoder1@us.ibm.com>
  * 	   Added timer for cable connection state changes.
  * v1.28   20 Feb 2004 Don Fry <brazilnut@us.ibm.com>
- *	   Jon Lewis <jonmason@us.ibm.com>, Chinmay Albal <albal@in.ibm.com>
+ *	   Jon Mason <jonmason@us.ibm.com>, Chinmay Albal <albal@in.ibm.com>
  *	   Now uses ethtool_ops, netif_msg_* and generic_mii_ioctl.
  *	   Fixes bogus 'Bus master arbitration failure', pci_[un]map_single
  *	   length errors, and transmit hangs.  Cleans up after errors in open.
+ *	   Jim Lewis <jklewis@us.ibm.com> added ethernet loopback test.
+ *	   Thomas Munck Steenholdt <tmus@tmus.dk> non-mii ioctl corrections.
  */
 
 
diff -purN linux-post-2.6.4-20040313/drivers/net/plip.c linux-post-2.6.4-20040314/drivers/net/plip.c
--- linux-post-2.6.4-20040313/drivers/net/plip.c	2004-01-10 16:35:11.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/plip.c	2004-03-03 18:52:24.000000000 +0000
@@ -280,7 +280,7 @@ inline static unsigned char read_status 
 static void
 plip_init_netdev(struct net_device *dev)
 {
-	struct net_local *nl = dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 
 	/* Then, override parts of it */
 	dev->hard_start_xmit	 = plip_tx_packet;
@@ -323,7 +323,7 @@ plip_init_netdev(struct net_device *dev)
 static void
 plip_kick_bh(struct net_device *dev)
 {
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 
 	if (nl->is_deferred)
 		schedule_work(&nl->immediate);
@@ -366,7 +366,7 @@ static plip_func connection_state_table[
 static void
 plip_bh(struct net_device *dev)
 {
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 	struct plip_local *snd = &nl->snd_data;
 	struct plip_local *rcv = &nl->rcv_data;
 	plip_func f;
@@ -384,7 +384,7 @@ plip_bh(struct net_device *dev)
 static void
 plip_timer_bh(struct net_device *dev)
 {
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 	
 	if (!(atomic_read (&nl->kill_timer))) {
 		plip_interrupt (-1, dev, NULL);
@@ -917,7 +917,7 @@ plip_interrupt(int irq, void *dev_id, st
 		return;
 	}
 
-	nl = (struct net_local *)dev->priv;
+	nl = netdev_priv(dev);
 	rcv = &nl->rcv_data;
 
 	spin_lock_irq (&nl->lock);
@@ -961,7 +961,7 @@ plip_interrupt(int irq, void *dev_id, st
 static int
 plip_tx_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 	struct plip_local *snd = &nl->snd_data;
 
 	if (netif_queue_stopped(dev))
@@ -1021,7 +1021,7 @@ plip_hard_header(struct sk_buff *skb, st
                  unsigned short type, void *daddr,
 	         void *saddr, unsigned len)
 {
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 	int ret;
 
 	if ((ret = nl->orig_hard_header(skb, dev, type, daddr, saddr, len)) >= 0)
@@ -1033,7 +1033,7 @@ plip_hard_header(struct sk_buff *skb, st
 int plip_hard_header_cache(struct neighbour *neigh,
                            struct hh_cache *hh)
 {
-	struct net_local *nl = (struct net_local *)neigh->dev->priv;
+	struct net_local *nl = neigh->dev->priv;
 	int ret;
 	
 	if ((ret = nl->orig_hard_header_cache(neigh, hh)) == 0)
@@ -1057,7 +1057,7 @@ int plip_hard_header_cache(struct neighb
 static int
 plip_open(struct net_device *dev)
 {
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 	struct in_device *in_dev;
 
 	/* Grab the port */
@@ -1116,7 +1116,7 @@ plip_open(struct net_device *dev)
 static int
 plip_close(struct net_device *dev)
 {
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 	struct plip_local *snd = &nl->snd_data;
 	struct plip_local *rcv = &nl->rcv_data;
 
@@ -1163,7 +1163,7 @@ static int
 plip_preempt(void *handle)
 {
 	struct net_device *dev = (struct net_device *)handle;
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 
 	/* Stand our ground if a datagram is on the wire */
 	if (nl->connection != PLIP_CN_NONE) {
@@ -1179,7 +1179,7 @@ static void
 plip_wakeup(void *handle)
 {
 	struct net_device *dev = (struct net_device *)handle;
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 
 	if (nl->port_owner) {
 		/* Why are we being woken up? */
@@ -1207,7 +1207,7 @@ plip_wakeup(void *handle)
 static struct net_device_stats *
 plip_get_stats(struct net_device *dev)
 {
-	struct net_local *nl = (struct net_local *)dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 	struct net_device_stats *r = &nl->enet_stats;
 
 	return r;
@@ -1216,7 +1216,7 @@ plip_get_stats(struct net_device *dev)
 static int
 plip_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
-	struct net_local *nl = (struct net_local *) dev->priv;
+	struct net_local *nl = netdev_priv(dev);
 	struct plipconf *pc = (struct plipconf *) &rq->ifr_data;
 
 	switch(pc->pcmd) {
@@ -1288,7 +1288,7 @@ static void plip_attach (struct parport 
 		                 "which is fairly inefficient!\n", port->name);
 		}
 
-		nl = dev->priv;
+		nl = netdev_priv(dev);
 		nl->pardev = parport_register_device(port, name, plip_preempt,
 						 plip_wakeup, plip_interrupt, 
 						 0, dev);
@@ -1348,7 +1348,7 @@ static void __exit plip_cleanup_module (
 
 	for (i=0; i < PLIP_MAX; i++) {
 		if ((dev = dev_plip[i])) {
-			struct net_local *nl = dev->priv;
+			struct net_local *nl = netdev_priv(dev);
 			unregister_netdev(dev);
 			if (nl->port_owner)
 				parport_release(nl->pardev);
diff -purN linux-post-2.6.4-20040313/drivers/net/rrunner.c linux-post-2.6.4-20040314/drivers/net/rrunner.c
--- linux-post-2.6.4-20040313/drivers/net/rrunner.c	2003-09-22 01:01:09.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/rrunner.c	2004-03-02 22:54:42.000000000 +0000
@@ -108,7 +108,7 @@ static int __devinit rr_init_one(struct 
 		goto out2;
 	}
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 
 	SET_MODULE_OWNER(dev);
 	SET_NETDEV_DEV(dev, &pdev->dev);
@@ -236,7 +236,7 @@ static void __devexit rr_remove_one (str
 	struct net_device *dev = pci_get_drvdata(pdev);
 
 	if (dev) {
-		struct rr_private *rr = dev->priv;
+		struct rr_private *rr = netdev_priv(dev);
 
 		if (!(readl(&rr->regs->HostCtrl) & NIC_HALTED)){
 			printk(KERN_ERR "%s: trying to unload running NIC\n",
@@ -308,7 +308,7 @@ static int rr_reset(struct net_device *d
 	u32 start_pc;
 	int i;
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 	regs = rrpriv->regs;
 
 	rr_load_firmware(dev);
@@ -524,7 +524,7 @@ static int __init rr_init(struct net_dev
 	u32 sram_size, rev;
 	int i;
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 	regs = rrpriv->regs;
 
 	rev = readl(&regs->FwRev);
@@ -595,7 +595,7 @@ static int rr_init1(struct net_device *d
 	int ecode = 0;
 	short i;
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 	regs = rrpriv->regs;
 
 	spin_lock_irqsave(&rrpriv->lock, flags);
@@ -761,7 +761,7 @@ static u32 rr_handle_event(struct net_de
 	struct rr_regs *regs;
 	u32 tmp;
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 	regs = rrpriv->regs;
 
 	while (prodidx != eidx){
@@ -960,7 +960,7 @@ static u32 rr_handle_event(struct net_de
 
 static void rx_int(struct net_device *dev, u32 rxlimit, u32 index)
 {
-	struct rr_private *rrpriv = (struct rr_private *)dev->priv;
+	struct rr_private *rrpriv = netdev_priv(dev);
 	struct rr_regs *regs = rrpriv->regs;
 
 	do {
@@ -1052,7 +1052,7 @@ static irqreturn_t rr_interrupt(int irq,
 	struct net_device *dev = (struct net_device *)dev_id;
 	u32 prodidx, rxindex, eidx, txcsmr, rxlimit, txcon;
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 	regs = rrpriv->regs;
 
 	if (!(readl(&regs->HostCtrl) & RR_INT))
@@ -1133,7 +1133,7 @@ static irqreturn_t rr_interrupt(int irq,
 static void rr_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct rr_private *rrpriv = (struct rr_private *)dev->priv;
+	struct rr_private *rrpriv = netdev_priv(dev);
 	struct rr_regs *regs = rrpriv->regs;
 	unsigned long flags;
 
@@ -1160,7 +1160,7 @@ static void rr_timer(unsigned long data)
 
 static int rr_open(struct net_device *dev)
 {
-	struct rr_private *rrpriv = (struct rr_private *)dev->priv;
+	struct rr_private *rrpriv = netdev_priv(dev);
 	struct pci_dev *pdev = rrpriv->pci_dev;
 	struct rr_regs *regs;
 	int ecode = 0;
@@ -1296,7 +1296,7 @@ static void rr_dump(struct net_device *d
 	short i;
 	int len;
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 	regs = rrpriv->regs;
 
 	printk("%s: dumping NIC TX rings\n", dev->name);
@@ -1361,7 +1361,7 @@ static int rr_close(struct net_device *d
 
 	netif_stop_queue(dev);
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 	regs = rrpriv->regs;
 
 	/*
@@ -1418,7 +1418,7 @@ static int rr_close(struct net_device *d
 
 static int rr_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct rr_private *rrpriv = (struct rr_private *)dev->priv;
+	struct rr_private *rrpriv = netdev_priv(dev);
 	struct rr_regs *regs = rrpriv->regs;
 	struct ring_ctrl *txctrl;
 	unsigned long flags;
@@ -1488,7 +1488,7 @@ static struct net_device_stats *rr_get_s
 {
 	struct rr_private *rrpriv;
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 
 	return(&rrpriv->stats);
 }
@@ -1511,7 +1511,7 @@ static int rr_load_firmware(struct net_d
 	u32 p2len, p2size, nr_seg, revision, io, sram_size;
 	struct eeprom *hw = NULL;
 
-	rrpriv = (struct rr_private *)dev->priv;
+	rrpriv = netdev_priv(dev);
 	regs = rrpriv->regs;
 
 	if (dev->flags & IFF_UP)
@@ -1614,7 +1614,7 @@ static int rr_ioctl(struct net_device *d
 	unsigned int i;
 	int error = -EOPNOTSUPP;
 
-	rrpriv = dev->priv;
+	rrpriv = netdev_priv(dev);
 
 	switch(cmd){
 	case SIOCRRGFW:
diff -purN linux-post-2.6.4-20040313/drivers/net/sb1000.c linux-post-2.6.4-20040314/drivers/net/sb1000.c
--- linux-post-2.6.4-20040313/drivers/net/sb1000.c	2003-09-22 01:01:09.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/sb1000.c	2004-03-02 22:29:21.000000000 +0000
@@ -746,7 +746,7 @@ sb1000_rx(struct net_device *dev)
 	int ioaddr, ns;
 	unsigned int skbsize;
 	struct sk_buff *skb;
-	struct sb1000_private *lp = (struct sb1000_private *)dev->priv;
+	struct sb1000_private *lp = netdev_priv(dev);
 	struct net_device_stats *stats = &lp->stats;
 
 	/* SB1000 frame constants */
@@ -905,7 +905,7 @@ sb1000_error_dpc(struct net_device *dev)
 	char *name;
 	unsigned char st[5];
 	int ioaddr[2];
-	struct sb1000_private *lp = (struct sb1000_private *)dev->priv;
+	struct sb1000_private *lp = netdev_priv(dev);
 	const unsigned char Command0[6] = {0x80, 0x26, 0x00, 0x00, 0x00, 0x00};
 	const int ErrorDpcCounterInitialize = 200;
 
@@ -932,7 +932,7 @@ sb1000_open(struct net_device *dev)
 {
 	char *name;
 	int ioaddr[2], status;
-	struct sb1000_private *lp = (struct sb1000_private *)dev->priv;
+	struct sb1000_private *lp = netdev_priv(dev);
 	const unsigned short FirmwareVersion[] = {0x01, 0x01};
 
 	ioaddr[0] = dev->base_addr;
@@ -998,7 +998,7 @@ static int sb1000_dev_ioctl(struct net_d
 	short PID[4];
 	int ioaddr[2], status, frequency;
 	unsigned int stats[5];
-	struct sb1000_private *lp = (struct sb1000_private *)dev->priv;
+	struct sb1000_private *lp = netdev_priv(dev);
 
 	if (!(dev && dev->flags & IFF_UP))
 		return -ENODEV;
@@ -1092,7 +1092,7 @@ static irqreturn_t sb1000_interrupt(int 
 	unsigned char st;
 	int ioaddr[2];
 	struct net_device *dev = (struct net_device *) dev_id;
-	struct sb1000_private *lp = (struct sb1000_private *)dev->priv;
+	struct sb1000_private *lp = netdev_priv(dev);
 
 	const unsigned char Command0[6] = {0x80, 0x2c, 0x00, 0x00, 0x00, 0x00};
 	const unsigned char Command1[6] = {0x80, 0x2e, 0x00, 0x00, 0x00, 0x00};
@@ -1148,7 +1148,7 @@ static irqreturn_t sb1000_interrupt(int 
 
 static struct net_device_stats *sb1000_stats(struct net_device *dev)
 {
-	struct sb1000_private *lp = (struct sb1000_private *)dev->priv;
+	struct sb1000_private *lp = netdev_priv(dev);
 	return &lp->stats;
 }
 
@@ -1156,7 +1156,7 @@ static int sb1000_close(struct net_devic
 {
 	int i;
 	int ioaddr[2];
-	struct sb1000_private *lp = (struct sb1000_private *)dev->priv;
+	struct sb1000_private *lp = netdev_priv(dev);
 
 	if (sb1000_debug > 2)
 		printk(KERN_DEBUG "%s: Shutting down sb1000.\n", dev->name);
diff -purN linux-post-2.6.4-20040313/drivers/net/sb1250-mac.c linux-post-2.6.4-20040314/drivers/net/sb1250-mac.c
--- linux-post-2.6.4-20040313/drivers/net/sb1250-mac.c	2004-02-22 20:30:54.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/sb1250-mac.c	2004-03-02 22:32:50.000000000 +0000
@@ -2080,7 +2080,7 @@ static int sbmac_set_duplex(struct sbmac
 static irqreturn_t sbmac_intr(int irq,void *dev_instance,struct pt_regs *rgs)
 {
 	struct net_device *dev = (struct net_device *) dev_instance;
-	struct sbmac_softc *sc = (struct sbmac_softc *) (dev->priv);
+	struct sbmac_softc *sc = netdev_priv(dev);
 	uint64_t isr;
 	int handled = 0;
 
@@ -2150,7 +2150,7 @@ static irqreturn_t sbmac_intr(int irq,vo
  ********************************************************************* */
 static int sbmac_start_tx(struct sk_buff *skb, struct net_device *dev)
 {
-	struct sbmac_softc *sc = (struct sbmac_softc *)dev->priv;
+	struct sbmac_softc *sc = netdev_priv(dev);
 	
 	/* lock eth irq */
 	spin_lock_irq (&sc->sbm_lock);
@@ -2374,7 +2374,7 @@ static int sbmac_init(struct net_device 
 	int i;
 	int err;
 	
-	sc = (struct sbmac_softc *)dev->priv;
+	sc = netdev_priv(dev);
 	
 	/* Determine controller base address */
 	
@@ -2454,7 +2454,7 @@ static int sbmac_init(struct net_device 
 
 static int sbmac_open(struct net_device *dev)
 {
-	struct sbmac_softc *sc = (struct sbmac_softc *)dev->priv;
+	struct sbmac_softc *sc = netdev_priv(dev);
 	
 	if (debug > 1) {
 		printk(KERN_DEBUG "%s: sbmac_open() irq %d.\n", dev->name, dev->irq);
@@ -2609,7 +2609,7 @@ static int sbmac_mii_poll(struct sbmac_s
 static void sbmac_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct sbmac_softc *sc = (struct sbmac_softc *)dev->priv;
+	struct sbmac_softc *sc = netdev_priv(dev);
 	int next_tick = HZ;
 	int mii_status;
 
@@ -2655,7 +2655,7 @@ static void sbmac_timer(unsigned long da
 
 static void sbmac_tx_timeout (struct net_device *dev)
 {
-	struct sbmac_softc *sc = (struct sbmac_softc *) dev->priv;
+	struct sbmac_softc *sc = netdev_priv(dev);
 	
 	spin_lock_irq (&sc->sbm_lock);
 	
@@ -2673,7 +2673,7 @@ static void sbmac_tx_timeout (struct net
 
 static struct net_device_stats *sbmac_get_stats(struct net_device *dev)
 {
-	struct sbmac_softc *sc = (struct sbmac_softc *)dev->priv;
+	struct sbmac_softc *sc = netdev_priv(dev);
 	unsigned long flags;
 	
 	spin_lock_irqsave(&sc->sbm_lock, flags);
@@ -2691,7 +2691,7 @@ static void sbmac_set_rx_mode(struct net
 {
 	unsigned long flags;
 	int msg_flag = 0;
-	struct sbmac_softc *sc = (struct sbmac_softc *)dev->priv;
+	struct sbmac_softc *sc = netdev_priv(dev);
 
 	spin_lock_irqsave(&sc->sbm_lock, flags);
 	if ((dev->flags ^ sc->sbm_devflags) & IFF_PROMISC) {
@@ -2726,7 +2726,7 @@ static void sbmac_set_rx_mode(struct net
 
 static int sbmac_mii_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
-	struct sbmac_softc *sc = (struct sbmac_softc *)dev->priv;
+	struct sbmac_softc *sc = netdev_priv(dev);
 	u16 *data = (u16 *)&rq->ifr_data;
 	unsigned long flags;
 	int retval;
@@ -2762,7 +2762,7 @@ static int sbmac_mii_ioctl(struct net_de
 
 static int sbmac_close(struct net_device *dev)
 {
-	struct sbmac_softc *sc = (struct sbmac_softc *)dev->priv;
+	struct sbmac_softc *sc = netdev_priv(dev);
 	unsigned long flags;
 	int irq;
 
@@ -2911,7 +2911,7 @@ sbmac_cleanup_module(void)
 	for (idx = 0; idx < MAX_UNITS; idx++) {
 		dev = dev_sbmac[idx];
 		if (!dev) {
-			struct sbmac_softc *sc = dev->priv;
+			struct sbmac_softc *sc = netdev_priv(dev);
 			unregister_netdev(dev);
 			sbmac_uninitctx(sc);
 			free_netdev(dev);
diff -purN linux-post-2.6.4-20040313/drivers/net/seeq8005.c linux-post-2.6.4-20040314/drivers/net/seeq8005.c
--- linux-post-2.6.4-20040313/drivers/net/seeq8005.c	2004-01-10 14:53:58.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/seeq8005.c	2004-03-02 22:33:41.000000000 +0000
@@ -357,7 +357,7 @@ out:
    */
 static int seeq8005_open(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	{
 		 int irqval = request_irq(dev->irq, &seeq8005_interrupt, 0, "seeq8005", dev);
@@ -390,7 +390,7 @@ static void seeq8005_timeout(struct net_
 
 static int seeq8005_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	short length = skb->len;
 	unsigned char *buf;
 
@@ -424,7 +424,7 @@ static irqreturn_t seeq8005_interrupt(in
 	int handled = 0;
 
 	ioaddr = dev->base_addr;
-	lp = (struct net_local *)dev->priv;
+	lp = netdev_priv(dev);
 
 	status = inw(SEEQ_STATUS);
 	do {
@@ -462,7 +462,7 @@ static irqreturn_t seeq8005_interrupt(in
 /* We have a good packet(s), get it/them out of the buffers. */
 static void seeq8005_rx(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int boguscount = 10;
 	int pkt_hdr;
 	int ioaddr = dev->base_addr;
@@ -561,7 +561,7 @@ static void seeq8005_rx(struct net_devic
 /* The inverse routine to net_open(). */
 static int seeq8005_close(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 
 	lp->open_time = 0;
@@ -583,7 +583,7 @@ static int seeq8005_close(struct net_dev
    closed. */
 static struct net_device_stats *seeq8005_get_stats(struct net_device *dev)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -618,7 +618,7 @@ static void set_multicast_list(struct ne
 
 void seeq8005_init(struct net_device *dev, int startp)
 {
-	struct net_local *lp = (struct net_local *)dev->priv;
+	struct net_local *lp = netdev_priv(dev);
 	int ioaddr = dev->base_addr;
 	int i;
 	
diff -purN linux-post-2.6.4-20040313/drivers/net/sgiseeq.c linux-post-2.6.4-20040314/drivers/net/sgiseeq.c
--- linux-post-2.6.4-20040313/drivers/net/sgiseeq.c	2004-01-10 15:30:38.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/sgiseeq.c	2004-03-02 22:35:32.000000000 +0000
@@ -151,7 +151,7 @@ static inline void seeq_load_eaddr(struc
 
 static int seeq_init_ring(struct net_device *dev)
 {
-	struct sgiseeq_private *sp = (struct sgiseeq_private *) dev->priv;
+	struct sgiseeq_private *sp = netdev_priv(dev);
 	volatile struct sgiseeq_init_block *ib = &sp->srings;
 	int i;
 
@@ -423,7 +423,7 @@ static inline void sgiseeq_tx(struct net
 static irqreturn_t sgiseeq_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) dev_id;
-	struct sgiseeq_private *sp = (struct sgiseeq_private *) dev->priv;
+	struct sgiseeq_private *sp = netdev_priv(dev);
 	struct hpc3_ethregs *hregs = sp->hregs;
 	struct sgiseeq_regs *sregs = sp->sregs;
 
@@ -445,7 +445,7 @@ static irqreturn_t sgiseeq_interrupt(int
 
 static int sgiseeq_open(struct net_device *dev)
 {
-	struct sgiseeq_private *sp = (struct sgiseeq_private *)dev->priv;
+	struct sgiseeq_private *sp = netdev_priv(dev);
 	struct sgiseeq_regs *sregs = sp->sregs;
 
 	int err = init_seeq(dev, sp, sregs);
@@ -459,7 +459,7 @@ static int sgiseeq_open(struct net_devic
 
 static int sgiseeq_close(struct net_device *dev)
 {
-	struct sgiseeq_private *sp = (struct sgiseeq_private *) dev->priv;
+	struct sgiseeq_private *sp = netdev_priv(dev);
 	struct sgiseeq_regs *sregs = sp->sregs;
 
 	netif_stop_queue(dev);
@@ -472,7 +472,7 @@ static int sgiseeq_close(struct net_devi
 
 static inline int sgiseeq_reset(struct net_device *dev)
 {
-	struct sgiseeq_private *sp = (struct sgiseeq_private *) dev->priv;
+	struct sgiseeq_private *sp = netdev_priv(dev);
 	struct sgiseeq_regs *sregs = sp->sregs;
 	int err;
 
@@ -494,7 +494,7 @@ void sgiseeq_my_reset(void)
 
 static int sgiseeq_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct sgiseeq_private *sp = (struct sgiseeq_private *) dev->priv;
+	struct sgiseeq_private *sp = netdev_priv(dev);
 	struct hpc3_ethregs *hregs = sp->hregs;
 	unsigned long flags;
 	struct sgiseeq_tx_desc *td;
@@ -560,7 +560,7 @@ static void timeout(struct net_device *d
 
 static struct net_device_stats *sgiseeq_get_stats(struct net_device *dev)
 {
-	struct sgiseeq_private *sp = (struct sgiseeq_private *) dev->priv;
+	struct sgiseeq_private *sp = netdev_priv(dev);
 
 	return &sp->stats;
 }
@@ -710,7 +710,7 @@ static void __exit sgiseeq_exit(void)
 	struct net_device *next, *dev = root_sgiseeq_dev;
 
 	while (dev) {
-		sp = (struct sgiseeq_private *) dev->priv;
+		sp = netdev_priv(dev);
 		next = sp->next_module;
 		unregister_netdev(dev);
 		free_irq(dev->irq, dev);
diff -purN linux-post-2.6.4-20040313/drivers/net/sk_g16.c linux-post-2.6.4-20040314/drivers/net/sk_g16.c
--- linux-post-2.6.4-20040313/drivers/net/sk_g16.c	2004-01-10 14:49:54.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/sk_g16.c	2004-03-02 22:37:18.000000000 +0000
@@ -650,7 +650,7 @@ int __init SK_probe(struct net_device *d
     int sk_addr_flag = 0;   /* SK ADDR correct? 1 - no, 0 - yes */
     unsigned int rom_addr;  /* used to store RAM address used for POS_ADDR */
 
-    struct priv *p = dev->priv;         /* SK_G16 private structure */
+    struct priv *p = netdev_priv(dev);	/* SK_G16 private structure */
 
     if (inb(SK_POS0) != SK_IDLOW || inb(SK_POS1) != SK_IDHIGH)
 	return -ENODEV;
@@ -869,7 +869,7 @@ static int SK_open(struct net_device *de
 
     int irqtab[] = SK_IRQS; 
 
-    struct priv *p = (struct priv *)dev->priv;
+    struct priv *p = netdev_priv(dev);
 
     PRINTK(("## %s: At beginning of SK_open(). CSR0: %#06x\n", 
            SK_NAME, SK_read_reg(CSR0)));
@@ -1023,7 +1023,7 @@ static int SK_lance_init(struct net_devi
 {
     int i;
     unsigned long flags;
-    struct priv *p = (struct priv *) dev->priv; 
+    struct priv *p = netdev_priv(dev);
     struct tmd  *tmdp;
     struct rmd  *rmdp;
 
@@ -1196,7 +1196,7 @@ static void SK_timeout(struct net_device
 
 static int SK_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-    struct priv *p = (struct priv *) dev->priv;
+    struct priv *p = netdev_priv(dev);
     struct tmd *tmdp;
     static char pad[64];
 
@@ -1285,7 +1285,7 @@ static irqreturn_t SK_interrupt(int irq,
 {
     int csr0;
     struct net_device *dev = dev_id;
-    struct priv *p = (struct priv *) dev->priv;
+    struct priv *p = netdev_priv(dev);
 
 
     PRINTK2(("## %s: SK_interrupt(). status: %#06x\n", 
@@ -1355,7 +1355,7 @@ static void SK_txintr(struct net_device 
 {
     int tmdstat;
     struct tmd *tmdp;
-    struct priv *p = (struct priv *) dev->priv;
+    struct priv *p = netdev_priv(dev);
 
 
     PRINTK2(("## %s: SK_txintr() status: %#06x\n", 
@@ -1469,7 +1469,7 @@ static void SK_rxintr(struct net_device 
 
     struct rmd *rmdp;
     int rmdstat;
-    struct priv *p = (struct priv *) dev->priv;
+    struct priv *p = netdev_priv(dev);
 
     PRINTK2(("## %s: SK_rxintr(). CSR0: %#06x\n", 
             SK_NAME, SK_read_reg(CSR0)));
@@ -1653,7 +1653,7 @@ static int SK_close(struct net_device *d
 static struct net_device_stats *SK_get_stats(struct net_device *dev)
 {
 
-    struct priv *p = (struct priv *) dev->priv;
+    struct priv *p = netdev_priv(dev);
 
     PRINTK(("## %s: SK_get_stats(). CSR0: %#06x\n", 
            SK_NAME, SK_read_reg(CSR0)));
@@ -2030,7 +2030,7 @@ void __init SK_print_ram(struct net_devi
 {
 
     int i;    
-    struct priv *p = (struct priv *) dev->priv;
+    struct priv *p = netdev_priv(dev);
 
     printk("## %s: RAM Details.\n"
            "##   RAM at %#08x tmdhead: %#08x rmdhead: %#08x initblock: %#08x\n",
diff -purN linux-post-2.6.4-20040313/drivers/net/smc9194.c linux-post-2.6.4-20040314/drivers/net/smc9194.c
--- linux-post-2.6.4-20040313/drivers/net/smc9194.c	2004-01-10 14:54:06.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/smc9194.c	2004-03-02 22:38:31.000000000 +0000
@@ -465,7 +465,7 @@ static void smc_setmulticast( int ioaddr
 */
 static int smc_wait_to_send_packet( struct sk_buff * skb, struct net_device * dev )
 {
-	struct smc_local *lp 	= (struct smc_local *)dev->priv;
+	struct smc_local *lp = netdev_priv(dev);
 	unsigned short ioaddr 	= dev->base_addr;
 	word 			length;
 	unsigned short 		numPages;
@@ -576,7 +576,7 @@ static int smc_wait_to_send_packet( stru
 */
 static void smc_hardware_send_packet( struct net_device * dev )
 {
-	struct smc_local *lp = (struct smc_local *)dev->priv;
+	struct smc_local *lp = netdev_priv(dev);
 	byte	 		packet_no;
 	struct sk_buff * 	skb = lp->saved_skb;
 	word			length;
@@ -1150,7 +1150,7 @@ static irqreturn_t smc_interrupt(int irq
 {
 	struct net_device *dev 	= dev_id;
 	int ioaddr 		= dev->base_addr;
-	struct smc_local *lp 	= (struct smc_local *)dev->priv;
+	struct smc_local *lp = netdev_priv(dev);
 
 	byte	status;
 	word	card_stats;
@@ -1274,7 +1274,7 @@ static irqreturn_t smc_interrupt(int irq
 */
 static void smc_rcv(struct net_device *dev)
 {
-	struct smc_local *lp = (struct smc_local *)dev->priv;
+	struct smc_local *lp = netdev_priv(dev);
 	int 	ioaddr = dev->base_addr;
 	int 	packet_number;
 	word	status;
@@ -1401,7 +1401,7 @@ done:
 static void smc_tx( struct net_device * dev )
 {
 	int	ioaddr = dev->base_addr;
-	struct smc_local *lp = (struct smc_local *)dev->priv;
+	struct smc_local *lp = netdev_priv(dev);
 	byte saved_packet;
 	byte packet_no;
 	word tx_status;
@@ -1474,7 +1474,7 @@ static int smc_close(struct net_device *
  . This may be called with the card open or closed.
  .-------------------------------------------------------------*/
 static struct net_device_stats* smc_query_statistics(struct net_device *dev) {
-	struct smc_local *lp = (struct smc_local *)dev->priv;
+	struct smc_local *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
diff -purN linux-post-2.6.4-20040313/drivers/net/sun3lance.c linux-post-2.6.4-20040314/drivers/net/sun3lance.c
--- linux-post-2.6.4-20040313/drivers/net/sun3lance.c	2004-02-22 20:31:10.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/sun3lance.c	2004-03-03 20:31:02.000000000 +0000
@@ -332,7 +332,7 @@ static int __init lance_probe( struct ne
 		return 0;
 	}
 
-	lp = (struct lance_private *)dev->priv;
+	lp = netdev_priv(dev);
 
 	/* XXX - leak? */
 	MEM = dvma_malloc_align(sizeof(struct lance_memory), 0x10000);
@@ -402,7 +402,7 @@ static int __init lance_probe( struct ne
 
 static int lance_open( struct net_device *dev )
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	int i;
 
 	DPRINTK( 2, ( "%s: lance_open()\n", dev->name ));
@@ -439,7 +439,7 @@ static int lance_open( struct net_device
 
 static void lance_init_ring( struct net_device *dev )
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	int i;
 
 	lp->lock = 0;
@@ -499,7 +499,7 @@ static void lance_init_ring( struct net_
 
 static int lance_start_xmit( struct sk_buff *skb, struct net_device *dev )
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	int entry, len;
 	struct lance_tx_head *head;
 	unsigned long flags;
@@ -646,7 +646,7 @@ static int lance_start_xmit( struct sk_b
 static irqreturn_t lance_interrupt( int irq, void *dev_id, struct pt_regs *fp)
 {
 	struct net_device *dev = dev_id;
-	struct lance_private *lp = dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	int csr0;
 	static int in_interrupt;
 
@@ -772,7 +772,7 @@ static irqreturn_t lance_interrupt( int 
 /* get packet, toss into skbuff */
 static int lance_rx( struct net_device *dev )
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	int entry = lp->new_rx;
 
 	/* If we own the next entry, it's a new packet. Send it up. */
@@ -870,7 +870,7 @@ static int lance_rx( struct net_device *
 
 static int lance_close( struct net_device *dev )
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	netif_stop_queue(dev);
 
@@ -888,7 +888,7 @@ static int lance_close( struct net_devic
 
 static struct net_device_stats *lance_get_stats( struct net_device *dev )
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -904,7 +904,7 @@ static struct net_device_stats *lance_ge
 /* completely untested on a sun3 */
 static void set_multicast_list( struct net_device *dev )
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	if(netif_queue_stopped(dev))
 		/* Only possible if board is already started */
diff -purN linux-post-2.6.4-20040313/drivers/net/sunlance.c linux-post-2.6.4-20040314/drivers/net/sunlance.c
--- linux-post-2.6.4-20040313/drivers/net/sunlance.c	2003-10-17 09:19:40.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/sunlance.c	2004-03-03 20:26:43.000000000 +0000
@@ -313,7 +313,7 @@ static void load_csrs(struct lance_priva
 /* Setup the Lance Rx and Tx rings */
 static void lance_init_ring_dvma(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	dma_addr_t aib = lp->init_block_dvma;
 	__u32 leptr;
@@ -370,7 +370,7 @@ static void lance_init_ring_dvma(struct 
 
 static void lance_init_ring_pio(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	u32 leptr;
 	int i;
@@ -500,7 +500,7 @@ static int init_restart_lance(struct lan
 
 static void lance_rx_dvma(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	volatile struct lance_rx_desc *rd;
 	u8 bits;
@@ -563,7 +563,7 @@ static void lance_rx_dvma(struct net_dev
 
 static void lance_tx_dvma(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	int i, j;
 
@@ -673,7 +673,7 @@ static void lance_piocopy_to_skb(struct 
 
 static void lance_rx_pio(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	volatile struct lance_rx_desc *rd;
 	unsigned char bits;
@@ -735,7 +735,7 @@ static void lance_rx_pio(struct net_devi
 
 static void lance_tx_pio(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	int i, j;
 
@@ -816,7 +816,7 @@ out:
 static irqreturn_t lance_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_id;
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	int csr0;
     
 	sbus_writew(LE_CSR0, lp->lregs + RAP);
@@ -915,7 +915,7 @@ struct net_device *last_dev = 0;
 
 static int lance_open(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *)dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	int status = 0;
 
@@ -968,7 +968,7 @@ static int lance_open(struct net_device 
 
 static int lance_close(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	netif_stop_queue(dev);
 	del_timer_sync(&lp->multicast_timer);
@@ -981,7 +981,7 @@ static int lance_close(struct net_device
 
 static int lance_reset(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	int status;
     
 	STOP_LANCE(lp);
@@ -1102,7 +1102,7 @@ static void lance_piozero(volatile void 
 
 static void lance_tx_timeout(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	printk(KERN_ERR "%s: transmit timed out, status %04x, reset\n",
 	       dev->name, sbus_readw(lp->lregs + RDP));
@@ -1112,7 +1112,7 @@ static void lance_tx_timeout(struct net_
 
 static int lance_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	int entry, skblen, len;
 
@@ -1165,7 +1165,7 @@ static int lance_start_xmit(struct sk_bu
 
 static struct net_device_stats *lance_get_stats(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	return &lp->stats;
 }
@@ -1173,7 +1173,7 @@ static struct net_device_stats *lance_ge
 /* taken from the depca driver */
 static void lance_load_multicast(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	volatile u16 *mcast_table = (u16 *) &ib->filter;
 	struct dev_mc_list *dmi = dev->mc_list;
@@ -1223,7 +1223,7 @@ static void lance_load_multicast(struct 
 
 static void lance_set_multicast(struct net_device *dev)
 {
-	struct lance_private *lp = (struct lance_private *) dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 	volatile struct lance_init_block *ib = lp->init_block;
 	u16 mode;
 
@@ -1291,7 +1291,7 @@ static void lance_free_hwresources(struc
 /* Ethtool support... */
 static void sparc_lance_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
-	struct lance_private *lp = dev->priv;
+	struct lance_private *lp = netdev_priv(dev);
 
 	strcpy(info->driver, "sunlance");
 	strcpy(info->version, "2.02");
@@ -1325,7 +1325,7 @@ static int __init sparc_lance_init(struc
 	if (!dev)
 		return -ENOMEM;
 
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 
 	if (sparc_lance_debug && version_printed++ == 0)
 		printk (KERN_INFO "%s", version);
diff -purN linux-post-2.6.4-20040313/drivers/net/tokenring/abyss.c linux-post-2.6.4-20040314/drivers/net/tokenring/abyss.c
--- linux-post-2.6.4-20040313/drivers/net/tokenring/abyss.c	2004-02-20 22:26:02.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tokenring/abyss.c	2004-03-03 00:33:00.000000000 +0000
@@ -154,7 +154,7 @@ static int __devinit abyss_attach(struct
 		printk(":%2.2x", dev->dev_addr[i]);
 	printk("\n");
 
-	tp = dev->priv;
+	tp = netdev_priv(dev);
 	tp->setnselout = abyss_setnselout_pins;
 	tp->sifreadb = abyss_sifreadb;
 	tp->sifreadw = abyss_sifreadw;
@@ -188,7 +188,7 @@ err_out_trdev:
 static unsigned short abyss_setnselout_pins(struct net_device *dev)
 {
 	unsigned short val = 0;
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	
 	if(tp->DataRate == SPEED_4)
 		val |= 0x01;  /* Set 4Mbps */
@@ -398,7 +398,7 @@ static void abyss_read_eeprom(struct net
 	unsigned short val;
 	int i;
 	
-	tp = (struct net_local *)dev->priv;
+	tp = netdev_priv(dev);
 	ioaddr = dev->base_addr;
 	
 	/* Must enable glue chip first */
diff -purN linux-post-2.6.4-20040313/drivers/net/tokenring/madgemc.c linux-post-2.6.4-20040314/drivers/net/tokenring/madgemc.c
--- linux-post-2.6.4-20040313/drivers/net/tokenring/madgemc.c	2004-02-20 22:26:02.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tokenring/madgemc.c	2004-03-03 00:33:28.000000000 +0000
@@ -365,7 +365,7 @@ static int __init madgemc_probe(void)
 				return 0;
 			return -1;
 		}
-		tp = (struct net_local *)dev->priv;
+		tp = netdev_priv(dev);
 
 		/* 
 		 * The MC16 is physically a 32bit card.  However, Madge
@@ -504,7 +504,7 @@ static irqreturn_t madgemc_interrupt(int
 unsigned short madgemc_setnselout_pins(struct net_device *dev)
 {
 	unsigned char reg1;
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	
 	reg1 = inb(dev->base_addr + MC_CONTROL_REG1);
 
@@ -731,7 +731,7 @@ static int madgemc_mcaproc(char *buf, in
 	}
 	len += sprintf(buf+len, "-------\n");
 	if (curcard) {
-		struct net_local *tp = (struct net_local *)dev->priv;
+		struct net_local *tp = netdev_priv(dev);
 		int i;
 		
 		len += sprintf(buf+len, "Card Revision: %d\n", curcard->cardrev);
diff -purN linux-post-2.6.4-20040313/drivers/net/tokenring/proteon.c linux-post-2.6.4-20040314/drivers/net/tokenring/proteon.c
--- linux-post-2.6.4-20040313/drivers/net/tokenring/proteon.c	2004-02-20 22:26:02.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tokenring/proteon.c	2004-03-03 00:34:30.000000000 +0000
@@ -158,7 +158,7 @@ static int __init setup_card(struct net_
 		printk(":%2.2x", dev->dev_addr[j]);
 	printk("\n");
 		
-	tp = (struct net_local *)dev->priv;
+	tp = netdev_priv(dev);
 	tp->setnselout = proteon_setnselout_pins;
 		
 	tp->sifreadb = proteon_sifreadb;
@@ -316,7 +316,7 @@ unsigned short proteon_setnselout_pins(s
 
 static int proteon_open(struct net_device *dev)
 {  
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned short val = 0;
 	int i;
 
diff -purN linux-post-2.6.4-20040313/drivers/net/tokenring/skisa.c linux-post-2.6.4-20040314/drivers/net/tokenring/skisa.c
--- linux-post-2.6.4-20040313/drivers/net/tokenring/skisa.c	2004-02-20 22:26:02.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tokenring/skisa.c	2004-03-03 00:35:01.000000000 +0000
@@ -175,7 +175,7 @@ static int __init setup_card(struct net_
 		printk(":%2.2x", dev->dev_addr[j]);
 	printk("\n");
 		
-	tp = (struct net_local *)dev->priv;
+	tp = netdev_priv(dev);
 	tp->setnselout = sk_isa_setnselout_pins;
 		
 	tp->sifreadb = sk_isa_sifreadb;
@@ -332,7 +332,7 @@ unsigned short sk_isa_setnselout_pins(st
 
 static int sk_isa_open(struct net_device *dev)
 {  
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned short val = 0;
 	unsigned short oldval;
 	int i;
diff -purN linux-post-2.6.4-20040313/drivers/net/tokenring/smctr.c linux-post-2.6.4-20040314/drivers/net/tokenring/smctr.c
--- linux-post-2.6.4-20040313/drivers/net/tokenring/smctr.c	2004-01-19 23:21:37.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tokenring/smctr.c	2004-03-03 00:38:17.000000000 +0000
@@ -327,7 +327,7 @@ static int smctr_wait_while_cbusy(struct
  */
 static int smctr_alloc_shared_memory(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(smctr_debug > 10)
                 printk(KERN_DEBUG "%s: smctr_alloc_shared_memory\n", dev->name);
@@ -454,7 +454,7 @@ static int smctr_bypass_state(struct net
 
 static int smctr_checksum_firmware(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         __u16 i, checksum = 0;
 
         if(smctr_debug > 10)
@@ -477,10 +477,10 @@ static int smctr_checksum_firmware(struc
         return (0);
 }
 
-static int smctr_chk_mca(struct net_device *dev)
+static int __init smctr_chk_mca(struct net_device *dev)
 {
 #ifdef CONFIG_MCA
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	int current_slot;
 	__u8 r1, r2, r3, r4, r5;
 
@@ -631,7 +631,7 @@ static int smctr_chk_mca(struct net_devi
 
 static int smctr_chg_rx_mask(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err = 0;
 
         if(smctr_debug > 10)
@@ -694,7 +694,7 @@ static int smctr_chg_rx_mask(struct net_
 
 static int smctr_clear_int(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         outb((tp->trc_mask | CSR_CLRTINT), dev->base_addr + CSR);
 
@@ -716,7 +716,7 @@ static int smctr_clear_trc_reset(int ioa
  */
 static int smctr_close(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         struct sk_buff *skb;
         int err;
 
@@ -752,7 +752,7 @@ static int smctr_close(struct net_device
 
 static int smctr_decode_firmware(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         short bit = 0x80, shift = 12;
         DECODE_TREE_NODE *tree;
         short branch, tsize;
@@ -823,7 +823,7 @@ static int smctr_disable_16bit(struct ne
  */
 static int smctr_disable_adapter_ctrl_store(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
 
         if(smctr_debug > 10)
@@ -837,7 +837,7 @@ static int smctr_disable_adapter_ctrl_st
 
 static int smctr_disable_bic_int(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
 
         tp->trc_mask = CSR_MSK_ALL | CSR_MSKCBUSY
@@ -849,7 +849,7 @@ static int smctr_disable_bic_int(struct 
 
 static int smctr_enable_16bit(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         __u8    r;
 
         if(tp->adapter_bus == BUS_ISA16_TYPE)
@@ -869,7 +869,7 @@ static int smctr_enable_16bit(struct net
  */
 static int smctr_enable_adapter_ctrl_store(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
 
         if(smctr_debug > 10)
@@ -900,7 +900,7 @@ static int smctr_enable_adapter_ram(stru
 
 static int smctr_enable_bic_int(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
         __u8 r;
 
@@ -926,7 +926,7 @@ static int smctr_enable_bic_int(struct n
 
 static int __init smctr_chk_isa(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
         __u8 r1, r2, b, chksum = 0;
         __u16 r;
@@ -1155,7 +1155,7 @@ out:
 
 static int __init smctr_get_boardid(struct net_device *dev, int mca)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
         __u8 r, r1, IdByte;
         __u16 BoardIdMask;
@@ -1273,7 +1273,7 @@ static int smctr_get_functional_address(
  */
 static unsigned int smctr_get_num_rx_bdbs(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int mem_used = 0;
 
         /* Allocate System Control Blocks. */
@@ -1358,7 +1358,7 @@ static int smctr_get_physical_drop_numbe
 
 static __u8 * smctr_get_rx_pointer(struct net_device *dev, short queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         BDBlock *bdb;
 
         bdb = (BDBlock *)((__u32)tp->ram_access
@@ -1382,7 +1382,7 @@ static int smctr_get_station_id(struct n
  */
 static struct net_device_stats *smctr_get_stats(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         return ((struct net_device_stats *)&tp->MacStat);
 }
@@ -1390,7 +1390,7 @@ static struct net_device_stats *smctr_ge
 static FCBlock *smctr_get_tx_fcb(struct net_device *dev, __u16 queue,
         __u16 bytes_count)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         FCBlock *pFCB;
         BDBlock *pbdb;
         unsigned short alloc_size;
@@ -1513,7 +1513,7 @@ static int smctr_hardware_send_packet(st
 
 static int smctr_init_acbs(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i;
         ACBlock *acb;
 
@@ -1557,7 +1557,7 @@ static int smctr_init_acbs(struct net_de
 
 static int smctr_init_adapter(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err;
 
         if(smctr_debug > 10)
@@ -1640,7 +1640,7 @@ static int smctr_init_adapter(struct net
 
 static int smctr_init_card_real(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err = 0;
 
         if(smctr_debug > 10)
@@ -1716,7 +1716,7 @@ static int smctr_init_card_real(struct n
 
 static int smctr_init_rx_bdbs(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i, j;
         BDBlock *bdb;
         __u16 *buf;
@@ -1768,7 +1768,7 @@ static int smctr_init_rx_bdbs(struct net
 
 static int smctr_init_rx_fcbs(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i, j;
         FCBlock *fcb;
 
@@ -1818,7 +1818,7 @@ static int smctr_init_rx_fcbs(struct net
 
 static int smctr_init_shared_memory(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i;
         __u32 *iscpb;
 
@@ -1876,7 +1876,7 @@ static int smctr_init_shared_memory(stru
 
 static int smctr_init_tx_bdbs(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i, j;
         BDBlock *bdb;
 
@@ -1906,7 +1906,7 @@ static int smctr_init_tx_bdbs(struct net
 
 static int smctr_init_tx_fcbs(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i, j;
         FCBlock *fcb;
 
@@ -1945,7 +1945,7 @@ static int smctr_init_tx_fcbs(struct net
 
 static int smctr_internal_self_test(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err;
 
         if((err = smctr_issue_test_internal_rom_cmd(dev)))
@@ -1998,7 +1998,7 @@ static irqreturn_t smctr_interrupt(int i
         }
 
         ioaddr = dev->base_addr;
-        tp = (struct net_local *)dev->priv;
+        tp = netdev_priv(dev);
         
 
         if(tp->status == NOT_INITIALIZED)
@@ -2471,7 +2471,7 @@ static irqreturn_t smctr_interrupt(int i
 static int smctr_issue_enable_int_cmd(struct net_device *dev,
         __u16 interrupt_enable_mask)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err;
 
         if((err = smctr_wait_while_cbusy(dev)))
@@ -2487,7 +2487,7 @@ static int smctr_issue_enable_int_cmd(st
 
 static int smctr_issue_int_ack(struct net_device *dev, __u16 iack_code, __u16 ibits)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(smctr_wait_while_cbusy(dev))
                 return (-1);
@@ -2503,7 +2503,7 @@ static int smctr_issue_int_ack(struct ne
 
 static int smctr_issue_init_timers_cmd(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i;
         int err;
         __u16 *pTimer_Struc = (__u16 *)tp->misc_command_data;
@@ -2660,7 +2660,7 @@ static int smctr_issue_init_timers_cmd(s
 
 static int smctr_issue_init_txrx_cmd(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i;
         int err;
         void **txrx_ptrs = (void *)tp->misc_command_data;
@@ -2748,7 +2748,7 @@ static int smctr_issue_read_word_cmd(str
 
 static int smctr_issue_remove_cmd(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err;
 
         if((err = smctr_wait_while_cbusy(dev)))
@@ -2764,7 +2764,7 @@ static int smctr_issue_remove_cmd(struct
 
 static int smctr_issue_resume_acb_cmd(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err;
 
         if((err = smctr_wait_while_cbusy(dev)))
@@ -2782,7 +2782,7 @@ static int smctr_issue_resume_acb_cmd(st
 
 static int smctr_issue_resume_rx_bdb_cmd(struct net_device *dev, __u16 queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err;
 
         if((err = smctr_wait_while_cbusy(dev)))
@@ -2802,7 +2802,7 @@ static int smctr_issue_resume_rx_bdb_cmd
 
 static int smctr_issue_resume_rx_fcb_cmd(struct net_device *dev, __u16 queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(smctr_debug > 10)
                 printk(KERN_DEBUG "%s: smctr_issue_resume_rx_fcb_cmd\n", dev->name);
@@ -2824,7 +2824,7 @@ static int smctr_issue_resume_rx_fcb_cmd
 
 static int smctr_issue_resume_tx_fcb_cmd(struct net_device *dev, __u16 queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(smctr_debug > 10)
                 printk(KERN_DEBUG "%s: smctr_issue_resume_tx_fcb_cmd\n", dev->name);
@@ -2893,7 +2893,7 @@ static int smctr_issue_tri_loopback_cmd(
 static int smctr_issue_write_byte_cmd(struct net_device *dev,
         short aword_cnt, void *byte)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
         unsigned int iword, ibyte;
 	int err;
 
@@ -2917,7 +2917,7 @@ static int smctr_issue_write_byte_cmd(st
 static int smctr_issue_write_word_cmd(struct net_device *dev,
         short aword_cnt, void *word)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i, err;
 
         if((err = smctr_wait_while_cbusy(dev)))
@@ -2947,7 +2947,7 @@ static int smctr_join_complete_state(str
 
 static int smctr_link_tx_fcbs_to_bdbs(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i, j;
         FCBlock *fcb;
         BDBlock *bdb;
@@ -2971,7 +2971,7 @@ static int smctr_link_tx_fcbs_to_bdbs(st
 
 static int smctr_load_firmware(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         __u16 i, checksum = 0;
         int err = 0;
 
@@ -3071,7 +3071,7 @@ static int smctr_load_node_addr(struct n
  */
 static int smctr_lobe_media_test(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i, perror = 0;
         unsigned short saved_rcv_mask;
 
@@ -3146,7 +3146,7 @@ static int smctr_lobe_media_test(struct 
 
 static int smctr_lobe_media_test_cmd(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err;
 
         if(smctr_debug > 10)
@@ -3230,7 +3230,7 @@ static int smctr_make_8025_hdr(struct ne
 
 static int smctr_make_access_pri(struct net_device *dev, MAC_SUB_VECTOR *tsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         tsv->svi = AUTHORIZED_ACCESS_PRIORITY;
         tsv->svl = S_AUTHORIZED_ACCESS_PRIORITY;
@@ -3255,7 +3255,7 @@ static int smctr_make_addr_mod(struct ne
 static int smctr_make_auth_funct_class(struct net_device *dev,
         MAC_SUB_VECTOR *tsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         tsv->svi = AUTHORIZED_FUNCTION_CLASS;
         tsv->svl = S_AUTHORIZED_FUNCTION_CLASS;
@@ -3280,7 +3280,7 @@ static int smctr_make_corr(struct net_de
 
 static int smctr_make_funct_addr(struct net_device *dev, MAC_SUB_VECTOR *tsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         smctr_get_functional_address(dev);
 
@@ -3298,7 +3298,7 @@ static int smctr_make_funct_addr(struct 
 
 static int smctr_make_group_addr(struct net_device *dev, MAC_SUB_VECTOR *tsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         smctr_get_group_address(dev);
 
@@ -3324,7 +3324,7 @@ static int smctr_make_group_addr(struct 
 static int smctr_make_phy_drop_num(struct net_device *dev,
         MAC_SUB_VECTOR *tsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         smctr_get_physical_drop_number(dev);
 
@@ -3355,7 +3355,7 @@ static int smctr_make_product_id(struct 
 
 static int smctr_make_station_id(struct net_device *dev, MAC_SUB_VECTOR *tsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         smctr_get_station_id(dev);
 
@@ -3393,7 +3393,7 @@ static int smctr_make_ring_station_statu
 static int smctr_make_ring_station_version(struct net_device *dev,
         MAC_SUB_VECTOR *tsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         tsv->svi = RING_STATION_VERSION_NUMBER;
         tsv->svl = S_RING_STATION_VERSION_NUMBER;
@@ -3433,7 +3433,7 @@ static int smctr_make_tx_status_code(str
 static int smctr_make_upstream_neighbor_addr(struct net_device *dev,
         MAC_SUB_VECTOR *tsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         smctr_get_upstream_neighbor_addr(dev);
 
@@ -3485,7 +3485,7 @@ static int smctr_open(struct net_device 
 /* Interrupt driven open of Token card. */
 static int smctr_open_tr(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned long flags;
         int err;
 
@@ -3618,7 +3618,7 @@ struct net_device __init *smctr_probe(in
 	return dev;
 out1:
 #ifdef CONFIG_MCA
-	{ struct net_local *tp = (struct net_local *)dev->priv;
+	{ struct net_local *tp = netdev_priv(dev);
 	  if (tp->slot_num)
 		mca_mark_as_unused(tp->slot_num);
 	}
@@ -3634,7 +3634,7 @@ out:
 static int __init smctr_probe1(struct net_device *dev, int ioaddr)
 {
         static unsigned version_printed;
-        struct net_local *tp = dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err;
         __u32 *ram;
 
@@ -3654,7 +3654,7 @@ static int __init smctr_probe1(struct ne
 		}
         }
 
-        tp = (struct net_local *)dev->priv;
+        tp = netdev_priv(dev);
         dev->mem_start = tp->ram_base;
         dev->mem_end = dev->mem_start + 0x10000;
         ram = (__u32 *)phys_to_virt(dev->mem_start);
@@ -3696,7 +3696,7 @@ out:
 static int smctr_process_rx_packet(MAC_HEADER *rmf, __u16 size,
         struct net_device *dev, __u16 rx_status)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         struct sk_buff *skb;
         __u16 rcode, correlator;
         int err = 0;
@@ -3917,7 +3917,7 @@ static int smctr_process_rx_packet(MAC_H
 /* Adapter RAM test. Incremental word ODD boundary data test. */
 static int smctr_ram_memory_test(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         __u16 page, pages_of_ram, start_pattern = 0, word_pattern = 0,
                 word_read = 0, err_word = 0, err_pattern = 0;
         unsigned int err_offset;
@@ -4310,7 +4310,7 @@ static int smctr_rcv_unknown(struct net_
  */
 static int smctr_reset_adapter(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
 
         /* Reseting the NIC will put it in a halted and un-initialized state. */        smctr_set_trc_reset(ioaddr);
@@ -4329,7 +4329,7 @@ static int smctr_reset_adapter(struct ne
 
 static int smctr_restart_tx_chain(struct net_device *dev, short queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err = 0;
 
         if(smctr_debug > 10)
@@ -4347,7 +4347,7 @@ static int smctr_restart_tx_chain(struct
 
 static int smctr_ring_status_chg(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(smctr_debug > 10)
                 printk(KERN_DEBUG "%s: smctr_ring_status_chg\n", dev->name);
@@ -4449,7 +4449,7 @@ static int smctr_ring_status_chg(struct 
 
 static int smctr_rx_frame(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         __u16 queue, status, rx_size, err = 0;
         __u8 *pbuff;
 
@@ -4516,7 +4516,7 @@ static int smctr_rx_frame(struct net_dev
 
 static int smctr_send_dat(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int i, err;
         MAC_HEADER *tmf;
         FCBlock *fcb;
@@ -4596,7 +4596,7 @@ static void smctr_timeout(struct net_dev
  */
 static int smctr_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(smctr_debug > 10)
                 printk(KERN_DEBUG "%s: smctr_send_packet\n", dev->name);
@@ -4621,7 +4621,7 @@ static int smctr_send_packet(struct sk_b
 
 static int smctr_send_lobe_media_test(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 	MAC_SUB_VECTOR *tsv;
 	MAC_HEADER *tmf;
         FCBlock *fcb;
@@ -4917,7 +4917,7 @@ static int smctr_send_rsp(struct net_dev
 
 static int smctr_send_rq_init(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         MAC_HEADER *tmf;
         MAC_SUB_VECTOR *tsv;
         FCBlock *fcb;
@@ -5001,7 +5001,7 @@ static int smctr_send_rq_init(struct net
 static int smctr_send_tx_forward(struct net_device *dev, MAC_HEADER *rmf,
         __u16 *tx_fstatus)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         FCBlock *fcb;
         unsigned int i;
 	int err;
@@ -5065,7 +5065,7 @@ static int smctr_send_tx_forward(struct 
 static int smctr_set_auth_access_pri(struct net_device *dev,
         MAC_SUB_VECTOR *rsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(rsv->svl != S_AUTHORIZED_ACCESS_PRIORITY)
                 return (E_SUB_VECTOR_LENGTH_ERROR);
@@ -5078,7 +5078,7 @@ static int smctr_set_auth_access_pri(str
 static int smctr_set_auth_funct_class(struct net_device *dev,
         MAC_SUB_VECTOR *rsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(rsv->svl != S_AUTHORIZED_FUNCTION_CLASS)
                 return (E_SUB_VECTOR_LENGTH_ERROR);
@@ -5139,7 +5139,7 @@ static int smctr_set_frame_forward(struc
 static int smctr_set_local_ring_num(struct net_device *dev,
         MAC_SUB_VECTOR *rsv)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(rsv->svl != S_LOCAL_RING_NUMBER)
                 return (E_SUB_VECTOR_LENGTH_ERROR);
@@ -5153,7 +5153,7 @@ static int smctr_set_local_ring_num(stru
 
 static unsigned short smctr_set_ctrl_attention(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int ioaddr = dev->base_addr;
 
         if(tp->bic_type == BIC_585_CHIP)
@@ -5177,7 +5177,7 @@ static void smctr_set_multicast_list(str
 
 static int smctr_set_page(struct net_device *dev, __u8 *buf)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         __u8 amask;
         __u32 tptr;
 
@@ -5207,7 +5207,7 @@ static int smctr_set_phy_drop(struct net
  */
 static int smctr_set_ring_speed(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 	int err;
 
         if(tp->media_type == MEDIA_UTP_16)
@@ -5235,7 +5235,7 @@ static int smctr_set_ring_speed(struct n
 
 static int smctr_set_rx_look_ahead(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         __u16 sword, rword;
 
         if(smctr_debug > 10)
@@ -5278,7 +5278,7 @@ static int smctr_set_trc_reset(int ioadd
 static int smctr_setup_single_cmd(struct net_device *dev,
         __u16 command, __u16 subcommand)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int err;
 
         if(smctr_debug > 10)
@@ -5305,7 +5305,7 @@ static int smctr_setup_single_cmd(struct
 static int smctr_setup_single_cmd_w_data(struct net_device *dev,
         __u16 command, __u16 subcommand)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         tp->acb_head->cmd_done_status   = ACB_COMMAND_NOT_DONE;
         tp->acb_head->cmd               = command;
@@ -5318,7 +5318,7 @@ static int smctr_setup_single_cmd_w_data
 
 static char *smctr_malloc(struct net_device *dev, __u16 size)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         char *m;
 
         m = (char *)(tp->ram_access + tp->sh_mem_used);
@@ -5329,7 +5329,7 @@ static char *smctr_malloc(struct net_dev
 
 static int smctr_status_chg(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(smctr_debug > 10)
                 printk(KERN_DEBUG "%s: smctr_status_chg\n", dev->name);
@@ -5365,7 +5365,7 @@ static int smctr_status_chg(struct net_d
 static int smctr_trc_send_packet(struct net_device *dev, FCBlock *fcb,
         __u16 queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         int err = 0;
 
         if(smctr_debug > 10)
@@ -5386,7 +5386,7 @@ static int smctr_trc_send_packet(struct 
 
 static __u16 smctr_tx_complete(struct net_device *dev, __u16 queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         __u16 status, err = 0;
         int cstatus;
 
@@ -5441,7 +5441,7 @@ static __u16 smctr_tx_complete(struct ne
 static unsigned short smctr_tx_move_frame(struct net_device *dev,
         struct sk_buff *skb, __u8 *pbuff, unsigned int bytes)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int ram_usable;
         __u32 flen, len, offset = 0;
         __u8 *frag, *page;
@@ -5482,7 +5482,7 @@ static unsigned short smctr_tx_move_fram
 /* Update the error statistic counters for this adapter. */
 static int smctr_update_err_stats(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         struct tr_statistics *tstat = &tp->MacStat;
 
         if(tstat->internal_errors)
@@ -5524,7 +5524,7 @@ static int smctr_update_err_stats(struct
 
 static int smctr_update_rx_chain(struct net_device *dev, __u16 queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         FCBlock *fcb;
         BDBlock *bdb;
         __u16 size, len;
@@ -5562,7 +5562,7 @@ static int smctr_update_rx_chain(struct 
 static int smctr_update_tx_chain(struct net_device *dev, FCBlock *fcb,
         __u16 queue)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
 
         if(smctr_debug > 20)
                 printk(KERN_DEBUG "smctr_update_tx_chain\n");
@@ -5598,7 +5598,7 @@ static int smctr_update_tx_chain(struct 
 
 static int smctr_wait_cmd(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int loop_count = 0x20000;
 
         if(smctr_debug > 10)
@@ -5623,7 +5623,7 @@ static int smctr_wait_cmd(struct net_dev
 
 static int smctr_wait_while_cbusy(struct net_device *dev)
 {
-        struct net_local *tp = (struct net_local *)dev->priv;
+        struct net_local *tp = netdev_priv(dev);
         unsigned int timeout = 0x20000;
         int ioaddr = dev->base_addr;
         __u8 r;
@@ -5686,7 +5686,7 @@ static struct net_device *setup_card(int
 	return dev;
  out1:
 #ifdef CONFIG_MCA
-	{ struct net_local *tp = (struct net_local *)dev->priv;
+	{ struct net_local *tp = netdev_priv(dev);
 	  if (tp->slot_num)
 		mca_mark_as_unused(tp->slot_num);
 	}
@@ -5726,7 +5726,7 @@ void cleanup_module(void)
 
 			unregister_netdev(dev);
 #ifdef CONFIG_MCA
-			{ struct net_local *tp = dev->priv;
+			{ struct net_local *tp = netdev_priv(dev);
 			if (tp->slot_num)
 				mca_mark_as_unused(tp->slot_num);
 			}
diff -purN linux-post-2.6.4-20040313/drivers/net/tokenring/tms380tr.c linux-post-2.6.4-20040314/drivers/net/tokenring/tms380tr.c
--- linux-post-2.6.4-20040313/drivers/net/tokenring/tms380tr.c	2004-02-20 22:31:30.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tokenring/tms380tr.c	2004-03-03 00:40:11.000000000 +0000
@@ -243,7 +243,7 @@ static int madgemc_sifprobe(struct net_d
  */
 int tms380tr_open(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	int err;
 	
 	/* init the spinlock */
@@ -313,7 +313,7 @@ int tms380tr_open(struct net_device *dev
 static void tms380tr_timer_end_wait(unsigned long data)
 {
 	struct net_device *dev = (struct net_device*)data;
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 
 	if(tp->Sleeping)
 	{
@@ -329,7 +329,7 @@ static void tms380tr_timer_end_wait(unsi
  */
 static int tms380tr_chipset_init(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	int err;
 
 	tms380tr_init_ipb(tp);
@@ -364,7 +364,7 @@ static int tms380tr_chipset_init(struct 
  */
 static void tms380tr_init_net_local(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	int i;
 	dma_addr_t dmabuf;
 
@@ -492,7 +492,7 @@ static void tms380tr_init_opb(struct net
 	unsigned short BufferSize = BUFFER_SIZE;
 	int i;
 
-	tp = (struct net_local *)dev->priv;
+	tp = netdev_priv(dev);
 
 	tp->ocpl.OPENOptions 	 = 0;
 	tp->ocpl.OPENOptions 	|= ENABLE_FULL_DUPLEX_SELECTION;
@@ -531,7 +531,7 @@ static void tms380tr_init_opb(struct net
  */
 static void tms380tr_open_adapter(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 
 	if(tp->OpenCommandIssued)
 		return;
@@ -569,7 +569,7 @@ static void tms380tr_enable_interrupts(s
  */
 static void tms380tr_exec_cmd(struct net_device *dev, unsigned short Command)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 
 	tp->CMDqueue |= Command;
 	tms380tr_chk_outstanding_cmds(dev);
@@ -596,7 +596,7 @@ static void tms380tr_timeout(struct net_
  */
 static int tms380tr_send_packet(struct sk_buff *skb, struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	int err;
 
 	err = tms380tr_hardware_send_packet(skb, dev);
@@ -616,7 +616,7 @@ static int tms380tr_hardware_send_packet
 	unsigned long flags;
 	int i;
 	dma_addr_t dmabuf, newbuf;
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
    
 	/* Try to get a free TPL from the chain.
 	 *
@@ -715,7 +715,7 @@ static void tms380tr_chk_src_addr(unsign
 static void tms380tr_timer_chk(unsigned long data)
 {
 	struct net_device *dev = (struct net_device*)data;
-	struct net_local *tp = (struct net_local*)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 
 	if(tp->HaltInProgress)
 		return;
@@ -755,7 +755,7 @@ irqreturn_t tms380tr_interrupt(int irq, 
 		return IRQ_NONE;
 	}
 
-	tp = (struct net_local *)dev->priv;
+	tp = netdev_priv(dev);
 
 	irq_type = SIFREADW(SIFSTS);
 
@@ -843,7 +843,7 @@ irqreturn_t tms380tr_interrupt(int irq, 
  */
 static void tms380tr_reset_interrupt(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	SSB *ssb = &tp->ssb;
 
 	/*
@@ -929,7 +929,7 @@ static unsigned char tms380tr_chk_ssb(st
  */
 static void tms380tr_cmd_status_irq(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned short ssb_cmd, ssb_parm_0;
 	unsigned short ssb_parm_1;
 	char *open_err = "Open error -";
@@ -1126,7 +1126,7 @@ static void tms380tr_cmd_status_irq(stru
  */
 int tms380tr_close(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	netif_stop_queue(dev);
 	
 	del_timer(&tp->timer);
@@ -1172,7 +1172,7 @@ int tms380tr_close(struct net_device *de
  */
 static struct net_device_stats *tms380tr_get_stats(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 
 	return ((struct net_device_stats *)&tp->MacStat);
 }
@@ -1182,7 +1182,7 @@ static struct net_device_stats *tms380tr
  */
 static void tms380tr_set_multicast_list(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned int OpenOptions;
 	
 	OpenOptions = tp->ocpl.OPENOptions &
@@ -1275,7 +1275,7 @@ static void tms380tr_exec_sifcmd(struct 
  */
 static int tms380tr_reset_adapter(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned short *fw_ptr;
 	unsigned short count, c, count2;
 	const struct firmware *fw_entry = NULL;
@@ -1428,7 +1428,7 @@ static int tms380tr_bringup_diags(struct
  */
 static int tms380tr_init_adapter(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 
 	const unsigned char SCB_Test[6] = {0x00, 0x00, 0xC1, 0xE2, 0xD4, 0x8B};
 	const unsigned char SSB_Test[8] = {0xFF, 0xFF, 0xD1, 0xD7,
@@ -1541,7 +1541,7 @@ static int tms380tr_init_adapter(struct 
  */
 static void tms380tr_chk_outstanding_cmds(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned long Addr = 0;
 
 	if(tp->CMDqueue == 0)
@@ -1713,7 +1713,7 @@ static void tms380tr_chk_outstanding_cmd
  */
 static void tms380tr_ring_status_irq(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 
 	tp->CurrentRingStatus = be16_to_cpu((unsigned short)tp->ssb.Parm[0]);
 
@@ -1785,7 +1785,7 @@ static void tms380tr_chk_irq(struct net_
 {
 	int i;
 	unsigned short AdapterCheckBlock[4];
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 
 	tp->AdapterOpenFlag = 0;	/* Adapter closed now */
 
@@ -1941,7 +1941,7 @@ static void tms380tr_chk_irq(struct net_
  */
 static int tms380tr_read_ptr(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned short adapterram;
 
 	tms380tr_read_ram(dev, (unsigned char *)&tp->intptrs.BurnedInAddrPtr,
@@ -2031,7 +2031,7 @@ static void tms380tr_cancel_tx_queue(str
  */
 static void tms380tr_tx_status_irq(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned char HighByte, HighAc, LowAc;
 	TPL *tpl;
 
@@ -2102,7 +2102,7 @@ static void tms380tr_tx_status_irq(struc
  */
 static void tms380tr_rcv_status_irq(struct net_device *dev)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	unsigned char *ReceiveDataPtr;
 	struct sk_buff *skb;
 	unsigned int Length, Length2;
@@ -2293,7 +2293,7 @@ static void tms380tr_update_rcv_stats(st
 
 static int tms380tr_set_mac_address(struct net_device *dev, void *addr)
 {
-	struct net_local *tp = (struct net_local *)dev->priv;
+	struct net_local *tp = netdev_priv(dev);
 	struct sockaddr *saddr = addr;
 	
 	if (tp->AdapterOpenFlag || tp->AdapterVirtOpenFlag) {
@@ -2327,7 +2327,7 @@ void tmsdev_term(struct net_device *dev)
 {
 	struct net_local *tp;
 
-	tp = (struct net_local *) dev->priv;
+	tp = netdev_priv(dev);
 	pci_unmap_single(tp->pdev, tp->dmabuffer, sizeof(struct net_local),
 		PCI_DMA_BIDIRECTIONAL);
 }
@@ -2338,7 +2338,7 @@ int tmsdev_init(struct net_device *dev, 
 	struct net_local *tms_local;
 
 	memset(dev->priv, 0, sizeof(struct net_local));
-	tms_local = (struct net_local *)dev->priv;
+	tms_local = netdev_priv(dev);
 	init_waitqueue_head(&tms_local->wait_for_tok_int);
 	tms_local->dmalimit = dmalimit;
 	tms_local->pdev = pdev;
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/21142.c linux-post-2.6.4-20040314/drivers/net/tulip/21142.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/21142.c	2002-10-29 05:14:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/21142.c	2004-03-03 04:43:32.000000000 +0000
@@ -29,7 +29,7 @@ static u16 t21142_csr15[] = { 0x0008, 0x
 void t21142_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int csr12 = inl(ioaddr + CSR12);
 	int next_tick = 60*HZ;
@@ -103,7 +103,7 @@ void t21142_timer(unsigned long data)
 
 void t21142_start_nway(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int csr14 = ((tp->sym_advertise & 0x0780) << 9)  |
 		((tp->sym_advertise & 0x0020) << 1) | 0xffbf;
@@ -131,7 +131,7 @@ void t21142_start_nway(struct net_device
 
 void t21142_lnk_change(struct net_device *dev, int csr5)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int csr12 = inl(ioaddr + CSR12);
 
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/de4x5.c linux-post-2.6.4-20040314/drivers/net/tulip/de4x5.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/de4x5.c	2004-02-19 02:45:27.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/de4x5.c	2004-03-03 04:41:58.000000000 +0000
@@ -1086,7 +1086,7 @@ static int __devinit 
 de4x5_hw_init(struct net_device *dev, u_long iobase, struct device *gendev)
 {
     char name[DE4X5_NAME_LENGTH + 1];
-    struct de4x5_private *lp = dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     struct pci_dev *pdev = NULL;
     int i, status=0;
 
@@ -1294,7 +1294,7 @@ de4x5_hw_init(struct net_device *dev, u_
 static int
 de4x5_open(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int i, status = 0;
     s32 omr;
@@ -1384,7 +1384,7 @@ de4x5_init(struct net_device *dev)
 static int
 de4x5_sw_reset(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int i, j, status = 0;
     s32 bmr, omr;
@@ -1462,7 +1462,7 @@ de4x5_sw_reset(struct net_device *dev)
 static int
 de4x5_queue_pkt(struct sk_buff *skb, struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int status = 0;
     u_long flags = 0;
@@ -1551,7 +1551,7 @@ de4x5_interrupt(int irq, void *dev_id, s
 	printk ("de4x5_interrupt(): irq %d for unknown device.\n", irq);
 	return IRQ_NONE;
     }
-    lp = (struct de4x5_private *)dev->priv;
+    lp = netdev_priv(dev);
     spin_lock(&lp->lock);
     iobase = dev->base_addr;
 	
@@ -1610,7 +1610,7 @@ de4x5_interrupt(int irq, void *dev_id, s
 static int
 de4x5_rx(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int entry;
     s32 status;
@@ -1701,7 +1701,7 @@ de4x5_free_tx_buff(struct de4x5_private 
 static int
 de4x5_tx(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int entry;
     s32 status;
@@ -1753,7 +1753,7 @@ de4x5_tx(struct net_device *dev)
 static int
 de4x5_ast(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int next_tick = DE4X5_AUTOSENSE_MS;
     
     disable_ast(dev);
@@ -1776,7 +1776,7 @@ de4x5_ast(struct net_device *dev)
 static int
 de4x5_txur(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int omr;
 
@@ -1799,7 +1799,7 @@ de4x5_txur(struct net_device *dev)
 static int 
 de4x5_rx_ovfc(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int omr;
 
@@ -1820,7 +1820,7 @@ de4x5_rx_ovfc(struct net_device *dev)
 static int
 de4x5_close(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     s32 imr, omr;
     
@@ -1856,7 +1856,7 @@ de4x5_close(struct net_device *dev)
 static struct net_device_stats *
 de4x5_get_stats(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     
     lp->stats.rx_missed_errors = (int)(inl(DE4X5_MFC) & (MFC_OVFL | MFC_CNTR));
@@ -1867,7 +1867,7 @@ de4x5_get_stats(struct net_device *dev)
 static void
 de4x5_local_stats(struct net_device *dev, char *buf, int pkt_len)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int i;
 
     for (i=1; i<DE4X5_PKT_STAT_SZ-1; i++) {
@@ -1906,7 +1906,7 @@ de4x5_local_stats(struct net_device *dev
 static void
 load_packet(struct net_device *dev, char *buf, u32 flags, struct sk_buff *skb)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int entry = (lp->tx_new ? lp->tx_new-1 : lp->txRingSize-1);
     dma_addr_t buf_dma = dma_map_single(lp->gendev, buf, flags & TD_TBS1, DMA_TO_DEVICE);
 
@@ -1927,7 +1927,7 @@ load_packet(struct net_device *dev, char
 static void
 set_multicast_list(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
 
     /* First, double check that the adapter is open */
@@ -1957,7 +1957,7 @@ set_multicast_list(struct net_device *de
 static void
 SetMulticastFilter(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     struct dev_mc_list *dmi=dev->mc_list;
     u_long iobase = dev->base_addr;
     int i, j, bit, byte;
@@ -2036,7 +2036,7 @@ static int __init de4x5_eisa_probe (stru
 		status = -ENOMEM;
 		goto release_reg_2;
 	}
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 	
 	cfid = (u32) inl(PCI_CFID);
 	lp->cfrv = (u_short) inl(PCI_CFRV);
@@ -2142,7 +2142,7 @@ srom_search(struct net_device *dev, stru
     u_int irq = 0, device;
     u_long iobase = 0;                     /* Clear upper 32 bits in Alphas */
     int i, j, cfrv;
-    struct de4x5_private *lp = dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     struct list_head *walk = &pdev->bus_list;
 
     for (walk = walk->next; walk != &pdev->bus_list; walk = walk->next) {
@@ -2245,7 +2245,7 @@ static int __devinit de4x5_pci_probe (st
 	if (!(dev = alloc_etherdev (sizeof (struct de4x5_private))))
 		return -ENOMEM;
 
-	lp = dev->priv;
+	lp = netdev_priv(dev);
 	lp->bus = PCI;
 	lp->bus_num = 0;
 	
@@ -2374,7 +2374,7 @@ static struct pci_driver de4x5_pci_drive
 static int
 autoconf_media(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int next_tick = DE4X5_AUTOSENSE_MS;
 
@@ -2415,7 +2415,7 @@ autoconf_media(struct net_device *dev)
 static int
 dc21040_autoconf(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int next_tick = DE4X5_AUTOSENSE_MS;
     s32 imr;
@@ -2488,7 +2488,7 @@ dc21040_state(struct net_device *dev, in
 	      int next_state, int suspect_state, 
 	      int (*fn)(struct net_device *, int))
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int next_tick = DE4X5_AUTOSENSE_MS;
     int linkBad;
 
@@ -2527,7 +2527,7 @@ de4x5_suspect_state(struct net_device *d
 		      int (*fn)(struct net_device *, int),
 		      int (*asfn)(struct net_device *))
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int next_tick = DE4X5_AUTOSENSE_MS;
     int linkBad;
 
@@ -2569,7 +2569,7 @@ de4x5_suspect_state(struct net_device *d
 static int
 dc21041_autoconf(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     s32 sts, irqs, irq_mask, imr, omr;
     int next_tick = DE4X5_AUTOSENSE_MS;
@@ -2771,7 +2771,7 @@ dc21041_autoconf(struct net_device *dev)
 static int
 dc21140m_autoconf(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int ana, anlpa, cap, cr, slnk, sr;
     int next_tick = DE4X5_AUTOSENSE_MS;
     u_long imr, omr, iobase = dev->base_addr;
@@ -2955,7 +2955,7 @@ dc21140m_autoconf(struct net_device *dev
 static int
 dc2114x_autoconf(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     s32 cr, anlpa, ana, cap, irqs, irq_mask, imr, omr, slnk, sr, sts;
     int next_tick = DE4X5_AUTOSENSE_MS;
@@ -3206,7 +3206,7 @@ printk("Huh?: media:%02x\n", lp->media);
 static int
 srom_autoconf(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
 
     return lp->infoleaf_fn(dev);
 }
@@ -3219,7 +3219,7 @@ srom_autoconf(struct net_device *dev)
 static int
 srom_map_media(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
 
     lp->fdx = 0;
     if (lp->infoblock_media == lp->media) 
@@ -3284,7 +3284,7 @@ srom_map_media(struct net_device *dev)
 static void
 de4x5_init_connection(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     u_long flags = 0;
 
@@ -3313,7 +3313,7 @@ de4x5_init_connection(struct net_device 
 static int
 de4x5_reset_phy(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int next_tick = 0;
 
@@ -3347,7 +3347,7 @@ de4x5_reset_phy(struct net_device *dev)
 static int
 test_media(struct net_device *dev, s32 irqs, s32 irq_mask, s32 csr13, s32 csr14, s32 csr15, s32 msec)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     s32 sts, csr12;
     
@@ -3385,7 +3385,7 @@ test_media(struct net_device *dev, s32 i
 static int
 test_tp(struct net_device *dev, s32 msec)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int sisr;
     
@@ -3414,7 +3414,7 @@ test_tp(struct net_device *dev, s32 msec
 static int
 test_for_100Mb(struct net_device *dev, int msec)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int gep = 0, ret = ((lp->chipset & ~0x00ff)==DC2114x? -1 :GEP_SLNK);
 
     if (lp->timeout < 0) {
@@ -3445,7 +3445,7 @@ test_for_100Mb(struct net_device *dev, i
 static int
 wait_for_link(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
 
     if (lp->timeout < 0) {
 	lp->timeout = 1;
@@ -3467,7 +3467,7 @@ wait_for_link(struct net_device *dev)
 static int
 test_mii_reg(struct net_device *dev, int reg, int mask, int pol, long msec)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int test;
     u_long iobase = dev->base_addr;
     
@@ -3491,7 +3491,7 @@ test_mii_reg(struct net_device *dev, int
 static int
 is_spd_100(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int spd;
     
@@ -3515,7 +3515,7 @@ is_spd_100(struct net_device *dev)
 static int
 is_100_up(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     
     if (lp->useMII) {
@@ -3536,7 +3536,7 @@ is_100_up(struct net_device *dev)
 static int
 is_10_up(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     
     if (lp->useMII) {
@@ -3559,7 +3559,7 @@ is_10_up(struct net_device *dev)
 static int
 is_anc_capable(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     
     if (lp->phy[lp->active].id && (!lp->useSROM || lp->useMII)) {
@@ -3578,7 +3578,7 @@ is_anc_capable(struct net_device *dev)
 static int
 ping_media(struct net_device *dev, int msec)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int sisr;
     
@@ -3619,7 +3619,7 @@ ping_media(struct net_device *dev, int m
 static struct sk_buff *
 de4x5_alloc_rx_buff(struct net_device *dev, int index, int len)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     struct sk_buff *p;
 
 #if !defined(__alpha__) && !defined(__powerpc__) && !defined(__sparc_v9__) && !defined(DE4X5_DO_MEMCPY)
@@ -3667,7 +3667,7 @@ de4x5_alloc_rx_buff(struct net_device *d
 static void
 de4x5_free_rx_buffs(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int i;
 
     for (i=0; i<lp->rxRingSize; i++) {
@@ -3684,7 +3684,7 @@ de4x5_free_rx_buffs(struct net_device *d
 static void
 de4x5_free_tx_buffs(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int i;
 
     for (i=0; i<lp->txRingSize; i++) {
@@ -3711,7 +3711,7 @@ de4x5_free_tx_buffs(struct net_device *d
 static void
 de4x5_save_skbs(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     s32 omr;
 
@@ -3732,7 +3732,7 @@ de4x5_save_skbs(struct net_device *dev)
 static void
 de4x5_rst_desc_ring(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int i;
     s32 omr;
@@ -3765,7 +3765,7 @@ de4x5_rst_desc_ring(struct net_device *d
 static void
 de4x5_cache_state(struct net_device *dev, int flag)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
 
     switch(flag) {
@@ -3795,7 +3795,7 @@ de4x5_cache_state(struct net_device *dev
 static void
 de4x5_put_cache(struct net_device *dev, struct sk_buff *skb)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     struct sk_buff *p;
 
     if (lp->cache.skb) {
@@ -3812,7 +3812,7 @@ de4x5_put_cache(struct net_device *dev, 
 static void
 de4x5_putb_cache(struct net_device *dev, struct sk_buff *skb)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     struct sk_buff *p = lp->cache.skb;
 
     lp->cache.skb = skb;
@@ -3824,7 +3824,7 @@ de4x5_putb_cache(struct net_device *dev,
 static struct sk_buff *
 de4x5_get_cache(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     struct sk_buff *p = lp->cache.skb;
 
     if (p) {
@@ -3842,7 +3842,7 @@ de4x5_get_cache(struct net_device *dev)
 static int
 test_ans(struct net_device *dev, s32 irqs, s32 irq_mask, s32 msec)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     s32 sts, ans;
     
@@ -3870,7 +3870,7 @@ test_ans(struct net_device *dev, s32 irq
 static void
 de4x5_setup_intr(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     s32 imr, sts;
     
@@ -3891,7 +3891,7 @@ de4x5_setup_intr(struct net_device *dev)
 static void
 reset_init_sia(struct net_device *dev, s32 csr13, s32 csr14, s32 csr15)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
 
     RESET_SIA;
@@ -4014,7 +4014,7 @@ static void
 DevicePresent(struct net_device *dev, u_long aprom_addr)
 {
     int i, j=0;
-    struct de4x5_private *lp = (struct de4x5_private *) dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     
     if (lp->chipset == DC21040) {
 	if (lp->bus == EISA) {
@@ -4095,7 +4095,7 @@ get_hw_addr(struct net_device *dev)
     u_long iobase = dev->base_addr;
     int broken, i, k, tmp, status = 0;
     u_short j,chksum;
-    struct de4x5_private *lp = dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
 
     broken = de4x5_bad_srom(lp);
 
@@ -4210,7 +4210,7 @@ de4x5_strncmp(char *a, char *b, int n)
 static void
 srom_repair(struct net_device *dev, int card)
 {
-    struct de4x5_private *lp = dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
 
     switch(card) {
       case SMC:
@@ -4231,7 +4231,7 @@ srom_repair(struct net_device *dev, int 
 static int
 test_bad_enet(struct net_device *dev, int status)
 {
-    struct de4x5_private *lp = dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int i, tmp;
 
     for (tmp=0,i=0; i<ETH_ALEN; i++) tmp += (u_char)dev->dev_addr[i];
@@ -4384,7 +4384,7 @@ getfrom_srom(u_long addr)
 static int
 srom_infoleaf_info(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int i, count;
     u_char *p;
 
@@ -4432,7 +4432,7 @@ srom_infoleaf_info(struct net_device *de
 static void
 srom_init(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char *p = (u_char *)&lp->srom + lp->infoleaf_offset;
     u_char count;
 
@@ -4477,7 +4477,7 @@ srom_init(struct net_device *dev)
 static void
 srom_exec(struct net_device *dev, u_char *p)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     u_char count = (p ? *p++ : 0);
     u_short *w = (u_short *)p;
@@ -4514,7 +4514,7 @@ dc21041_infoleaf(struct net_device *dev)
 static int 
 dc21140_infoleaf(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char count = 0;
     u_char *p = (u_char *)&lp->srom + lp->infoleaf_offset;
     int next_tick = DE4X5_AUTOSENSE_MS;
@@ -4552,7 +4552,7 @@ dc21140_infoleaf(struct net_device *dev)
 static int 
 dc21142_infoleaf(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char count = 0;
     u_char *p = (u_char *)&lp->srom + lp->infoleaf_offset;
     int next_tick = DE4X5_AUTOSENSE_MS;
@@ -4587,7 +4587,7 @@ dc21142_infoleaf(struct net_device *dev)
 static int 
 dc21143_infoleaf(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char count = 0;
     u_char *p = (u_char *)&lp->srom + lp->infoleaf_offset;
     int next_tick = DE4X5_AUTOSENSE_MS;
@@ -4625,7 +4625,7 @@ dc21143_infoleaf(struct net_device *dev)
 static int 
 compact_infoblock(struct net_device *dev, u_char count, u_char *p)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char flags, csr6;
 
     /* Recursively figure out the info blocks */
@@ -4665,7 +4665,7 @@ compact_infoblock(struct net_device *dev
 static int 
 type0_infoblock(struct net_device *dev, u_char count, u_char *p)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char flags, csr6, len = (*p & BLOCK_LEN)+1;
 
     /* Recursively figure out the info blocks */
@@ -4705,7 +4705,7 @@ type0_infoblock(struct net_device *dev, 
 static int 
 type1_infoblock(struct net_device *dev, u_char count, u_char *p)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char len = (*p & BLOCK_LEN)+1;
 
     /* Recursively figure out the info blocks */
@@ -4744,7 +4744,7 @@ type1_infoblock(struct net_device *dev, 
 static int 
 type2_infoblock(struct net_device *dev, u_char count, u_char *p)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char len = (*p & BLOCK_LEN)+1;
 
     /* Recursively figure out the info blocks */
@@ -4785,7 +4785,7 @@ type2_infoblock(struct net_device *dev, 
 static int 
 type3_infoblock(struct net_device *dev, u_char count, u_char *p)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char len = (*p & BLOCK_LEN)+1;
 
     /* Recursively figure out the info blocks */
@@ -4827,7 +4827,7 @@ type3_infoblock(struct net_device *dev, 
 static int 
 type4_infoblock(struct net_device *dev, u_char count, u_char *p)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char flags, csr6, len = (*p & BLOCK_LEN)+1;
 
     /* Recursively figure out the info blocks */
@@ -4872,7 +4872,7 @@ type4_infoblock(struct net_device *dev, 
 static int 
 type5_infoblock(struct net_device *dev, u_char count, u_char *p)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_char len = (*p & BLOCK_LEN)+1;
 
     /* Recursively figure out the info blocks */
@@ -5072,7 +5072,7 @@ mii_get_oui(u_char phyaddr, u_long ioadd
 static int
 mii_get_phy(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     int i, j, k, n, limit=sizeof(phy_info)/sizeof(struct phy_table);
     int id;
@@ -5136,7 +5136,7 @@ mii_get_phy(struct net_device *dev)
 static char *
 build_setup_frame(struct net_device *dev, int mode)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int i;
     char *pa = lp->setup_frame;
     
@@ -5176,7 +5176,7 @@ enable_ast(struct net_device *dev, u32 t
 static void
 disable_ast(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     
     del_timer(&lp->timer);
     
@@ -5186,7 +5186,7 @@ disable_ast(struct net_device *dev)
 static long
 de4x5_switch_mac_port(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     s32 omr;
 
@@ -5222,7 +5222,7 @@ de4x5_switch_mac_port(struct net_device 
 static void
 gep_wr(s32 data, struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
 
     if (lp->chipset == DC21140) {
@@ -5237,7 +5237,7 @@ gep_wr(s32 data, struct net_device *dev)
 static int
 gep_rd(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
 
     if (lp->chipset == DC21140) {
@@ -5252,7 +5252,7 @@ gep_rd(struct net_device *dev)
 static void
 timeout(struct net_device *dev, void (*fn)(u_long data), u_long data, u_long msec)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int dt;
     
     /* First, cancel any pending timer events */
@@ -5275,7 +5275,7 @@ timeout(struct net_device *dev, void (*f
 static void
 yawn(struct net_device *dev, int state)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
 
     if ((lp->chipset == DC21040) || (lp->chipset == DC21140)) return;
@@ -5321,7 +5321,7 @@ yawn(struct net_device *dev, int state)
 static void
 de4x5_parse_params(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     char *p, *q, t;
 
     lp->params.fdx = 0;
@@ -5364,7 +5364,7 @@ de4x5_parse_params(struct net_device *de
 static void
 de4x5_dbg_open(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     int i;
     
     if (de4x5_debug & DEBUG_OPEN) {
@@ -5415,7 +5415,7 @@ de4x5_dbg_open(struct net_device *dev)
 static void
 de4x5_dbg_mii(struct net_device *dev, int k)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     u_long iobase = dev->base_addr;
     
     if (de4x5_debug & DEBUG_MII) {
@@ -5443,7 +5443,7 @@ de4x5_dbg_mii(struct net_device *dev, in
 static void
 de4x5_dbg_media(struct net_device *dev)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     
     if (lp->media != lp->c_media) {
 	if (de4x5_debug & DEBUG_MEDIA) {
@@ -5534,7 +5534,7 @@ de4x5_dbg_rx(struct sk_buff *skb, int le
 static int
 de4x5_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
-    struct de4x5_private *lp = (struct de4x5_private *)dev->priv;
+    struct de4x5_private *lp = netdev_priv(dev);
     struct de4x5_ioctl *ioc = (struct de4x5_ioctl *) &rq->ifr_data;
     u_long iobase = dev->base_addr;
     int i, j, status = 0;
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/dmfe.c linux-post-2.6.4-20040314/drivers/net/tulip/dmfe.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/dmfe.c	2004-01-10 15:31:38.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/dmfe.c	2004-03-03 04:32:55.000000000 +0000
@@ -392,7 +392,7 @@ static int __devinit dmfe_init_one (stru
 	}
 
 	/* Init system & device */
-	db = dev->priv;
+	db = netdev_priv(dev);
 
 	/* Allocate Tx/Rx descriptor memory */
 	db->desc_pool_ptr = pci_alloc_consistent(pdev, sizeof(struct tx_desc) * DESC_ALL_CNT + 0x20, &db->desc_pool_dma_ptr);
@@ -466,7 +466,7 @@ err_out_free:
 static void __devexit dmfe_remove_one (struct pci_dev *pdev)
 {
 	struct net_device *dev = pci_get_drvdata(pdev);
-	struct dmfe_board_info *db = dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 
 	DMFE_DBUG(0, "dmfe_remove_one()", 0);
 
@@ -494,7 +494,7 @@ static void __devexit dmfe_remove_one (s
 static int dmfe_open(struct DEVICE *dev)
 {
 	int ret;
-	struct dmfe_board_info *db = dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 
 	DMFE_DBUG(0, "dmfe_open", 0);
 
@@ -552,7 +552,7 @@ static int dmfe_open(struct DEVICE *dev)
 
 static void dmfe_init_dm910x(struct DEVICE *dev)
 {
-	struct dmfe_board_info *db = dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 	unsigned long ioaddr = db->ioaddr;
 
 	DMFE_DBUG(0, "dmfe_init_dm910x()", 0);
@@ -618,7 +618,7 @@ static void dmfe_init_dm910x(struct DEVI
 
 static int dmfe_start_xmit(struct sk_buff *skb, struct DEVICE *dev)
 {
-	struct dmfe_board_info *db = dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 	struct tx_desc *txptr;
 	unsigned long flags;
 
@@ -687,7 +687,7 @@ static int dmfe_start_xmit(struct sk_buf
 
 static int dmfe_stop(struct DEVICE *dev)
 {
-	struct dmfe_board_info *db = dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 	unsigned long ioaddr = dev->base_addr;
 
 	DMFE_DBUG(0, "dmfe_stop", 0);
@@ -730,7 +730,7 @@ static int dmfe_stop(struct DEVICE *dev)
 static irqreturn_t dmfe_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct DEVICE *dev = dev_id;
-	struct dmfe_board_info *db = (struct dmfe_board_info *) dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 	unsigned long ioaddr = dev->base_addr;
 	unsigned long flags;
 
@@ -957,7 +957,7 @@ static void dmfe_rx_packet(struct DEVICE
 
 static struct net_device_stats * dmfe_get_stats(struct DEVICE *dev)
 {
-	struct dmfe_board_info *db = (struct dmfe_board_info *)dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 
 	DMFE_DBUG(0, "dmfe_get_stats", 0);
 	return &db->stats;
@@ -970,7 +970,7 @@ static struct net_device_stats * dmfe_ge
 
 static void dmfe_set_filter_mode(struct DEVICE * dev)
 {
-	struct dmfe_board_info *db = dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 	unsigned long flags;
 
 	DMFE_DBUG(0, "dmfe_set_filter_mode()", 0);
@@ -1003,7 +1003,7 @@ static void dmfe_set_filter_mode(struct 
 static void netdev_get_drvinfo(struct net_device *dev,
 			       struct ethtool_drvinfo *info)
 {
-	struct dmfe_board_info *np = dev->priv;
+	struct dmfe_board_info *np = netdev_priv(dev);
 
 	strcpy(info->driver, DRV_NAME);
 	strcpy(info->version, DRV_VERSION);
@@ -1028,7 +1028,7 @@ static void dmfe_timer(unsigned long dat
 	u32 tmp_cr8;
 	unsigned char tmp_cr12;
 	struct DEVICE *dev = (struct DEVICE *) data;
-	struct dmfe_board_info *db = (struct dmfe_board_info *) dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
  	unsigned long flags;
 
 	DMFE_DBUG(0, "dmfe_timer()", 0);
@@ -1160,7 +1160,7 @@ static void dmfe_timer(unsigned long dat
 
 static void dmfe_dynamic_reset(struct DEVICE *dev)
 {
-	struct dmfe_board_info *db = dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 
 	DMFE_DBUG(0, "dmfe_dynamic_reset()", 0);
 
@@ -1358,7 +1358,7 @@ static void dm9132_id_table(struct DEVIC
 
 static void send_filter_frame(struct DEVICE *dev, int mc_cnt)
 {
-	struct dmfe_board_info *db = dev->priv;
+	struct dmfe_board_info *db = netdev_priv(dev);
 	struct dev_mc_list *mcptr;
 	struct tx_desc *txptr;
 	u16 * addrptr;
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/eeprom.c linux-post-2.6.4-20040314/drivers/net/tulip/eeprom.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/eeprom.c	2002-10-29 05:14:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/eeprom.c	2004-03-03 04:44:17.000000000 +0000
@@ -136,7 +136,7 @@ void __devinit tulip_parse_eeprom(struct
 	static struct mediatable *last_mediatable;
 	static unsigned char *last_ee_data;
 	static int controller_index;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	unsigned char *ee_data = tp->eeprom;
 	int i;
 
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/interrupt.c linux-post-2.6.4-20040314/drivers/net/tulip/interrupt.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/interrupt.c	2004-03-06 05:22:14.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/interrupt.c	2004-03-03 04:37:57.000000000 +0000
@@ -63,7 +63,7 @@ unsigned int mit_table[MIT_SIZE+1] =
 
 int tulip_refill_rx(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int entry;
 	int refilled = 0;
 
@@ -109,7 +109,7 @@ void oom_timer(unsigned long data)
 
 int tulip_poll(struct net_device *dev, int *budget)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int entry = tp->cur_rx % RX_RING_SIZE;
 	int rx_work_limit = *budget;
 	int received = 0;
@@ -354,7 +354,7 @@ done:
 
 static int tulip_rx(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int entry = tp->cur_rx % RX_RING_SIZE;
 	int rx_work_limit = tp->dirty_rx + RX_RING_SIZE - tp->cur_rx;
 	int received = 0;
@@ -465,7 +465,7 @@ static inline unsigned int phy_interrupt
 {
 #ifdef __hppa__
 	int csr12 = inl(dev->base_addr + CSR12) & 0xff;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 
 	if (csr12 != tp->csr12_shadow) {
 		/* ack interrupt */
@@ -490,7 +490,7 @@ static inline unsigned int phy_interrupt
 irqreturn_t tulip_interrupt(int irq, void *dev_instance, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_instance;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int csr5;
 	int missed;
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/media.c linux-post-2.6.4-20040314/drivers/net/tulip/media.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/media.c	2002-11-27 19:18:55.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/media.c	2004-03-03 04:42:38.000000000 +0000
@@ -48,7 +48,7 @@ static const unsigned char comet_miireg2
 
 int tulip_mdio_read(struct net_device *dev, int phy_id, int location)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int i;
 	int read_cmd = (0xf6 << 10) | ((phy_id & 0x1f) << 5) | location;
 	int retval = 0;
@@ -111,7 +111,7 @@ int tulip_mdio_read(struct net_device *d
 
 void tulip_mdio_write(struct net_device *dev, int phy_id, int location, int val)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int i;
 	int cmd = (0x5002 << 16) | ((phy_id & 0x1f) << 23) | (location<<18) | (val & 0xffff);
 	long ioaddr = dev->base_addr;
@@ -171,7 +171,7 @@ void tulip_mdio_write(struct net_device 
 void tulip_select_media(struct net_device *dev, int startup)
 {
 	long ioaddr = dev->base_addr;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	struct mediatable *mtable = tp->mtable;
 	u32 new_csr6;
 	int i;
@@ -374,7 +374,7 @@ void tulip_select_media(struct net_devic
   */
 int tulip_check_duplex(struct net_device *dev)
 {
-	struct tulip_private *tp = dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	unsigned int bmsr, lpa, negotiated, new_csr6;
 
 	bmsr = tulip_mdio_read(dev, tp->phys[0], MII_BMSR);
@@ -420,7 +420,7 @@ int tulip_check_duplex(struct net_device
 
 void __devinit tulip_find_mii (struct net_device *dev, int board_idx)
 {
-	struct tulip_private *tp = dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int phyn, phy_idx = 0;
 	int mii_reg0;
 	int mii_advert;
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/pnic.c linux-post-2.6.4-20040314/drivers/net/tulip/pnic.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/pnic.c	2002-10-29 05:14:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/pnic.c	2004-03-03 04:33:51.000000000 +0000
@@ -20,7 +20,7 @@
 
 void pnic_do_nway(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	u32 phy_reg = inl(ioaddr + 0xB8);
 	u32 new_csr6 = tp->csr6 & ~0x40C40200;
@@ -53,7 +53,7 @@ void pnic_do_nway(struct net_device *dev
 
 void pnic_lnk_change(struct net_device *dev, int csr5)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int phy_reg = inl(ioaddr + 0xB8);
 
@@ -89,7 +89,7 @@ void pnic_lnk_change(struct net_device *
 void pnic_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int next_tick = 60*HZ;
 
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/pnic2.c linux-post-2.6.4-20040314/drivers/net/tulip/pnic2.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/pnic2.c	2002-10-29 05:14:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/pnic2.c	2004-03-03 04:43:57.000000000 +0000
@@ -84,7 +84,7 @@
 void pnic2_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int next_tick = 60*HZ;
 
@@ -100,7 +100,7 @@ void pnic2_timer(unsigned long data)
 
 void pnic2_start_nway(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
         int csr14;
         int csr12;
@@ -175,7 +175,7 @@ void pnic2_start_nway(struct net_device 
 
 void pnic2_lnk_change(struct net_device *dev, int csr5)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
         int csr14;
 
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/timer.c linux-post-2.6.4-20040314/drivers/net/tulip/timer.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/timer.c	2002-10-29 05:14:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/timer.c	2004-03-03 04:43:05.000000000 +0000
@@ -20,7 +20,7 @@
 void tulip_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	u32 csr12 = inl(ioaddr + CSR12);
 	int next_tick = 2*HZ;
@@ -135,7 +135,7 @@ void tulip_timer(unsigned long data)
 void mxic_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int next_tick = 60*HZ;
 
@@ -152,7 +152,7 @@ void mxic_timer(unsigned long data)
 void comet_timer(unsigned long data)
 {
 	struct net_device *dev = (struct net_device *)data;
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int next_tick = 60*HZ;
 
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/tulip_core.c linux-post-2.6.4-20040314/drivers/net/tulip/tulip_core.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/tulip_core.c	2004-02-07 04:48:06.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/tulip_core.c	2004-03-13 14:11:07.000000000 +0000
@@ -276,7 +276,7 @@ static void tulip_set_power_state (struc
 
 static void tulip_up(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int next_tick = 3*HZ;
 	int i;
@@ -499,7 +499,7 @@ tulip_open(struct net_device *dev)
 
 static void tulip_tx_timeout(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	unsigned long flags;
 
@@ -587,7 +587,7 @@ static void tulip_tx_timeout(struct net_
 /* Initialize the Rx and Tx rings, along with various 'dev' bits. */
 static void tulip_init_ring(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int i;
 
 	tp->susp_rx = 0;
@@ -638,7 +638,7 @@ static void tulip_init_ring(struct net_d
 static int
 tulip_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int entry;
 	u32 flag;
 	dma_addr_t mapping;
@@ -724,7 +724,7 @@ static void tulip_clean_tx_ring(struct t
 static void tulip_down (struct net_device *dev)
 {
 	long ioaddr = dev->base_addr;
-	struct tulip_private *tp = (struct tulip_private *) dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	unsigned long flags;
 
 	del_timer_sync (&tp->timer);
@@ -764,7 +764,7 @@ static void tulip_down (struct net_devic
 static int tulip_close (struct net_device *dev)
 {
 	long ioaddr = dev->base_addr;
-	struct tulip_private *tp = (struct tulip_private *) dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	int i;
 
 	netif_stop_queue (dev);
@@ -811,7 +811,7 @@ static int tulip_close (struct net_devic
 
 static struct net_device_stats *tulip_get_stats(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 
 	if (netif_running(dev)) {
@@ -830,7 +830,7 @@ static struct net_device_stats *tulip_ge
 
 static int netdev_ethtool_ioctl(struct net_device *dev, void *useraddr)
 {
-	struct tulip_private *np = dev->priv;
+	struct tulip_private *np = netdev_priv(dev);
 	u32 ethcmd;
 
 	if (copy_from_user(&ethcmd, useraddr, sizeof(ethcmd)))
@@ -855,7 +855,7 @@ static int netdev_ethtool_ioctl(struct n
 /* Provide ioctl() calls to examine the MII xcvr state. */
 static int private_ioctl (struct net_device *dev, struct ifreq *rq, int cmd)
 {
-	struct tulip_private *tp = dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	struct mii_ioctl_data *data = (struct mii_ioctl_data *) & rq->ifr_data;
 	const unsigned int phy_idx = 0;
@@ -964,7 +964,7 @@ static int private_ioctl (struct net_dev
 
 static void build_setup_frame_hash(u16 *setup_frm, struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	u16 hash_table[32];
 	struct dev_mc_list *mclist;
 	int i;
@@ -995,7 +995,7 @@ static void build_setup_frame_hash(u16 *
 
 static void build_setup_frame_perfect(u16 *setup_frm, struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	struct dev_mc_list *mclist;
 	int i;
 	u16 *eaddrs;
@@ -1023,7 +1023,7 @@ static void build_setup_frame_perfect(u1
 
 static void set_rx_mode(struct net_device *dev)
 {
-	struct tulip_private *tp = (struct tulip_private *)dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	long ioaddr = dev->base_addr;
 	int csr6;
 
@@ -1150,7 +1150,7 @@ static void set_rx_mode(struct net_devic
 static void __devinit tulip_mwi_config (struct pci_dev *pdev,
 					struct net_device *dev)
 {
-	struct tulip_private *tp = dev->priv;
+	struct tulip_private *tp = netdev_priv(dev);
 	u8 cache;
 	u16 pci_command;
 	u32 csr0;
@@ -1373,7 +1373,7 @@ static int __devinit tulip_init_one (str
 	 * initialize private data structure 'tp'
 	 * it is zeroed and aligned in alloc_etherdev
 	 */
-	tp = dev->priv;
+	tp = netdev_priv(dev);
 
 	tp->rx_ring = pci_alloc_consistent(pdev,
 					   sizeof(struct tulip_rx_desc) * RX_RING_SIZE +
@@ -1759,7 +1759,7 @@ static void __devexit tulip_remove_one (
 	if (!dev)
 		return;
 
-	tp = dev->priv;
+	tp = netdev_priv(dev);
 	pci_free_consistent (pdev,
 			     sizeof (struct tulip_rx_desc) * RX_RING_SIZE +
 			     sizeof (struct tulip_tx_desc) * TX_RING_SIZE,
diff -purN linux-post-2.6.4-20040313/drivers/net/tulip/xircom_cb.c linux-post-2.6.4-20040314/drivers/net/tulip/xircom_cb.c
--- linux-post-2.6.4-20040313/drivers/net/tulip/xircom_cb.c	2004-01-22 16:46:34.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tulip/xircom_cb.c	2004-03-03 04:46:11.000000000 +0000
@@ -178,7 +178,7 @@ static void print_binary(unsigned int nu
 static void netdev_get_drvinfo(struct net_device *dev,
 			       struct ethtool_drvinfo *info)
 {
-	struct xircom_private *private = dev->priv;
+	struct xircom_private *private = netdev_priv(dev);
 
 	strcpy(info->driver, "xircom_cb");
 	strcpy(info->bus_info, pci_name(private->pdev));
@@ -235,7 +235,7 @@ static int __devinit xircom_probe(struct
 		printk(KERN_ERR "xircom_probe: failed to allocate etherdev\n");
 		goto device_fail;
 	}
-	private = dev->priv;
+	private = netdev_priv(dev);
 	
 	/* Allocate the send/receive buffers */
 	private->rx_buffer = pci_alloc_consistent(pdev,8192,&private->rx_dma_handle);
@@ -312,7 +312,7 @@ device_fail:
 static void __devexit xircom_remove(struct pci_dev *pdev)
 {
 	struct net_device *dev = pci_get_drvdata(pdev);
-	struct xircom_private *card = dev->priv;
+	struct xircom_private *card = netdev_priv(dev);
 
 	enter("xircom_remove");
 	pci_free_consistent(pdev,8192,card->rx_buffer,card->rx_dma_handle);
@@ -328,7 +328,7 @@ static void __devexit xircom_remove(stru
 static irqreturn_t xircom_interrupt(int irq, void *dev_instance, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) dev_instance;
-	struct xircom_private *card = (struct xircom_private *) dev->priv;
+	struct xircom_private *card = netdev_priv(dev);
 	unsigned int status;
 	int i;
 
@@ -385,7 +385,7 @@ static int xircom_start_xmit(struct sk_b
 	int desc;
 	enter("xircom_start_xmit");
 	
-	card = (struct xircom_private*)dev->priv;
+	card = netdev_priv(dev);
 	spin_lock_irqsave(&card->lock,flags);
 	
 	/* First see if we can free some descriptors */
@@ -444,7 +444,7 @@ static int xircom_start_xmit(struct sk_b
 
 static int xircom_open(struct net_device *dev)
 {
-	struct xircom_private *xp = (struct xircom_private *) dev->priv;
+	struct xircom_private *xp = netdev_priv(dev);
 	int retval;
 	enter("xircom_open");
 	printk(KERN_INFO "xircom cardbus adaptor found, registering as %s, using irq %i \n",dev->name,dev->irq);
@@ -466,7 +466,7 @@ static int xircom_close(struct net_devic
 	unsigned long flags;
 	
 	enter("xircom_close");
-	card = dev->priv;
+	card = netdev_priv(dev);
 	netif_stop_queue(dev); /* we don't want new packets */
 
 	
@@ -495,7 +495,7 @@ static int xircom_close(struct net_devic
 
 static struct net_device_stats *xircom_get_stats(struct net_device *dev)
 {
-        struct xircom_private *card = (struct xircom_private *)dev->priv;
+        struct xircom_private *card = netdev_priv(dev);
         return &card->stats;
 } 
                                                  
diff -purN linux-post-2.6.4-20040313/drivers/net/tun.c linux-post-2.6.4-20040314/drivers/net/tun.c
--- linux-post-2.6.4-20040313/drivers/net/tun.c	2004-01-11 00:09:09.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/tun.c	2004-03-03 18:44:01.000000000 +0000
@@ -70,7 +70,7 @@ static int tun_net_close(struct net_devi
 /* Net device start xmit */
 static int tun_net_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct tun_struct *tun = (struct tun_struct *)dev->priv;
+	struct tun_struct *tun = netdev_priv(dev);
 
 	DBG(KERN_INFO "%s: tun_net_xmit %d\n", tun->dev->name, skb->len);
 
@@ -113,14 +113,14 @@ static void tun_net_mclist(struct net_de
 
 static struct net_device_stats *tun_net_stats(struct net_device *dev)
 {
-	struct tun_struct *tun = (struct tun_struct *)dev->priv;
+	struct tun_struct *tun = netdev_priv(dev);
 	return &tun->stats;
 }
 
 /* Initialize net device. */
 static void tun_net_init(struct net_device *dev)
 {
-	struct tun_struct *tun = (struct tun_struct *)dev->priv;
+	struct tun_struct *tun = netdev_priv(dev);
    
 	switch (tun->flags & TUN_TYPE_MASK) {
 	case TUN_TUN_DEV:
@@ -153,7 +153,7 @@ static void tun_net_init(struct net_devi
 /* Poll */
 static unsigned int tun_chr_poll(struct file *file, poll_table * wait)
 {  
-	struct tun_struct *tun = (struct tun_struct *)file->private_data;
+	struct tun_struct *tun = file->private_data;
 	unsigned int mask = POLLOUT | POLLWRNORM;
 
 	if (!tun)
@@ -217,7 +217,7 @@ static __inline__ ssize_t tun_get_user(s
 static ssize_t tun_chr_writev(struct file * file, const struct iovec *iv, 
 			      unsigned long count, loff_t *pos)
 {
-	struct tun_struct *tun = (struct tun_struct *)file->private_data;
+	struct tun_struct *tun = file->private_data;
 	unsigned long i;
 	size_t len;
 
@@ -279,7 +279,7 @@ static __inline__ ssize_t tun_put_user(s
 static ssize_t tun_chr_readv(struct file *file, const struct iovec *iv,
 			    unsigned long count, loff_t *pos)
 {
-	struct tun_struct *tun = (struct tun_struct *)file->private_data;
+	struct tun_struct *tun = file->private_data;
 	DECLARE_WAITQUEUE(wait, current);
 	struct sk_buff *skb;
 	ssize_t len, ret = 0;
@@ -341,7 +341,7 @@ static ssize_t tun_chr_read(struct file 
 
 static void tun_setup(struct net_device *dev)
 {
-	struct tun_struct *tun = dev->priv;
+	struct tun_struct *tun = netdev_priv(dev);
 
 	skb_queue_head_init(&tun->readq);
 	init_waitqueue_head(&tun->read_wait);
@@ -413,7 +413,7 @@ static int tun_set_iff(struct file *file
 		if (!dev)
 			return -ENOMEM;
 
-		tun = dev->priv;
+		tun = netdev_priv(dev);
 		tun->dev = dev;
 		tun->flags = flags;
 
@@ -455,7 +455,7 @@ static int tun_set_iff(struct file *file
 static int tun_chr_ioctl(struct inode *inode, struct file *file, 
 			 unsigned int cmd, unsigned long arg)
 {
-	struct tun_struct *tun = (struct tun_struct *)file->private_data;
+	struct tun_struct *tun = file->private_data;
 
 	if (cmd == TUNSETIFF && !tun) {
 		struct ifreq ifr;
@@ -527,7 +527,7 @@ static int tun_chr_ioctl(struct inode *i
 
 static int tun_chr_fasync(int fd, struct file *file, int on)
 {
-	struct tun_struct *tun = (struct tun_struct *)file->private_data;
+	struct tun_struct *tun = file->private_data;
 	int ret;
 
 	if (!tun)
@@ -558,7 +558,7 @@ static int tun_chr_open(struct inode *in
 
 static int tun_chr_close(struct inode *inode, struct file *file)
 {
-	struct tun_struct *tun = (struct tun_struct *)file->private_data;
+	struct tun_struct *tun = file->private_data;
 
 	if (!tun)
 		return 0;
diff -purN linux-post-2.6.4-20040313/drivers/net/wan/comx-hw-locomx.c linux-post-2.6.4-20040314/drivers/net/wan/comx-hw-locomx.c
--- linux-post-2.6.4-20040313/drivers/net/wan/comx-hw-locomx.c	2003-09-11 17:40:53.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/wan/comx-hw-locomx.c	2004-03-03 17:42:59.000000000 +0000
@@ -77,7 +77,7 @@ struct locomx_data {
 
 static int LOCOMX_txe(struct net_device *dev)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	struct locomx_data *hw = ch->HW_privdata;
 
 	return (!hw->board.chanA.tx_next_skb);
@@ -86,8 +86,8 @@ static int LOCOMX_txe(struct net_device 
 
 static void locomx_rx(struct z8530_channel *c, struct sk_buff *skb)
 {
-	struct net_device *dev=c->netdevice;
-	struct comx_channel *ch=dev->priv;
+	struct net_device *dev = c->netdevice;
+	struct comx_channel *ch = netdev_priv(dev);
 	
 	if (ch->debug_flags & DEBUG_HW_RX) {
 		comx_debug_skb(dev, skb, "locomx_rx receiving");
@@ -97,7 +97,7 @@ static void locomx_rx(struct z8530_chann
 
 static int LOCOMX_send_packet(struct net_device *dev, struct sk_buff *skb) 
 {
-	struct comx_channel *ch = (struct comx_channel *)dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	struct locomx_data *hw = ch->HW_privdata;
 
 	if (ch->debug_flags & DEBUG_HW_TX) {
@@ -126,9 +126,9 @@ static int LOCOMX_send_packet(struct net
 
 static void locomx_status_timerfun(unsigned long d)
 {
-	struct net_device *dev=(struct net_device *)d;
-	struct comx_channel *ch=dev->priv;
-	struct locomx_data *hw=ch->HW_privdata;
+	struct net_device *dev = (struct net_device *)d;
+	struct comx_channel *ch = netdev_priv(dev);
+	struct locomx_data *hw = ch->HW_privdata;
 
 	if(!(ch->line_status & LINE_UP) &&
 	    (hw->board.chanA.status & CTS)) {
@@ -144,7 +144,7 @@ static void locomx_status_timerfun(unsig
 
 static int LOCOMX_open(struct net_device *dev)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	struct locomx_data *hw = ch->HW_privdata;
 	struct proc_dir_entry *procfile = ch->procdir->subdir;
 	unsigned long flags;
@@ -256,7 +256,7 @@ irq_fail:
 
 static int LOCOMX_close(struct net_device *dev)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	struct locomx_data *hw = ch->HW_privdata;
 	struct proc_dir_entry *procfile = ch->procdir->subdir;
 
@@ -376,7 +376,7 @@ static int locomx_write_proc(struct file
 
 static int LOCOMX_init(struct net_device *dev) 
 {
-	struct comx_channel *ch = (struct comx_channel *)dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	struct locomx_data *hw;
 	struct proc_dir_entry *new_file;
 
@@ -449,7 +449,7 @@ cleanup_HW_privdata:
 
 static int LOCOMX_exit(struct net_device *dev)
 {
-	struct comx_channel *ch = (struct comx_channel *)dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	ch->HW_access_board = NULL;
 	ch->HW_release_board = NULL;
diff -purN linux-post-2.6.4-20040313/drivers/net/wan/comx-hw-munich.c linux-post-2.6.4-20040314/drivers/net/wan/comx-hw-munich.c
--- linux-post-2.6.4-20040313/drivers/net/wan/comx-hw-munich.c	2004-02-19 03:42:41.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/wan/comx-hw-munich.c	2004-03-03 17:32:01.000000000 +0000
@@ -373,7 +373,7 @@ static munich_board_t pcicom_boards[MAX_
 
 void rework_idle_channels(struct net_device *dev)
 {
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw = ch->HW_privdata;
     munich_board_t *board = slicecom_boards + hw->boardnum;
     munich_ccb_t *ccb = board->ccb;
@@ -731,7 +731,7 @@ static void pcicom_modemline(unsigned lo
 {
     munich_board_t *board = (munich_board_t *) b;
     struct net_device *dev = board->twins[0];
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     unsigned long regs;
 
     regs = readl((void *)(&board->bar1[GPDATA]));
@@ -765,7 +765,7 @@ static void pcicom_modemline(unsigned lo
 
 static int MUNICH_txe(struct net_device *dev)
 {
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw = ch->HW_privdata;
 
     return (hw->busy < TX_DESC_MAX - 1);
@@ -905,7 +905,7 @@ static int munich_probe(void)
 #if 0
 static int slicecom_reset(struct net_device *dev)
 {
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
 
     printk("slicecom_reset: resetting the hardware\n");
 
@@ -933,7 +933,7 @@ static int slicecom_reset(struct net_dev
 
 static int MUNICH_send_packet(struct net_device *dev, struct sk_buff *skb)
 {
-    struct comx_channel *ch = (struct comx_channel *)dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw = ch->HW_privdata;
 
     /* Send it to the debug facility too if needed: */
@@ -1085,7 +1085,7 @@ static irqreturn_t MUNICH_interrupt(int 
 		goto go_for_next_interrupt;
 	    }
 
-	    ch = (struct comx_channel *)dev->priv;
+	    ch = netdev_priv(dev);
 	    hw = (struct slicecom_privdata *)ch->HW_privdata;
 
 	    //      printk("Rx STAT=0x%08x int_info=0x%08x rx_desc_ptr=%d rx_desc.status=0x%01x\n",
@@ -1125,7 +1125,7 @@ static irqreturn_t MUNICH_interrupt(int 
 
 	    if (dev != NULL)
 	    {
-		ch = (struct comx_channel *)dev->priv;
+		ch = netdev_priv(dev);
 		hw = (struct slicecom_privdata *)ch->HW_privdata;
 
 		rx_status = hw->rx_desc[hw->rx_desc_ptr].status;
@@ -1261,7 +1261,7 @@ static irqreturn_t MUNICH_interrupt(int 
 		goto go_for_next_tx_interrupt;
 	    }
 
-	    ch = (struct comx_channel *)dev->priv;
+	    ch = netdev_priv(dev);
 	    hw = (struct slicecom_privdata *)ch->HW_privdata;
 
 	    //      printk("Tx STAT=0x%08x int_info=0x%08x tiq_ptr=%d\n", stat, int_info.all, board->tiq_ptr );
@@ -1295,7 +1295,7 @@ static irqreturn_t MUNICH_interrupt(int 
 	    {
 		int newbusy;
 
-		ch = (struct comx_channel *)dev->priv;
+		ch = netdev_priv(dev);
 		hw = (struct slicecom_privdata *)ch->HW_privdata;
 
 		/* We don't trust the "Tx available" info from the TIQ, but check        */
@@ -1398,7 +1398,7 @@ static irqreturn_t MUNICH_interrupt(int 
 
 static int MUNICH_open(struct net_device *dev)
 {
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw = ch->HW_privdata;
     struct proc_dir_entry *procfile = ch->procdir->subdir;
     munich_board_t *board;
@@ -1891,7 +1891,7 @@ static int MUNICH_open(struct net_device
 
 static int MUNICH_close(struct net_device *dev)
 {
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw = ch->HW_privdata;
     struct proc_dir_entry *procfile = ch->procdir->subdir;
     munich_board_t *board;
@@ -2028,7 +2028,7 @@ static int MUNICH_close(struct net_devic
 
 static int MUNICH_minden(struct net_device *dev, char *page)
 {
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw = ch->HW_privdata;
     munich_board_t *board;
     struct net_device *devp;
@@ -2290,7 +2290,7 @@ static int munich_read_proc(char *page, 
 {
     struct proc_dir_entry *file = (struct proc_dir_entry *)data;
     struct net_device *dev = file->parent->data;
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw = ch->HW_privdata;
     munich_board_t *board;
 
@@ -2388,7 +2388,7 @@ static int munich_write_proc(struct file
 {
     struct proc_dir_entry *entry = (struct proc_dir_entry *)data;
     struct net_device *dev = (struct net_device *)entry->parent->data;
-    struct comx_channel *ch = dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw = ch->HW_privdata;
     munich_board_t *board;
 
@@ -2656,7 +2656,7 @@ static int init_escape(struct comx_chann
 
 static int BOARD_init(struct net_device *dev)
 {
-    struct comx_channel *ch = (struct comx_channel *)dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
     struct slicecom_privdata *hw;
     struct proc_dir_entry *new_file;
 
@@ -2772,7 +2772,7 @@ static int BOARD_init(struct net_device 
  */
 static int BOARD_exit(struct net_device *dev)
 {
-    struct comx_channel *ch = (struct comx_channel *)dev->priv;
+    struct comx_channel *ch = netdev_priv(dev);
 
     /* Free private data area */
 //    board = hw->boardnum + (ch->hardware == &pcicomhw ? pcicom_boards : slicecom_boards);
diff -purN linux-post-2.6.4-20040313/drivers/net/wan/comx.c linux-post-2.6.4-20040314/drivers/net/wan/comx.c
--- linux-post-2.6.4-20040313/drivers/net/wan/comx.c	2003-09-11 17:40:53.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/wan/comx.c	2004-03-03 17:30:17.000000000 +0000
@@ -119,7 +119,7 @@ struct comx_debugflags_struct	comx_debug
 
 int comx_debug(struct net_device *dev, char *fmt, ...)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	char *page,*str;
 	va_list args;
 	int len;
@@ -162,7 +162,7 @@ int comx_debug(struct net_device *dev, c
 
 int comx_debug_skb(struct net_device *dev, struct sk_buff *skb, char *msg)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	if (!ch->debug_area) return 0;
 	if (!skb) comx_debug(dev, "%s: %s NULL skb\n\n", dev->name, msg);
@@ -175,7 +175,7 @@ int comx_debug_bytes(struct net_device *
 		char *msg)
 {
 	int pos = 0;
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	if (!ch->debug_area) return 0;
 
@@ -207,7 +207,7 @@ int comx_debug_bytes(struct net_device *
 static void comx_loadavg_timerfun(unsigned long d)
 {
 	struct net_device *dev = (struct net_device *)d;
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	ch->avg_bytes[ch->loadavg_counter] = ch->current_stats->rx_bytes;
 	ch->avg_bytes[ch->loadavg_counter + ch->loadavg_size] = 
@@ -222,7 +222,7 @@ static void comx_loadavg_timerfun(unsign
 static void comx_reset_timerfun(unsigned long d)
 { 
 	struct net_device *dev = (struct net_device *)d;
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	if(!(ch->line_status & (PROTO_LOOP | PROTO_UP))) {
 		if(test_and_set_bit(0,&ch->reset_pending) && ch->HW_reset) {
@@ -236,7 +236,7 @@ static void comx_reset_timerfun(unsigned
 
 static int comx_open(struct net_device *dev)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	struct proc_dir_entry *comxdir = ch->procdir->subdir;
 	int ret=0;
 
@@ -268,7 +268,7 @@ static int comx_open(struct net_device *
 
 static int comx_close(struct net_device *dev)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	struct proc_dir_entry *comxdir = ch->procdir->subdir;
 	int ret = -ENODEV;
 
@@ -303,7 +303,7 @@ static int comx_close(struct net_device 
 
 void comx_status(struct net_device *dev, int status)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 #if 0
 	if(status & (PROTO_UP | PROTO_LOOP)) {
@@ -321,7 +321,7 @@ void comx_status(struct net_device *dev,
 
 static int comx_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	int rc;
 
 	if (skb->len > dev->mtu + dev->hard_header_len) {
@@ -342,7 +342,7 @@ static int comx_xmit(struct sk_buff *skb
 static int comx_header(struct sk_buff *skb, struct net_device *dev, 
 	unsigned short type, void *daddr, void *saddr, unsigned len) 
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	if (ch->LINE_header) {
 		return (ch->LINE_header(skb, dev, type, daddr, saddr, len));
@@ -354,7 +354,7 @@ static int comx_header(struct sk_buff *s
 static int comx_rebuild_header(struct sk_buff *skb) 
 {
 	struct net_device *dev = skb->dev;
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	if (ch->LINE_rebuild_header) {
 		return(ch->LINE_rebuild_header(skb));
@@ -365,7 +365,7 @@ static int comx_rebuild_header(struct sk
 
 int comx_rx(struct net_device *dev, struct sk_buff *skb)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	if (ch->debug_flags & DEBUG_COMX_RX) {
 		comx_debug_skb(dev, skb, "comx_rx skb");
@@ -379,7 +379,7 @@ int comx_rx(struct net_device *dev, stru
 
 static struct net_device_stats *comx_stats(struct net_device *dev)
 {
-	struct comx_channel *ch = (struct comx_channel *)dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	return ch->current_stats;
 }
@@ -387,7 +387,7 @@ static struct net_device_stats *comx_sta
 void comx_lineup_func(unsigned long d)
 {
 	struct net_device *dev = (struct net_device *)d;
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	del_timer(&ch->lineup_timer);
 	clear_bit(0, &ch->lineup_pending);
@@ -405,7 +405,7 @@ void comx_lineup_func(unsigned long d)
 
 static int comx_statistics(struct net_device *dev, char *page)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	int len = 0;
 	int tmp;
 	int i = 0;
@@ -472,7 +472,7 @@ static int comx_statistics(struct net_de
 
 static int comx_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
 {
-	struct comx_channel *ch = dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 
 	if (ch->LINE_ioctl) {
 		return(ch->LINE_ioctl(dev, ifr, cmd));
@@ -535,7 +535,7 @@ static int comx_read_proc(char *page, ch
 {
 	struct proc_dir_entry *file = (struct proc_dir_entry *)data;
 	struct net_device *dev = file->parent->data;
-	struct comx_channel *ch=(struct comx_channel *)dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	int len = 0;
 
 	if (strcmp(file->name, FILENAME_STATUS) == 0) {
@@ -599,7 +599,7 @@ static int comx_write_proc(struct file *
 {
 	struct proc_dir_entry *entry = (struct proc_dir_entry *)data;
 	struct net_device *dev = (struct net_device *)entry->parent->data;
-	struct comx_channel *ch=(struct comx_channel *)dev->priv;
+	struct comx_channel *ch = netdev_priv(dev);
 	char *page;
 	struct comx_hardware *hw = comx_channels;
 	struct comx_protocol *line = comx_lines;
@@ -821,7 +821,7 @@ static int comx_mkdir(struct inode *dir,
 	if (register_netdevice(dev)) {
 		goto cleanup_filename_debug;
 	}
-	ch=dev->priv;
+	ch = netdev_priv(dev);
 	if((ch->if_ptr = (void *)kmalloc(sizeof(struct ppp_device), 
 				 GFP_KERNEL)) == NULL) {
 		goto cleanup_register;
@@ -874,7 +874,7 @@ static int comx_rmdir(struct inode *dir,
 
 	lock_kernel();
 	dev = entry->data;
-	ch = dev->priv;
+	ch = netdev_priv(dev);
 	if (dev->flags & IFF_UP) {
 		printk(KERN_ERR "%s: down interface before removing it\n", dev->name);
 		unlock_kernel();
diff -purN linux-post-2.6.4-20040313/drivers/net/wan/cosa.c linux-post-2.6.4-20040314/drivers/net/wan/cosa.c
--- linux-post-2.6.4-20040313/drivers/net/wan/cosa.c	2004-01-10 15:46:26.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/wan/cosa.c	2004-03-03 17:26:33.000000000 +0000
@@ -639,7 +639,7 @@ static void sppp_channel_delete(struct c
 
 static int cosa_sppp_open(struct net_device *d)
 {
-	struct channel_data *chan = d->priv;
+	struct channel_data *chan = netdev_priv(d);
 	int err;
 	unsigned long flags;
 
@@ -679,7 +679,7 @@ static int cosa_sppp_open(struct net_dev
 
 static int cosa_sppp_tx(struct sk_buff *skb, struct net_device *dev)
 {
-	struct channel_data *chan = dev->priv;
+	struct channel_data *chan = netdev_priv(dev);
 
 	netif_stop_queue(dev);
 
@@ -690,7 +690,7 @@ static int cosa_sppp_tx(struct sk_buff *
 
 static void cosa_sppp_timeout(struct net_device *dev)
 {
-	struct channel_data *chan = dev->priv;
+	struct channel_data *chan = netdev_priv(dev);
 
 	if (test_bit(RXBIT, &chan->cosa->rxtx)) {
 		chan->stats.rx_errors++;
@@ -709,7 +709,7 @@ static void cosa_sppp_timeout(struct net
 
 static int cosa_sppp_close(struct net_device *d)
 {
-	struct channel_data *chan = d->priv;
+	struct channel_data *chan = netdev_priv(d);
 	unsigned long flags;
 
 	netif_stop_queue(d);
@@ -789,7 +789,7 @@ static int sppp_tx_done(struct channel_d
 
 static struct net_device_stats *cosa_net_stats(struct net_device *dev)
 {
-	struct channel_data *chan = dev->priv;
+	struct channel_data *chan = netdev_priv(dev);
 	return &chan->stats;
 }
 
@@ -807,7 +807,7 @@ static ssize_t cosa_read(struct file *fi
 {
 	DECLARE_WAITQUEUE(wait, current);
 	unsigned long flags;
-	struct channel_data *chan = (struct channel_data *)file->private_data;
+	struct channel_data *chan = file->private_data;
 	struct cosa_data *cosa = chan->cosa;
 	char *kbuf;
 
@@ -881,7 +881,7 @@ static ssize_t cosa_write(struct file *f
 	const char *buf, size_t count, loff_t *ppos)
 {
 	DECLARE_WAITQUEUE(wait, current);
-	struct channel_data *chan = (struct channel_data *)file->private_data;
+	struct channel_data *chan = file->private_data;
 	struct cosa_data *cosa = chan->cosa;
 	unsigned long flags;
 	char *kbuf;
@@ -990,7 +990,7 @@ static int cosa_open(struct inode *inode
 
 static int cosa_release(struct inode *inode, struct file *file)
 {
-	struct channel_data *channel = (struct channel_data *)file->private_data;
+	struct channel_data *channel = file->private_data;
 	struct cosa_data *cosa;
 	unsigned long flags;
 
@@ -1205,7 +1205,7 @@ static int cosa_sppp_ioctl(struct net_de
 	int cmd)
 {
 	int rv;
-	struct channel_data *chan = (struct channel_data *)dev->priv;
+	struct channel_data *chan = netdev_priv(dev);
 	rv = cosa_ioctl_common(chan->cosa, chan, cmd, (unsigned long)ifr->ifr_data);
 	if (rv == -ENOIOCTLCMD) {
 		return sppp_do_ioctl(dev, ifr, cmd);
@@ -1216,7 +1216,7 @@ static int cosa_sppp_ioctl(struct net_de
 static int cosa_chardev_ioctl(struct inode *inode, struct file *file,
 	unsigned int cmd, unsigned long arg)
 {
-	struct channel_data *channel = (struct channel_data *)file->private_data;
+	struct channel_data *channel = file->private_data;
 	struct cosa_data *cosa = channel->cosa;
 	return cosa_ioctl_common(cosa, channel, cmd, arg);
 }
diff -purN linux-post-2.6.4-20040313/drivers/net/wan/lapbether.c linux-post-2.6.4-20040314/drivers/net/wan/lapbether.c
--- linux-post-2.6.4-20040313/drivers/net/wan/lapbether.c	2004-01-19 23:44:25.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/wan/lapbether.c	2004-03-03 17:37:46.000000000 +0000
@@ -198,7 +198,7 @@ drop:
 
 static void lapbeth_data_transmit(struct net_device *ndev, struct sk_buff *skb)
 {
-	struct lapbethdev *lapbeth = ndev->priv;
+	struct lapbethdev *lapbeth = netdev_priv(ndev);
 	unsigned char *ptr;
 	struct net_device *dev;
 	int size = skb->len;
@@ -269,7 +269,7 @@ static void lapbeth_disconnected(struct 
  */
 static struct net_device_stats *lapbeth_get_stats(struct net_device *dev)
 {
-	struct lapbethdev *lapbeth = (struct lapbethdev *)dev->priv;
+	struct lapbethdev *lapbeth = netdev_priv(dev);
 	return &lapbeth->stats;
 }
 
@@ -278,7 +278,7 @@ static struct net_device_stats *lapbeth_
  */
 static int lapbeth_set_mac_address(struct net_device *dev, void *addr)
 {
-	struct sockaddr *sa = (struct sockaddr *)addr;
+	struct sockaddr *sa = addr;
 	memcpy(dev->dev_addr, sa->sa_data, dev->addr_len);
 	return 0;
 }
@@ -355,7 +355,7 @@ static int lapbeth_new_device(struct net
 	if (!ndev)
 		goto out;
 
-	lapbeth = ndev->priv;
+	lapbeth = netdev_priv(ndev);
 	lapbeth->axdev = ndev;
 
 	dev_hold(dev);
@@ -397,7 +397,7 @@ static int lapbeth_device_event(struct n
 				unsigned long event, void *ptr)
 {
 	struct lapbethdev *lapbeth;
-	struct net_device *dev = (struct net_device *)ptr;
+	struct net_device *dev = ptr;
 
 	if (!dev_is_ethdev(dev))
 		return NOTIFY_DONE;
diff -purN linux-post-2.6.4-20040313/drivers/net/wireless/airo.c linux-post-2.6.4-20040314/drivers/net/wireless/airo.c
--- linux-post-2.6.4-20040313/drivers/net/wireless/airo.c	2004-02-26 11:26:03.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/wireless/airo.c	2004-03-12 05:55:09.000000000 +0000
@@ -1505,7 +1505,7 @@ static int RxSeqValid (struct airo_info 
 	seq = micSeq - (context->window - 33);
 
 	//Too old of a SEQ number to check.
-	if ((u32)seq < 0)
+	if ((s32)seq < 0)
 		return ERROR;
     
 	if ( seq > 64 ) {
diff -purN linux-post-2.6.4-20040313/drivers/net/wireless/atmel.c linux-post-2.6.4-20040314/drivers/net/wireless/atmel.c
--- linux-post-2.6.4-20040313/drivers/net/wireless/atmel.c	2004-02-05 20:21:42.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/wireless/atmel.c	2004-03-03 18:24:16.000000000 +0000
@@ -796,7 +796,7 @@ static void tx_update_descriptor(struct 
 
 static int start_tx (struct sk_buff *skb, struct net_device *dev)
 {
-	struct atmel_private *priv = (struct atmel_private *)dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	struct ieee802_11_hdr header;
 	unsigned long flags;
 	u16 buff, frame_ctl, len = (ETH_ZLEN < skb->len) ? skb->len : ETH_ZLEN;
@@ -1167,7 +1167,7 @@ static void reset_irq_status(struct atme
 static irqreturn_t service_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *) dev_id;
-	struct atmel_private *priv = (struct atmel_private *) dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	u8 isr;
 	
 	if (priv->card && priv->present_callback && 
@@ -1234,13 +1234,13 @@ static irqreturn_t service_interrupt(int
 
 static struct net_device_stats *atmel_get_stats (struct net_device *dev)
 {
-	struct atmel_private *priv = (struct atmel_private *)dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	return &priv->stats;
 }
 
 static struct iw_statistics *atmel_get_wireless_stats (struct net_device *dev)
 {
-	struct atmel_private *priv = (struct atmel_private *)dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	/* update the link quality here in case we are seeing no beacons 
 	   at all to drive the process */
@@ -1287,7 +1287,7 @@ static int atmel_set_mac_address(struct 
 
 static int atmel_open (struct net_device *dev)
 {
-	struct atmel_private *priv = (struct atmel_private *) dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	priv->station_state = STATION_STATE_INITIALIZING;
 	if (!reset_atmel_card(dev)) {
 		priv->station_state = STATION_STATE_DOWN;
@@ -1298,7 +1298,7 @@ static int atmel_open (struct net_device
 
 static int atmel_close (struct net_device *dev)
 {
-	struct atmel_private *priv = (struct atmel_private *) dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 		
 	netif_carrier_off(dev);	
 	if (netif_running(dev))
@@ -1378,7 +1378,7 @@ static int atmel_proc_output (char *buf,
 static int atmel_read_proc(char *page, char **start, off_t off,
 			   int count, int *eof, void *data)
 {
-        struct atmel_private *priv = (struct atmel_private *)data;
+        struct atmel_private *priv = data;
 	int len = atmel_proc_output (page, priv);
         if (len <= off+count) *eof = 1;
         *start = page + off;
@@ -1406,7 +1406,7 @@ struct net_device *init_atmel_card( unsi
 		goto err_out_free;
 	}
 
-	priv = dev->priv;
+	priv = netdev_priv(dev);
 	priv->dev = dev;
 	priv->sys_dev = sys_dev;
 	priv->present_callback = card_present;
@@ -1525,7 +1525,7 @@ EXPORT_SYMBOL(init_atmel_card);
 
 void stop_atmel_card(struct net_device *dev, int freeres)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 		
 	/* put a brick on it... */
 	if (priv->bus_type == BUS_TYPE_PCCARD) 
@@ -1582,7 +1582,7 @@ static int atmel_set_essid(struct net_de
 			   struct iw_point *dwrq,
 			   char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	/* Check if we asked for `any' */
 	if(dwrq->flags == 0) {
@@ -1610,7 +1610,7 @@ static int atmel_get_essid(struct net_de
 			   struct iw_point *dwrq,
 			   char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	/* Get the current SSID */
 	if (priv->SSID_size == 0) {
@@ -1633,7 +1633,7 @@ static int atmel_get_wap(struct net_devi
 			 struct sockaddr *awrq,
 			 char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	memcpy(awrq->sa_data, priv->CurrentBSSID, 6);
 	awrq->sa_family = ARPHRD_ETHER;
 
@@ -1645,7 +1645,7 @@ static int atmel_set_encode(struct net_d
 			    struct iw_point *dwrq,
 			    char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	/* Basic checking: do we have a key to set ?
 	 * Note : with the new API, it's impossible to get a NULL pointer.
@@ -1736,7 +1736,7 @@ static int atmel_get_encode(struct net_d
 			    struct iw_point *dwrq,
 			    char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	int index = (dwrq->flags & IW_ENCODE_INDEX) - 1;
 	
 	if (!priv->wep_is_on)
@@ -1776,7 +1776,7 @@ static int atmel_set_rate(struct net_dev
 			  struct iw_param *vwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	
 	if (vwrq->fixed == 0) {
 		priv->tx_rate = 3;
@@ -1808,7 +1808,7 @@ static int atmel_set_mode(struct net_dev
 			  __u32 *uwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	if (*uwrq != IW_MODE_ADHOC && *uwrq != IW_MODE_INFRA)
 		return -EINVAL;
@@ -1822,7 +1822,7 @@ static int atmel_get_mode(struct net_dev
 			  __u32 *uwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	
 	*uwrq = priv->operating_mode;
 	return 0;
@@ -1833,7 +1833,7 @@ static int atmel_get_rate(struct net_dev
 			 struct iw_param *vwrq,
 			 char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	if (priv->auto_tx_rate) {
 		vwrq->fixed = 0;
@@ -1855,7 +1855,7 @@ static int atmel_set_power(struct net_de
 			   struct iw_param *vwrq,
 			   char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	priv->power_mode = vwrq->disabled ? 0 : 1;
 	return -EINPROGRESS;
 }
@@ -1865,7 +1865,7 @@ static int atmel_get_power(struct net_de
 			   struct iw_param *vwrq,
 			   char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	vwrq->disabled = priv->power_mode ? 0 : 1;
 	vwrq->flags = IW_POWER_ON;
 	return 0;
@@ -1876,7 +1876,7 @@ static int atmel_set_retry(struct net_de
 			   struct iw_param *vwrq,
 			   char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	
 	if(!vwrq->disabled && (vwrq->flags & IW_RETRY_LIMIT)) {
 		if(vwrq->flags & IW_RETRY_MAX)
@@ -1899,7 +1899,7 @@ static int atmel_get_retry(struct net_de
 			   struct iw_param *vwrq,
 			   char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	vwrq->disabled = 0;      /* Can't be disabled */
 
@@ -1922,7 +1922,7 @@ static int atmel_set_rts(struct net_devi
 			 struct iw_param *vwrq,
 			 char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	int rthr = vwrq->value;
 
 	if(vwrq->disabled)
@@ -1940,7 +1940,7 @@ static int atmel_get_rts(struct net_devi
 			 struct iw_param *vwrq,
 			 char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	
 	vwrq->value = priv->rts_threshold;
 	vwrq->disabled = (vwrq->value >= 2347);
@@ -1954,7 +1954,7 @@ static int atmel_set_frag(struct net_dev
 			  struct iw_param *vwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	int fthr = vwrq->value;
 
 	if(vwrq->disabled)
@@ -1973,7 +1973,7 @@ static int atmel_get_frag(struct net_dev
 			  struct iw_param *vwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	vwrq->value = priv->frag_threshold;
 	vwrq->disabled = (vwrq->value >= 2346);
@@ -1990,7 +1990,7 @@ static int atmel_set_freq(struct net_dev
 			  struct iw_freq *fwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	int rc = -EINPROGRESS;		/* Call commit handler */
 	
 	/* If setting by frequency, convert to a channel */
@@ -2024,7 +2024,7 @@ static int atmel_get_freq(struct net_dev
 			  struct iw_freq *fwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	fwrq->m = priv->channel;
 	fwrq->e = 0;
@@ -2036,7 +2036,7 @@ static int atmel_set_scan(struct net_dev
 			  struct iw_param *vwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 
 	/* Note : you may have realised that, as this is a SET operation,
 	 * this is privileged and therefore a normal user can't
@@ -2074,7 +2074,7 @@ static int atmel_get_scan(struct net_dev
 			  struct iw_point *dwrq,
 			  char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	int i;
 	char *current_ev = extra;
 	struct iw_event	iwe;
@@ -2126,7 +2126,7 @@ static int atmel_get_range(struct net_de
 			   struct iw_point *dwrq,
 			   char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	struct iw_range *range = (struct iw_range *) extra;
 	int k,i,j;
 
@@ -2193,7 +2193,7 @@ static int atmel_set_wap(struct net_devi
 			 struct sockaddr *awrq,
 			 char *extra)
 {
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	int i;
 	static const u8 bcast[] = { 255, 255, 255, 255, 255, 255 };
 	
@@ -2318,7 +2318,7 @@ static const struct iw_handler_def	atmel
 static int atmel_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
 	int rc = 0;
-	struct atmel_private *priv = (struct atmel_private *) dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	atmel_priv_ioctl com;
 	struct iwreq *wrq = (struct iwreq *) rq;
 	unsigned char *new_firmware;
@@ -3053,7 +3053,7 @@ static void atmel_management_frame(struc
 static void atmel_management_timer(u_long a)
 {
   struct net_device *dev = (struct net_device *) a;
-  struct atmel_private *priv = (struct atmel_private *)dev->priv;
+  struct atmel_private *priv = netdev_priv(dev);
   unsigned long flags;
   
   /* Check if the card has been yanked. */
@@ -3297,7 +3297,7 @@ static int atmel_wakeup_firmware(struct 
 static int probe_atmel_card(struct net_device *dev)
 {
 	int rc = 0;
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	 
 	/* reset pccard */
 	if (priv->bus_type == BUS_TYPE_PCCARD) 
@@ -3486,7 +3486,7 @@ int reset_atmel_card(struct net_device *
 	   which is the route into the rest of the firmare datastructures. */
 
 	int channel;
-	struct atmel_private *priv = dev->priv;
+	struct atmel_private *priv = netdev_priv(dev);
 	u8 configuration;
 	
 	/* data to add to the firmware names, in priority order
diff -purN linux-post-2.6.4-20040313/drivers/net/wireless/orinoco.c linux-post-2.6.4-20040314/drivers/net/wireless/orinoco.c
--- linux-post-2.6.4-20040313/drivers/net/wireless/orinoco.c	2004-01-11 00:19:06.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/net/wireless/orinoco.c	2004-03-03 18:27:06.000000000 +0000
@@ -599,7 +599,7 @@ static int orinoco_debug_dump_recs(struc
 
 int __orinoco_up(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct hermes *hw = &priv->hw;
 	int err;
 
@@ -626,7 +626,7 @@ int __orinoco_up(struct net_device *dev)
 
 int __orinoco_down(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct hermes *hw = &priv->hw;
 	int err;
 
@@ -657,7 +657,7 @@ int __orinoco_down(struct net_device *de
 
 int orinoco_reinit_firmware(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct hermes *hw = &priv->hw;
 	int err;
 
@@ -685,7 +685,7 @@ int orinoco_reinit_firmware(struct net_d
 
 static int orinoco_open(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	unsigned long flags;
 	int err;
 
@@ -705,7 +705,7 @@ static int orinoco_open(struct net_devic
 
 int orinoco_stop(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int err = 0;
 
 	/* We mustn't use orinoco_lock() here, because we need to be
@@ -724,7 +724,7 @@ int orinoco_stop(struct net_device *dev)
 
 static int __orinoco_program_rids(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int err;
 	struct hermes_idstring idbuf;
@@ -912,7 +912,7 @@ ESSID in IBSS-Ad-Hoc mode.\n", dev->name
 /* xyzzy */
 static int orinoco_reconfigure(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct hermes *hw = &priv->hw;
 	unsigned long flags;
 	int err = 0;
@@ -965,7 +965,7 @@ static int orinoco_reconfigure(struct ne
  * schedule_work() */
 static void orinoco_reset(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct hermes *hw = &priv->hw;
 	int err;
 	unsigned long flags;
@@ -1070,7 +1070,7 @@ is_ethersnap(struct header_struct *hdr)
 static void
 orinoco_set_multicast_list(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	unsigned long flags;
 
 	if (orinoco_lock(priv, &flags) != 0) {
@@ -1433,7 +1433,7 @@ static void show_rx_frame(struct orinoco
 irqreturn_t orinoco_interrupt(int irq, void *dev_id, struct pt_regs *regs)
 {
 	struct net_device *dev = (struct net_device *)dev_id;
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int count = MAX_IRQLOOPS_PER_IRQ;
 	u16 evstat, events;
@@ -1561,7 +1561,7 @@ static void print_linkstatus(struct net_
 
 static void __orinoco_ev_info(struct net_device *dev, hermes_t *hw)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	u16 infofid;
 	struct {
 		u16 len;
@@ -1662,7 +1662,7 @@ static void __orinoco_ev_info(struct net
 
 static void __orinoco_ev_rx(struct net_device *dev, hermes_t *hw)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct net_device_stats *stats = &priv->stats;
 	struct iw_statistics *wstats = &priv->wstats;
 	struct sk_buff *skb = NULL;
@@ -1814,7 +1814,7 @@ static void __orinoco_ev_rx(struct net_d
 
 static void __orinoco_ev_txexc(struct net_device *dev, hermes_t *hw)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct net_device_stats *stats = &priv->stats;
 	u16 fid = hermes_read_regn(hw, TXCOMPLFID);
 	struct hermes_tx_descriptor desc;
@@ -1840,7 +1840,7 @@ static void __orinoco_ev_txexc(struct ne
 
 static void __orinoco_ev_tx(struct net_device *dev, hermes_t *hw)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct net_device_stats *stats = &priv->stats;
 
 	stats->tx_packets++;
@@ -1850,7 +1850,7 @@ static void __orinoco_ev_tx(struct net_d
 
 static void __orinoco_ev_alloc(struct net_device *dev, hermes_t *hw)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 
 	u16 fid = hermes_read_regn(hw, ALLOCFID);
 
@@ -1886,7 +1886,7 @@ static int determine_firmware_type(struc
 
 static void determine_firmware(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int err;
 	struct sta_id sta_id;
@@ -2024,7 +2024,7 @@ static void determine_firmware(struct ne
 static int
 orinoco_init(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int err = 0;
 	struct hermes_idstring nickbuf;
@@ -2204,7 +2204,7 @@ orinoco_init(struct net_device *dev)
 struct net_device_stats *
 orinoco_get_stats(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	
 	return &priv->stats;
 }
@@ -2212,7 +2212,7 @@ orinoco_get_stats(struct net_device *dev
 struct iw_statistics *
 orinoco_get_wireless_stats(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	struct iw_statistics *wstats = &priv->wstats;
 	int err = 0;
@@ -2271,7 +2271,7 @@ orinoco_get_wireless_stats(struct net_de
 static inline void orinoco_spy_gather(struct net_device *dev, u_char *mac,
 				    int level, int noise)
 {
-	struct orinoco_private *priv = (struct orinoco_private *)dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int i;
 
 	/* Gather wireless spy statistics: for each packet, compare the
@@ -2290,7 +2290,7 @@ orinoco_stat_gather(struct net_device *d
 		    struct sk_buff *skb,
 		    struct hermes_rx_descriptor *desc)
 {
-	struct orinoco_private *priv = (struct orinoco_private *)dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 
 	/* Using spy support with lots of Rx packets, like in an
 	 * infrastructure (AP), will really slow down everything, because
@@ -2311,7 +2311,7 @@ orinoco_stat_gather(struct net_device *d
 static int
 orinoco_xmit(struct sk_buff *skb, struct net_device *dev)
 {
-	struct orinoco_private *priv = (struct orinoco_private *)dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct net_device_stats *stats = &priv->stats;
 	hermes_t *hw = &priv->hw;
 	int err = 0;
@@ -2449,7 +2449,7 @@ orinoco_xmit(struct sk_buff *skb, struct
 static void
 orinoco_tx_timeout(struct net_device *dev)
 {
-	struct orinoco_private *priv = (struct orinoco_private *)dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct net_device_stats *stats = &priv->stats;
 	struct hermes *hw = &priv->hw;
 
@@ -2466,7 +2466,7 @@ orinoco_tx_timeout(struct net_device *de
 static int
 orinoco_change_mtu(struct net_device *dev, int new_mtu)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 
 	if ( (new_mtu < ORINOCO_MIN_MTU) || (new_mtu > ORINOCO_MAX_MTU) )
 		return -EINVAL;
@@ -2484,7 +2484,7 @@ orinoco_change_mtu(struct net_device *de
 static void
 __orinoco_set_multicast_list(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int err = 0;
 	int promisc, mc_count;
@@ -2554,7 +2554,7 @@ __orinoco_set_multicast_list(struct net_
 
 static int orinoco_ioctl_getiwrange(struct net_device *dev, struct iw_point *rrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int err = 0;
 	int mode;
 	struct iw_range range;
@@ -2699,7 +2699,7 @@ static int orinoco_ioctl_getiwrange(stru
 
 static int orinoco_ioctl_setiwencode(struct net_device *dev, struct iw_point *erq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int index = (erq->flags & IW_ENCODE_INDEX) - 1;
 	int setindex = priv->tx_key;
 	int enable = priv->wep_on;
@@ -2794,7 +2794,7 @@ static int orinoco_ioctl_setiwencode(str
 
 static int orinoco_ioctl_getiwencode(struct net_device *dev, struct iw_point *erq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int index = (erq->flags & IW_ENCODE_INDEX) - 1;
 	u16 xlen = 0;
 	char keybuf[ORINOCO_MAX_KEY_SIZE];
@@ -2841,7 +2841,7 @@ static int orinoco_ioctl_getiwencode(str
 
 static int orinoco_ioctl_setessid(struct net_device *dev, struct iw_point *erq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	char essidbuf[IW_ESSID_MAX_SIZE+1];
 	int err;
 	unsigned long flags;
@@ -2874,7 +2874,7 @@ static int orinoco_ioctl_setessid(struct
 
 static int orinoco_ioctl_getessid(struct net_device *dev, struct iw_point *erq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	char essidbuf[IW_ESSID_MAX_SIZE+1];
 	int active;
 	int err = 0;
@@ -2907,7 +2907,7 @@ static int orinoco_ioctl_getessid(struct
 
 static int orinoco_ioctl_setnick(struct net_device *dev, struct iw_point *nrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	char nickbuf[IW_ESSID_MAX_SIZE+1];
 	int err;
 	unsigned long flags;
@@ -2935,7 +2935,7 @@ static int orinoco_ioctl_setnick(struct 
 
 static int orinoco_ioctl_getnick(struct net_device *dev, struct iw_point *nrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	char nickbuf[IW_ESSID_MAX_SIZE+1];
 	int err;
 	unsigned long flags;
@@ -2957,7 +2957,7 @@ static int orinoco_ioctl_getnick(struct 
 
 static int orinoco_ioctl_setfreq(struct net_device *dev, struct iw_freq *frq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int chan = -1;
 	int err;
 	unsigned long flags;
@@ -2999,7 +2999,7 @@ static int orinoco_ioctl_setfreq(struct 
 
 static int orinoco_ioctl_getsens(struct net_device *dev, struct iw_param *srq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	u16 val;
 	int err;
@@ -3025,7 +3025,7 @@ static int orinoco_ioctl_getsens(struct 
 
 static int orinoco_ioctl_setsens(struct net_device *dev, struct iw_param *srq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int val = srq->value;
 	int err;
 	unsigned long flags;
@@ -3047,7 +3047,7 @@ static int orinoco_ioctl_setsens(struct 
 
 static int orinoco_ioctl_setrts(struct net_device *dev, struct iw_param *rrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int val = rrq->value;
 	int err;
 	unsigned long flags;
@@ -3070,7 +3070,7 @@ static int orinoco_ioctl_setrts(struct n
 
 static int orinoco_ioctl_setfrag(struct net_device *dev, struct iw_param *frq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int err = 0;
 	unsigned long flags;
 
@@ -3105,7 +3105,7 @@ supported on this firmware. Using MWO ro
 
 static int orinoco_ioctl_getfrag(struct net_device *dev, struct iw_param *frq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int err = 0;
 	u16 val;
@@ -3143,7 +3143,7 @@ static int orinoco_ioctl_getfrag(struct 
 
 static int orinoco_ioctl_setrate(struct net_device *dev, struct iw_param *rrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int err = 0;
 	int ratemode = -1;
 	int bitrate; /* 100s of kilobits */
@@ -3186,7 +3186,7 @@ static int orinoco_ioctl_setrate(struct 
 
 static int orinoco_ioctl_getrate(struct net_device *dev, struct iw_param *rrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int err = 0;
 	int ratemode;
@@ -3253,7 +3253,7 @@ static int orinoco_ioctl_getrate(struct 
 
 static int orinoco_ioctl_setpower(struct net_device *dev, struct iw_param *prq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int err = 0;
 	unsigned long flags;
 
@@ -3306,7 +3306,7 @@ static int orinoco_ioctl_setpower(struct
 
 static int orinoco_ioctl_getpower(struct net_device *dev, struct iw_param *prq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int err = 0;
 	u16 enable, period, timeout, mcast;
@@ -3356,7 +3356,7 @@ static int orinoco_ioctl_getpower(struct
 #if WIRELESS_EXT > 10
 static int orinoco_ioctl_getretry(struct net_device *dev, struct iw_param *rrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	int err = 0;
 	u16 short_limit, long_limit, lifetime;
@@ -3409,7 +3409,7 @@ static int orinoco_ioctl_getretry(struct
 
 static int orinoco_ioctl_setibssport(struct net_device *dev, struct iwreq *wrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int val = *( (int *) wrq->u.name );
 	int err;
 	unsigned long flags;
@@ -3429,7 +3429,7 @@ static int orinoco_ioctl_setibssport(str
 
 static int orinoco_ioctl_getibssport(struct net_device *dev, struct iwreq *wrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int *val = (int *)wrq->u.name;
 	int err;
 	unsigned long flags;
@@ -3446,7 +3446,7 @@ static int orinoco_ioctl_getibssport(str
 
 static int orinoco_ioctl_setport3(struct net_device *dev, struct iwreq *wrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int val = *( (int *) wrq->u.name );
 	int err = 0;
 	unsigned long flags;
@@ -3488,7 +3488,7 @@ static int orinoco_ioctl_setport3(struct
 
 static int orinoco_ioctl_getport3(struct net_device *dev, struct iwreq *wrq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	int *val = (int *)wrq->u.name;
 	int err;
 	unsigned long flags;
@@ -3507,7 +3507,7 @@ static int orinoco_ioctl_getport3(struct
  * Jean II */
 static int orinoco_ioctl_setspy(struct net_device *dev, struct iw_point *srq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct sockaddr address[IW_MAX_SPY];
 	int number = srq->length;
 	int i;
@@ -3554,7 +3554,7 @@ static int orinoco_ioctl_setspy(struct n
 
 static int orinoco_ioctl_getspy(struct net_device *dev, struct iw_point *srq)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct sockaddr address[IW_MAX_SPY];
 	struct iw_quality spy_stat[IW_MAX_SPY];
 	int number;
@@ -3601,7 +3601,7 @@ static int orinoco_ioctl_getspy(struct n
 static int
 orinoco_ioctl(struct net_device *dev, struct ifreq *rq, int cmd)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	struct iwreq *wrq = (struct iwreq *)rq;
 	int err = 0;
 	int tmp;
@@ -4057,7 +4057,7 @@ struct {
 
 static int orinoco_debug_dump_recs(struct net_device *dev)
 {
-	struct orinoco_private *priv = dev->priv;
+	struct orinoco_private *priv = netdev_priv(dev);
 	hermes_t *hw = &priv->hw;
 	u8 *val8;
 	u16 *val16;
@@ -4131,7 +4131,7 @@ struct net_device *alloc_orinocodev(int 
 	dev = alloc_etherdev(sizeof(struct orinoco_private) + sizeof_card);
 	if (!dev)
 		return NULL;
-	priv = (struct orinoco_private *)dev->priv;
+	priv = netdev_priv(dev);
 	priv->ndev = dev;
 	if (sizeof_card)
 		priv->card = (void *)((unsigned long)dev->priv + sizeof(struct orinoco_private));
diff -purN linux-post-2.6.4-20040313/drivers/scsi/cpqfcTSinit.c linux-post-2.6.4-20040314/drivers/scsi/cpqfcTSinit.c
--- linux-post-2.6.4-20040313/drivers/scsi/cpqfcTSinit.c	2003-09-09 23:54:19.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/scsi/cpqfcTSinit.c	2004-03-14 01:57:41.000000000 +0000
@@ -46,10 +46,6 @@
 #include <linux/ioport.h>  // request_region() prototype
 #include <linux/completion.h>
 
-#ifdef __alpha__
-#define __KERNEL_SYSCALLS__
-#endif
-#include <asm/unistd.h>
 #include <asm/io.h>
 #include <asm/uaccess.h>   // ioctl related
 #include <asm/irq.h>
diff -purN linux-post-2.6.4-20040313/drivers/scsi/oktagon_esp.c linux-post-2.6.4-20040314/drivers/scsi/oktagon_esp.c
--- linux-post-2.6.4-20040313/drivers/scsi/oktagon_esp.c	2004-02-06 09:38:27.000000000 +0000
+++ linux-post-2.6.4-20040314/drivers/scsi/oktagon_esp.c	2004-03-14 01:57:41.000000000 +0000
@@ -12,7 +12,6 @@
 #define USE_BOTTOM_HALF
 #endif
 
-#define __KERNEL_SYSCALLS__
 #include <linux/module.h>
 
 #include <linux/kernel.h>
@@ -43,8 +42,6 @@
 #include <linux/interrupt.h>
 #endif
 
-#include <linux/unistd.h>
-
 /* The controller registers can be found in the Z2 config area at these
  * offsets:
  */
diff -purN linux-post-2.6.4-20040313/fs/open.c linux-post-2.6.4-20040314/fs/open.c
--- linux-post-2.6.4-20040313/fs/open.c	2004-03-07 07:04:57.000000000 +0000
+++ linux-post-2.6.4-20040314/fs/open.c	2004-03-14 01:57:41.000000000 +0000
@@ -954,6 +954,7 @@ out_error:
 	fd = error;
 	goto out;
 }
+EXPORT_SYMBOL_GPL(sys_open);
 
 #ifndef __alpha__
 
diff -purN linux-post-2.6.4-20040313/fs/proc/proc_misc.c linux-post-2.6.4-20040314/fs/proc/proc_misc.c
--- linux-post-2.6.4-20040313/fs/proc/proc_misc.c	2004-03-09 00:57:46.000000000 +0000
+++ linux-post-2.6.4-20040314/fs/proc/proc_misc.c	2004-03-14 01:57:41.000000000 +0000
@@ -361,7 +361,8 @@ int show_stat(struct seq_file *p, void *
 	int i;
 	extern unsigned long total_forks;
 	unsigned long jif;
-	unsigned int sum = 0, user = 0, nice = 0, system = 0, idle = 0, iowait = 0, irq = 0, softirq = 0;
+	u64	sum = 0, user = 0, nice = 0, system = 0,
+		idle = 0, iowait = 0, irq = 0, softirq = 0;
 
 	jif = - wall_to_monotonic.tv_sec;
 	if (wall_to_monotonic.tv_nsec)
@@ -381,26 +382,35 @@ int show_stat(struct seq_file *p, void *
 			sum += kstat_cpu(i).irqs[j];
 	}
 
-	seq_printf(p, "cpu  %u %u %u %u %u %u %u\n",
-		jiffies_to_clock_t(user),
-		jiffies_to_clock_t(nice),
-		jiffies_to_clock_t(system),
-		jiffies_to_clock_t(idle),
-		jiffies_to_clock_t(iowait),
-		jiffies_to_clock_t(irq),
-		jiffies_to_clock_t(softirq));
+	seq_printf(p, "cpu  %llu %llu %llu %llu %llu %llu %llu\n",
+		(unsigned long long)jiffies_64_to_clock_t(user),
+		(unsigned long long)jiffies_64_to_clock_t(nice),
+		(unsigned long long)jiffies_64_to_clock_t(system),
+		(unsigned long long)jiffies_64_to_clock_t(idle),
+		(unsigned long long)jiffies_64_to_clock_t(iowait),
+		(unsigned long long)jiffies_64_to_clock_t(irq),
+		(unsigned long long)jiffies_64_to_clock_t(softirq));
 	for_each_cpu(i) {
-		seq_printf(p, "cpu%d %u %u %u %u %u %u %u\n",
+		/* two separate calls here to work around gcc-2.95.3 ICE */
+		seq_printf(p, "cpu%d %llu %llu %llu ",
 			i,
-			jiffies_to_clock_t(kstat_cpu(i).cpustat.user),
-			jiffies_to_clock_t(kstat_cpu(i).cpustat.nice),
-			jiffies_to_clock_t(kstat_cpu(i).cpustat.system),
-			jiffies_to_clock_t(kstat_cpu(i).cpustat.idle),
-			jiffies_to_clock_t(kstat_cpu(i).cpustat.iowait),
-			jiffies_to_clock_t(kstat_cpu(i).cpustat.irq),
-			jiffies_to_clock_t(kstat_cpu(i).cpustat.softirq));
+			(unsigned long long)
+			  jiffies_64_to_clock_t(kstat_cpu(i).cpustat.user),
+			(unsigned long long)
+			  jiffies_64_to_clock_t(kstat_cpu(i).cpustat.nice),
+			(unsigned long long)
+			  jiffies_64_to_clock_t(kstat_cpu(i).cpustat.system));
+		seq_printf(p, "%llu %llu %llu %llu\n",
+			(unsigned long long)
+			  jiffies_64_to_clock_t(kstat_cpu(i).cpustat.idle),
+			(unsigned long long)
+			  jiffies_64_to_clock_t(kstat_cpu(i).cpustat.iowait),
+			(unsigned long long)
+			  jiffies_64_to_clock_t(kstat_cpu(i).cpustat.irq),
+			(unsigned long long)
+			  jiffies_64_to_clock_t(kstat_cpu(i).cpustat.softirq));
 	}
-	seq_printf(p, "intr %u", sum);
+	seq_printf(p, "intr %llu", (unsigned long long)sum);
 
 #if !defined(CONFIG_PPC64) && !defined(CONFIG_ALPHA)
 	for (i = 0; i < NR_IRQS; i++)
@@ -408,7 +418,7 @@ int show_stat(struct seq_file *p, void *
 #endif
 
 	seq_printf(p,
-		"\nctxt %lu\n"
+		"\nctxt %llu\n"
 		"btime %lu\n"
 		"processes %lu\n"
 		"procs_running %lu\n"
diff -purN linux-post-2.6.4-20040313/fs/read_write.c linux-post-2.6.4-20040314/fs/read_write.c
--- linux-post-2.6.4-20040313/fs/read_write.c	2004-01-21 01:58:49.000000000 +0000
+++ linux-post-2.6.4-20040314/fs/read_write.c	2004-03-14 01:57:41.000000000 +0000
@@ -143,6 +143,7 @@ asmlinkage off_t sys_lseek(unsigned int 
 bad:
 	return retval;
 }
+EXPORT_SYMBOL_GPL(sys_lseek);
 
 #if !defined(__alpha__)
 asmlinkage long sys_llseek(unsigned int fd, unsigned long offset_high,
@@ -281,6 +282,7 @@ asmlinkage ssize_t sys_read(unsigned int
 
 	return ret;
 }
+EXPORT_SYMBOL_GPL(sys_read);
 
 asmlinkage ssize_t sys_write(unsigned int fd, const char __user * buf, size_t count)
 {
diff -purN linux-post-2.6.4-20040313/include/asm-i386/unistd.h linux-post-2.6.4-20040314/include/asm-i386/unistd.h
--- linux-post-2.6.4-20040313/include/asm-i386/unistd.h	2004-02-25 10:31:13.000000000 +0000
+++ linux-post-2.6.4-20040314/include/asm-i386/unistd.h	2004-03-14 01:57:41.000000000 +0000
@@ -375,6 +375,7 @@ __syscall_return(type,__res); \
 
 #include <linux/compiler.h>
 #include <linux/types.h>
+#include <linux/linkage.h>
 #include <asm/ptrace.h>
 
 /*
diff -purN linux-post-2.6.4-20040313/include/linux/kernel_stat.h linux-post-2.6.4-20040314/include/linux/kernel_stat.h
--- linux-post-2.6.4-20040313/include/linux/kernel_stat.h	2003-08-17 17:23:59.000000000 +0000
+++ linux-post-2.6.4-20040314/include/linux/kernel_stat.h	2004-03-14 01:57:41.000000000 +0000
@@ -14,13 +14,13 @@
  */
 
 struct cpu_usage_stat {
-	unsigned int user;
-	unsigned int nice;
-	unsigned int system;
-	unsigned int softirq;
-	unsigned int irq;
-	unsigned int idle;
-	unsigned int iowait;
+	u64 user;
+	u64 nice;
+	u64 system;
+	u64 softirq;
+	u64 irq;
+	u64 idle;
+	u64 iowait;
 };
 
 struct kernel_stat {
@@ -34,7 +34,7 @@ DECLARE_PER_CPU(struct kernel_stat, ksta
 /* Must have preemption disabled for this to be meaningful. */
 #define kstat_this_cpu	__get_cpu_var(kstat)
 
-extern unsigned long nr_context_switches(void);
+extern unsigned long long nr_context_switches(void);
 
 /*
  * Number of interrupts per specific IRQ source, since bootup
diff -purN linux-post-2.6.4-20040313/include/linux/netdevice.h linux-post-2.6.4-20040314/include/linux/netdevice.h
--- linux-post-2.6.4-20040313/include/linux/netdevice.h	2004-03-02 07:35:14.000000000 +0000
+++ linux-post-2.6.4-20040314/include/linux/netdevice.h	2004-03-13 14:11:07.000000000 +0000
@@ -791,6 +791,17 @@ enum {
 #define netif_msg_hw(p)		((p)->msg_enable & NETIF_MSG_HW)
 #define netif_msg_wol(p)	((p)->msg_enable & NETIF_MSG_WOL)
 
+static inline u32 netif_msg_init(int debug_value, int default_msg_enable_bits)
+{
+	/* use default */
+	if (debug_value < 0 || debug_value >= (sizeof(u32) * 8))
+		return default_msg_enable_bits;
+	if (debug_value == 0)	/* no output */
+		return 0;
+	/* set low N bits */
+	return (1 << debug_value) - 1;
+}
+
 /* Schedule rx intr now? */
 
 static inline int netif_rx_schedule_prep(struct net_device *dev)
diff -purN linux-post-2.6.4-20040313/init/do_mounts.c linux-post-2.6.4-20040314/init/do_mounts.c
--- linux-post-2.6.4-20040313/init/do_mounts.c	2004-03-12 09:33:01.000000000 +0000
+++ linux-post-2.6.4-20040314/init/do_mounts.c	2004-03-14 01:57:41.000000000 +0000
@@ -66,11 +66,11 @@ static dev_t __init try_name(char *name,
 	/* read device number from .../dev */
 
 	sprintf(path, "/sys/block/%s/dev", name);
-	fd = open(path, 0, 0);
+	fd = sys_open(path, 0, 0);
 	if (fd < 0)
 		goto fail;
-	len = read(fd, buf, 32);
-	close(fd);
+	len = sys_read(fd, buf, 32);
+	sys_close(fd);
 	if (len <= 0 || len == 32 || buf[len - 1] != '\n')
 		goto fail;
 	buf[len - 1] = '\0';
@@ -96,11 +96,11 @@ static dev_t __init try_name(char *name,
 
 	/* otherwise read range from .../range */
 	sprintf(path, "/sys/block/%s/range", name);
-	fd = open(path, 0, 0);
+	fd = sys_open(path, 0, 0);
 	if (fd < 0)
 		goto fail;
-	len = read(fd, buf, 32);
-	close(fd);
+	len = sys_read(fd, buf, 32);
+	sys_close(fd);
 	if (len <= 0 || len == 32 || buf[len - 1] != '\n')
 		goto fail;
 	buf[len - 1] = '\0';
@@ -288,7 +288,7 @@ retry:
 				continue;
 		}
 	        /*
-		 * Allow the user to distinguish between failed open
+		 * Allow the user to distinguish between failed sys_open
 		 * and bad superblock on root device.
 		 */
 		__bdevname(ROOT_DEV, b);
@@ -327,21 +327,21 @@ void __init change_floppy(char *fmt, ...
 	va_start(args, fmt);
 	vsprintf(buf, fmt, args);
 	va_end(args);
-	fd = open("/dev/root", O_RDWR | O_NDELAY, 0);
+	fd = sys_open("/dev/root", O_RDWR | O_NDELAY, 0);
 	if (fd >= 0) {
 		sys_ioctl(fd, FDEJECT, 0);
-		close(fd);
+		sys_close(fd);
 	}
 	printk(KERN_NOTICE "VFS: Insert %s and press ENTER\n", buf);
-	fd = open("/dev/console", O_RDWR, 0);
+	fd = sys_open("/dev/console", O_RDWR, 0);
 	if (fd >= 0) {
 		sys_ioctl(fd, TCGETS, (long)&termios);
 		termios.c_lflag &= ~ICANON;
 		sys_ioctl(fd, TCSETSF, (long)&termios);
-		read(fd, &c, 1);
+		sys_read(fd, &c, 1);
 		termios.c_lflag |= ICANON;
 		sys_ioctl(fd, TCSETSF, (long)&termios);
-		close(fd);
+		sys_close(fd);
 	}
 }
 #endif
diff -purN linux-post-2.6.4-20040313/init/do_mounts.h linux-post-2.6.4-20040314/init/do_mounts.h
--- linux-post-2.6.4-20040313/init/do_mounts.h	2004-02-25 10:31:13.000000000 +0000
+++ linux-post-2.6.4-20040314/init/do_mounts.h	2004-03-14 01:57:41.000000000 +0000
@@ -1,4 +1,3 @@
-#define __KERNEL_SYSCALLS__
 #include <linux/config.h>
 #include <linux/kernel.h>
 #include <linux/devfs_fs_kernel.h>
diff -purN linux-post-2.6.4-20040313/init/do_mounts_devfs.c linux-post-2.6.4-20040314/init/do_mounts_devfs.c
--- linux-post-2.6.4-20040313/init/do_mounts_devfs.c	2004-02-25 10:31:13.000000000 +0000
+++ linux-post-2.6.4-20040314/init/do_mounts_devfs.c	2004-03-14 01:57:41.000000000 +0000
@@ -24,7 +24,7 @@ static int __init do_read_dir(int fd, vo
 {
 	long bytes, n;
 	char *p = buf;
-	lseek(fd, 0, 0);
+	sys_lseek(fd, 0, 0);
 
 	for (bytes = 0; bytes < len; bytes += n) {
 		n = sys_getdents64(fd, (struct linux_dirent64 *)(p + bytes),
@@ -45,7 +45,7 @@ static int __init do_read_dir(int fd, vo
 static void * __init read_dir(char *path, int *len)
 {
 	int size;
-	int fd = open(path, 0, 0);
+	int fd = sys_open(path, 0, 0);
 
 	*len = 0;
 	if (fd < 0)
@@ -58,7 +58,7 @@ static void * __init read_dir(char *path
 			break;
 		n = do_read_dir(fd, p, size);
 		if (n > 0) {
-			close(fd);
+			sys_close(fd);
 			*len = n;
 			return p;
 		}
@@ -68,7 +68,7 @@ static void * __init read_dir(char *path
 		if (n < 0)
 			break;
 	}
-	close(fd);
+	sys_close(fd);
 	return NULL;
 }
 
diff -purN linux-post-2.6.4-20040313/init/do_mounts_initrd.c linux-post-2.6.4-20040314/init/do_mounts_initrd.c
--- linux-post-2.6.4-20040313/init/do_mounts_initrd.c	2003-10-18 15:26:58.000000000 +0000
+++ linux-post-2.6.4-20040314/init/do_mounts_initrd.c	2004-03-14 01:57:41.000000000 +0000
@@ -1,4 +1,5 @@
-
+#define __KERNEL_SYSCALLS__
+#include <linux/unistd.h>
 #include <linux/kernel.h>
 #include <linux/fs.h>
 #include <linux/minix_fs.h>
@@ -28,12 +29,12 @@ static int __init do_linuxrc(void * shel
 	static char *argv[] = { "linuxrc", NULL, };
 	extern char * envp_init[];
 
-	close(old_fd);close(root_fd);
-	close(0);close(1);close(2);
-	setsid();
-	(void) open("/dev/console",O_RDWR,0);
-	(void) dup(0);
-	(void) dup(0);
+	sys_close(old_fd);sys_close(root_fd);
+	sys_close(0);sys_close(1);sys_close(2);
+	sys_setsid();
+	(void) sys_open("/dev/console",O_RDWR,0);
+	(void) sys_dup(0);
+	(void) sys_dup(0);
 	return execve(shell, argv, envp_init);
 }
 
@@ -47,8 +48,8 @@ static void __init handle_initrd(void)
 	/* mount initrd on rootfs' /root */
 	mount_block_root("/dev/root.old", root_mountflags & ~MS_RDONLY);
 	sys_mkdir("/old", 0700);
-	root_fd = open("/", 0, 0);
-	old_fd = open("/old", 0, 0);
+	root_fd = sys_open("/", 0, 0);
+	old_fd = sys_open("/old", 0, 0);
 	/* move initrd over / and chdir/chroot in initrd root */
 	sys_chdir("/root");
 	sys_mount(".", "/", NULL, MS_MOVE, NULL);
@@ -57,7 +58,7 @@ static void __init handle_initrd(void)
 
 	pid = kernel_thread(do_linuxrc, "/linuxrc", SIGCHLD);
 	if (pid > 0) {
-		while (pid != waitpid(-1, &i, 0))
+		while (pid != sys_wait4(-1, &i, 0, 0))
 			yield();
 	}
 
@@ -67,8 +68,8 @@ static void __init handle_initrd(void)
 	/* switch root and cwd back to / of rootfs */
 	sys_fchdir(root_fd);
 	sys_chroot(".");
-	close(old_fd);
-	close(root_fd);
+	sys_close(old_fd);
+	sys_close(root_fd);
 	umount_devfs("/old/dev");
 
 	if (new_decode_dev(real_root_dev) == Root_RAM0) {
@@ -84,7 +85,7 @@ static void __init handle_initrd(void)
 	if (!error)
 		printk("okay\n");
 	else {
-		int fd = open("/dev/root.old", O_RDWR, 0);
+		int fd = sys_open("/dev/root.old", O_RDWR, 0);
 		printk("failed\n");
 		printk(KERN_NOTICE "Unmounting old root\n");
 		sys_umount("/old", MNT_DETACH);
@@ -93,7 +94,7 @@ static void __init handle_initrd(void)
 			error = fd;
 		} else {
 			error = sys_ioctl(fd, BLKFLSBUF, 0);
-			close(fd);
+			sys_close(fd);
 		}
 		printk(!error ? "okay\n" : "failed\n");
 	}
diff -purN linux-post-2.6.4-20040313/init/do_mounts_md.c linux-post-2.6.4-20040314/init/do_mounts_md.c
--- linux-post-2.6.4-20040313/init/do_mounts_md.c	2003-09-23 04:16:30.000000000 +0000
+++ linux-post-2.6.4-20040314/init/do_mounts_md.c	2004-03-14 01:57:41.000000000 +0000
@@ -12,15 +12,19 @@
  * The code for that is here.
  */
 
-static int __initdata raid_noautodetect;
+static int __initdata raid_noautodetect, raid_autopart;
 
 static struct {
-	char device_set [MAX_MD_DEVS];
-	int pers[MAX_MD_DEVS];
-	int chunk[MAX_MD_DEVS];
-	char *device_names[MAX_MD_DEVS];
-} md_setup_args __initdata;
+	int minor;
+	int partitioned;
+	int pers;
+	int chunk;
+	char *device_names;
+} md_setup_args[MAX_MD_DEVS] __initdata;
 
+static int md_setup_ents __initdata;
+
+extern int mdp_major;
 /*
  * Parse the command-line parameters given our kernel, but do not
  * actually try to invoke the MD device now; that is handled by
@@ -43,21 +47,37 @@ static struct {
  */
 static int __init md_setup(char *str)
 {
-	int minor, level, factor, fault, pers;
+	int minor, level, factor, fault, pers, partitioned = 0;
 	char *pername = "";
-	char *str1 = str;
+	char *str1;
+	int ent;
 
+	if (*str == 'd') {
+		partitioned = 1;
+		str++;
+	}
 	if (get_option(&str, &minor) != 2) {	/* MD Number */
 		printk(KERN_WARNING "md: Too few arguments supplied to md=.\n");
 		return 0;
 	}
+	str1 = str;
 	if (minor >= MAX_MD_DEVS) {
 		printk(KERN_WARNING "md: md=%d, Minor device number too high.\n", minor);
 		return 0;
-	} else if (md_setup_args.device_names[minor]) {
-		printk(KERN_WARNING "md: md=%d, Specified more than once. "
-		       "Replacing previous definition.\n", minor);
 	}
+	for (ent=0 ; ent< md_setup_ents ; ent++)
+		if (md_setup_args[ent].minor == minor &&
+		    md_setup_args[ent].partitioned == partitioned) {
+			printk(KERN_WARNING "md: md=%s%d, Specified more than once. "
+			       "Replacing previous definition.\n", partitioned?"d":"", minor);
+			break;
+		}
+	if (ent >= MAX_MD_DEVS) {
+		printk(KERN_WARNING "md: md=%s%d - too many md initialisations\n", partitioned?"d":"", minor);
+		return 0;
+	}
+	if (ent >= md_setup_ents)
+		md_setup_ents++;
 	switch (get_option(&str, &level)) {	/* RAID Personality */
 	case 2: /* could be 0 or -1.. */
 		if (level == 0 || level == LEVEL_LINEAR) {
@@ -66,24 +86,16 @@ static int __init md_setup(char *str)
 				printk(KERN_WARNING "md: Too few arguments supplied to md=.\n");
 				return 0;
 			}
-			md_setup_args.pers[minor] = level;
-			md_setup_args.chunk[minor] = 1 << (factor+12);
-			switch(level) {
-			case LEVEL_LINEAR:
+			md_setup_args[ent].pers = level;
+			md_setup_args[ent].chunk = 1 << (factor+12);
+			if (level ==  LEVEL_LINEAR) {
 				pers = LINEAR;
 				pername = "linear";
-				break;
-			case 0:
+			} else {
 				pers = RAID0;
 				pername = "raid0";
-				break;
-			default:
-				printk(KERN_WARNING
-				       "md: The kernel has not been configured for raid%d support!\n",
-				       level);
-				return 0;
 			}
-			md_setup_args.pers[minor] = pers;
+			md_setup_args[ent].pers = pers;
 			break;
 		}
 		/* FALL THROUGH */
@@ -91,36 +103,45 @@ static int __init md_setup(char *str)
 		str = str1;
 		/* FALL THROUGH */
 	case 0:
-		md_setup_args.pers[minor] = 0;
+		md_setup_args[ent].pers = 0;
 		pername="super-block";
 	}
 
 	printk(KERN_INFO "md: Will configure md%d (%s) from %s, below.\n",
 		minor, pername, str);
-	md_setup_args.device_names[minor] = str;
+	md_setup_args[ent].device_names = str;
+	md_setup_args[ent].partitioned = partitioned;
+	md_setup_args[ent].minor = minor;
 
 	return 1;
 }
 
+#define MdpMinorShift 6
+
 static void __init md_setup_drive(void)
 {
-	int minor, i;
+	int minor, i, ent, partitioned;
 	dev_t dev;
 	dev_t devices[MD_SB_DISKS+1];
 
-	for (minor = 0; minor < MAX_MD_DEVS; minor++) {
+	for (ent = 0; ent < md_setup_ents ; ent++) {
 		int fd;
 		int err = 0;
 		char *devname;
 		mdu_disk_info_t dinfo;
 		char name[16], devfs_name[16];
 
-		if (!(devname = md_setup_args.device_names[minor]))
-			continue;
-		
-		sprintf(name, "/dev/md%d", minor);
-		sprintf(devfs_name, "/dev/md/%d", minor);
-		create_dev(name, MKDEV(MD_MAJOR, minor), devfs_name);
+		minor = md_setup_args[ent].minor;
+		partitioned = md_setup_args[ent].partitioned;
+		devname = md_setup_args[ent].device_names;
+
+		sprintf(name, "/dev/md%s%d", partitioned?"_d":"", minor);
+		sprintf(devfs_name, "/dev/md/%s%d", partitioned?"d":"", minor);
+		if (partitioned)
+			dev = MKDEV(mdp_major, minor << MdpMinorShift);
+		else
+			dev = MKDEV(MD_MAJOR, minor);
+		create_dev(name, dev, devfs_name);
 		for (i = 0; i < MD_SB_DISKS && devname != 0; i++) {
 			char *p;
 			char comp_name[64];
@@ -143,34 +164,36 @@ static void __init md_setup_drive(void)
 			}
 
 			devices[i] = dev;
-			md_setup_args.device_set[minor] = 1;
 
 			devname = p;
 		}
 		devices[i] = 0;
 
-		if (!md_setup_args.device_set[minor])
+		if (!i)
 			continue;
 
-		printk(KERN_INFO "md: Loading md%d: %s\n", minor, md_setup_args.device_names[minor]);
+		printk(KERN_INFO "md: Loading md%s%d: %s\n",
+			partitioned ? "_d" : "", minor,
+			md_setup_args[ent].device_names);
 
-		fd = open(name, 0, 0);
+		fd = sys_open(name, 0, 0);
 		if (fd < 0) {
-			printk(KERN_ERR "md: open failed - cannot start array %d\n", minor);
+			printk(KERN_ERR "md: open failed - cannot start "
+					"array %s\n", name);
 			continue;
 		}
 		if (sys_ioctl(fd, SET_ARRAY_INFO, 0) == -EBUSY) {
 			printk(KERN_WARNING
 			       "md: Ignoring md=%d, already autodetected. (Use raid=noautodetect)\n",
 			       minor);
-			close(fd);
+			sys_close(fd);
 			continue;
 		}
 
-		if (md_setup_args.pers[minor]) {
+		if (md_setup_args[ent].pers) {
 			/* non-persistent */
 			mdu_array_info_t ainfo;
-			ainfo.level = pers_to_level(md_setup_args.pers[minor]);
+			ainfo.level = pers_to_level(md_setup_args[ent].pers);
 			ainfo.size = 0;
 			ainfo.nr_disks =0;
 			ainfo.raid_disks =0;
@@ -181,7 +204,7 @@ static void __init md_setup_drive(void)
 
 			ainfo.state = (1 << MD_SB_CLEAN);
 			ainfo.layout = 0;
-			ainfo.chunk_size = md_setup_args.chunk[minor];
+			ainfo.chunk_size = md_setup_args[ent].chunk;
 			err = sys_ioctl(fd, SET_ARRAY_INFO, (long)&ainfo);
 			for (i = 0; !err && i <= MD_SB_DISKS; i++) {
 				dev = devices[i];
@@ -209,7 +232,7 @@ static void __init md_setup_drive(void)
 			err = sys_ioctl(fd, RUN_ARRAY, 0);
 		if (err)
 			printk(KERN_WARNING "md: starting md%d failed\n", minor);
-		close(fd);
+		sys_close(fd);
 	}
 }
 
@@ -229,6 +252,10 @@ static int __init raid_setup(char *str)
 
 		if (!strncmp(str, "noautodetect", wlen))
 			raid_noautodetect = 1;
+		if (strncmp(str, "partitionable", wlen)==0)
+			raid_autopart = 1;
+		if (strncmp(str, "part", wlen)==0)
+			raid_autopart = 1;
 		pos += wlen+1;
 	}
 	return 1;
@@ -243,10 +270,10 @@ void __init md_run_setup(void)
 	if (raid_noautodetect)
 		printk(KERN_INFO "md: Skipping autodetection of RAID arrays. (raid=noautodetect)\n");
 	else {
-		int fd = open("/dev/md0", 0, 0);
+		int fd = sys_open("/dev/md0", 0, 0);
 		if (fd >= 0) {
-			sys_ioctl(fd, RAID_AUTORUN, 0);
-			close(fd);
+			sys_ioctl(fd, RAID_AUTORUN, raid_autopart);
+			sys_close(fd);
 		}
 	}
 	md_setup_drive();
diff -purN linux-post-2.6.4-20040313/init/do_mounts_rd.c linux-post-2.6.4-20040314/init/do_mounts_rd.c
--- linux-post-2.6.4-20040313/init/do_mounts_rd.c	2003-11-03 15:09:51.000000000 +0000
+++ linux-post-2.6.4-20040314/init/do_mounts_rd.c	2004-03-14 01:57:41.000000000 +0000
@@ -69,8 +69,8 @@ identify_ramdisk_image(int fd, int start
 	/*
 	 * Read block 0 to test for gzipped kernel
 	 */
-	lseek(fd, start_block * BLOCK_SIZE, 0);
-	read(fd, buf, size);
+	sys_lseek(fd, start_block * BLOCK_SIZE, 0);
+	sys_read(fd, buf, size);
 
 	/*
 	 * If it matches the gzip magic numbers, return -1
@@ -104,8 +104,8 @@ identify_ramdisk_image(int fd, int start
 	/*
 	 * Read block 1 to test for minix and ext2 superblock
 	 */
-	lseek(fd, (start_block+1) * BLOCK_SIZE, 0);
-	read(fd, buf, size);
+	sys_lseek(fd, (start_block+1) * BLOCK_SIZE, 0);
+	sys_read(fd, buf, size);
 
 	/* Try minix */
 	if (minixsb->s_magic == MINIX_SUPER_MAGIC ||
@@ -131,7 +131,7 @@ identify_ramdisk_image(int fd, int start
 	       start_block);
 	
 done:
-	lseek(fd, start_block * BLOCK_SIZE, 0);
+	sys_lseek(fd, start_block * BLOCK_SIZE, 0);
 	kfree(buf);
 	return nblocks;
 }
@@ -148,11 +148,11 @@ int __init rd_load_image(char *from)
 	char rotator[4] = { '|' , '/' , '-' , '\\' };
 #endif
 
-	out_fd = open("/dev/ram", O_RDWR, 0);
+	out_fd = sys_open("/dev/ram", O_RDWR, 0);
 	if (out_fd < 0)
 		goto out;
 
-	in_fd = open(from, O_RDONLY, 0);
+	in_fd = sys_open(from, O_RDONLY, 0);
 	if (in_fd < 0)
 		goto noclose_input;
 
@@ -217,20 +217,20 @@ int __init rd_load_image(char *from)
 		if (i && (i % devblocks == 0)) {
 			printk("done disk #%d.\n", disk++);
 			rotate = 0;
-			if (close(in_fd)) {
+			if (sys_close(in_fd)) {
 				printk("Error closing the disk.\n");
 				goto noclose_input;
 			}
 			change_floppy("disk #%d", disk);
-			in_fd = open(from, O_RDONLY, 0);
+			in_fd = sys_open(from, O_RDONLY, 0);
 			if (in_fd < 0)  {
 				printk("Error opening disk.\n");
 				goto noclose_input;
 			}
 			printk("Loading disk #%d... ", disk);
 		}
-		read(in_fd, buf, BLOCK_SIZE);
-		write(out_fd, buf, BLOCK_SIZE);
+		sys_read(in_fd, buf, BLOCK_SIZE);
+		sys_write(out_fd, buf, BLOCK_SIZE);
 #if !defined(CONFIG_ARCH_S390) && !defined(CONFIG_PPC_ISERIES)
 		if (!(i % 16)) {
 			printk("%c\b", rotator[rotate & 0x3]);
@@ -243,9 +243,9 @@ int __init rd_load_image(char *from)
 successful_load:
 	res = 1;
 done:
-	close(in_fd);
+	sys_close(in_fd);
 noclose_input:
-	close(out_fd);
+	sys_close(out_fd);
 out:
 	kfree(buf);
 	sys_unlink("/dev/ram");
@@ -342,7 +342,7 @@ static int __init fill_inbuf(void)
 {
 	if (exit_code) return -1;
 	
-	insize = read(crd_infd, inbuf, INBUFSIZ);
+	insize = sys_read(crd_infd, inbuf, INBUFSIZ);
 	if (insize == 0) {
 		error("RAMDISK: ran out of compressed data");
 		return -1;
@@ -363,7 +363,7 @@ static void __init flush_window(void)
     unsigned n, written;
     uch *in, ch;
     
-    written = write(crd_outfd, window, outcnt);
+    written = sys_write(crd_outfd, window, outcnt);
     if (written != outcnt && unzip_error == 0) {
 	printk(KERN_ERR "RAMDISK: incomplete write (%d != %d) %ld\n",
 	       written, outcnt, bytes_out);
diff -purN linux-post-2.6.4-20040313/init/initramfs.c linux-post-2.6.4-20040314/init/initramfs.c
--- linux-post-2.6.4-20040313/init/initramfs.c	2004-03-08 22:58:13.000000000 +0000
+++ linux-post-2.6.4-20040314/init/initramfs.c	2004-03-14 01:57:41.000000000 +0000
@@ -1,10 +1,8 @@
-#define __KERNEL_SYSCALLS__
 #include <linux/init.h>
 #include <linux/fs.h>
 #include <linux/slab.h>
 #include <linux/types.h>
 #include <linux/fcntl.h>
-#include <linux/unistd.h>
 #include <linux/delay.h>
 #include <linux/string.h>
 #include <linux/syscalls.h>
diff -purN linux-post-2.6.4-20040313/init/main.c linux-post-2.6.4-20040314/init/main.c
--- linux-post-2.6.4-20040313/init/main.c	2004-03-09 15:07:59.000000000 +0000
+++ linux-post-2.6.4-20040314/init/main.c	2004-03-14 01:57:41.000000000 +0000
@@ -18,7 +18,6 @@
 #include <linux/devfs_fs_kernel.h>
 #include <linux/kernel.h>
 #include <linux/syscalls.h>
-#include <linux/unistd.h>
 #include <linux/string.h>
 #include <linux/ctype.h>
 #include <linux/delay.h>
@@ -42,6 +41,7 @@
 #include <linux/writeback.h>
 #include <linux/cpu.h>
 #include <linux/efi.h>
+#include <linux/unistd.h>
 
 #include <asm/io.h>
 #include <asm/bugs.h>
@@ -612,11 +612,11 @@ static int init(void * unused)
 	unlock_kernel();
 	system_running = 1;
 
-	if (open("/dev/console", O_RDWR, 0) < 0)
+	if (sys_open("/dev/console", O_RDWR, 0) < 0)
 		printk("Warning: unable to open an initial console.\n");
 
-	(void) dup(0);
-	(void) dup(0);
+	(void) sys_dup(0);
+	(void) sys_dup(0);
 	
 	/*
 	 * We try each of these until one succeeds.
diff -purN linux-post-2.6.4-20040313/kernel/kthread.c linux-post-2.6.4-20040314/kernel/kthread.c
--- linux-post-2.6.4-20040313/kernel/kthread.c	2004-02-19 03:42:29.000000000 +0000
+++ linux-post-2.6.4-20040314/kernel/kthread.c	2004-03-14 01:57:41.000000000 +0000
@@ -91,7 +91,6 @@ static void keventd_create_kthread(void 
 	} else {
 		wait_for_completion(&create->started);
 		create->result = find_task_by_pid(pid);
-		wait_task_inactive(create->result);
 	}
 	complete(&create->done);
 }
@@ -131,7 +130,9 @@ struct task_struct *kthread_create(int (
 void kthread_bind(struct task_struct *k, unsigned int cpu)
 {
 	BUG_ON(k->state != TASK_INTERRUPTIBLE);
-	k->thread_info->cpu = cpu;
+	/* Must have done schedule() in kthread() before we set_task_cpu */
+	wait_task_inactive(k);
+	set_task_cpu(k, cpu);
 	k->cpus_allowed = cpumask_of_cpu(cpu);
 }
 
diff -purN linux-post-2.6.4-20040313/kernel/sched.c linux-post-2.6.4-20040314/kernel/sched.c
--- linux-post-2.6.4-20040313/kernel/sched.c	2004-03-09 00:57:46.000000000 +0000
+++ linux-post-2.6.4-20040314/kernel/sched.c	2004-03-14 01:57:41.000000000 +0000
@@ -201,8 +201,9 @@ struct prio_array {
  */
 struct runqueue {
 	spinlock_t lock;
-	unsigned long nr_running, nr_switches, expired_timestamp,
-		      nr_uninterruptible, timestamp_last_tick;
+	unsigned long long nr_switches;
+	unsigned long nr_running, expired_timestamp, nr_uninterruptible,
+		timestamp_last_tick;
 	task_t *curr, *idle;
 	struct mm_struct *prev_mm;
 	prio_array_t *active, *expired, arrays[2];
@@ -950,9 +951,9 @@ unsigned long nr_uninterruptible(void)
 	return sum;
 }
 
-unsigned long nr_context_switches(void)
+unsigned long long nr_context_switches(void)
 {
-	unsigned long i, sum = 0;
+	unsigned long long i, sum = 0;
 
 	for_each_cpu(i)
 		sum += cpu_rq(i)->nr_switches;
diff -purN linux-post-2.6.4-20040313/mm/page_alloc.c linux-post-2.6.4-20040314/mm/page_alloc.c
--- linux-post-2.6.4-20040313/mm/page_alloc.c	2004-03-12 09:33:10.000000000 +0000
+++ linux-post-2.6.4-20040314/mm/page_alloc.c	2004-03-14 01:57:41.000000000 +0000
@@ -690,6 +690,42 @@ got_pg:
 
 EXPORT_SYMBOL(__alloc_pages);
 
+#ifdef CONFIG_NUMA
+/* Early boot: Everything is done by one cpu, but the data structures will be
+ * used by all cpus - spread them on all nodes.
+ */
+static __init unsigned long get_boot_pages(unsigned int gfp_mask, unsigned int order)
+{
+static int nodenr;
+	int i = nodenr;
+	struct page *page;
+
+	for (;;) {
+		if (i > nodenr + numnodes)
+			return 0;
+		if (node_present_pages(i%numnodes)) {
+			struct zone **z;
+			/* The node contains memory. Check that there is
+			 * memory in the intended zonelist.
+			 */
+			z = NODE_DATA(i%numnodes)->node_zonelists[gfp_mask & GFP_ZONEMASK].zones;
+			while (*z) {
+				if ( (*z)->free_pages > (1UL<<order))
+					goto found_node;
+				z++;
+			}
+		}
+		i++;
+	}
+found_node:
+	nodenr = i+1;
+	page = alloc_pages_node(i%numnodes, gfp_mask, order);
+	if (!page)
+		return 0;
+	return (unsigned long) page_address(page);
+}
+#endif
+
 /*
  * Common helper functions.
  */
@@ -697,6 +733,10 @@ fastcall unsigned long __get_free_pages(
 {
 	struct page * page;
 
+#ifdef CONFIG_NUMA
+	if (unlikely(!system_running))
+		return get_boot_pages(gfp_mask, order);
+#endif
 	page = alloc_pages(gfp_mask, order);
 	if (!page)
 		return 0;
@@ -1115,6 +1155,8 @@ static int __init find_next_best_node(in
 	int best_node = -1;
 
 	for (i = 0; i < numnodes; i++) {
+		cpumask_t tmp;
+
 		/* Start from local node */
 		n = (node+i)%numnodes;
 
@@ -1126,7 +1168,8 @@ static int __init find_next_best_node(in
 		val = node_distance(node, n);
 
 		/* Give preference to headless and unused nodes */
-		if (!cpus_empty(node_to_cpumask(n)))
+		tmp = node_to_cpumask(n);
+		if (!cpus_empty(tmp))
 			val += PENALTY_FOR_NODE_WITH_CPUS;
 
 		/* Slight preference for less loaded node */
diff -purN linux-post-2.6.4-20040313/sound/isa/wavefront/wavefront_synth.c linux-post-2.6.4-20040314/sound/isa/wavefront/wavefront_synth.c
--- linux-post-2.6.4-20040313/sound/isa/wavefront/wavefront_synth.c	2003-02-25 18:44:25.000000000 +0000
+++ linux-post-2.6.4-20040314/sound/isa/wavefront/wavefront_synth.c	2004-03-14 01:57:41.000000000 +0000
@@ -1913,11 +1913,11 @@ wavefront_reset_to_cleanliness (snd_wave
 	return (1);
 }
 
-#define __KERNEL_SYSCALLS__
 #include <linux/fs.h>
 #include <linux/mm.h>
 #include <linux/slab.h>
 #include <linux/unistd.h>
+#include <linux/syscalls.h>
 #include <asm/uaccess.h>
 
 static int errno;
@@ -1947,7 +1947,7 @@ wavefront_download_firmware (snd_wavefro
 	fs = get_fs();
 	set_fs (get_ds());
 
-	if ((fd = open (path, 0, 0)) < 0) {
+	if ((fd = sys_open (path, 0, 0)) < 0) {
 		snd_printk ("Unable to load \"%s\".\n",
 			path);
 		return 1;
@@ -1956,7 +1956,7 @@ wavefront_download_firmware (snd_wavefro
 	while (1) {
 		int x;
 
-		if ((x = read (fd, &section_length, sizeof (section_length))) !=
+		if ((x = sys_read (fd, &section_length, sizeof (section_length))) !=
 		    sizeof (section_length)) {
 			snd_printk ("firmware read error.\n");
 			goto failure;
@@ -1966,7 +1966,7 @@ wavefront_download_firmware (snd_wavefro
 			break;
 		}
 
-		if (read (fd, section, section_length) != section_length) {
+		if (sys_read (fd, section, section_length) != section_length) {
 			snd_printk ("firmware section "
 				"read error.\n");
 			goto failure;
@@ -2005,12 +2005,12 @@ wavefront_download_firmware (snd_wavefro
 
 	}
 
-	close (fd);
+	sys_close (fd);
 	set_fs (fs);
 	return 0;
 
  failure:
-	close (fd);
+	sys_close (fd);
 	set_fs (fs);
 	snd_printk ("firmware download failed!!!\n");
 	return 1;
diff -purN linux-post-2.6.4-20040313/sound/oss/wavfront.c linux-post-2.6.4-20040314/sound/oss/wavfront.c
--- linux-post-2.6.4-20040313/sound/oss/wavfront.c	2004-03-12 09:33:01.000000000 +0000
+++ linux-post-2.6.4-20040314/sound/oss/wavfront.c	2004-03-14 01:57:41.000000000 +0000
@@ -2490,11 +2490,9 @@ static int __init detect_wavefront (int 
 }
 
 #include "os.h"
-#define __KERNEL_SYSCALLS__
 #include <linux/fs.h>
 #include <linux/mm.h>
 #include <linux/slab.h>
-#include <linux/unistd.h>
 #include <asm/uaccess.h>
 
 static int errno; 
@@ -2524,7 +2522,7 @@ wavefront_download_firmware (char *path)
 	fs = get_fs();
 	set_fs (get_ds());
 
-	if ((fd = open (path, 0, 0)) < 0) {
+	if ((fd = sys_open (path, 0, 0)) < 0) {
 		printk (KERN_WARNING LOGNAME "Unable to load \"%s\".\n",
 			path);
 		return 1;
@@ -2533,7 +2531,7 @@ wavefront_download_firmware (char *path)
 	while (1) {
 		int x;
 
-		if ((x = read (fd, &section_length, sizeof (section_length))) !=
+		if ((x = sys_read (fd, &section_length, sizeof (section_length))) !=
 		    sizeof (section_length)) {
 			printk (KERN_ERR LOGNAME "firmware read error.\n");
 			goto failure;
@@ -2543,7 +2541,7 @@ wavefront_download_firmware (char *path)
 			break;
 		}
 
-		if (read (fd, section, section_length) != section_length) {
+		if (sys_read (fd, section, section_length) != section_length) {
 			printk (KERN_ERR LOGNAME "firmware section "
 				"read error.\n");
 			goto failure;
@@ -2582,12 +2580,12 @@ wavefront_download_firmware (char *path)
 
 	}
 
-	close (fd);
+	sys_close (fd);
 	set_fs (fs);
 	return 0;
 
  failure:
-	close (fd);
+	sys_close (fd);
 	set_fs (fs);
 	printk (KERN_ERR "\nWaveFront: firmware download failed!!!\n");
 	return 1;
