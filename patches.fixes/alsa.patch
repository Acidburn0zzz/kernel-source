diff -urNp linux-2.6.4/sound/core/init.c linux-2.6.4.SUSE/sound/core/init.c
--- linux-2.6.4/sound/core/init.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/core/init.c	2004-03-16 16:14:58.000000000 +0100
@@ -281,7 +281,8 @@ int snd_card_free(snd_card_t * card)
 	}
 	if (card->private_free)
 		card->private_free(card);
-	snd_info_unregister(card->proc_id);
+	if (card->proc_id)
+		snd_info_unregister(card->proc_id);
 	if (snd_info_card_free(card) < 0) {
 		snd_printk(KERN_WARNING "unable to free card info\n");
 		/* Not fatal error */
diff -urNp linux-2.6.4/sound/drivers/mpu401/mpu401.c linux-2.6.4.SUSE/sound/drivers/mpu401/mpu401.c
--- linux-2.6.4/sound/drivers/mpu401/mpu401.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/drivers/mpu401/mpu401.c	2004-03-16 16:14:58.000000000 +0100
@@ -87,9 +87,12 @@ struct acpi_device;
 #endif
 
 static snd_card_t *snd_mpu401_legacy_cards[SNDRV_CARDS] = SNDRV_DEFAULT_PTR;
+static int cards;
 
 #ifdef USE_ACPI_PNP
 
+static int acpi_driver_registered;
+
 struct mpu401_resources {
 	unsigned long port;
 	int irq;
@@ -204,6 +207,7 @@ static int __devinit snd_card_mpu401_pro
 	else
 #endif
 		snd_mpu401_legacy_cards[dev] = card;
+	++cards;
 	return 0;
 }
 
@@ -257,28 +261,27 @@ static struct acpi_driver snd_mpu401_acp
 
 static int __init alsa_card_mpu401_init(void)
 {
-	int dev, cards = 0;
+	int dev;
 
+#ifdef USE_ACPI_PNP
+	if (acpi_bus_register_driver(&snd_mpu401_acpi_driver) >= 0)
+		acpi_driver_registered = 1;
+#endif
 	for (dev = 0; dev < SNDRV_CARDS; dev++) {
 		if (!enable[dev])
 			continue;
 #ifdef USE_ACPI_PNP
-		if (acpipnp[dev] && !acpi_disabled)
+		if (acpipnp[dev] && acpi_driver_registered)
 			continue;
 #endif
-		if (snd_card_mpu401_probe(dev, NULL) >= 0)
-			cards++;
+		snd_card_mpu401_probe(dev, NULL);
 	}
-#ifdef USE_ACPI_PNP
-	if (!acpi_disabled)
-		cards += acpi_bus_register_driver(&snd_mpu401_acpi_driver);
-#endif
 	if (!cards) {
 #ifdef MODULE
 		printk(KERN_ERR "MPU-401 device not found or device busy\n");
 #endif
 #ifdef USE_ACPI_PNP
-		if (!acpi_disabled)
+		if (acpi_driver_registered)
 			acpi_bus_unregister_driver(&snd_mpu401_acpi_driver);
 #endif
 		return -ENODEV;
@@ -291,7 +294,7 @@ static void __exit alsa_card_mpu401_exit
 	int idx;
 
 #ifdef USE_ACPI_PNP
-	if (!acpi_disabled)
+	if (acpi_driver_registered)
 		acpi_bus_unregister_driver(&snd_mpu401_acpi_driver);
 #endif
 	for (idx = 0; idx < SNDRV_CARDS; idx++)
diff -urNp linux-2.6.4/sound/drivers/serial-u16550.c linux-2.6.4.SUSE/sound/drivers/serial-u16550.c
--- linux-2.6.4/sound/drivers/serial-u16550.c	2004-03-11 03:55:22.000000000 +0100
+++ linux-2.6.4.SUSE/sound/drivers/serial-u16550.c	2004-03-16 16:14:58.000000000 +0100
@@ -342,7 +342,7 @@ static int __init snd_uart16550_detect(s
 	unsigned char c;
 
 	/* Do some vague tests for the presence of the uart */
-	if (io_base == 0) {
+	if (io_base == 0 || io_base == SNDRV_AUTO_PORT) {
 		return -ENODEV;	/* Not configured */
 	}
 
@@ -804,10 +804,9 @@ static int __init snd_uart16550_create(s
 		return err;
 	}
 
-	if (irq >= 0) {
+	if (irq >= 0 && irq != SNDRV_AUTO_IRQ) {
 		if (request_irq(irq, snd_uart16550_interrupt,
 				SA_INTERRUPT, "Serial MIDI", (void *) uart)) {
-			uart->irq = -1;
 			snd_printk("irq %d busy. Using Polling.\n", irq);
 		} else {
 			uart->irq = irq;
diff -urNp linux-2.6.4/sound/i2c/cs8427.c linux-2.6.4.SUSE/sound/i2c/cs8427.c
--- linux-2.6.4/sound/i2c/cs8427.c	2004-03-11 03:55:21.000000000 +0100
+++ linux-2.6.4.SUSE/sound/i2c/cs8427.c	2004-03-16 16:14:58.000000000 +0100
@@ -553,6 +553,7 @@ int snd_cs8427_iec958_pcm(snd_i2c_device
 			       SNDRV_CTL_EVENT_MASK_VALUE,
 			       &chip->playback.pcm_ctl->id);
 	reset = chip->rate != rate;
+	chip->rate = rate;
 	snd_i2c_unlock(cs8427->bus);
 	if (reset)
 		snd_cs8427_reset(cs8427);
diff -urNp linux-2.6.4/sound/isa/dt019x.c linux-2.6.4.SUSE/sound/isa/dt019x.c
--- linux-2.6.4/sound/isa/dt019x.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/dt019x.c	2004-03-16 16:14:58.000000000 +0100
@@ -296,8 +296,8 @@ static int __devinit snd_dt019x_pnp_prob
 			return res;
 		dev++;
 		return 0;
-        }
-        return -ENODEV;
+	}
+	return -ENODEV;
 }
 
 static void __devexit snd_dt019x_pnp_remove(struct pnp_card_link * pcard)
@@ -322,8 +322,10 @@ static int __init alsa_card_dt019x_init(
 	cards += pnp_register_card_driver(&dt019x_pnpc_driver);
 
 #ifdef MODULE
-	if (!cards)
+	if (!cards) {
+		pnp_unregister_card_driver(&dt019x_pnpc_driver);
 		snd_printk(KERN_ERR "no DT-019X / ALS-007 based soundcards found\n");
+	}
 #endif
 	return cards ? 0 : -ENODEV;
 }
diff -urNp linux-2.6.4/sound/isa/es1688/es1688.c linux-2.6.4.SUSE/sound/isa/es1688/es1688.c
--- linux-2.6.4/sound/isa/es1688/es1688.c	2004-03-11 03:55:25.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/es1688/es1688.c	2004-03-16 16:14:58.000000000 +0100
@@ -182,7 +182,7 @@ static int __init snd_audiodrive_legacy_
 static int __init alsa_card_es1688_init(void)
 {
 	static unsigned long possible_ports[] = {0x220, 0x240, 0x260, -1};
-	int dev, cards = 0;
+	int dev, cards = 0, i;
 
 	for (dev = cards = 0; dev < SNDRV_CARDS && enable[dev]; dev++) {
 		if (port[dev] == SNDRV_AUTO_PORT)
@@ -190,7 +190,10 @@ static int __init alsa_card_es1688_init(
 		if (snd_audiodrive_probe(dev) >= 0)
 			cards++;
 	}
-	cards += snd_legacy_auto_probe(possible_ports, snd_audiodrive_legacy_auto_probe);
+	i = snd_legacy_auto_probe(possible_ports, snd_audiodrive_legacy_auto_probe);
+	if (i > 0)
+		cards += i;
+
 	if (!cards) {
 #ifdef MODULE
 		printk(KERN_ERR "ESS AudioDrive ES1688 soundcard not found or device busy\n");
diff -urNp linux-2.6.4/sound/isa/es18xx.c linux-2.6.4.SUSE/sound/isa/es18xx.c
--- linux-2.6.4/sound/isa/es18xx.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/es18xx.c	2004-03-16 16:14:58.000000000 +0100
@@ -2232,7 +2232,7 @@ static struct pnp_card_driver es18xx_pnp
 static int __init alsa_card_es18xx_init(void)
 {
 	static unsigned long possible_ports[] = {0x220, 0x240, 0x260, 0x280, -1};
-	int dev, cards = 0;
+	int dev, cards = 0, i;
 
 	/* legacy non-auto cards at first */
 	for (dev = 0; dev < SNDRV_CARDS; dev++) {
@@ -2246,10 +2246,16 @@ static int __init alsa_card_es18xx_init(
 			cards++;
 	}
 	/* legacy auto configured cards */
-	cards += snd_legacy_auto_probe(possible_ports, snd_audiodrive_probe_legacy_port);
+	i = snd_legacy_auto_probe(possible_ports, snd_audiodrive_probe_legacy_port);
+	if (i > 0)
+		cards += i;
+
 #ifdef CONFIG_PNP
 	/* ISA PnP cards at last */
-	cards += pnp_register_card_driver(&es18xx_pnpc_driver);
+	i = pnp_register_card_driver(&es18xx_pnpc_driver);
+	if (i > 0)
+		cards += i;
+
 #endif
 	if(!cards) {
 #ifdef CONFIG_PNP
diff -urNp linux-2.6.4/sound/isa/gus/gusclassic.c linux-2.6.4.SUSE/sound/isa/gus/gusclassic.c
--- linux-2.6.4/sound/isa/gus/gusclassic.c	2004-03-11 03:55:54.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/gus/gusclassic.c	2004-03-16 16:14:58.000000000 +0100
@@ -238,7 +238,7 @@ static int __init snd_gusclassic_legacy_
 static int __init alsa_card_gusclassic_init(void)
 {
 	static unsigned long possible_ports[] = {0x220, 0x230, 0x240, 0x250, 0x260, -1};
-	int dev, cards;
+	int dev, cards, i;
 
 	for (dev = cards = 0; dev < SNDRV_CARDS && enable[dev]; dev++) {
 		if (port[dev] == SNDRV_AUTO_PORT)
@@ -246,7 +246,10 @@ static int __init alsa_card_gusclassic_i
 		if (snd_gusclassic_probe(dev) >= 0)
 			cards++;
 	}
-	cards += snd_legacy_auto_probe(possible_ports, snd_gusclassic_legacy_auto_probe);
+	i = snd_legacy_auto_probe(possible_ports, snd_gusclassic_legacy_auto_probe);
+	if (i > 0)
+		cards += i;
+
 	if (!cards) {
 #ifdef MODULE
 		printk(KERN_ERR "GUS Classic soundcard not found or device busy\n");
diff -urNp linux-2.6.4/sound/isa/gus/gusextreme.c linux-2.6.4.SUSE/sound/isa/gus/gusextreme.c
--- linux-2.6.4/sound/isa/gus/gusextreme.c	2004-03-11 03:55:36.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/gus/gusextreme.c	2004-03-16 16:14:58.000000000 +0100
@@ -220,17 +220,17 @@ static int __init snd_gusextreme_probe(i
 	xgf1_irq = gf1_irq[dev];
 	if (xgf1_irq == SNDRV_AUTO_IRQ) {
 		if ((xgf1_irq = snd_legacy_find_free_irq(possible_gf1_irqs)) < 0) {
-			snd_card_free(card);
 			snd_printk("unable to find a free IRQ for GF1\n");
-			return -EBUSY;
+			err = -EBUSY;
+			goto out;
 		}
 	}
 	xess_irq = irq[dev];
 	if (xess_irq == SNDRV_AUTO_IRQ) {
 		if ((xess_irq = snd_legacy_find_free_irq(possible_ess_irqs)) < 0) {
-			snd_card_free(card);
 			snd_printk("unable to find a free IRQ for ES1688\n");
-			return -EBUSY;
+			err = -EBUSY;
+			goto out;
 		}
 	}
 	if (mpu_port[dev] == SNDRV_AUTO_PORT)
@@ -241,26 +241,24 @@ static int __init snd_gusextreme_probe(i
 	xgf1_dma = dma1[dev];
 	if (xgf1_dma == SNDRV_AUTO_DMA) {
 		if ((xgf1_dma = snd_legacy_find_free_dma(possible_gf1_dmas)) < 0) {
-			snd_card_free(card);
 			snd_printk("unable to find a free DMA for GF1\n");
-			return -EBUSY;
+			err = -EBUSY;
+			goto out;
 		}
 	}
 	xess_dma = dma8[dev];
 	if (xess_dma == SNDRV_AUTO_DMA) {
 		if ((xess_dma = snd_legacy_find_free_dma(possible_ess_dmas)) < 0) {
-			snd_card_free(card);
 			snd_printk("unable to find a free DMA for ES1688\n");
-			return -EBUSY;
+			err = -EBUSY;
+			goto out;
 		}
 	}
 
 	if ((err = snd_es1688_create(card, port[dev], mpu_port[dev],
 				     xess_irq, xmpu_irq, xess_dma,
-				     ES1688_HW_1688, &es1688)) < 0) {
-		snd_card_free(card);
-		return err;
-	}
+				     ES1688_HW_1688, &es1688)) < 0)
+		goto out;
 	if (gf1_port[dev] < 0)
 		gf1_port[dev] = port[dev] + 0x20;
 	if ((err = snd_gus_create(card,
@@ -270,77 +268,65 @@ static int __init snd_gusextreme_probe(i
 				  -1,
 				  0, channels[dev],
 				  pcm_channels[dev], 0,
-				  &gus)) < 0) {
-		snd_card_free(card);
-		return err;
-	}
-	if ((err = snd_gusextreme_detect(dev, card, gus, es1688)) < 0) {
-		snd_card_free(card);
-		return err;
-	}
+				  &gus)) < 0)
+		goto out;
+
+	if ((err = snd_gusextreme_detect(dev, card, gus, es1688)) < 0)
+		goto out;
+
 	snd_gusextreme_init(dev, gus);
-	if ((err = snd_gus_initialize(gus)) < 0) {
-		snd_card_free(card);
-		return err;
-	}
+	if ((err = snd_gus_initialize(gus)) < 0)
+		goto out;
+
 	if (!gus->ess_flag) {
 		snd_printdd("GUS Extreme soundcard was not detected at 0x%lx\n", gus->gf1.port);
-		snd_card_free(card);
-		return -ENODEV;
-	}
-	if ((err = snd_es1688_pcm(es1688, 0, NULL)) < 0) {
-		snd_card_free(card);
-		return err;
-	}
-	if ((err = snd_es1688_mixer(es1688)) < 0) {
-		snd_card_free(card);
-		return err;
+		err = -ENODEV;
+		goto out;
 	}
+	if ((err = snd_es1688_pcm(es1688, 0, NULL)) < 0)
+		goto out;
+
+	if ((err = snd_es1688_mixer(es1688)) < 0)
+		goto out;
+
 	snd_component_add(card, "ES1688");
 	if (pcm_channels[dev] > 0) {
-		if ((err = snd_gf1_pcm_new(gus, 1, 1, NULL)) < 0) {
-			snd_card_free(card);
-			return err;
-		}
-	}
-	if ((err = snd_gf1_new_mixer(gus)) < 0) {
-		snd_card_free(card);
-		return err;
-	}
-	if ((err = snd_gusextreme_mixer(es1688)) < 0) {
-		snd_card_free(card);
-		return err;
+		if ((err = snd_gf1_pcm_new(gus, 1, 1, NULL)) < 0)
+			goto out;
 	}
+	if ((err = snd_gf1_new_mixer(gus)) < 0)
+		goto out;
+
+	if ((err = snd_gusextreme_mixer(es1688)) < 0)
+		goto out;
 
 	if (snd_opl3_create(card, es1688->port, es1688->port + 2,
 			    OPL3_HW_OPL3, 0, &opl3) < 0) {
 		printk(KERN_ERR "gusextreme: opl3 not detected at 0x%lx\n", es1688->port);
 	} else {
-		if ((err = snd_opl3_hwdep_new(opl3, 0, 2, NULL)) < 0) {
-			snd_card_free(card);
-			return err;
-		}
+		if ((err = snd_opl3_hwdep_new(opl3, 0, 2, NULL)) < 0)
+			goto out;
 	}
 
-	if (es1688->mpu_port >= 0x300) {
-		if ((err = snd_mpu401_uart_new(card, 0, MPU401_HW_ES1688,
+	if (es1688->mpu_port >= 0x300 &&
+	    (err = snd_mpu401_uart_new(card, 0, MPU401_HW_ES1688,
 					       es1688->mpu_port, 0,
 					       xmpu_irq,
 					       SA_INTERRUPT,
-					       NULL)) < 0) {
-			snd_card_free(card);
-			return err;
-		}
-	}
+					       NULL)) < 0)
+		goto out;
 
 	sprintf(card->longname, "Gravis UltraSound Extreme at 0x%lx, irq %i&%i, dma %i&%i",
 		es1688->port, xgf1_irq, xess_irq, xgf1_dma, xess_dma);
-	if ((err = snd_card_register(card)) < 0) {
-		snd_card_free(card);
-		return err;
-	}
+	if ((err = snd_card_register(card)) < 0)
+		goto out;
+
 	snd_gusextreme_cards[dev] = card;
 	return 0;
+
+      out:
+	snd_card_free(card);
+	return err;
 }
 
 static int __init snd_gusextreme_legacy_auto_probe(unsigned long xport)
@@ -363,7 +349,7 @@ static int __init snd_gusextreme_legacy_
 static int __init alsa_card_gusextreme_init(void)
 {
 	static unsigned long possible_ports[] = {0x220, 0x240, 0x260, -1};
-	int dev, cards;
+	int dev, cards, i;
 
 	for (dev = cards = 0; dev < SNDRV_CARDS && enable[dev] > 0; dev++) {
 		if (port[dev] == SNDRV_AUTO_PORT)
@@ -371,7 +357,10 @@ static int __init alsa_card_gusextreme_i
 		if (snd_gusextreme_probe(dev) >= 0)
 			cards++;
 	}
-	cards += snd_legacy_auto_probe(possible_ports, snd_gusextreme_legacy_auto_probe);
+	i = snd_legacy_auto_probe(possible_ports, snd_gusextreme_legacy_auto_probe);
+	if (i > 0)
+		cards += i;
+
 	if (!cards) {
 #ifdef MODULE
 		printk(KERN_ERR "GUS Extreme soundcard not found or device busy\n");
diff -urNp linux-2.6.4/sound/isa/gus/gusmax.c linux-2.6.4.SUSE/sound/isa/gus/gusmax.c
--- linux-2.6.4/sound/isa/gus/gusmax.c	2004-03-11 03:55:33.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/gus/gusmax.c	2004-03-16 16:14:58.000000000 +0100
@@ -378,7 +378,7 @@ static int __init snd_gusmax_legacy_auto
 static int __init alsa_card_gusmax_init(void)
 {
 	static unsigned long possible_ports[] = {0x220, 0x230, 0x240, 0x250, 0x260, -1};
-	int dev, cards;
+	int dev, cards, i;
 
 	for (dev = cards = 0; dev < SNDRV_CARDS && enable[dev] > 0; dev++) {
 		if (port[dev] == SNDRV_AUTO_PORT)
@@ -386,7 +386,10 @@ static int __init alsa_card_gusmax_init(
 		if (snd_gusmax_probe(dev) >= 0)
 			cards++;
 	}
-	cards += snd_legacy_auto_probe(possible_ports, snd_gusmax_legacy_auto_probe);
+	i = snd_legacy_auto_probe(possible_ports, snd_gusmax_legacy_auto_probe);
+	if (i > 0)
+		cards += i;
+
 	if (!cards) {
 #ifdef MODULE
 		printk(KERN_ERR "GUS MAX soundcard not found or device busy\n");
diff -urNp linux-2.6.4/sound/isa/gus/interwave.c linux-2.6.4.SUSE/sound/isa/gus/interwave.c
--- linux-2.6.4/sound/isa/gus/interwave.c	2004-03-11 03:55:28.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/gus/interwave.c	2004-03-16 16:14:58.000000000 +0100
@@ -929,7 +929,7 @@ static struct pnp_card_driver interwave_
 
 static int __init alsa_card_interwave_init(void)
 {
-	int cards = 0;
+	int cards = 0, i;
 	static long possible_ports[] = {0x210, 0x220, 0x230, 0x240, 0x250, 0x260, -1};
 	int dev;
 
@@ -949,10 +949,14 @@ static int __init alsa_card_interwave_in
 #endif
 	}
 	/* legacy auto configured cards */
-	cards += snd_legacy_auto_probe(possible_ports, snd_interwave_probe_legacy_port);
+	i = snd_legacy_auto_probe(possible_ports, snd_interwave_probe_legacy_port);
+	if (i > 0)
+		cards += i;
 #ifdef CONFIG_PNP
-        /* ISA PnP cards */
-        cards += pnp_register_card_driver(&interwave_pnpc_driver);
+	/* ISA PnP cards */
+	i = pnp_register_card_driver(&interwave_pnpc_driver);
+	if (i > 0)
+		cards += i;
 #endif
 
 	if (!cards) {
diff -urNp linux-2.6.4/sound/isa/sb/es968.c linux-2.6.4.SUSE/sound/isa/sb/es968.c
--- linux-2.6.4/sound/isa/sb/es968.c	2004-03-11 03:55:27.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/sb/es968.c	2004-03-16 16:14:58.000000000 +0100
@@ -203,8 +203,8 @@ static int __devinit snd_es968_pnp_detec
 			return res;
 		dev++;
 		return 0;
-        }
-        return -ENODEV;
+	}
+	return -ENODEV;
 }
 
 static void __devexit snd_es968_pnp_remove(struct pnp_card_link * pcard)
@@ -225,15 +225,14 @@ static struct pnp_card_driver es968_pnpc
 
 static int __init alsa_card_es968_init(void)
 {
-	int res = pnp_register_card_driver(&es968_pnpc_driver);
-	if (res == 0)
-	{
-		pnp_unregister_card_driver(&es968_pnpc_driver);
+	int cards = pnp_register_card_driver(&es968_pnpc_driver);
 #ifdef MODULE
+	if (cards == 0) {
+		pnp_unregister_card_driver(&es968_pnpc_driver);
 		snd_printk(KERN_ERR "no ES968 based soundcards found\n");
-#endif
 	}
-	return res < 0 ? res : 0;
+#endif
+	return cards ? 0 : -ENODEV;
 }
 
 static void __exit alsa_card_es968_exit(void)
diff -urNp linux-2.6.4/sound/isa/sb/sb16.c linux-2.6.4.SUSE/sound/isa/sb/sb16.c
--- linux-2.6.4/sound/isa/sb/sb16.c	2004-03-11 03:55:43.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/sb/sb16.c	2004-03-16 16:14:58.000000000 +0100
@@ -629,7 +629,7 @@ static struct pnp_card_driver sb16_pnpc_
 
 static int __init alsa_card_sb16_init(void)
 {
-	int dev, cards = 0;
+	int dev, cards = 0, i;
 	static unsigned long possible_ports[] = {0x220, 0x240, 0x260, 0x280, -1};
 
 	/* legacy non-auto cards at first */
@@ -649,10 +649,15 @@ static int __init alsa_card_sb16_init(vo
 #endif
 	}
 	/* legacy auto configured cards */
-	cards += snd_legacy_auto_probe(possible_ports, snd_sb16_probe_legacy_port);
+	i = snd_legacy_auto_probe(possible_ports, snd_sb16_probe_legacy_port);
+	if (i > 0)
+		cards += i;
+
 #ifdef CONFIG_PNP
 	/* PnP cards at last */
-	cards += pnp_register_card_driver(&sb16_pnpc_driver);
+	i = pnp_register_card_driver(&sb16_pnpc_driver);
+	if (i >0)
+		cards += i;
 #endif
 
 	if (!cards) {
diff -urNp linux-2.6.4/sound/isa/sb/sb8.c linux-2.6.4.SUSE/sound/isa/sb/sb8.c
--- linux-2.6.4/sound/isa/sb/sb8.c	2004-03-11 03:55:35.000000000 +0100
+++ linux-2.6.4.SUSE/sound/isa/sb/sb8.c	2004-03-16 16:14:58.000000000 +0100
@@ -199,7 +199,7 @@ static int __init snd_card_sb8_legacy_au
 static int __init alsa_card_sb8_init(void)
 {
 	static unsigned long possible_ports[] = {0x220, 0x240, 0x260, -1};
-	int dev, cards;
+	int dev, cards, i;
 
 	for (dev = cards = 0; dev < SNDRV_CARDS && enable[dev]; dev++) {
 		if (port[dev] == SNDRV_AUTO_PORT)
@@ -207,7 +207,10 @@ static int __init alsa_card_sb8_init(voi
 		if (snd_sb8_probe(dev) >= 0)
 			cards++;
 	}
-	cards += snd_legacy_auto_probe(possible_ports, snd_card_sb8_legacy_auto_probe);
+	i = snd_legacy_auto_probe(possible_ports, snd_card_sb8_legacy_auto_probe);
+	if (i > 0)
+		cards += i;
+
 	if (!cards) {
 #ifdef MODULE
 		snd_printk(KERN_ERR "Sound Blaster soundcard not found or device busy\n");
diff -urNp linux-2.6.4/sound/pci/ac97/ac97_patch.c linux-2.6.4.SUSE/sound/pci/ac97/ac97_patch.c
--- linux-2.6.4/sound/pci/ac97/ac97_patch.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/ac97/ac97_patch.c	2004-03-16 16:14:58.000000000 +0100
@@ -1130,10 +1130,12 @@ int patch_alc650(ac97_t * ac97)
 		val &= ~0x03; /* disable */
 	snd_ac97_write_cache(ac97, AC97_ALC650_CLOCK, val);
 
-	val = snd_ac97_read(ac97, AC97_ALC650_MULTICH);
-	val &= ~0xc000; /* slot: 3,4,7,8,6,9 */
-	val &= ~(1 << 10); /* center-on-mic off */
-	snd_ac97_write_cache(ac97, AC97_ALC650_MULTICH, val);
+	/* set default: slot 3,4,7,8,6,9
+	   spdif-in monitor off, analog-spdif off, spdif-in off
+	   center on mic off, surround on line-in off
+	   downmix off, duplicate front off
+	*/
+	snd_ac97_write_cache(ac97, AC97_ALC650_MULTICH, 0);
 
 	/* set GPIO0 for mic bias */
 	/* GPIO0 pin output, no interrupt, high */
@@ -1262,10 +1264,12 @@ int patch_alc655(ac97_t * ac97)
 	val |= (1 << 1); /* spdif input pin */
 	val &= ~(1 << 12); /* vref enable */
 	snd_ac97_write_cache(ac97, 0x7a, val);
-	val = snd_ac97_read(ac97, AC97_ALC650_MULTICH);
-	val |= (1 << 15); /* enable spdif in */
-	val &= ~(1 << 10); /* disable center on mic */
-	snd_ac97_write_cache(ac97, AC97_ALC650_MULTICH, val);
+	/* set default: spdif-in enabled,
+	   spdif-in monitor off, spdif-in PCM off
+	   center on mic off, surround on line-in off
+	   duplicate front off
+	*/
+	snd_ac97_write_cache(ac97, AC97_ALC650_MULTICH, 1<<15);
 
 	/* full DAC volume */
 	snd_ac97_write_cache(ac97, AC97_ALC650_SURR_DAC_VOL, 0x0808);
diff -urNp linux-2.6.4/sound/pci/au88x0/au8810.h linux-2.6.4.SUSE/sound/pci/au88x0/au8810.h
--- linux-2.6.4/sound/pci/au88x0/au8810.h	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/au88x0/au8810.h	2004-03-16 16:14:58.000000000 +0100
@@ -7,16 +7,6 @@
 #define CARD_NAME "Aureal Advantage 3D Sound Processor"
 #define CARD_NAME_SHORT "au8810"
 
-#ifndef PCI_VENDOR_ID_AUREAL
-#define PCI_VENDOR_ID_AUREAL 0x12eb
-#endif
-#ifndef PCI_VENDOR_ID_AUREAL_ADVANTAGE
-#define PCI_DEVICE_ID_AUREAL_ADVANTAGE 0x0003
-#endif
-
-#define hwread(x,y) readl((x)+((y)>>2))
-#define hwwrite(x,y,z) writel((z),(x)+((y)>>2))
-
 #define NR_ADB		0x20
 #define NR_WT		0x00
 #define NR_SRC		0x10
diff -urNp linux-2.6.4/sound/pci/au88x0/au8820.h linux-2.6.4.SUSE/sound/pci/au88x0/au8820.h
--- linux-2.6.4/sound/pci/au88x0/au8820.h	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/au88x0/au8820.h	2004-03-16 16:14:58.000000000 +0100
@@ -14,14 +14,6 @@
 #define CARD_NAME "Aureal Vortex 3D Sound Processor"
 #define CARD_NAME_SHORT "au8820"
 
-#ifndef PCI_VENDOR_ID_AUREAL
-#define PCI_VENDOR_ID_AUREAL 0x12eb
-#endif
-
-#ifndef PCI_VENDOR_ID_AUREAL_VORTEX
-#define PCI_DEVICE_ID_AUREAL_VORTEX 0x0001
-#endif
-
 /* Number of ADB and WT channels */
 #define NR_ADB		0x10
 #define NR_WT		0x20
diff -urNp linux-2.6.4/sound/pci/au88x0/au8830.h linux-2.6.4.SUSE/sound/pci/au88x0/au8830.h
--- linux-2.6.4/sound/pci/au88x0/au8830.h	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/au88x0/au8830.h	2004-03-16 16:14:58.000000000 +0100
@@ -14,16 +14,6 @@
 #define CARD_NAME "Aureal Vortex 2 3D Sound Processor"
 #define CARD_NAME_SHORT "au8830"
 
-#ifndef PCI_VENDOR_ID_AUREAL
-#define PCI_VENDOR_ID_AUREAL 0x12eb
-#endif
-#ifndef PCI_VENDOR_ID_AUREAL_VORTEX2
-#define PCI_DEVICE_ID_AUREAL_VORTEX2 0x0002
-#endif
-
-#define hwread(x,y) readl((x)+((y)>>2))
-#define hwwrite(x,y,z) writel((z),(x)+((y)>>2))
-
 #define NR_ADB 0x20
 #define NR_SRC 0x10
 #define NR_A3D 0x10
diff -urNp linux-2.6.4/sound/pci/au88x0/au88x0.c linux-2.6.4.SUSE/sound/pci/au88x0/au88x0.c
--- linux-2.6.4/sound/pci/au88x0/au88x0.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/au88x0/au88x0.c	2004-03-16 16:14:58.000000000 +0100
@@ -336,28 +336,34 @@ snd_vortex_probe(struct pci_dev *pci, co
 	sprintf(card->longname, "%s at 0x%lx irq %i",
 		card->shortname, chip->io, chip->irq);
 
+	if ((err = pci_read_config_word(pci, PCI_DEVICE_ID,
+				  &(chip->device))) < 0) {
+		snd_card_free(card);
+		return err;
+	}	
+	if ((err = pci_read_config_word(pci, PCI_VENDOR_ID,
+				  &(chip->vendor))) < 0) {
+		snd_card_free(card);
+		return err;
+	}
+	if ((err = pci_read_config_byte(pci, PCI_REVISION_ID,
+				  &(chip->rev))) < 0) {
+		snd_card_free(card);
+		return err;
+	}
 #ifdef CHIP_AU8830
-	{
-		unsigned char revision;
-		if ((err =
-		     pci_read_config_byte(pci, PCI_REVISION_ID,
-					  &revision)) < 0) {
-			snd_card_free(card);
-			return err;
-		}
-
-		if (revision != 0xfe && revision != 0xfa) {
-			printk(KERN_ALERT
-			       "vortex: The revision (%x) of your card has not been seen before.\n",
-			       revision);
-			printk(KERN_ALERT
-			       "vortex: Please email the results of 'lspci -vv' to openvortex-dev@nongnu.org.\n");
-			snd_card_free(card);
-			err = -ENODEV;
-			return err;
-		}
+	if ((chip->rev) != 0xfe && (chip->rev) != 0xfa) {
+		printk(KERN_ALERT
+		       "vortex: The revision (%x) of your card has not been seen before.\n",
+		       chip->rev);
+		printk(KERN_ALERT
+		       "vortex: Please email the results of 'lspci -vv' to openvortex-dev@nongnu.org.\n");
+		snd_card_free(card);
+		err = -ENODEV;
+		return err;
 	}
 #endif
+
 	// (6)
 	if ((err = snd_card_register(card)) < 0) {
 		snd_card_free(card);
diff -urNp linux-2.6.4/sound/pci/au88x0/au88x0.h linux-2.6.4.SUSE/sound/pci/au88x0/au88x0.h
--- linux-2.6.4/sound/pci/au88x0/au88x0.h	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/au88x0/au88x0.h	2004-03-16 16:14:58.000000000 +0100
@@ -1,14 +1,19 @@
 /*
-    Aureal Vortex Soundcard driver.
-
-    IO addr collected from asp4core.vxd:
-    function    address
-    0005D5A0    13004
-    00080674    14004
-    00080AFF    12818
-
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU Library General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
-
+ 
 #ifndef __SOUND_AU88X0_H
 #define __SOUND_AU88X0_H
 
@@ -24,20 +29,20 @@
 #include <sound/hwdep.h>
 #include <sound/ac97_codec.h>
 
-/*
+
 #ifndef	PCI_VENDOR_ID_AUREAL
 #define	PCI_VENDOR_ID_AUREAL 0x12eb
 #endif
-#ifndef	PCI_VENDOR_ID_AUREAL_VORTEX
+#ifndef	PCI_DEVICE_ID_AUREAL_VORTEX
 #define	PCI_DEVICE_ID_AUREAL_VORTEX 0x0001
 #endif
-#ifndef	PCI_VENDOR_ID_AUREAL_VORTEX2
+#ifndef	PCI_DEVICE_ID_AUREAL_VORTEX2
 #define	PCI_DEVICE_ID_AUREAL_VORTEX2 0x0002
 #endif
-#ifndef	PCI_VENDOR_ID_AUREAL_ADVANTAGE
+#ifndef	PCI_DEVICE_ID_AUREAL_ADVANTAGE
 #define	PCI_DEVICE_ID_AUREAL_ADVANTAGE 0x0003
 #endif
-*/
+
 #endif
 
 #ifndef CHIP_AU8820
@@ -90,6 +95,12 @@
 
 /* Check for SDAC bit in "Extended audio ID" AC97 register */
 #define VORTEX_IS_QUAD(x) ((x->codec == NULL) ?  0 : (x->codec->ext_id|0x80))
+/* Check if chip has bug. */
+#define IS_BAD_CHIP(x) (\
+	(x->rev < 3 && x->device == PCI_DEVICE_ID_AUREAL_VORTEX) || \
+	(x->rev < 0xfe && x->device == PCI_DEVICE_ID_AUREAL_VORTEX2) || \
+	(x->rev < 0xfe && x->device == PCI_DEVICE_ID_AUREAL_ADVANTAGE))
+
 
 /* PCM devices */
 #define VORTEX_PCM_ADB		0
diff -urNp linux-2.6.4/sound/pci/au88x0/au88x0_core.c linux-2.6.4.SUSE/sound/pci/au88x0/au88x0_core.c
--- linux-2.6.4/sound/pci/au88x0/au88x0_core.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/au88x0/au88x0_core.c	2004-03-16 16:14:58.000000000 +0100
@@ -2053,14 +2053,18 @@ static void vortex_connect_default(vorte
 	// Connect DSP interface for SQ3500 turbo (not here i think...)
 
 	// Connect AC98 modem codec
-
-	/* Fast Play Workaround */
-#ifndef CHIP_AU8820
-	vortex->fixed_res[VORTEX_RESOURCE_DMA] = 0x00000001;
-#endif
-	// Channel swapping workaround. We are nuking registers somewhere, or
-	// its a hardware bug.
-	vortex->fixed_res[VORTEX_RESOURCE_SRC] = 0x00000001;
+ 	
+ 	/* Fast Play Workaround. Revision 0xFE does not seem to need it. */
+ 	printk(KERN_INFO "vortex: revision = 0x%x, device = %d\n", vortex->rev, vortex->device);
+ 	if (IS_BAD_CHIP(vortex)) {
+ 		printk(KERN_INFO "vortex: Erratum workaround enabled.\n");
+ #ifndef CHIP_AU8820
+ 		vortex->fixed_res[VORTEX_RESOURCE_DMA] = 0x00000001;
+ #endif
+ 		// Channel swapping workaround. We are nuking registers somewhere, or
+ 		// its a hardware bug.
+ 		vortex->fixed_res[VORTEX_RESOURCE_SRC] = 0x00000001;
+ 	}
 }
 
 /*
@@ -2161,8 +2165,8 @@ vortex_adb_allocroute(vortex_t * vortex,
 		for (i = 0; i < nr_ch; i++) {
 			if (stream->type == VORTEX_PCM_ADB) {
 				vortex_connection_adbdma_src(vortex, en,
-							     //src[nr_ch - 1], 
-							     src[0], 
+							     src[nr_ch - 1], 
+							     //src[0], 
 							     dma,
 							     src[i]);
 				vortex_connection_src_mixin(vortex, en,
@@ -2644,7 +2648,7 @@ static void vortex_spdif_init(vortex_t *
 static int vortex_core_init(vortex_t * vortex)
 {
 
-	printk(KERN_INFO "Vortex: hardware init.... ");
+	printk(KERN_INFO "Vortex: init.... ");
 	/* Hardware Init. */
 	hwwrite(vortex->mmio, VORTEX_CTRL, 0xffffffff);
 	udelay(5000);
@@ -2698,7 +2702,7 @@ static int vortex_core_init(vortex_t * v
 static int vortex_core_shutdown(vortex_t * vortex)
 {
 
-	printk(KERN_INFO "Vortex: hardware shutdown...");
+	printk(KERN_INFO "Vortex: shutdown...");
 #ifndef CHIP_AU8820
 	vortex_eq_free(vortex);
 	vortex_Vort3D(vortex, 0);
diff -urNp linux-2.6.4/sound/pci/au88x0/au88x0_pcm.c linux-2.6.4.SUSE/sound/pci/au88x0/au88x0_pcm.c
--- linux-2.6.4/sound/pci/au88x0/au88x0_pcm.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/au88x0/au88x0_pcm.c	2004-03-16 16:14:58.000000000 +0100
@@ -1,10 +1,24 @@
 /*
- * Vortex PCM ALSA driver.
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU Library General Public License for more details.
  *
- * Supports ADB and WT DMA. Unfortunately, WT routing is still a
- * mistery. To discover that, we need to disassemble the windoze
- * driver too.
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ */
+ 
+/*
+ * Vortex PCM ALSA driver.
  *
+ * Supports ADB and WT DMA. Unfortunately, WT channels do not run yet.
+ * It remains stuck,and DMA transfers do not happen.
  *
  */
 
@@ -488,14 +502,18 @@ static int __devinit snd_vortex_new_pcm(
 	if (idx == VORTEX_PCM_ADB)
 		snd_pcm_set_ops(pcm, SNDRV_PCM_STREAM_CAPTURE,
 				&snd_vortex_playback_ops);
-	/* pre-allocation of linear buffers */
-	//snd_pcm_lib_preallocate_pages_for_all(pcm, SNDRV_DMA_TYPE_DEV,
-	//				      snd_dma_pci_data(chip->pci_dev), 0x10000, 0x10000);
+
 	/* pre-allocation of Scatter-Gather buffers */
+	
 	snd_pcm_lib_preallocate_pages_for_all(pcm, SNDRV_DMA_TYPE_DEV_SG,
-					      snd_dma_pci_data(chip->pci_dev),
-					      0x10000, 0x10000);
-
+										  snd_dma_pci_data(chip->pci_dev),
+										  0x10000, 0x10000);
+	
+	// The above should be used, as soon as ALSA gets updated.
+	/*
+	snd_pcm_lib_preallocate_sg_pages_for_all(chip->pci_dev, pcm,
+						 0x10000, 0x10000);
+	*/
 	if (VORTEX_PCM_TYPE(pcm) == VORTEX_PCM_SPDIF) {
 		snd_kcontrol_t *kcontrol;
 
diff -urNp linux-2.6.4/sound/pci/emu10k1/emu10k1_callback.c linux-2.6.4.SUSE/sound/pci/emu10k1/emu10k1_callback.c
--- linux-2.6.4/sound/pci/emu10k1/emu10k1_callback.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/emu10k1/emu10k1_callback.c	2004-03-16 16:14:58.000000000 +0100
@@ -426,7 +426,7 @@ start_voice(snd_emux_voice_t *vp)
 		snd_emu10k1_ptr_write(hw, CDF, ch, sample);
 
 		/* invalidate maps */
-		temp = ((unsigned int)hw->silent_page_dmaaddr << 1) | MAP_PTI_MASK;
+		temp = ((unsigned int)hw->silent_page.addr << 1) | MAP_PTI_MASK;
 		snd_emu10k1_ptr_write(hw, MAPA, ch, temp);
 		snd_emu10k1_ptr_write(hw, MAPB, ch, temp);
 		
diff -urNp linux-2.6.4/sound/pci/emu10k1/memory.c linux-2.6.4.SUSE/sound/pci/emu10k1/memory.c
--- linux-2.6.4/sound/pci/emu10k1/memory.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/emu10k1/memory.c	2004-03-16 16:14:58.000000000 +0100
@@ -62,7 +62,7 @@ static inline void set_silent_ptb(emu10k
 	page *= UNIT_PAGES;
 	for (i = 0; i < UNIT_PAGES; i++, page++)
 		/* do not increment ptr */
-		__set_ptb_entry(emu, page, emu->silent_page_dmaaddr);
+		__set_ptb_entry(emu, page, emu->silent_page.addr);
 }
 #endif /* PAGE_SIZE */
 
diff -urNp linux-2.6.4/sound/pci/es1968.c linux-2.6.4.SUSE/sound/pci/es1968.c
--- linux-2.6.4/sound/pci/es1968.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/es1968.c	2004-03-16 16:14:58.000000000 +0100
@@ -162,10 +162,10 @@ MODULE_PARM_DESC(clock, "Clock on " CARD
 MODULE_PARM_SYNTAX(clock, SNDRV_ENABLED);
 MODULE_PARM(use_pm, "1-" __MODULE_STRING(SNDRV_CARDS) "i");
 MODULE_PARM_DESC(use_pm, "Toggle power-management.  (0 = off, 1 = on, 2 = auto)");
-MODULE_PARM_SYNTAX(use_pm, SNDRV_ENABLED ",allows:{{0,1,2}},skill:advanced");
+MODULE_PARM_SYNTAX(use_pm, SNDRV_ENABLED ",allows:{{0,1,2}},default:2,skill:advanced");
 MODULE_PARM(enable_mpu, "1-" __MODULE_STRING(SNDRV_CARDS) "i");
 MODULE_PARM_DESC(enable_mpu, "Enable MPU401.  (0 = off, 1 = on, 2 = auto)");
-MODULE_PARM_SYNTAX(enable_mpu, SNDRV_ENABLED "," SNDRV_BOOLEAN_TRUE_DESC);
+MODULE_PARM_SYNTAX(enable_mpu, SNDRV_ENABLED ",allows:{{0,2}},default:2");
 #ifdef SUPPORT_JOYSTICK
 MODULE_PARM(joystick, "1-" __MODULE_STRING(SNDRV_CARDS) "i");
 MODULE_PARM_DESC(joystick, "Enable joystick.");
diff -urNp linux-2.6.4/sound/pci/intel8x0.c linux-2.6.4.SUSE/sound/pci/intel8x0.c
--- linux-2.6.4/sound/pci/intel8x0.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/intel8x0.c	2004-03-16 16:14:58.000000000 +0100
@@ -96,7 +96,7 @@ MODULE_PARM_DESC(ac97_clock, "AC'97 code
 MODULE_PARM_SYNTAX(ac97_clock, SNDRV_ENABLED ",default:0");
 MODULE_PARM(ac97_quirk, "1-" __MODULE_STRING(SNDRV_CARDS) "i");
 MODULE_PARM_DESC(ac97_quirk, "AC'97 workaround for strange hardware.");
-MODULE_PARM_SYNTAX(ac97_quirk, SNDRV_ENABLED ",allows:{{-1,3}},dialog:list,default:-1");
+MODULE_PARM_SYNTAX(ac97_quirk, SNDRV_ENABLED ",allows:{{-1,4}},dialog:list,default:-1");
 #ifdef SUPPORT_JOYSTICK
 MODULE_PARM(joystick, "1-" __MODULE_STRING(SNDRV_CARDS) "i");
 MODULE_PARM_DESC(joystick, "Enable joystick for Intel i8x0 soundcard.");
diff -urNp linux-2.6.4/sound/pci/trident/trident_memory.c linux-2.6.4.SUSE/sound/pci/trident/trident_memory.c
--- linux-2.6.4/sound/pci/trident/trident_memory.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/pci/trident/trident_memory.c	2004-03-16 16:14:58.000000000 +0100
@@ -76,8 +76,8 @@ static inline void set_tlb_bus(trident_t
 static inline void set_silent_tlb(trident_t *trident, int page)
 {
 	page <<= 1;
-	__set_tlb_bus(trident, page, (unsigned long)trident->tlb.silent_page, trident->tlb.silent_page_dmaaddr);
-	__set_tlb_bus(trident, page+1, (unsigned long)trident->tlb.silent_page, trident->tlb.silent_page_dmaaddr);
+	__set_tlb_bus(trident, page, (unsigned long)trident->tlb.silent_page.area, trident->tlb.silent_page.addr);
+	__set_tlb_bus(trident, page+1, (unsigned long)trident->tlb.silent_page.area, trident->tlb.silent_page.addr);
 }
 
 #else
@@ -111,7 +111,7 @@ static inline void set_silent_tlb(triden
 	int i;
 	page *= UNIT_PAGES;
 	for (i = 0; i < UNIT_PAGES; i++, page++)
-		__set_tlb_bus(trident, page, (unsigned long)trident->tlb.silent_page, trident->tlb.silent_page_dmaaddr);
+		__set_tlb_bus(trident, page, (unsigned long)trident->tlb.silent_page.area, trident->tlb.silent_page.addr);
 }
 
 #endif /* PAGE_SIZE */
diff -urNp linux-2.6.4/sound/sparc/cs4231.c linux-2.6.4.SUSE/sound/sparc/cs4231.c
--- linux-2.6.4/sound/sparc/cs4231.c	2004-03-16 16:14:47.000000000 +0100
+++ linux-2.6.4.SUSE/sound/sparc/cs4231.c	2004-03-16 16:14:58.000000000 +0100
@@ -1570,8 +1570,8 @@ int snd_cs4231_pcm(cs4231_t *chip)
 
 #ifdef EBUS_SUPPORT
 	if (chip->flags & CS4231_FLAG_EBUS) {
-		snd_pcm_lib_preallocate_pages_for_all(pcm, SNDRV_DMA_TYPE_PCI,
-						      snd_dma_pci_data(chip->dev_u.pdev)
+		snd_pcm_lib_preallocate_pages_for_all(pcm, SNDRV_DMA_TYPE_DEV,
+						      snd_dma_pci_data(chip->dev_u.pdev),
 						      64*1024, 128*1024);
 	} else {
 #endif
