From: olh@suse.de
Subject: patch-2.6.11-rc5-bk1

ChangeSet@1.2057, 2005-02-25 20:28:59-08:00, aurelien@aurel32.net
  [PATCH] USB: Fix usbfs regression
  
  I have just tested kernel version 2.6.11-rc5 and noticed it is not
  possible to do an USB transfer by submitting an URB to an output
  endpoint.  This breaks newest versions of libusb and thus SANE, gphoto2,
  and a lot of software.
  
  The bug was introduced in version 2.6.11-rc1 and is due to a wrong
  comparison. 
  
  Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
  Signed-off-by: Greg Kroah-Hartman <greg@kroah.com>
  Signed-off-by: Linus Torvalds <torvalds@osdl.org>

ChangeSet@1.2056, 2005-02-25 19:39:39-08:00, torvalds@ppc970.osdl.org
  Fix possible pty line discipline race.
  
  This ain't pretty. Real fix under discussion.

ChangeSet@1.2055, 2005-02-25 16:51:25-08:00, olh@suse.de
  [PATCH] Fix incorrect __init on 'modedb[]' array
  
  modedb can not be __init because fb_find_mode() (which is not __init)
  may get db == NULL.  fb_find_mode() is called from modules. 
  
  Signed-off-by: Olaf Hering <olh@suse.de>
  Signed-off-by: Linus Torvalds <torvalds@osdl.org>

ChangeSet@1.2053, 2005-02-25 14:17:57-08:00, akpm@osdl.org
  [PATCH] binfmt_elf build fix
  
  The cast to void still triggers the gcc "warning: ignoring return value"
  warning, which is dumb of it.  So ignore the return value differently.
  
  Signed-off-by: Andrew Morton <akpm@osdl.org>
  Signed-off-by: Linus Torvalds <torvalds@osdl.org>

ChangeSet@1.2052, 2005-02-25 14:17:43-08:00, gregkh@suse.de
  [PATCH] USB: fix bug in acm's open function
  
  Here's a patch for 2.6.11-rc5 that a lot of cdc-acm driver users are
  clamoring for.
  
  There's a bug introduced in a cleanup which will lead to a race making
  reopenings fail.  This fix is by Alexander Lykanov.
  
  Signed-off-by: Oliver Neukum <oliver@neukum.name>
  Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
  Signed-off-by: Andrew Morton <akpm@osdl.org>
  Signed-off-by: Linus Torvalds <torvalds@osdl.org>

ChangeSet@1.2051, 2005-02-25 14:17:30-08:00, dhowells@redhat.com
  [PATCH] Make keyctl(KEYCTL_JOIN_SESSION_KEYRING) use the correct arg
  
  The attached patch makes keyctl() use the correct argument when invoking
  the KEYCTL_JOIN_SESSION_KEYRING function.
  
  I'm not sure how this evaded testing before, but I suspect the compiler was
  kind and made both argument registers hold the same value.
  
  Thanks to Kevin Coffman <kwc@citi.umich.edu> for spotting this.
  
  Signed-Off-By: David Howells <dhowells@redhat.com>
  Signed-off-by: Andrew Morton <akpm@osdl.org>
  Signed-off-by: Linus Torvalds <torvalds@osdl.org>

ChangeSet@1.2049.1.1, 2005-02-25 19:47:46+00:00, rmk@flint.arm.linux.org.uk
  [ARM] Fix dma_mmap() size argument.
  
  We were passing the size of the region in pages, where as
  remap_pfn_range expected the size in bytes.
  
  Signed-off-by: Russell King <rmk@arm.linux.org.uk>

ChangeSet@1.2050, 2005-02-25 08:48:33-08:00, david@gibson.dropbear.id.au
  [PATCH] ppc64: hugepage hash flushing bugfix
  
  This fixes a potentially bad (although very rarely triggered) bug in the
  ppc64 hugepage code.
  
  hpte_update() did not correctly calculate the address for hugepages, so
  pte_clear() (which we use for hugepage ptes as well as normal ones)
  would not correctly flush the hash page table entry.  Under the right
  circumstances this could potentially lead to duplicate hash entries,
  which is very bad.
  
  davem's upcoming patch to pass the virtual address directly to set_pte()
  and its ilk will obsolete this, but this is bad enough it should
  probably be fixed in the meantime.
  
  Signed-off-by: David Gibson <dwg@au1.ibm.com>
  Acked-by: William Irwin <wli@holomorphy.com>
  Signed-off-by: Linus Torvalds <torvalds@osdl.org>

ChangeSet@1.2049, 2005-02-23 17:44:08-08:00, torvalds@ppc970.osdl.org
  Linux 2.6.11-rc5
  TAG: v2.6.11-rc5

diff -Nru a/Makefile b/Makefile
--- a/Makefile	2005-02-23 17:44:00 -08:00
+++ b/Makefile	2005-02-26 04:41:29 -08:00
@@ -1,7 +1,7 @@
 VERSION = 2
 PATCHLEVEL = 6
 SUBLEVEL = 11
-EXTRAVERSION =-rc5
+EXTRAVERSION = -rc5-bk1
 NAME=Woozy Numbat
 
 # *DOCUMENTATION*
diff -Nru a/arch/arm/mm/consistent.c b/arch/arm/mm/consistent.c
--- a/arch/arm/mm/consistent.c	2005-02-18 14:19:54 -08:00
+++ b/arch/arm/mm/consistent.c	2005-02-25 11:42:41 -08:00
@@ -293,7 +293,8 @@
 			vma->vm_flags |= VM_RESERVED;
 			ret = remap_pfn_range(vma, vma->vm_start,
 					      page_to_pfn(c->vm_pages) + off,
-					      user_size, vma->vm_page_prot);
+					      user_size << PAGE_SHIFT,
+					      vma->vm_page_prot);
 		}
 	}
 
diff -Nru a/arch/ppc64/mm/tlb.c b/arch/ppc64/mm/tlb.c
--- a/arch/ppc64/mm/tlb.c	2004-09-07 23:32:57 -07:00
+++ b/arch/ppc64/mm/tlb.c	2005-02-24 19:56:47 -08:00
@@ -85,8 +85,12 @@
 
 	ptepage = virt_to_page(ptep);
 	mm = (struct mm_struct *) ptepage->mapping;
-	addr = ptepage->index +
-		(((unsigned long)ptep & ~PAGE_MASK) * PTRS_PER_PTE);
+	addr = ptepage->index;
+	if (pte_huge(pte))
+		addr +=  ((unsigned long)ptep & ~PAGE_MASK)
+			/ sizeof(*ptep) * HPAGE_SIZE;
+	else
+		addr += ((unsigned long)ptep & ~PAGE_MASK) * PTRS_PER_PTE;
 
 	if (REGION_ID(addr) == USER_REGION_ID)
 		context = mm->context.id;
diff -Nru a/drivers/char/pty.c b/drivers/char/pty.c
--- a/drivers/char/pty.c	2005-01-10 17:29:36 -08:00
+++ b/drivers/char/pty.c	2005-02-25 19:39:32 -08:00
@@ -149,13 +149,15 @@
 static int pty_chars_in_buffer(struct tty_struct *tty)
 {
 	struct tty_struct *to = tty->link;
+	ssize_t (*chars_in_buffer)(struct tty_struct *);
 	int count;
 
-	if (!to || !to->ldisc.chars_in_buffer)
+	/* We should get the line discipline lock for "tty->link" */
+	if (!to || !(chars_in_buffer = to->ldisc.chars_in_buffer))
 		return 0;
 
 	/* The ldisc must report 0 if no characters available to be read */
-	count = to->ldisc.chars_in_buffer(to);
+	count = chars_in_buffer(to);
 
 	if (tty->driver->subtype == PTY_TYPE_SLAVE) return count;
 
diff -Nru a/drivers/usb/class/cdc-acm.c b/drivers/usb/class/cdc-acm.c
--- a/drivers/usb/class/cdc-acm.c	2005-02-02 22:19:36 -08:00
+++ b/drivers/usb/class/cdc-acm.c	2005-02-25 13:17:33 -08:00
@@ -278,15 +278,14 @@
 
 
 
-	if (acm->used) {
+	if (acm->used++) {
 		goto done;
         }
 
 	acm->ctrlurb->dev = acm->dev;
 	if (usb_submit_urb(acm->ctrlurb, GFP_KERNEL)) {
 		dbg("usb_submit_urb(ctrl irq) failed");
-		rv = -EIO;
-		goto err_out;
+		goto bail_out;
 	}
 
 	acm->readurb->dev = acm->dev;
@@ -303,7 +302,6 @@
 	tty->low_latency = 1;
 
 done:
-	acm->used++;
 err_out:
 	up(&open_sem);
 	return rv;
@@ -312,6 +310,8 @@
 	usb_kill_urb(acm->readurb);
 bail_out_and_unlink:
 	usb_kill_urb(acm->ctrlurb);
+bail_out:
+	acm->used--;
 	up(&open_sem);
 	return -EIO;
 }
diff -Nru a/drivers/usb/core/devio.c b/drivers/usb/core/devio.c
--- a/drivers/usb/core/devio.c	2005-02-02 22:20:50 -08:00
+++ b/drivers/usb/core/devio.c	2005-02-25 18:16:15 -08:00
@@ -841,7 +841,7 @@
 		if ((ret = checkintf(ps, ifnum)))
 			return ret;
 	}
-	if ((uurb.endpoint & ~USB_ENDPOINT_DIR_MASK) != 0)
+	if ((uurb.endpoint & USB_ENDPOINT_DIR_MASK) != 0)
 		ep = ps->dev->ep_in [uurb.endpoint & USB_ENDPOINT_NUMBER_MASK];
 	else
 		ep = ps->dev->ep_out [uurb.endpoint & USB_ENDPOINT_NUMBER_MASK];
diff -Nru a/drivers/video/modedb.c b/drivers/video/modedb.c
--- a/drivers/video/modedb.c	2005-01-04 18:48:32 -08:00
+++ b/drivers/video/modedb.c	2005-02-25 16:37:43 -08:00
@@ -37,7 +37,7 @@
 
 #define DEFAULT_MODEDB_INDEX	0
 
-static const __init struct fb_videomode modedb[] = {
+static const struct fb_videomode modedb[] = {
     {
 	/* 640x400 @ 70 Hz, 31.5 kHz hsync */
 	NULL, 70, 640, 400, 39721, 40, 24, 39, 9, 96, 2,
diff -Nru a/fs/binfmt_elf.c b/fs/binfmt_elf.c
--- a/fs/binfmt_elf.c	2005-02-06 03:29:02 -08:00
+++ b/fs/binfmt_elf.c	2005-02-25 13:17:34 -08:00
@@ -803,13 +803,14 @@
 				nbyte = ELF_MIN_ALIGN - nbyte;
 				if (nbyte > elf_brk - elf_bss)
 					nbyte = elf_brk - elf_bss;
-				/*
-				 * This bss-zeroing can fail if the ELF file
-				 * specifies odd protections.  So we don't check
-				 * the return value
-				 */
-				(void)clear_user((void __user *)elf_bss +
-							load_bias, nbyte);
+				if (clear_user((void __user *)elf_bss +
+							load_bias, nbyte)) {
+					/*
+					 * This bss-zeroing can fail if the ELF
+					 * file specifies odd protections.  So
+					 * we don't check the return value
+					 */
+				}
 			}
 		}
 
diff -Nru a/security/keys/compat.c b/security/keys/compat.c
--- a/security/keys/compat.c	2004-10-27 14:35:17 -07:00
+++ b/security/keys/compat.c	2005-02-25 13:17:30 -08:00
@@ -31,7 +31,7 @@
 		return keyctl_get_keyring_ID(arg2, arg3);
 
 	case KEYCTL_JOIN_SESSION_KEYRING:
-		return keyctl_join_session_keyring(compat_ptr(arg3));
+		return keyctl_join_session_keyring(compat_ptr(arg2));
 
 	case KEYCTL_UPDATE:
 		return keyctl_update_key(arg2, compat_ptr(arg3), arg4);
diff -Nru a/security/keys/keyctl.c b/security/keys/keyctl.c
--- a/security/keys/keyctl.c	2004-10-21 03:54:48 -07:00
+++ b/security/keys/keyctl.c	2005-02-25 13:17:30 -08:00
@@ -923,7 +923,7 @@
 					     (int) arg3);
 
 	case KEYCTL_JOIN_SESSION_KEYRING:
-		return keyctl_join_session_keyring((const char __user *) arg3);
+		return keyctl_join_session_keyring((const char __user *) arg2);
 
 	case KEYCTL_UPDATE:
 		return keyctl_update_key((key_serial_t) arg2,
