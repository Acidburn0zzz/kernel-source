diff -urp linux-2.6.5-7.69/fs/jfs/jfs_btree.h linux/fs/jfs/jfs_btree.h
--- linux-2.6.5-7.69/fs/jfs/jfs_btree.h	2004-06-07 16:51:31.000000000 -0500
+++ linux/fs/jfs/jfs_btree.h	2004-06-08 10:08:05.616371464 -0500
@@ -125,14 +125,14 @@ struct btstack {
 	(btstack)->top = (btstack)->stack
 
 #define BT_STACK_FULL(btstack)\
-	( (btstack)->top == &((btstack)->stack[MAXTREEHEIGHT]))
+	( (btstack)->top == &((btstack)->stack[MAXTREEHEIGHT-1]))
 
 #define BT_PUSH(BTSTACK, BN, INDEX)\
 {\
+	assert(!BT_STACK_FULL(BTSTACK));\
 	(BTSTACK)->top->bn = BN;\
 	(BTSTACK)->top->index = INDEX;\
 	++(BTSTACK)->top;\
-	assert(!BT_STACK_FULL(BTSTACK));\
 }
 
 #define BT_POP(btstack)\
diff -urp linux-2.6.5-7.69/fs/jfs/namei.c linux/fs/jfs/namei.c
--- linux-2.6.5-7.69/fs/jfs/namei.c	2004-06-07 16:51:32.000000000 -0500
+++ linux/fs/jfs/namei.c	2004-06-08 10:08:10.056696432 -0500
@@ -1051,15 +1051,17 @@ static int jfs_symlink(struct inode *dip
 		sb = ip->i_sb;
 		bmask = JFS_SBI(sb)->bsize - 1;
 		xsize = (ssize + bmask) & ~bmask;
-		extent = xaddr = 0;
+		xaddr = 0;
 		xlen = xsize >> JFS_SBI(sb)->l2bsize;
 		if ((rc = xtInsert(tid, ip, 0, 0, xlen, &xaddr, 0))) {
 			txAbort(tid, 0);
 			rc = -ENOSPC;
 			goto out3;
 		}
+		extent = xaddr;
 		ip->i_size = ssize - 1;
 		while (ssize) {
+			/* This is kind of silly since PATH_MAX == 4K */
 			int copy_size = min(ssize, PSIZE);
 
 			mp = get_metapage(ip, xaddr, PSIZE, 1);
@@ -1073,6 +1075,7 @@ static int jfs_symlink(struct inode *dip
 			memcpy(mp->data, name, copy_size);
 			flush_metapage(mp);
 			ssize -= copy_size;
+			name += copy_size;
 			xaddr += JFS_SBI(sb)->nbperpage;
 		}
 		ip->i_blocks = LBLK2PBLK(sb, xlen);
