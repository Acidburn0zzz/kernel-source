mason@suse.com, add some barriers to mpool alloc and free, fixes
a race where wakeups can be missed

Index: linux.t/mm/mempool.c
===================================================================
--- linux.t.orig/mm/mempool.c	2004-03-11 14:34:50.000000000 -0500
+++ linux.t/mm/mempool.c	2004-03-11 14:38:30.000000000 -0500
@@ -203,6 +203,7 @@
 	 * If the pool is less than 50% full and we can perform effective
 	 * page reclaim then try harder to allocate an element.
 	 */
+	mb();
 	if ((gfp_mask & __GFP_FS) && (gfp_mask != gfp_nowait) &&
 				(pool->curr_nr <= pool->min_nr/2)) {
 		element = pool->alloc(gfp_mask, pool->pool_data);
@@ -230,6 +231,7 @@
 	blk_run_queues();
 
 	prepare_to_wait(&pool->wait, &wait, TASK_UNINTERRUPTIBLE);
+	mb();
 	if (!pool->curr_nr)
 		io_schedule();
 	finish_wait(&pool->wait, &wait);
@@ -250,6 +252,7 @@
 {
 	unsigned long flags;
 
+	mb();
 	if (pool->curr_nr < pool->min_nr) {
 		spin_lock_irqsave(&pool->lock, flags);
 		if (pool->curr_nr < pool->min_nr) {
