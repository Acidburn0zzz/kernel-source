From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] reiserfs: handle cnode allocation failure gracefully
SUSE-Bugzilla: 133999
Patch-mainline: submitted 29/11/2005

 If an external device is used for a journal, by default it will use the
 entire device. The reiserfs journal code allocates structures per journal
 block when it mounts the file system. If the journal device is too large, and
 memory cannot be allocated for the structures, it will continue and ultimately
 panic when it can't pull one off the free list.

 This patch handles the allocation failure gracefully and prints an error
 message at mount time.

 Changes: Updated error message to be more descriptive to the user.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

diff -ruNpX dontdiff a/fs/reiserfs/journal.c b/fs/reiserfs/journal.c
--- a/fs/reiserfs/journal.c	2005-09-16 11:42:58.000000000 -0400
+++ b/fs/reiserfs/journal.c	2005-11-23 19:14:17.000000000 -0500
@@ -2757,6 +2757,15 @@ int journal_init(struct super_block *p_s
 	journal->j_cnode_used = 0;
 	journal->j_must_wait = 0;
 
+	if (journal->j_cnode_free == 0) {
+        	reiserfs_warning(p_s_sb, "journal-2004: Journal cnode memory "
+		                 "allocation failed (%ld bytes). Journal is "
+		                 "too large for available memory. Usually "
+		                 "this is due to a journal that is too large.",
+		                 sizeof (struct reiserfs_journal_cnode) * num_cnodes);
+        	goto free_and_return;
+	}
+
 	init_journal_hash(p_s_sb);
 	jl = journal->j_current_jl;
 	jl->j_list_bitmap = get_list_bitmap(p_s_sb, jl);
