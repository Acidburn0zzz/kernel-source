From: Jens Axboe <axboe@suse.de>
Subject: Fix highly unlikely do_div() crash in cfq
Patch-mainline: 2.6.17
References: 183256

We don't clear the seek stats on cic allocation, and if ->seek_samples happens
to be precisely -36 the first invocation of cfq_update_io_seektime() will
crash in do_div() with a division by zero.

Acked-by: 
Signed-off-by: 

diff --git a/block/cfq-iosched.c b/block/cfq-iosched.c
index a46d030..052b174 100644
--- a/block/cfq-iosched.c
+++ b/block/cfq-iosched.c
@@ -1323,17 +1323,12 @@ cfq_alloc_io_context(struct cfq_data *cf
 	struct cfq_io_context *cic = kmem_cache_alloc(cfq_ioc_pool, gfp_mask);
 
 	if (cic) {
-		RB_CLEAR(&cic->rb_node);
-		cic->key = NULL;
-		cic->cfqq[ASYNC] = NULL;
-		cic->cfqq[SYNC] = NULL;
+		memset(cic, 0, sizeof(*cic));
+		RB_CLEAR_COLOR(&cic->rb_node);
 		cic->last_end_request = jiffies;
-		cic->ttime_total = 0;
-		cic->ttime_samples = 0;
-		cic->ttime_mean = 0;
+		INIT_LIST_HEAD(&cic->queue_list);
 		cic->dtor = cfq_free_io_context;
 		cic->exit = cfq_exit_io_context;
-		INIT_LIST_HEAD(&cic->queue_list);
 		atomic_inc(&ioc_count);
 	}
 

