From: Michael Matz <matz@suse.de>
Subject: fix compilation with gcc4
Patch-mainline: no
References: none

fix compilation with gcc4

Acked-by: Michael Matz <matz@suse.de>

diff -urNp linux-2.6.11/arch/i386/kernel/process.c linux-2.6.11.SUSE/arch/i386/kernel/process.c
--- linux-2.6.11/arch/i386/kernel/process.c	2005-03-02 08:37:30.000000000 +0100
+++ linux-2.6.11.SUSE/arch/i386/kernel/process.c	2005-04-26 15:10:40.016237473 +0200
@@ -596,8 +596,8 @@ struct task_struct fastcall * __switch_t
 	 * Save away %fs and %gs. No need to save %es and %ds, as
 	 * those are always kernel segments while inside the kernel.
 	 */
-	asm volatile("movl %%fs,%0":"=m" (*(int *)&prev->fs));
-	asm volatile("movl %%gs,%0":"=m" (*(int *)&prev->gs));
+	savesegment(fs,prev->fs);
+	savesegment(gs,prev->gs);
 
 	/*
 	 * Restore %fs and %gs if needed.
diff -urNp linux-2.6.11/include/asm-i386/system.h linux-2.6.11.SUSE/include/asm-i386/system.h
--- linux-2.6.11/include/asm-i386/system.h	2005-03-02 08:37:30.000000000 +0100
+++ linux-2.6.11.SUSE/include/asm-i386/system.h	2005-04-26 15:10:40.016237473 +0200
@@ -81,25 +81,25 @@ static inline unsigned long _get_base(ch
 #define loadsegment(seg,value)			\
 	asm volatile("\n"			\
 		"1:\t"				\
-		"movl %0,%%" #seg "\n"		\
+		"mov %0,%%" #seg "\n"		\
 		"2:\n"				\
 		".section .fixup,\"ax\"\n"	\
 		"3:\t"				\
 		"pushl $0\n\t"			\
-		"popl %%" #seg "\n\t"		\
+		"pop %%" #seg "\n\t"		\
 		"jmp 2b\n"			\
 		".previous\n"			\
 		".section __ex_table,\"a\"\n\t"	\
 		".align 4\n\t"			\
 		".long 1b,3b\n"			\
 		".previous"			\
-		: :"m" (*(unsigned int *)&(value)))
+		: :"m" (*(unsigned short *)&(value)))
 
 /*
  * Save a segment register away
  */
 #define savesegment(seg, value) \
-	asm volatile("movl %%" #seg ",%0":"=m" (*(int *)&(value)))
+	asm volatile("mov %%" #seg ",%0":"=m" (*(short *)&(value)))
 
 /*
  * Clear and set 'TS' bit respectively
