diff -u linux/arch/x86_64/kernel/acpi/sleep.c-o linux/arch/x86_64/kernel/acpi/sleep.c
--- linux/arch/x86_64/kernel/acpi/sleep.c-o	2004-03-21 21:12:09.000000000 +0100
+++ linux/arch/x86_64/kernel/acpi/sleep.c	2004-06-01 19:54:43.000000000 +0200
@@ -114,7 +114,6 @@
 	acpi_wakeup_address = (unsigned long)alloc_bootmem_low(PAGE_SIZE);
 	if ((&wakeup_end - &wakeup_start) > PAGE_SIZE)
 		printk(KERN_CRIT "ACPI: Wakeup code way too big, will crash on attempt to suspend\n");
-	printk(KERN_DEBUG "ACPI: have wakeup address 0x%8.8lx\n", acpi_wakeup_address);
 }
 
 static int __init acpi_sleep_setup(char *str)
diff -u linux/arch/x86_64/kernel/mpparse.c-o linux/arch/x86_64/kernel/mpparse.c
--- linux/arch/x86_64/kernel/mpparse.c-o	2004-06-01 19:53:51.000000000 +0200
+++ linux/arch/x86_64/kernel/mpparse.c	2004-06-01 19:53:54.000000000 +0200
@@ -572,6 +572,7 @@
 
 static int __init smp_scan_config (unsigned long base, unsigned long length)
 {
+	static int printed;
 	extern void __bad_mpf_size(void); 
 	unsigned int *bp = phys_to_virt(base);
 	struct intel_mp_floating *mpf;
@@ -598,7 +599,10 @@
 		bp += 4;
 		length -= 16;
 	}
-	printk(KERN_INFO "No mptable found.\n");
+	if (!printed) {
+		printk(KERN_INFO "No mptable found.\n");
+		printed = 1;
+	}
 	return 0;
 }
 
diff -u linux/arch/x86_64/mm/numa.c-o linux/arch/x86_64/mm/numa.c
--- linux/arch/x86_64/mm/numa.c-o	2004-06-01 19:52:30.000000000 +0200
+++ linux/arch/x86_64/mm/numa.c	2004-06-01 19:53:43.000000000 +0200
@@ -124,7 +124,7 @@
 	start_pfn = node_start_pfn(nodeid);
 	end_pfn = node_end_pfn(nodeid);
 
-	printk(KERN_INFO "setting up node %d %lx-%lx\n", nodeid, start_pfn, end_pfn); 
+	Dprintk(KERN_INFO "setting up node %d %lx-%lx\n", nodeid, start_pfn, end_pfn); 
 	
 	/* All nodes > 0 have a zero length zone DMA */ 
 	dma_end_pfn = __pa(MAX_DMA_ADDRESS) >> PAGE_SHIFT; 
