Subject: Exports to enable clock driver modules
From: BK
Patch-mainline: yes
Acked-by: schwab@suse.de

# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2005/03/28 19:56:15-08:00 clameter@sgi.com 
#   [PATCH] Exports to enable clock driver modules
#   
#   The following exports are necessary to allow loadable modules to define new
#   clocks.  Without these the mmtimer driver cannot be build correctly as a
#   module (there is another mmtimer specific fix necessary to get it to build
#   properly but that will be a separate patch):
#   
#   Signed-off-by: Christoph Lameter <clameter@sgi.com>
#   Signed-off-by: Andrew Morton <akpm@osdl.org>
#   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
# 
# kernel/posix-timers.c
#   2005/03/28 14:42:46-08:00 clameter@sgi.com +6 -1
#   Exports to enable clock driver modules
# 
# kernel/time.c
#   2005/03/28 14:21:37-08:00 clameter@sgi.com +2 -0
#   Exports to enable clock driver modules
# 
diff -Naru a/kernel/posix-timers.c b/kernel/posix-timers.c
--- a/kernel/posix-timers.c	2005-05-06 12:15:47 -07:00
+++ b/kernel/posix-timers.c	2005-05-06 12:15:47 -07:00
@@ -46,6 +46,7 @@
 #include <linux/syscalls.h>
 #include <linux/wait.h>
 #include <linux/workqueue.h>
+#include <linux/module.h>
 
 #ifndef div_long_long_rem
 #include <asm/div64.h>
@@ -460,6 +461,7 @@
 			timr->it_process);
 	}
 }
+EXPORT_SYMBOL_GPL(posix_timer_event);
 
 /*
  * This function gets called when a POSIX.1b interval timer expires.  It
@@ -555,6 +557,7 @@
 	}
 	posix_clocks[clock_id] = *new_clock;
 }
+EXPORT_SYMBOL_GPL(register_posix_clock);
 
 static struct k_itimer * alloc_posix_timer(void)
 {
@@ -1251,11 +1254,13 @@
 {
 	return -EINVAL;
 }
+EXPORT_SYMBOL_GPL(do_posix_clock_nosettime);
 
 int do_posix_clock_notimer_create(struct k_itimer *timer)
 {
 	return -EINVAL;
 }
+EXPORT_SYMBOL_GPL(do_posix_clock_notimer_create);
 
 int do_posix_clock_nonanosleep(int which_clock, int flags, struct timespec *t)
 {
@@ -1265,6 +1270,7 @@
 	return -ENOTSUP;
 #endif
 }
+EXPORT_SYMBOL_GPL(do_posix_clock_nonanosleep);
 
 asmlinkage long
 sys_clock_settime(clockid_t which_clock, const struct timespec __user *tp)
diff -Naru a/kernel/time.c b/kernel/time.c
--- a/kernel/time.c	2005-05-06 12:15:47 -07:00
+++ b/kernel/time.c	2005-05-06 12:15:47 -07:00
@@ -34,6 +34,7 @@
 #include <linux/syscalls.h>
 #include <linux/security.h>
 #include <linux/fs.h>
+#include <linux/module.h>
 
 #include <asm/uaccess.h>
 #include <asm/unistd.h>
@@ -503,6 +504,7 @@
 	tv->tv_sec = sec;
 	tv->tv_nsec = nsec;
 }
+EXPORT_SYMBOL_GPL(getnstimeofday);
 
 int do_settimeofday (struct timespec *tv)
 {
--- linux-2.6.11/arch/ia64/sn/kernel/setup.c.~1~	2005-03-02 08:37:50.000000000 +0100
+++ linux-2.6.11/arch/ia64/sn/kernel/setup.c	2005-05-06 22:33:21.306597290 +0200
@@ -53,6 +53,7 @@
 
 
 DEFINE_PER_CPU(struct pda_s, pda_percpu);
+EXPORT_PER_CPU_SYMBOL(pda_percpu);
 
 #define MAX_PHYS_MEMORY		(1UL << 49)	/* 1 TB */
 
