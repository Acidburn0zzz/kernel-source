# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2004/09/14 07:48:01-07:00 ak@suse.de 
#   [PATCH] Add prctl to modify current->comm
#   
#   This patch adds a prctl to modify current->comm as shown in /proc.  This
#   feature was requested by KDE developers.  In KDE most programs are started by
#   forking from a kdeinit program that already has the libraries loaded and some
#   other state.
#   
#   Problem is to give these forked programs the proper name.  It already writes
#   the command line in the environment (as seen in ps), but top uses a different
#   field in /proc/pid/status that reports current->comm.  And that was always
#   "kdeinit" instead of the real command name.  So you ended up with lots of
#   kdeinits in your top listing, which was not very useful.
#   
#   This patch adds a new prctl PR_SET_NAME to allow a program to change its comm
#   field.
#   
#   I considered the potential security issues of a program obscuring itself with
#   this interface, but I don't think it matters much because a program can
#   already obscure itself when the admin uses ps instead of top.  In case of a
#   KDE desktop calling everything kdeinit is much more obfuscation than the
#   alternative.
#   
#   Signed-off-by: Andrew Morton <akpm@osdl.org>
#   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
# 
# include/linux/prctl.h
#   2004/09/13 17:23:21-07:00 ak@suse.de +2 -0
#   Add prctl to modify current->comm
# 
# kernel/sys.c
#   2004/09/13 17:23:21-07:00 ak@suse.de +11 -0
#   Add prctl to modify current->comm
# 
diff -Nru a/include/linux/prctl.h b/include/linux/prctl.h
--- a/include/linux/prctl.h	2004-09-18 01:03:15 -07:00
+++ b/include/linux/prctl.h	2004-09-18 01:03:15 -07:00
@@ -50,4 +50,6 @@
                                                    process timing */
 
 
+#define PR_SET_NAME    15		/* Set process name */
+
 #endif /* _LINUX_PRCTL_H */
diff -Nru a/kernel/sys.c b/kernel/sys.c
--- a/kernel/sys.c	2004-09-18 01:03:15 -07:00
+++ b/kernel/sys.c	2004-09-18 01:03:15 -07:00
@@ -1729,6 +1729,17 @@
 			}
 			current->keep_capabilities = arg2;
 			break;
+		case PR_SET_NAME: {
+			struct task_struct *me = current;
+			unsigned char ncomm[sizeof(me->comm)];
+
+			ncomm[sizeof(me->comm)-1] = 0;
+			if (strncpy_from_user(ncomm, (char *)arg2,
+						sizeof(me->comm)-1) < 0)
+				return -EFAULT;
+			set_task_comm(me, ncomm);
+			return 0;
+		}
 		default:
 			error = -EINVAL;
 			break;
