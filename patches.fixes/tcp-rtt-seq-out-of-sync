Date: Wed, 18 Aug 2004 19:08:11 -0700
From: Prasanna Meda <pmeda@akamai.com>
To: netdev@oss.sgi.com
Cc: davem@redhat.com, linux-kernel@vger.kernel.org
Subject: srtt and rtt_seq out of sync


   tcp_init_metrics initialises srtt from route cache.
   tcp_rtt_estimator has an assumption that
   whenerver srtt is set, rtt_seq is set.
   Invariant assumed  before(rtt_seq,snd_nxt) is
   not true most of the time while initailising from
   cache, so rttvar will  not be calcualted for this
   socket,  rto will be wrong for long time.
   The condition after(send_una, rtt_seq=0) is
   correct 50% of the time of random send_una.
   mdev check also resets the rttvar, but it will be
   slower.

===== net/ipv4/tcp_input.c 1.69 vs edited =====
Index: linux-2.6.5/net/ipv4/tcp_input.c
===================================================================
--- linux-2.6.5.orig/net/ipv4/tcp_input.c
+++ linux-2.6.5/net/ipv4/tcp_input.c
@@ -658,8 +658,10 @@ static void tcp_init_metrics(struct sock
 	 * to low value, and then abruptly stops to do it and starts to delay
 	 * ACKs, wait for troubles.
 	 */
-	if (dst_metric(dst, RTAX_RTT) > tp->srtt)
+       if (dst_metric(dst, RTAX_RTT) > tp->srtt) {
 		tp->srtt = dst_metric(dst, RTAX_RTT);
+               tp->rtt_seq = tp->snd_nxt;
+       }
 	if (dst_metric(dst, RTAX_RTTVAR) > tp->mdev) {
 		tp->mdev = dst_metric(dst, RTAX_RTTVAR);
 		tp->mdev_max = tp->rttvar = max(tp->mdev, TCP_RTO_MIN);
