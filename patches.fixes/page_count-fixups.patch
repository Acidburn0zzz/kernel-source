diff -u linux/drivers/char/drm/ati_pcigart.h-PC linux/drivers/char/drm/ati_pcigart.h
--- linux/drivers/char/drm/ati_pcigart.h-PC	2004-03-21 21:11:50.000000000 +0100
+++ linux/drivers/char/drm/ati_pcigart.h	2004-05-27 13:52:40.000000000 +0200
@@ -67,7 +67,7 @@
 	page = virt_to_page( address );
 
 	for ( i = 0 ; i < ATI_PCIGART_TABLE_PAGES ; i++, page++ ) {
-		atomic_inc( &page->count );
+		get_page(page);
 		SetPageReserved( page );
 	}
 
@@ -84,7 +84,7 @@
 	page = virt_to_page( address );
 
 	for ( i = 0 ; i < ATI_PCIGART_TABLE_PAGES ; i++, page++ ) {
-		atomic_dec( &page->count );
+		__put_page(page);
 		ClearPageReserved( page );
 	}
 
diff -u linux/drivers/char/drm/drm_vm.h-PC linux/drivers/char/drm/drm_vm.h
--- linux/drivers/char/drm/drm_vm.h-PC	2004-03-21 21:11:50.000000000 +0100
+++ linux/drivers/char/drm/drm_vm.h	2004-05-27 13:52:40.000000000 +0200
@@ -131,7 +131,7 @@
 
 		DRM_DEBUG("baddr = 0x%lx page = 0x%p, offset = 0x%lx, count=%d\n",
 			  baddr, __va(agpmem->memory->memory[offset]), offset,
-			  atomic_read(&page->count));
+			  page_count(page));
 
 		if (type)
 			*type = VM_FAULT_MINOR;
diff -u linux/drivers/scsi/sg.c-PC linux/drivers/scsi/sg.c
--- linux/drivers/scsi/sg.c-PC	2004-05-27 13:51:44.000000000 +0200
+++ linux/drivers/scsi/sg.c	2004-05-27 13:52:40.000000000 +0200
@@ -1113,10 +1113,10 @@
 				page_ptr = sg_scatg2virt(sclp) + m;
 				page = virt_to_page(page_ptr);
 				if (startFinish)
-					atomic_inc(&page->count);
+					get_page(page);
 				else {
 					if (page_count(page) > 0)
-						atomic_dec(&page->count);
+						__put_page(page);
 				}
 			}
 		}
@@ -1125,10 +1125,10 @@
 			page_ptr = (unsigned char *) rsv_schp->buffer + m;
 			page = virt_to_page(page_ptr);
 			if (startFinish)
-				atomic_inc(&page->count);
+				get_page(page);
 			else {
 				if (page_count(page) > 0)
-					atomic_dec(&page->count);
+					__put_page(page);
 			}
 		}
 	}
diff -u linux/arch/i386/mm/pageattr.c-PC linux/arch/i386/mm/pageattr.c
--- linux/arch/i386/mm/pageattr.c-PC	2004-05-27 13:51:52.000000000 +0200
+++ linux/arch/i386/mm/pageattr.c	2004-05-27 13:52:40.000000000 +0200
@@ -118,20 +118,20 @@
 			pte_t standard = mk_pte(page, PAGE_KERNEL); 
 			set_pte_atomic(kpte, mk_pte(page, prot)); 
 			if (pte_same(old,standard))
-				atomic_inc(&kpte_page->count);
+				get_page(kpte_page);
 		} else {
 			struct page *split = split_large_page(address, prot); 
 			if (!split)
 				return -ENOMEM;
-			atomic_inc(&kpte_page->count);
+			get_page(kpte_page);
 			set_pmd_pte(kpte,address,mk_pte(split, PAGE_KERNEL));
 		}	
 	} else if ((pte_val(*kpte) & _PAGE_PSE) == 0) { 
 		set_pte_atomic(kpte, mk_pte(page, PAGE_KERNEL));
-		atomic_dec(&kpte_page->count); 
+		__put_page(kpte_page);
 	}
 
-	if (cpu_has_pse && (atomic_read(&kpte_page->count) == 1)) { 
+	if (cpu_has_pse && (page_count(kpte_page) == 1)) {
 		list_add(&kpte_page->lru, &df_list);
 		revert_page(kpte_page, address);
 	} 
diff -u linux/arch/sparc/mm/init.c-PC linux/arch/sparc/mm/init.c
--- linux/arch/sparc/mm/init.c-PC	2004-04-06 13:12:04.000000000 +0200
+++ linux/arch/sparc/mm/init.c	2004-05-27 13:52:40.000000000 +0200
@@ -389,7 +389,7 @@
 
 		ClearPageReserved(page);
 		set_bit(PG_highmem, &page->flags);
-		atomic_set(&page->count, 1);
+		set_page_count(page, 1);
 		__free_page(page);
 		totalhigh_pages++;
 	}
diff -u linux/arch/ppc/mm/init.c-PC linux/arch/ppc/mm/init.c
--- linux/arch/ppc/mm/init.c-PC	2004-03-21 21:12:06.000000000 +0100
+++ linux/arch/ppc/mm/init.c	2004-05-27 13:52:40.000000000 +0200
@@ -458,7 +458,7 @@
 
 			ClearPageReserved(page);
 			set_bit(PG_highmem, &page->flags);
-			atomic_set(&page->count, 1);
+			set_page_count(page, 1);
 			__free_page(page);
 			totalhigh_pages++;
 		}
diff -u linux/arch/um/kernel/mem.c-PC linux/arch/um/kernel/mem.c
--- linux/arch/um/kernel/mem.c-PC	2004-05-27 13:51:28.000000000 +0200
+++ linux/arch/um/kernel/mem.c	2004-05-27 13:52:40.000000000 +0200
@@ -56,7 +56,7 @@
 		page = &mem_map[highmem_pfn + i];
 		ClearPageReserved(page);
 		set_bit(PG_highmem, &page->flags);
-		atomic_set(&page->count, 1);
+		set_page_count(page, 1);
 		__free_page(page);
 	}
 }
diff -u linux/arch/mips/mm/init.c-PC linux/arch/mips/mm/init.c
--- linux/arch/mips/mm/init.c-PC	1970-01-01 01:12:51.000000000 +0100
+++ linux/arch/mips/mm/init.c	2004-05-27 13:52:40.000000000 +0200
@@ -235,7 +235,7 @@
 		}
 		ClearPageReserved(page);
 		set_bit(PG_highmem, &page->flags);
-		atomic_set(&page->count, 1);
+		set_page_count(page, 1);
 		__free_page(page);
 		totalhigh_pages++;
 	}
diff -u linux/arch/x86_64/mm/pageattr.c-PC linux/arch/x86_64/mm/pageattr.c
--- linux/arch/x86_64/mm/pageattr.c-PC	2004-03-21 21:12:10.000000000 +0100
+++ linux/arch/x86_64/mm/pageattr.c	2004-05-27 13:53:46.000000000 +0200
@@ -126,20 +126,20 @@
 
 			set_pte(kpte, mk_pte(page, prot)); 
 			if (pte_same(old,standard))
-				atomic_inc(&kpte_page->count);
+				get_page(kpte_page);
 		} else {
 			struct page *split = split_large_page(address, prot); 
 			if (!split)
 				return -ENOMEM;
-			atomic_inc(&kpte_page->count);
+			get_page(kpte_page);
 			set_pte(kpte,mk_pte(split, PAGE_KERNEL));
 		}	
 	} else if ((kpte_flags & _PAGE_PSE) == 0) { 
 		set_pte(kpte, mk_pte(page, PAGE_KERNEL));
-		atomic_dec(&kpte_page->count); 
+		__put_page(kpte_page);
 	}
 
-	if (atomic_read(&kpte_page->count) == 1) { 
+	if (page_count(kpte_page) == 1) { 
 		save_page(address, kpte_page); 		     
 		revert_page(kpte_page, address);
 	} 
--- linux-2.6.5/arch/alpha/mm/init.c	2004-04-04 05:38:14.000000000 +0200
+++ linux-2.6.5.AXP/arch/alpha/mm/init.c	2004-07-09 10:43:25.000000000 +0200
@@ -117,7 +117,7 @@ show_mem(void)
 		else if (!page_count(mem_map+i))
 			free++;
 		else
-			shared += atomic_read(&mem_map[i].count) - 1;
+			shared += page_count(mem_map+i) - 1;
 	}
 	printk("%ld pages of RAM\n",total);
 	printk("%ld free pages\n",free);
