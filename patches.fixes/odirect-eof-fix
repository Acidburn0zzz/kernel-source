--- linux-2.6.5/fs/direct-io.c~	2004-11-03 08:47:03.487161290 +0100
+++ linux-2.6.5/fs/direct-io.c	2004-11-03 08:47:35.727702558 +0100
@@ -919,6 +919,8 @@
 	ssize_t ret = 0;
 	ssize_t ret2;
 	size_t bytes;
+	size_t bytes_todo;
+	loff_t isize;
 	int enotblk = 0;
 
 	dio->bio = NULL;
@@ -959,12 +961,29 @@
 	dio->waiter = NULL;
 
 	dio->pages_in_io = 0;
-	for (seg = 0; seg < nr_segs; seg++) 
+	bytes_todo = 0;
+	for (seg = 0; seg < nr_segs; seg++) {
 		dio->pages_in_io += (iov[seg].iov_len >> blkbits) + 2; 
+		bytes_todo += iov[seg].iov_len;
+	}
+
+	isize = i_size_read(inode);
+	if (bytes_todo > (isize - offset)) {
+		if ((isize - offset))
+			bytes_todo = isize - offset;
+		else if (bytes_todo > PAGE_SIZE)
+			bytes_todo = PAGE_SIZE;
+	}
+
+	for (seg = 0; seg < nr_segs && bytes_todo; seg++) {
+		size_t bytes_done;
 
-	for (seg = 0; seg < nr_segs; seg++) {
 		user_addr = (unsigned long)iov[seg].iov_base;
-		dio->size += bytes = iov[seg].iov_len;
+		bytes = iov[seg].iov_len;
+		if (bytes > bytes_todo)
+			bytes = bytes_todo;
+		bytes_todo -= bytes;
+		dio->size += bytes;
 
 		/* Index into the first page of the first block */
 		dio->first_block_in_page = (user_addr & ~PAGE_MASK) >> blkbits;
@@ -976,16 +995,19 @@
 		dio->curr_page = 0;
 
 		dio->total_pages = 0;
+		bytes_done = bytes;
 		if (user_addr & (PAGE_SIZE-1)) {
 			dio->total_pages++;
+			bytes_done = bytes;
 			bytes -= PAGE_SIZE - (user_addr & (PAGE_SIZE - 1));
 		}
+
 		dio->total_pages += (bytes + PAGE_SIZE - 1) / PAGE_SIZE;
 		dio->curr_user_address = user_addr;
 	
 		ret = do_direct_IO(dio);
 
-		dio->result += iov[seg].iov_len -
+		dio->result += bytes_done -
 			((dio->final_block_in_request - dio->block_in_file) <<
 					blkbits);
 
