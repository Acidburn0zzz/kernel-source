From: Neil Brown <neilb@suse.de>
Subject: Fix possible data corruption when bitmap based raid1 resync is aborted
Patch-mainline: 2.6.17
References: 188411

There is a problem with the bitmap handling when a resync is aborted. Too many
bits (i.e., those corresponding to sectors that were not successfully synced)
are getting cleared. This causes the blocks of data represented by those bits
not to be synced in subsequent resyncs, which causes data corruption. This
problem is fairly unlikely to happen in persistent superblock arrays, but can
be very common with non-persistent superblock arrays.


Acked-by: Neil Brown <neilb@suse.de>
Signed-off-by: Neil Brown <neilb@suse.de>

diff ./drivers/md/raid1.c~current~ ./drivers/md/raid1.c
Index: linux-2.6.16/drivers/md/raid1.c
===================================================================
--- linux-2.6.16.orig/drivers/md/raid1.c	2006-06-27 08:55:19.000000000 +1000
+++ linux-2.6.16/drivers/md/raid1.c	2006-06-27 09:03:34.000000000 +1000
@@ -1142,8 +1142,19 @@
 			mirror = i;
 			break;
 		}
-	if (!uptodate)
+	if (!uptodate) {
+		int sync_blocks = 0;
+		sector_t s = r1_bio->sector;
+		long sectors_to_go = r1_bio->sectors;
+		/* make sure these bits doesn't get cleared. */
+		do {
+			bitmap_end_sync(mddev->bitmap, s,
+					&sync_blocks, 1);
+			s += sync_blocks;
+			sectors_to_go -= sync_blocks;
+		} while (sectors_to_go > 0);
 		md_error(mddev, conf->mirrors[mirror].rdev);
+	}
 
 	update_head_pos(mirror, r1_bio);
 
