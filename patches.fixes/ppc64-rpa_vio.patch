diff -uprN -X dontdiff linux-2.6.5-7.61/drivers/pci/hotplug/rpadlpar_core.c linux-2.6.5-7.61/drivers/pci/hotplug/rpadlpar_core.c
--- linux-2.6.5-7.61/drivers/pci/hotplug/rpadlpar_core.c	2004-05-30 14:21:19.000000000 -0500
+++ linux-2.6.5-7.61/drivers/pci/hotplug/rpadlpar_core.c	2004-05-30 13:04:55.000000000 -0500
@@ -48,7 +48,7 @@ static struct device_node *find_php_slot
 	for (child = of_get_next_child(parent, NULL);	
 	     child; child = of_get_next_child(parent, child)) {
 		loc_code = get_property(child, "ibm,loc-code", NULL);
-		if (loc_code && !strcmp(loc_code, drc_name))
+		if (loc_code && !strncmp(loc_code, drc_name, strlen(drc_name)))
 			return child;
 	}
 
diff -uprN -X dontdiff linux-2.6.5-7.61/drivers/pci/hotplug/rpaphp_vio.c linux-2.6.5-7.61/drivers/pci/hotplug/rpaphp_vio.c
--- linux-2.6.5-7.61/drivers/pci/hotplug/rpaphp_vio.c	2004-05-30 14:21:19.000000000 -0500
+++ linux-2.6.5-7.61/drivers/pci/hotplug/rpaphp_vio.c	2004-05-30 14:31:34.000000000 -0500
@@ -67,6 +67,31 @@ static int setup_vio_hotplug_slot_info(s
 	return 0;
 }
 
+static char *get_my_drc_name(struct device_node *dn, u32 my_drc_index)
+{
+        char *name, *ptr = NULL;
+        int *drc_names, *drc_indexes, i;
+	struct device_node *parent = dn->parent;	
+	
+	if (!parent)
+		return ptr;
+	
+        drc_names = (int *) get_property(parent, "ibm,drc-names", NULL);
+        drc_indexes = (int *) get_property(parent, "ibm,drc-indexes", NULL);
+        if (!drc_names || !drc_indexes)
+		return ptr;
+
+	name = (char *) &drc_names[1];
+	for (i = 0; i < drc_indexes[0]; i++, name += (strlen(name) + 1)) {
+		if (drc_indexes[i + 1] == my_drc_index) {
+                	ptr = (char *) name;
+			break;
+		}
+	}
+
+        return ptr;
+}
+
 int register_vio_slot(struct device_node *dn)
 {
 	u32 *index;
@@ -77,7 +102,7 @@ int register_vio_slot(struct device_node
 	index = (u32 *) get_property(dn, "ibm,my-drc-index", NULL);
 	if (!index)
 		goto exit_rc;
-	name = get_property(dn, "ibm,loc-code", NULL);
+	name = get_my_drc_name(dn, *index);
 	if (!name)
 		goto exit_rc;
 	if (!(slot = alloc_slot_struct(dn, *index, name, 0))) {
