From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] dup2: Fix return value with oldfd == newfd and invalid fd
Patch-mainline: probably 2.6.30
References: bnc#498042

 The return value of dup2 when oldfd == newfd and the fd isn't valid is not
 getting properly sign extended. We end up with 4294967287 instead of -EBADF.

 I've reproduced this on SLE11 (2.6.27.21), openSUSE Factory (2.6.29-rc5),
 and Ubuntu 9.04 (2.6.28).

 This patch uses a signed int for the error value so it is properly extended.

 Commit 6c5d0512a091480c9f981162227fdb1c9d70e555 introduced this regression.

Reported-by: Jiri Dluhos <jdluhos@novell.com>
Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 fs/fcntl.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/fs/fcntl.c
+++ b/fs/fcntl.c
@@ -117,11 +117,12 @@ SYSCALL_DEFINE2(dup2, unsigned int, oldf
 {
 	if (unlikely(newfd == oldfd)) { /* corner case */
 		struct files_struct *files = current->files;
+		int retval = oldfd;
 		rcu_read_lock();
 		if (!fcheck_files(files, oldfd))
-			oldfd = -EBADF;
+			retval = -EBADF;
 		rcu_read_unlock();
-		return oldfd;
+		return retval;
 	}
 	return sys_dup3(oldfd, newfd, 0);
 }
