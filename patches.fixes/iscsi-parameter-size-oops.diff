From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] iscsi: invalid parameter size should return error, not BUG()
References: 174404
Patch-mainline: obsolete (a54a52caad4bd6166cb7fa64e4e93031fa2fda5d)

 If the kernel iSCSI implementation and the corresponding userspace package
 are out of sync, invalid parameters may be passed to the kernel.

 The iSCSI transport code currently BUG()s when this happens, when returning
 an error would be sufficient.

 Userspace should not be able to panic the kernel.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

--
 
 drivers/scsi/scsi_transport_iscsi.c |   23 ++++++++++++++++-------
 1 file changed, 16 insertions(+), 7 deletions(-)

diff -ruNpX dontdiff linux-2.6.16.snd/drivers/scsi/scsi_transport_iscsi.c linux-2.6.16/drivers/scsi/scsi_transport_iscsi.c
--- linux-2.6.16.snd/drivers/scsi/scsi_transport_iscsi.c	2006-05-03 12:02:39.000000000 -0400
+++ linux-2.6.16/drivers/scsi/scsi_transport_iscsi.c	2006-05-10 07:55:11.000000000 -0400
@@ -862,13 +862,18 @@ iscsi_if_destroy_conn(struct iscsi_trans
 	return 0;
 }
 
-static void
+static int
 iscsi_copy_param(struct iscsi_uevent *ev, uint32_t *value, char *data)
 {
-	if (ev->u.set_param.len != sizeof(uint32_t))
-		BUG();
+	if (ev->u.set_param.len != sizeof(uint32_t)) {
+		printk (KERN_NOTICE "%s: invalid parameter size %u, "
+		        "should be %lu\n", __FUNCTION__, ev->u.set_param.len,
+		        sizeof(uint32_t));
+		return -EINVAL;
+	}
 	memcpy(value, data, min_t(uint32_t, sizeof(uint32_t),
 		ev->u.set_param.len));
+	return 0;
 }
 
 static int
@@ -887,7 +892,8 @@ iscsi_set_param(struct iscsi_transport *
 
 	switch (ev->u.set_param.param) {
 	case ISCSI_PARAM_SESS_RECOVERY_TMO:
-		iscsi_copy_param(ev, &value, data);
+		if ((err = iscsi_copy_param(ev, &value, data)))
+			return err;
 		if (value != 0)
 			session->recovery_tmo = value;
 		break;
@@ -901,11 +908,13 @@ iscsi_set_param(struct iscsi_transport *
 			return -ENOMEM;
 		break;
 	case ISCSI_PARAM_TPGT:
-		iscsi_copy_param(ev, &value, data);
+		if ((err = iscsi_copy_param(ev, &value, data)))
+			return err;
 		session->tpgt = value;
 		break;
 	case ISCSI_PARAM_PERSISTENT_PORT:
-		iscsi_copy_param(ev, &value, data);
+		if ((err = iscsi_copy_param(ev, &value, data)))
+			return err;
 		conn->persistent_port = value;
 		break;
 	case ISCSI_PARAM_PERSISTENT_ADDRESS:
@@ -921,7 +932,8 @@ iscsi_set_param(struct iscsi_transport *
 			return -ENOMEM;
 		break;
 	default:
-		iscsi_copy_param(ev, &value, data);
+		if ((err = iscsi_copy_param(ev, &value, data)))
+			return err;
 		err = transport->set_param(conn, ev->u.set_param.param, value);
 	}
 
