diff -urNp --exclude CVS --exclude BitKeeper --exclude {arch} --exclude .arch-ids sles-ref/include/linux/mmzone.h sles/include/linux/mmzone.h
--- sles-ref/include/linux/mmzone.h	2004-10-27 03:39:48.806818088 +0200
+++ sles/include/linux/mmzone.h	2004-10-27 03:37:44.234755920 +0200
@@ -273,7 +273,7 @@ void __get_zone_counts(unsigned long *ac
 void get_zone_counts(unsigned long *active, unsigned long *inactive,
 			unsigned long *free);
 void build_all_zonelists(void);
-void wakeup_kswapd(struct zone *zone);
+void wakeup_kswapd(struct zone *zone, int classzone_idx);
 
 /*
  * zone_idx() returns 0 for the ZONE_DMA zone, 1 for the ZONE_NORMAL zone, etc.
diff -urNp --exclude CVS --exclude BitKeeper --exclude {arch} --exclude .arch-ids sles-ref/mm/page_alloc.c sles/mm/page_alloc.c
--- sles-ref/mm/page_alloc.c	2004-10-27 03:39:48.817816416 +0200
+++ sles/mm/page_alloc.c	2004-10-27 03:37:44.238755312 +0200
@@ -737,7 +737,7 @@ __alloc_pages(unsigned int gfp_mask, uns
 	}
 
 	for (i = 0; (z = zones[i]) != NULL; i++)
-		wakeup_kswapd(z);
+		wakeup_kswapd(z, classzone_idx);
 
 	/*
 	 * Go through the zonelist again. Let __GFP_HIGH and allocations
diff -urNp --exclude CVS --exclude BitKeeper --exclude {arch} --exclude .arch-ids sles-ref/mm/vmscan.c sles/mm/vmscan.c
--- sles-ref/mm/vmscan.c	2004-10-27 03:39:43.335649832 +0200
+++ sles/mm/vmscan.c	2004-10-27 03:38:35.208006808 +0200
@@ -1145,9 +1145,11 @@ int kswapd(void *p)
 /*
  * A zone is low on free memory, so wake its kswapd task to service it.
  */
-void wakeup_kswapd(struct zone *zone)
+void wakeup_kswapd(struct zone *zone, int classzone_idx)
 {
-	if (zone->free_pages > zone->pages_low)
+	if (zone->present_pages == 0)
+		return;
+	if (zone->free_pages > zone->pages_low + zone->lowmem_reserve[classzone_idx])
 		return;
 	if (!waitqueue_active(&zone->zone_pgdat->kswapd_wait))
 		return;
