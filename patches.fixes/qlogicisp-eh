garloff@suse.de

Bugfix

Minimal fix to allow exception handling with qlogicisp.

--- linux-2.6.5/drivers/scsi/qlogicisp.h.orig	2004-04-04 05:36:13.000000000 +0200
+++ linux-2.6.5/drivers/scsi/qlogicisp.h	2004-05-11 08:49:17.339970940 +0200
@@ -63,7 +63,7 @@ int isp1020_release(struct Scsi_Host *);
 const char * isp1020_info(struct Scsi_Host *);
 int isp1020_queuecommand(Scsi_Cmnd *, void (* done)(Scsi_Cmnd *));
 int isp1020_abort(Scsi_Cmnd *);
-int isp1020_reset(Scsi_Cmnd *, unsigned int);
+int isp1020_reset(Scsi_Cmnd *);
 int isp1020_biosparam(struct scsi_device *, struct block_device *,
 		sector_t, int[]);
 #endif /* _QLOGICISP_H */
--- linux-2.6.5/drivers/scsi/qlogicisp.c.orig	2004-04-04 05:38:22.000000000 +0200
+++ linux-2.6.5/drivers/scsi/qlogicisp.c	2004-05-11 08:54:50.501143895 +0200
@@ -1202,7 +1202,7 @@ int isp1020_abort(Scsi_Cmnd *Cmnd)
 }
 
 
-int isp1020_reset(Scsi_Cmnd *Cmnd, unsigned int reset_flags)
+int isp1020_reset(Scsi_Cmnd *Cmnd)
 {
 	u_short param[6];
 	struct Scsi_Host *host;
@@ -1985,6 +1985,8 @@ static Scsi_Host_Template driver_templat
 	.release		= isp1020_release,
 	.info			= isp1020_info,	
 	.queuecommand		= isp1020_queuecommand,
+	.eh_abort_handler	= isp1020_abort,
+	.eh_bus_reset_handler	= isp1020_reset,
 	.bios_param		= isp1020_biosparam,
 	.can_queue		= QLOGICISP_REQ_QUEUE_LEN,
 	.this_id		= -1,
