diff -purNbBw linux-2.6.5-rc2/drivers/usb/core/config.c linux-2.6.5-rc2/drivers/usb/core/config.c
--- linux-2.6.5-rc2/drivers/usb/core/config.c	2004-03-24 15:08:27.000000000 +0100
+++ linux-2.6.5-rc2/drivers/usb/core/config.c	2004-03-24 15:09:51.000000000 +0100
@@ -72,10 +72,13 @@ static int usb_parse_endpoint(struct usb
 	return buffer - buffer0;
 }
 
-static void usb_free_intf(struct usb_interface *intf)
+static void usb_release_intf(struct device *dev)
 {
+	struct usb_interface *intf;
 	int j;
 
+	intf = to_usb_interface(dev);
+
 	if (intf->altsetting) {
 		for (j = 0; j < intf->num_altsetting; j++) {
 			struct usb_host_interface *as = &intf->altsetting[j];
@@ -232,6 +235,8 @@ int usb_parse_configuration(struct usb_h
 			return -ENOMEM;
 		}
 		memset(interface, 0, sizeof(struct usb_interface));
+		interface->dev.release = usb_release_intf;
+		device_initialize(&interface->dev);
 	}
 
 	/* Go through the descriptors, checking their length and counting the
@@ -369,7 +374,7 @@ void usb_destroy_configuration(struct us
 			struct usb_interface *ifp = cf->interface[i];
 
 			if (ifp)
-				usb_free_intf(ifp);
+				put_device(&ifp->dev);
 		}
 	}
 	kfree(dev->config);
diff -purNbBw linux-2.6.5-rc2/drivers/usb/core/message.c linux-2.6.5-rc2/drivers/usb/core/message.c
--- linux-2.6.5-rc2/drivers/usb/core/message.c	2004-03-24 15:08:27.000000000 +0100
+++ linux-2.6.5-rc2/drivers/usb/core/message.c	2004-03-24 15:09:51.000000000 +0100
@@ -792,13 +792,6 @@ void usb_disable_interface(struct usb_de
 	}
 }
 
-static void release_interface(struct device *dev)
-{
-	struct usb_interface *interface = to_usb_interface(dev);
-
-	complete(interface->released);
-}
-
 /*
  * usb_disable_device - Disable all the endpoints for a USB device
  * @dev: the device whose endpoints are being disabled
@@ -828,16 +821,12 @@ void usb_disable_device(struct usb_devic
 	if (dev->actconfig) {
 		for (i = 0; i < dev->actconfig->desc.bNumInterfaces; i++) {
 			struct usb_interface	*interface;
-			struct completion	intf_completion;
 
 			/* remove this interface */
 			interface = dev->actconfig->interface[i];
 			dev_dbg (&dev->dev, "unregistering interface %s\n",
 				interface->dev.bus_id);
-			init_completion (&intf_completion);
-			interface->released = &intf_completion;
-			device_unregister (&interface->dev);
-			wait_for_completion (&intf_completion);
+			device_del(&interface->dev);
 		}
 		dev->actconfig = 0;
 		if (dev->state == USB_STATE_CONFIGURED)
@@ -1173,7 +1162,6 @@ int usb_set_configuration(struct usb_dev
 			intf->dev.driver = NULL;
 			intf->dev.bus = &usb_bus_type;
 			intf->dev.dma_mask = dev->dev.dma_mask;
-			intf->dev.release = release_interface;
 			sprintf (&intf->dev.bus_id[0], "%d-%s:%d.%d",
 				 dev->bus->busnum, dev->devpath,
 				 configuration,
@@ -1182,7 +1170,7 @@ int usb_set_configuration(struct usb_dev
 				"registering %s (config #%d, interface %d)\n",
 				intf->dev.bus_id, configuration,
 				alt->desc.bInterfaceNumber);
-			device_register (&intf->dev);
+			device_add (&intf->dev);
 			usb_create_driverfs_intf_files (intf);
 		}
 	}
diff -purNbBw linux-2.6.5-rc2/include/linux/usb.h linux-2.6.5-rc2/include/linux/usb.h
--- linux-2.6.5-rc2/include/linux/usb.h	2004-03-24 15:08:27.000000000 +0100
+++ linux-2.6.5-rc2/include/linux/usb.h	2004-03-24 15:09:51.000000000 +0100
@@ -86,8 +86,6 @@ struct usb_host_interface {
  *	number from the USB core by calling usb_register_dev().
  * @dev: driver model's view of this device
  * @class_dev: driver model's class view of this device.
- * @released: wait for the interface to be released when changing
- *	configurations.
  *
  * USB device drivers attach to interfaces on a physical device.  Each
  * interface encapsulates a single high level function, such as feeding
@@ -127,7 +125,6 @@ struct usb_interface {
 	int minor;			/* minor number this interface is bound to */
 	struct device dev;		/* interface specific device info */
 	struct class_device *class_dev;
-	struct completion *released;	/* wait for release */
 };
 #define	to_usb_interface(d) container_of(d, struct usb_interface, dev)
 #define	interface_to_usbdev(intf) \
