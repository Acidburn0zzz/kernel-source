From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] reiserfs: Use list_del_init in use_preallocated_list_if_available
References: bnc#378095

 __discard_prealloc() calls list_del on ei->i_prealloc_list regardless of
 the state of ei->i_prealloc_count. The rest of the action in that function
 is safe regardless of if the list is empty or not.

 If the list hasn't been used, then i_prealloc_list will be just initialized.
 If it has, and use_preallocated_list_if_available() has been called, and
 the prealloc list has been depleted, then the list entry will be poisoned.

 This patch uses list_del_init so the list_head is initialized and we don't
 oops on the poisoned value.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

---
 fs/reiserfs/bitmap.c |   11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

--- a/fs/reiserfs/bitmap.c
+++ b/fs/reiserfs/bitmap.c
@@ -1145,17 +1145,18 @@ static int use_preallocated_list_if_avai
 					      int amount_needed)
 {
 	struct inode *inode = hint->inode;
+	struct reiserfs_inode_info *ei = REISERFS_I(inode);
 
-	if (REISERFS_I(inode)->i_prealloc_count > 0) {
+	if (ei->i_prealloc_count > 0) {
 		while (amount_needed) {
 
-			*new_blocknrs++ = REISERFS_I(inode)->i_prealloc_block++;
-			REISERFS_I(inode)->i_prealloc_count--;
+			*new_blocknrs++ = ei->i_prealloc_block++;
+			ei->i_prealloc_count--;
 
 			amount_needed--;
 
-			if (REISERFS_I(inode)->i_prealloc_count <= 0) {
-				list_del(&REISERFS_I(inode)->i_prealloc_list);
+			if (ei->i_prealloc_count <= 0) {
+				list_del_init(&ei->i_prealloc_list);
 				break;
 			}
 		}
