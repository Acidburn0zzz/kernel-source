diff -urNp linux-2.6.8/fs/binfmt_elf.c linux-2.6.8.SUSE/fs/binfmt_elf.c
--- linux-2.6.8/fs/binfmt_elf.c	2004-11-12 16:35:52.993914227 +0100
+++ linux-2.6.8.SUSE/fs/binfmt_elf.c	2004-11-12 16:36:38.347614989 +0100
@@ -335,10 +335,13 @@ static unsigned long load_elf_interp(str
 		goto out;
 
 	retval = kernel_read(interpreter,interp_elf_ex->e_phoff,(char *)elf_phdata,size);
-	error = retval;
-	if (retval < 0)
-		goto out_close;
-
+	error = -EIO;
+	if (retval != size) {
+		if (retval < 0)
+			error = retval;	
+ 		goto out_close;
+	}
+ 
 	eppnt = elf_phdata;
 	for (i=0; i<interp_elf_ex->e_phnum; i++, eppnt++) {
 	  if (eppnt->p_type == PT_LOAD) {
@@ -524,9 +527,12 @@ static int load_elf_binary(struct linux_
 		goto out;
 
 	retval = kernel_read(bprm->file, elf_ex.e_phoff, (char *) elf_phdata, size);
-	if (retval < 0)
-		goto out_free_ph;
-
+	if (retval != size) {
+		if (retval >= 0)
+			retval = -EIO;
+ 		goto out_free_ph;
+	}
+ 
 	files = current->files;		/* Refcounted so ok */
 	retval = unshare_files();
 	if (retval < 0)
@@ -572,8 +578,14 @@ static int load_elf_binary(struct linux_
 			retval = kernel_read(bprm->file, elf_ppnt->p_offset,
 					   elf_interpreter,
 					   elf_ppnt->p_filesz);
-			if (retval < 0)
-				goto out_free_interp;
+			if (retval != elf_ppnt->p_filesz) {
+				if (retval >= 0)
+					retval = -EIO;
+ 				goto out_free_interp;
+			}
+			/* make sure path is NULL terminated */
+			elf_interpreter[elf_ppnt->p_filesz - 1] = '\0';
+ 
 			/* If the program interpreter is one of these two,
 			 * then assume an iBCS2 image. Otherwise assume
 			 * a native linux image.
@@ -608,9 +620,12 @@ static int load_elf_binary(struct linux_
 			if (IS_ERR(interpreter))
 				goto out_free_interp;
 			retval = kernel_read(interpreter, 0, bprm->buf, BINPRM_BUF_SIZE);
-			if (retval < 0)
-				goto out_free_dentry;
-
+			if (retval != BINPRM_BUF_SIZE) {
+				if (retval >= 0)
+					retval = -EIO;
+ 				goto out_free_dentry;
+			}
+ 
 			/* Get the exec headers */
 			interp_ex = *((struct exec *) bprm->buf);
 			interp_elf_ex = *((struct elfhdr *) bprm->buf);
@@ -768,9 +783,11 @@ static int load_elf_binary(struct linux_
 		}
 
 		error = elf_map(bprm->file, load_bias + vaddr, elf_ppnt, elf_prot, elf_flags);
-		if (BAD_ADDR(error))
-			continue;
-
+		if (BAD_ADDR(error)) {
+			send_sig(SIGKILL, current, 0);
+			goto out_free_dentry;
+		}
+ 
 		if (!load_addr_set) {
 			load_addr_set = 1;
 			load_addr = (elf_ppnt->p_vaddr - elf_ppnt->p_offset);
