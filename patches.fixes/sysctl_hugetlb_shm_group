diff -u linux-2.6.5/fs/hugetlbfs/inode.c-SYSCTL linux-2.6.5/fs/hugetlbfs/inode.c
--- linux-2.6.5/fs/hugetlbfs/inode.c-SYSCTL	2004-05-13 15:27:50.610140713 +0200
+++ linux-2.6.5/fs/hugetlbfs/inode.c	2004-05-13 15:29:36.927566489 +0200
@@ -52,6 +52,8 @@
 	return 0;
 }
 
+int sysctl_hugetlb_shm_group;
+
 static int hugetlbfs_file_mmap(struct file *file, struct vm_area_struct *vma)
 {
 	struct inode *inode = file->f_dentry->d_inode;
@@ -749,6 +751,12 @@
 	return ret;
 }
 
+static int can_do_hugetlb_shm(void)
+{
+	return likely(capable(CAP_IPC_LOCK) ||
+			in_group_p(sysctl_hugetlb_shm_group));
+}
+
 struct file *hugetlb_zero_setup(size_t size)
 {
 	int error;
@@ -758,7 +766,7 @@
 	struct qstr quick_string;
 	char buf[16];
 
-	if (!can_do_mlock())
+	if (!can_do_hugetlb_shm())
 		return ERR_PTR(-EPERM);
 
 	if (!is_hugepage_mem_enough(size))
diff -u linux-2.6.5/kernel/sysctl.c-SYSCTL linux-2.6.5/kernel/sysctl.c
--- linux-2.6.5/kernel/sysctl.c-SYSCTL	2004-05-13 15:27:53.943183618 +0200
+++ linux-2.6.5/kernel/sysctl.c	2004-05-13 15:30:08.249573259 +0200
@@ -822,6 +822,14 @@
 		.mode     = 0644,
 		.proc_handler = &proc_dointvec,
 	},
+ 	 {
+ 		.ctl_name	= VM_HUGETLB_GROUP,
+ 		.procname	= "hugetlb_shm_group",
+ 		.data		= &sysctl_hugetlb_shm_group,
+ 		.maxlen		= sizeof(sysctl_hugetlb_shm_group),
+ 		.mode		= 0644,
+ 		.proc_handler	= &proc_dointvec,
+ 	 },
 #endif
 	{
 		.ctl_name	= VM_LOWER_ZONE_PROTECTION,
diff -u linux-2.6.5/Documentation/vm/hugetlbpage.txt-SYSCTL linux-2.6.5/Documentation/vm/hugetlbpage.txt
--- linux-2.6.5/Documentation/vm/hugetlbpage.txt-SYSCTL	2004-04-04 05:36:24.000000000 +0200
+++ linux-2.6.5/Documentation/vm/hugetlbpage.txt	2004-05-13 15:29:36.925612771 +0200
@@ -91,9 +91,12 @@
 used to change the file attributes on hugetlbfs.
 
 Also, it is important to note that no such mount command is required if the
-applications are going to use only shmat/shmget system calls.  It is possible
-for same or different applications to use any combination of mmaps and shm*
-calls.  Though the mount of filesystem will be required for using mmaps.
+applications are going to use only shmat/shmget system calls.  Users who
+wish to use hugetlb page via shared memory segment should be a member of
+a supplementary group and system admin needs to configure that gid into
+/proc/sys/vm/hugetlb_shm_group.  It is possible for same or different
+applications to use any combination of mmaps and shm* calls.  Though the
+mount of filesystem will be required for using mmaps.
 
 /* Example of using hugepage in user application using Sys V shared memory
  * system calls.  In this example, app is requesting memory of size 256MB that
diff -u linux-2.6.5/Documentation/filesystems/proc.txt-SYSCTL linux-2.6.5/Documentation/filesystems/proc.txt
--- linux-2.6.5/Documentation/filesystems/proc.txt-SYSCTL	2004-04-04 05:36:54.000000000 +0200
+++ linux-2.6.5/Documentation/filesystems/proc.txt	2004-05-13 15:29:36.925612771 +0200
@@ -1207,6 +1207,14 @@
 and thrash the system to death, so large and/or important servers will want to
 set this value to 0.
 
+nr_hugepages and hugetlb_shm_group
+----------------------------------
+
+nr_hugepages configures number of hugetlb page reserved for the system.
+
+hugetlb_shm_group contains group id that is allowed to create SysV shared
+memory segment using hugetlb page.
+
 2.5 /proc/sys/dev - Device specific parameters
 ----------------------------------------------
 
@@ -1823,10 +1831,3 @@
 command to write value into these files, thereby changing the default settings
 of the kernel.
 ------------------------------------------------------------------------------
-
-
-
-
-
-
-
diff -u linux-2.6.5/include/linux/hugetlb.h-SYSCTL linux-2.6.5/include/linux/hugetlb.h
--- linux-2.6.5/include/linux/hugetlb.h-SYSCTL	2004-05-13 15:27:50.607210136 +0200
+++ linux-2.6.5/include/linux/hugetlb.h	2004-05-13 15:30:30.056973404 +0200
@@ -35,6 +35,7 @@
 
 extern int htlbpage_max;
 extern int sysctl_overcommit_hugepages;
+extern int sysctl_hugetlb_shm_group;
 
 static inline void
 mark_mm_hugetlb(struct mm_struct *mm, struct vm_area_struct *vma)
diff -u linux-2.6.5/include/linux/sysctl.h-SYSCTL linux-2.6.5/include/linux/sysctl.h
--- linux-2.6.5/include/linux/sysctl.h-SYSCTL	2004-05-13 15:27:53.941229900 +0200
+++ linux-2.6.5/include/linux/sysctl.h	2004-05-13 15:29:36.929520207 +0200
@@ -172,7 +172,8 @@
 	VM_MAX_MAP_COUNT=22,	/* int: Maximum number of mmaps/address-space */
  	VM_LAPTOP_MODE=23,      /* vm laptop mode */
  	VM_BLOCK_DUMP=24,       /* block dump mode */
- 	VM_DISABLE_CAP_MLOCK=25,/* disable CAP_IPC_LOCK checking */
+	VM_HUGETLB_GROUP=25,	/* permitted hugetlb group */
+ 	VM_DISABLE_CAP_MLOCK=26,/* disable CAP_IPC_LOCK checking */
 };
 
 
