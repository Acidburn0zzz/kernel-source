From: Christoph Hellwig <hch@sgi.com>
References: 102531, SGI:PV941429
Subject: fix nfs xfs_iget shutdown

[XFS] Retry linux inode cacech lookup if we found a stale inode.  This
fixes crashes under high nfs load

Acked-by: Andreas Gruenbacher <agruen@suse.de>

Index: linux/fs/xfs/xfs_iget.c
===================================================================
--- linux.orig/fs/xfs/xfs_iget.c	2005-08-24 12:06:55.910465145 +1000
+++ linux/fs/xfs/xfs_iget.c	2005-08-25 13:14:39.691282587 +1000
@@ -468,11 +468,9 @@
 	if ((inode = VFS_GET_INODE(XFS_MTOVFS(mp), ino, 0))) {
 		bhv_desc_t	*bdp;
 		xfs_inode_t	*ip;
-		int		newnode;
 
 		vp = LINVFS_GET_VP(inode);
 		if (inode->i_state & I_NEW) {
-inode_allocate:
 			vn_initialize(inode);
 			error = xfs_iget_core(vp, mp, tp, ino, flags,
 					lock_flags, ipp, bno);
@@ -492,23 +490,25 @@
 				iput(inode);
 				goto retry;
 			}
-
-			if (is_bad_inode(inode)) {
+			/*
+			 * If the inode is not fully constructed due to
+			 * filehandle mismatches wait for the inode to go
+			 * away and try again.
+			 *
+			 * iget_locked will call wait_on_freeing_inode
+			 * to wait for the inode to go away.
+			 */
+			if (is_bad_inode(inode) ||
+			    ((bdp = vn_bhv_lookup(VN_BHV_HEAD(vp),
+						&xfs_vnodeops)) == NULL)) {
 				iput(inode);
-				return EIO;
+				delay(1);
+				goto retry;
 			}
 
-			bdp = vn_bhv_lookup(VN_BHV_HEAD(vp), &xfs_vnodeops);
-			if (bdp == NULL) {
-				XFS_STATS_INC(xs_ig_dup);
-				goto inode_allocate;
-			}
 			ip = XFS_BHVTOI(bdp);
 			if (lock_flags != 0)
 				xfs_ilock(ip, lock_flags);
-			newnode = (ip->i_d.di_mode == 0);
-			if (newnode)
-				xfs_iocore_inode_reinit(ip);
 			XFS_STATS_INC(xs_ig_found);
 			*ipp = ip;
 			error = 0;
