diff -uNrp linux-2.6.5/include/linux/sysctl.h linux-2.6.5.no-map-hugetlb/include/linux/sysctl.h
--- linux-2.6.5/include/linux/sysctl.h	2004-06-11 17:53:15.000000000 +0200
+++ linux-2.6.5.no-map-hugetlb/include/linux/sysctl.h	2004-06-11 18:04:11.000000000 +0200
@@ -139,9 +139,10 @@ enum
 	KERN_HZ=69,		/* unsigned long: interal kernel HZ */
 	KERN_SHMUSEHUGEPAGES=70,/* int: back shm with huge pages */
 	KERN_MMAPUSEHUGEPAGES=71,       /* int: back anon mmap with hpages */
-	KERN_HPAGES_MAP_SZ=72,  /* int: min size (MB) of mapping */
-	KERN_XMON=73,		/* int: xmon debugger enabled */
-	KERN_UNSUPPORTED=74,	/* int: allow loading of unsupported modules */
+	KERN_HPAGES_MAP_SZ=72,	/* int: min size (MB) of mapping */
+	KERN_MAP_HUGETLB=73,	/* int: allow use of non-std MAP_HUGETLB flag in mmap */
+	KERN_XMON=74,		/* int: xmon debugger enabled */
+	KERN_UNSUPPORTED=75,	/* int: allow loading of unsupported modules */
 
 };
 
diff -uNrp linux-2.6.5/kernel/sysctl.c linux-2.6.5.no-map-hugetlb/kernel/sysctl.c
--- linux-2.6.5/kernel/sysctl.c	2004-06-11 17:53:18.000000000 +0200
+++ linux-2.6.5.no-map-hugetlb/kernel/sysctl.c	2004-06-11 18:16:08.000000000 +0200
@@ -73,6 +73,7 @@ extern int printk_ratelimit_jiffies;
 extern int printk_ratelimit_burst;
 extern int shm_use_hugepages;
 extern int mmap_use_hugepages, mmap_hugepages_map_sz;
+extern int kernel_map_hugetlb;
 
 /* this is needed for the proc_dointvec_minmax for [fs_]overflow UID and GID */
 static int maxolduid = 65535;
@@ -734,6 +735,14 @@ static ctl_table kern_table[] = {
 		.mode		0644,
 		.proc_handler	= &proc_dointvec,
 	},
+	{
+		.ctl_name	= KERN_MAP_HUGETLB,
+		.procname	= "mmap-map-hugetlb",
+		.data		= &kernel_map_hugetlb,
+		.maxlen		= sizeof(int),
+		.mode		0644,
+		.proc_handler	= &proc_dointvec,
+	},
 #endif
 	{ .ctl_name = 0 }
 };
diff -uNrp linux-2.6.5/mm/mmap.c linux-2.6.5.no-map-hugetlb/mm/mmap.c
--- linux-2.6.5/mm/mmap.c	2004-06-11 17:53:14.000000000 +0200
+++ linux-2.6.5.no-map-hugetlb/mm/mmap.c	2004-06-11 18:12:56.000000000 +0200
@@ -77,6 +77,8 @@ EXPORT_SYMBOL(vm_committed_space);
 
 int mmap_use_hugepages = 0;
 int mmap_hugepages_map_sz = 256;
+/* Enable dubious MAP_HUGETLB flag */
+int kernel_map_hugetlb = 0;
 
 /*
  * Requires inode->i_mapping->i_shared_sem
@@ -828,10 +830,11 @@ unsigned long __do_mmap_pgoff(struct mm_
 {
 	struct file *hugetlb_file = NULL;
 	int hugetlb_implicit = 0;
+	static int warn1 = 0, warn2 = 0;
 	unsigned long result;
 
 	if (file) {
-		if ((flags & MAP_HUGETLB) && !is_file_hugepages(file))
+		if (kernel_map_hugetlb && (flags & MAP_HUGETLB) && !is_file_hugepages(file))
 			return -EINVAL;
 
 		if (!file->f_op || !file->f_op->mmap)
@@ -857,9 +860,13 @@ unsigned long __do_mmap_pgoff(struct mm_
 	if (current->mm->map_count > sysctl_max_map_count)
 		return -ENOMEM;
 
+	if (!file && !kernel_map_hugetlb && (flags & MAP_HUGETLB) && !(warn1++))
+	       printk("MAP_HUGETLB is non-std and disabled by default!\n");
 	/* Create an implicit hugetlb file if necessary */
-	if (!file && ((flags & MAP_HUGETLB) ||
+	if (!file && (((flags & MAP_HUGETLB) && kernel_map_hugetlb) ||
 			(hugetlb_implicit = mmap_hugetlb_implicit(len)))) {
+		if ((flags & MAP_HUGETLB) && !(warn2++))
+			printk(KERN_CRIT "MAP_HUGETLB is deprecated and will go away!\n");
 		file = hugetlb_file = hugetlb_zero_setup(len);
 		if (IS_ERR(file)) {
 			if (!hugetlb_implicit)
