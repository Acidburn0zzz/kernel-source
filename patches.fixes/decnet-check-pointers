diff -urNp linux-2.6.5/net/decnet/af_decnet.c linux-2.6.5.SUSE/net/decnet/af_decnet.c
--- linux-2.6.5/net/decnet/af_decnet.c	2004-06-16 11:56:32.370516526 +0200
+++ linux-2.6.5.SUSE/net/decnet/af_decnet.c	2004-06-16 11:59:48.459910562 +0200
@@ -1212,7 +1212,7 @@ static int dn_ioctl(struct socket *sock,
 	{
 	case SIOCGIFADDR:
 	case SIOCSIFADDR:
-		return dn_dev_ioctl(cmd, (void *)arg);
+		return dn_dev_ioctl(cmd, (void __user *)arg);
 
 	case SIOCATMARK:
 		lock_sock(sk);
@@ -1226,7 +1226,7 @@ static int dn_ioctl(struct socket *sock,
 		amount = sk->sk_sndbuf - atomic_read(&sk->sk_wmem_alloc);
 		if (amount < 0)
 			amount = 0;
-		err = put_user(amount, (int *)arg);
+		err = put_user(amount, (int __user *)arg);
 		break;
 
 	case TIOCINQ:
@@ -1244,11 +1244,11 @@ static int dn_ioctl(struct socket *sock,
 			}
 		}
 		release_sock(sk);
-		err = put_user(amount, (int *)arg);
+		err = put_user(amount, (int __user *)arg);
 		break;
 
 	default:
-		err = dev_ioctl(cmd, (void *)arg);
+		err = dev_ioctl(cmd, (void __user *)arg);
 		break;
 	}
 
@@ -1325,7 +1325,7 @@ static int dn_setsockopt(struct socket *
 	return err;
 }
 
-static int __dn_setsockopt(struct socket *sock, int level,int optname, char *optval, int optlen, int flags) 
+static int __dn_setsockopt(struct socket *sock, int level,int optname, char __user *optval, int optlen, int flags) 
 {
 	struct	sock *sk = sock->sk;
 	struct dn_scp *scp = DN_SK(sk);
diff -urNp linux-2.6.5/net/decnet/dn_dev.c linux-2.6.5.SUSE/net/decnet/dn_dev.c
--- linux-2.6.5/net/decnet/dn_dev.c	2004-04-04 05:36:55.000000000 +0200
+++ linux-2.6.5.SUSE/net/decnet/dn_dev.c	2004-06-16 11:57:29.625214999 +0200
@@ -161,10 +161,10 @@ static int min_priority[1];
 static int max_priority[] = { 127 }; /* From DECnet spec */
 
 static int dn_forwarding_proc(ctl_table *, int, struct file *,
-			void *, size_t *);
-static int dn_forwarding_sysctl(ctl_table *table, int *name, int nlen,
-			void *oldval, size_t *oldlenp,
-			void *newval, size_t newlen,
+			void __user *, size_t *);
+static int dn_forwarding_sysctl(ctl_table *table, int __user *name, int nlen,
+			void __user *oldval, size_t __user *oldlenp,
+			void __user *newval, size_t newlen,
 			void **context);
 
 static struct dn_dev_sysctl_table {
@@ -362,7 +362,7 @@ static void dn_dev_check_default(struct 
 
 static int dn_forwarding_proc(ctl_table *table, int write, 
 				struct file *filep,
-				void *buffer, size_t *lenp)
+				void __user *buffer, size_t *lenp)
 {
 #ifdef CONFIG_DECNET_ROUTER
 	struct net_device *dev = table->extra1;
@@ -404,9 +404,9 @@ static int dn_forwarding_proc(ctl_table 
 #endif
 }
 
-static int dn_forwarding_sysctl(ctl_table *table, int *name, int nlen,
-			void *oldval, size_t *oldlenp,
-			void *newval, size_t newlen,
+static int dn_forwarding_sysctl(ctl_table *table, int __user *name, int nlen,
+			void __user *oldval, size_t __user *oldlenp,
+			void __user *newval, size_t newlen,
 			void **context)
 {
 #ifdef CONFIG_DECNET_ROUTER
@@ -423,7 +423,7 @@ static int dn_forwarding_sysctl(ctl_tabl
 		if (newlen != sizeof(int))
 			return -EINVAL;
 
-		if (get_user(value, (int *)newval))
+		if (get_user(value, (int __user *)newval))
 			return -EFAULT;
 		if (value < 0)
 			return -EINVAL;
@@ -553,7 +553,7 @@ static int dn_dev_set_ifa(struct net_dev
 }
 
 
-int dn_dev_ioctl(unsigned int cmd, void *arg)
+int dn_dev_ioctl(unsigned int cmd, void __user *arg)
 {
 	char buffer[DN_IFREQ_SIZE];
 	struct ifreq *ifr = (struct ifreq *)buffer;
@@ -1294,35 +1294,43 @@ int unregister_dnaddr_notifier(struct no
  * it as a compile time option. Probably you should use the
  * rtnetlink interface instead.
  */
-int dnet_gifconf(struct net_device *dev, char *buf, int len)
+int dnet_gifconf(struct net_device *dev, char __user *buf, int len)
 {
 	struct dn_dev *dn_db = (struct dn_dev *)dev->dn_ptr;
 	struct dn_ifaddr *ifa;
-	struct ifreq *ifr = (struct ifreq *)buf;
+	char buffer[DN_IFREQ_SIZE];
+	struct ifreq *ifr = (struct ifreq *)buffer;
+	struct sockaddr_dn *addr = (struct sockaddr_dn *)&ifr->ifr_addr;
 	int done = 0;
 
 	if ((dn_db == NULL) || ((ifa = dn_db->ifa_list) == NULL))
 		return 0;
 
 	for(; ifa; ifa = ifa->ifa_next) {
-		if (!ifr) {
+		if (!buf) {
 			done += sizeof(DN_IFREQ_SIZE);
 			continue;
 		}
 		if (len < DN_IFREQ_SIZE)
 			return done;
-		memset(ifr, 0, DN_IFREQ_SIZE);
+		memset(buffer, 0, DN_IFREQ_SIZE);
 
 		if (ifa->ifa_label)
 			strcpy(ifr->ifr_name, ifa->ifa_label);
 		else
 			strcpy(ifr->ifr_name, dev->name);
 
-		(*(struct sockaddr_dn *) &ifr->ifr_addr).sdn_family = AF_DECnet;
-		(*(struct sockaddr_dn *) &ifr->ifr_addr).sdn_add.a_len = 2;
-		(*(dn_address *)(*(struct sockaddr_dn *) &ifr->ifr_addr).sdn_add.a_addr) = ifa->ifa_local;
+		addr->sdn_family = AF_DECnet;
+		addr->sdn_add.a_len = 2;
+		memcpy(addr->sdn_add.a_addr, &ifa->ifa_local,
+			sizeof(dn_address));
+
+		if (copy_to_user(buf, buffer, DN_IFREQ_SIZE)) {
+			done = -EFAULT;
+			break;
+		}
 
-		ifr = (struct ifreq *)((char *)ifr + DN_IFREQ_SIZE);
+		buf  += DN_IFREQ_SIZE;
 		len  -= DN_IFREQ_SIZE;
 		done += DN_IFREQ_SIZE;
 	}
diff -urNp linux-2.6.5/net/decnet/dn_route.c linux-2.6.5.SUSE/net/decnet/dn_route.c
--- linux-2.6.5/net/decnet/dn_route.c	2004-04-04 05:38:19.000000000 +0200
+++ linux-2.6.5.SUSE/net/decnet/dn_route.c	2004-06-16 11:57:29.627215023 +0200
@@ -684,8 +684,9 @@ out:
 	return NET_RX_DROP;
 }
 
-static int dn_output(struct sk_buff *skb)
+static int dn_output(struct sk_buff **pskb)
 {
+	struct sk_buff *skb = *pskb;
 	struct dst_entry *dst = skb->dst;
 	struct dn_route *rt = (struct dn_route *)dst;
 	struct net_device *dev = dst->dev;
@@ -796,6 +797,11 @@ static int dn_rt_bug(struct sk_buff *skb
 	return NET_RX_BAD;
 }
 
+static int dn_rt_bug_out(struct sk_buff **pskb)
+{
+	return dn_rt_bug(*pskb);
+}
+
 static int dn_rt_set_next_hop(struct dn_route *rt, struct dn_fib_res *res)
 {
 	struct dn_fib_info *fi = res->fi;
@@ -1387,7 +1393,7 @@ make_route:
 	rt->u.dst.neighbour = neigh;
 	rt->u.dst.dev = out_dev;
 	rt->u.dst.lastuse = jiffies;
-	rt->u.dst.output = dn_rt_bug;
+	rt->u.dst.output = dn_rt_bug_out;
 	switch(res.type) {
 		case RTN_UNICAST:
 			rt->u.dst.input = dn_forward;
diff -urNp linux-2.6.5/net/decnet/sysctl_net_decnet.c linux-2.6.5.SUSE/net/decnet/sysctl_net_decnet.c
--- linux-2.6.5/net/decnet/sysctl_net_decnet.c	2004-04-04 05:36:27.000000000 +0200
+++ linux-2.6.5.SUSE/net/decnet/sysctl_net_decnet.c	2004-06-16 11:57:29.628215035 +0200
@@ -127,9 +127,9 @@ static int parse_addr(dn_address *addr, 
 }
 
 
-static int dn_node_address_strategy(ctl_table *table, int *name, int nlen,
-				void *oldval, size_t *oldlenp,
-				void *newval, size_t newlen,
+static int dn_node_address_strategy(ctl_table *table, int __user *name, int nlen,
+				void __user *oldval, size_t __user *oldlenp,
+				void __user *newval, size_t newlen,
 				void **context)
 {
 	size_t len;
@@ -141,14 +141,14 @@ static int dn_node_address_strategy(ctl_
 		if (len) {
 			if (len != sizeof(unsigned short))
 				return -EINVAL;
-			if (put_user(decnet_address, (unsigned short *)oldval))
+			if (put_user(decnet_address, (unsigned short __user *)oldval))
 				return -EFAULT;
 		}
 	}
 	if (newval && newlen) {
 		if (newlen != sizeof(unsigned short))
 			return -EINVAL;
-		if (get_user(addr, (unsigned short *)newval))
+		if (get_user(addr, (unsigned short __user *)newval))
 			return -EFAULT;
 
 		dn_dev_devices_off();
@@ -162,7 +162,7 @@ static int dn_node_address_strategy(ctl_
 
 static int dn_node_address_handler(ctl_table *table, int write, 
 				struct file *filp,
-				void *buffer, size_t *lenp)
+				void __user *buffer, size_t *lenp)
 {
 	char addr[DN_ASCBUF_LEN];
 	size_t len;
@@ -212,9 +212,9 @@ static int dn_node_address_handler(ctl_t
 }
 
 
-static int dn_def_dev_strategy(ctl_table *table, int *name, int nlen,
-				void *oldval, size_t *oldlenp,
-				void *newval, size_t newlen,
+static int dn_def_dev_strategy(ctl_table *table, int __user *name, int nlen,
+				void __user *oldval, size_t __user *oldlenp,
+				void __user *newval, size_t newlen,
 				void **context)
 {
 	size_t len;
@@ -273,7 +273,7 @@ static int dn_def_dev_strategy(ctl_table
 
 static int dn_def_dev_handler(ctl_table *table, int write, 
 				struct file * filp,
-				void *buffer, size_t *lenp)
+				void __user *buffer, size_t *lenp)
 {
 	size_t len;
 	struct net_device *dev;
