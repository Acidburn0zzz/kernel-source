diff -urNp linux-2.6.5/drivers/base/class.c linux-2.6.5.SUSE/drivers/base/class.c
--- linux-2.6.5/drivers/base/class.c	2004-04-04 05:38:23.000000000 +0200
+++ linux-2.6.5.SUSE/drivers/base/class.c	2004-05-27 16:55:38.442455468 +0200
@@ -363,6 +363,8 @@ void class_device_unregister(struct clas
 
 int class_device_rename(struct class_device *class_dev, char *new_name)
 {
+	int error = 0;
+
 	class_dev = class_device_get(class_dev);
 	if (!class_dev)
 		return -EINVAL;
@@ -372,11 +374,11 @@ int class_device_rename(struct class_dev
 
 	strlcpy(class_dev->class_id, new_name, KOBJ_NAME_LEN);
 
-	kobject_rename(&class_dev->kobj, new_name);
+	error = kobject_rename(&class_dev->kobj, new_name);
 
 	class_device_put(class_dev);
 
-	return 0;
+	return error;
 }
 
 struct class_device * class_device_get(struct class_device *class_dev)
diff -urNp linux-2.6.5/fs/sysfs/dir.c linux-2.6.5.SUSE/fs/sysfs/dir.c
--- linux-2.6.5/fs/sysfs/dir.c	2004-05-27 16:54:33.990602644 +0200
+++ linux-2.6.5.SUSE/fs/sysfs/dir.c	2004-05-27 16:55:38.438455415 +0200
@@ -162,15 +162,16 @@ restart:
 	dput(dentry);
 }
 
-void sysfs_rename_dir(struct kobject * kobj, const char *new_name)
+int sysfs_rename_dir(struct kobject * kobj, const char *new_name)
 {
+	int error = 0;
 	struct dentry * new_dentry, * parent;
 
 	if (!strcmp(kobject_name(kobj), new_name))
-		return;
+		return -EINVAL;
 
 	if (!kobj->parent)
-		return;
+		return -EINVAL;
 
 	down_write(&sysfs_rename_sem);
 	parent = kobj->parent->dentry;
@@ -179,13 +180,16 @@ void sysfs_rename_dir(struct kobject * k
 	new_dentry = sysfs_get_dentry(parent, new_name);
 	if (!IS_ERR(new_dentry)) {
 		if (!new_dentry->d_inode) {
-			d_move(kobj->dentry, new_dentry);
-			kobject_set_name(kobj,new_name);
+			error = kobject_set_name(kobj,new_name);
+			if (!error)
+				d_move(kobj->dentry, new_dentry);
 		}
 		dput(new_dentry);
 	}
 	up(&parent->d_inode->i_sem);	
 	up_write(&sysfs_rename_sem);
+
+	return error;
 }
 
 EXPORT_SYMBOL(sysfs_create_dir);
diff -urNp linux-2.6.5/include/linux/kobject.h linux-2.6.5.SUSE/include/linux/kobject.h
--- linux-2.6.5/include/linux/kobject.h	2004-04-04 05:36:15.000000000 +0200
+++ linux-2.6.5.SUSE/include/linux/kobject.h	2004-05-27 16:55:38.441455455 +0200
@@ -48,7 +48,7 @@ extern void kobject_cleanup(struct kobje
 extern int kobject_add(struct kobject *);
 extern void kobject_del(struct kobject *);
 
-extern void kobject_rename(struct kobject *, char *new_name);
+extern int kobject_rename(struct kobject *, char *new_name);
 
 extern int kobject_register(struct kobject *);
 extern void kobject_unregister(struct kobject *);
diff -urNp linux-2.6.5/include/linux/sysfs.h linux-2.6.5.SUSE/include/linux/sysfs.h
--- linux-2.6.5/include/linux/sysfs.h	2004-04-04 05:36:56.000000000 +0200
+++ linux-2.6.5.SUSE/include/linux/sysfs.h	2004-05-27 16:55:38.439455429 +0200
@@ -39,7 +39,7 @@ sysfs_create_dir(struct kobject *);
 extern void
 sysfs_remove_dir(struct kobject *);
 
-extern void
+extern int
 sysfs_rename_dir(struct kobject *, const char *new_name);
 
 extern int
diff -urNp linux-2.6.5/lib/kobject.c linux-2.6.5.SUSE/lib/kobject.c
--- linux-2.6.5/lib/kobject.c	2004-05-27 16:54:24.651479247 +0200
+++ linux-2.6.5.SUSE/lib/kobject.c	2004-05-27 16:55:38.440455442 +0200
@@ -385,13 +385,17 @@ EXPORT_SYMBOL(kobject_set_name);
  *	@new_name: object's new name
  */
 
-void kobject_rename(struct kobject * kobj, char *new_name)
+int kobject_rename(struct kobject * kobj, char *new_name)
 {
+	int error = 0;
+
 	kobj = kobject_get(kobj);
 	if (!kobj)
-		return;
-	sysfs_rename_dir(kobj, new_name);
+		return -EINVAL;
+	error = sysfs_rename_dir(kobj, new_name);
 	kobject_put(kobj);
+
+	return error;
 }
 
 /**
diff -urNp linux-2.6.5/net/core/dev.c linux-2.6.5.SUSE/net/core/dev.c
--- linux-2.6.5/net/core/dev.c	2004-05-27 16:54:34.603610746 +0200
+++ linux-2.6.5.SUSE/net/core/dev.c	2004-05-27 16:55:38.444455495 +0200
@@ -785,6 +785,8 @@ int dev_alloc_name(struct net_device *de
  */
 int dev_change_name(struct net_device *dev, char *newname)
 {
+	int err = 0;
+
 	ASSERT_RTNL();
 
 	if (dev->flags & IFF_UP)
@@ -794,7 +796,7 @@ int dev_change_name(struct net_device *d
 		return -EINVAL;
 
 	if (strchr(newname, '%')) {
-		int err = dev_alloc_name(dev, newname);
+		err = dev_alloc_name(dev, newname);
 		if (err < 0)
 			return err;
 		strcpy(newname, dev->name);
@@ -804,12 +806,14 @@ int dev_change_name(struct net_device *d
 	else
 		strlcpy(dev->name, newname, IFNAMSIZ);
 
-	hlist_del(&dev->name_hlist);
-	hlist_add_head(&dev->name_hlist, dev_name_hash(dev->name));
+	err = class_device_rename(&dev->class_dev, dev->name);
+	if (!err) {
+		hlist_del(&dev->name_hlist);
+		hlist_add_head(&dev->name_hlist, dev_name_hash(dev->name));
+		notifier_call_chain(&netdev_chain, NETDEV_CHANGENAME, dev);
+	}
 
-	class_device_rename(&dev->class_dev, dev->name);
-	notifier_call_chain(&netdev_chain, NETDEV_CHANGENAME, dev);
-	return 0;
+	return err;
 }
 
 struct dev_tq { 
