Subject: block: move q->unplug_work initialization
From: Peter Zijlstra <a.p.zijlstra@chello.nl>
Date: Fri Oct 17 08:46:57 2008 +0200:
Git: 713ada9ba94f2ad874cffd074b83e3dc681ca82f

modprobe loop; rmmod loop effectively creates a blk_queue and destroys it
which results in q->unplug_work being canceled without it ever being
initialized.

Therefore, move the initialization of q->unplug_work from
blk_queue_make_request() to blk_alloc_queue*().

Reported-by: Alexey Dobriyan <adobriyan@gmail.com>
Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
Signed-off-by: Jens Axboe <jens.axboe@oracle.com>
Signed-off-by: Hannes Reinecke <hare@suse.de>

---
 block/blk-core.c     |    1 +
 block/blk-settings.c |    2 --
 2 files changed, 1 insertion(+), 2 deletions(-)

--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -515,6 +515,7 @@ struct request_queue *blk_alloc_queue_no
 	init_timer(&q->unplug_timer);
 	setup_timer(&q->timeout, blk_rq_timed_out_timer, (unsigned long) q);
 	INIT_LIST_HEAD(&q->timeout_list);
+	INIT_WORK(&q->unplug_work, blk_unplug_work);
 
 	kobject_init(&q->kobj, &blk_queue_ktype);
 
--- a/block/blk-settings.c
+++ b/block/blk-settings.c
@@ -135,8 +135,6 @@ void blk_queue_make_request(struct reque
 	if (q->unplug_delay == 0)
 		q->unplug_delay = 1;
 
-	INIT_WORK(&q->unplug_work, blk_unplug_work);
-
 	q->unplug_timer.function = blk_unplug_timeout;
 	q->unplug_timer.data = (unsigned long)q;
 
