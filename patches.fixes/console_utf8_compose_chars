From: Chris Heath
Subject: fixes dead keys for UTF8 console
Patch-mainline:
References: 52104
Acked-by: jbohac@suse.cz

Fixes the input of composed characters on a console in UTF8 mode.
Originally part of a bigger patch, available at:
    http://chris.heathens.co.nz/linux/utf8.html 
This patch was rejected from mainline by Andries Brouwer, because it makes the
console input dependent on the state of the output settings (font mapping).


diff -Naur /localhome/jb/kerncvs/head/linux-2.6.15/drivers/char/consolemap.c linux-2.6.15/drivers/char/consolemap.c
--- /localhome/jb/kerncvs/head/linux-2.6.15/drivers/char/consolemap.c	2006-01-03 04:21:10.000000000 +0100
+++ linux-2.6.15/drivers/char/consolemap.c	2006-02-28 17:17:20.000000000 +0100
@@ -618,6 +618,19 @@
 		p->readonly = rdonly;
 }
 
+/* may be called during an interrupt */
+u32 conv_8bit_to_uni(unsigned char c)
+{
+	/* 
+	 * Always use USER_MAP. This function is used by the keyboard,
+	 * which shouldn't be affected by G0/G1 switching, etc.
+	 * If the user map still contains default values, i.e. the 
+	 * direct-to-font mapping, then assume user is using Latin1.
+	 */
+	unsigned short uni = translations[USER_MAP][c];
+	return uni == (0xf000 | c) ? c : uni;
+}
+
 int
 conv_uni_to_pc(struct vc_data *conp, long ucs) 
 {
diff -Naur /localhome/jb/kerncvs/head/linux-2.6.15/drivers/char/keyboard.c linux-2.6.15/drivers/char/keyboard.c
--- /localhome/jb/kerncvs/head/linux-2.6.15/drivers/char/keyboard.c	2006-02-21 21:19:39.000000000 +0100
+++ linux-2.6.15/drivers/char/keyboard.c	2006-02-28 17:17:20.000000000 +0100
@@ -34,6 +34,7 @@
 #include <linux/init.h>
 #include <linux/slab.h>
 
+#include <linux/consolemap.h>
 #include <linux/kbd_kern.h>
 #include <linux/kbd_diacr.h>
 #include <linux/vt_kern.h>
@@ -352,6 +353,15 @@
 	}
 }
 
+static void put_8bit(struct vc_data *vc, u8 c)
+{
+	if (kbd->kbdmode != VC_UNICODE || c < 32 || c == 127) 
+		/* Don't translate control chars */
+		put_queue(vc, c);
+	else
+		to_utf8(vc, conv_8bit_to_uni(c));
+}
+
 /*
  * Called after returning from RAW mode or when changing consoles - recompute
  * shift_down[] and shift_state from key_down[] maybe called when keymap is
@@ -412,7 +422,7 @@
 	if (ch == ' ' || ch == d)
 		return d;
 
-	put_queue(vc, d);
+	put_8bit(vc, d);
 	return ch;
 }
 
@@ -422,7 +432,7 @@
 static void fn_enter(struct vc_data *vc, struct pt_regs *regs)
 {
 	if (diacr) {
-		put_queue(vc, diacr);
+		put_8bit(vc, diacr);
 		diacr = 0;
 	}
 	put_queue(vc, 13);
@@ -631,7 +641,7 @@
 		diacr = value;
 		return;
 	}
-	put_queue(vc, value);
+	put_8bit(vc, value);
 }
 
 /*
@@ -777,7 +787,7 @@
 	/* kludge */
 	if (up_flag && shift_state != old_state && npadch != -1) {
 		if (kbd->kbdmode == VC_UNICODE)
-			to_utf8(vc, npadch & 0xffff);
+			to_utf8(vc, npadch);
 		else
 			put_queue(vc, npadch & 0xff);
 		npadch = -1;
diff -Naur /localhome/jb/kerncvs/head/linux-2.6.15/include/linux/consolemap.h linux-2.6.15/include/linux/consolemap.h
--- /localhome/jb/kerncvs/head/linux-2.6.15/include/linux/consolemap.h	2006-01-03 04:21:10.000000000 +0100
+++ linux-2.6.15/include/linux/consolemap.h	2006-02-28 17:17:20.000000000 +0100
@@ -13,3 +13,4 @@
 extern unsigned char inverse_translate(struct vc_data *conp, int glyph);
 extern unsigned short *set_translate(int m, struct vc_data *vc);
 extern int conv_uni_to_pc(struct vc_data *conp, long ucs);
+extern u32 conv_8bit_to_uni(unsigned char c);
