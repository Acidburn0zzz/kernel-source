
missing filesystem changes for the tag writeback code
SetPageWriteback -> set_page_writeback()

Index: linux.new/fs/nfs/write.c
===================================================================
--- linux.new.orig/fs/nfs/write.c	2004-03-17 11:21:33.016842547 -0500
+++ linux.new/fs/nfs/write.c	2004-03-17 11:21:58.666015577 -0500
@@ -768,7 +768,7 @@ nfs_write_rpcsetup(struct list_head *hea
 		req = nfs_list_entry(head->next);
 		nfs_list_remove_request(req);
 		nfs_list_add_request(req, &data->pages);
-		SetPageWriteback(req->wb_page);
+		set_page_writeback(req->wb_page);
 		*pages++ = req->wb_page;
 		count += req->wb_bytes;
 	}
Index: linux.new/fs/xfs/linux/xfs_aops.c
===================================================================
--- linux.new.orig/fs/xfs/linux/xfs_aops.c	2004-03-17 11:21:43.438068758 -0500
+++ linux.new/fs/xfs/linux/xfs_aops.c	2004-03-17 11:21:58.667015311 -0500
@@ -566,7 +566,7 @@ xfs_submit_page(
 	int			i;
 
 	BUG_ON(PageWriteback(page));
-	SetPageWriteback(page);
+	set_page_writeback(page);
 	clear_page_dirty(page);
 	unlock_page(page);
 
Index: linux.new/fs/ntfs/aops.c
===================================================================
--- linux.new.orig/fs/ntfs/aops.c	2004-01-09 01:59:55.000000000 -0500
+++ linux.new/fs/ntfs/aops.c	2004-03-17 11:21:58.678012384 -0500
@@ -743,7 +743,7 @@ lock_retry_remap:
 	}
 
 	BUG_ON(PageWriteback(page));
-	SetPageWriteback(page);		/* Keeps try_to_free_buffers() away. */
+	set_page_writeback(page);	/* Keeps try_to_free_buffers() away. */
 	unlock_page(page);
 
 	/*
@@ -885,7 +885,7 @@ static int ntfs_writepage(struct page *p
 	// FIXME: Make sure it is ok to SetPageError() on unlocked page under
 	// writeback before doing the change!
 #if 0
-	SetPageWriteback(page);
+	set_page_writeback(page);
 	unlock_page(page);
 #endif
 
Index: linux.new/fs/reiserfs/inode.c
===================================================================
--- linux.new.orig/fs/reiserfs/inode.c	2004-03-17 11:21:42.972192759 -0500
+++ linux.new/fs/reiserfs/inode.c	2004-03-17 11:21:58.681011586 -0500
@@ -2223,7 +2223,7 @@ static int reiserfs_write_full_page(stru
     } while(bh != head) ;
 
     BUG_ON(PageWriteback(page));
-    SetPageWriteback(page);
+    set_page_writeback(page);
     unlock_page(page);
 
     /*
@@ -2287,7 +2287,7 @@ fail:
     } while(bh != head);
     SetPageError(page);
     BUG_ON(PageWriteback(page));
-    SetPageWriteback(page);
+    set_page_writeback(page);
     unlock_page(page);
     do {
         struct buffer_head *next = bh->b_this_page;
Index: linux.new/mm/page-writeback.c
===================================================================
--- linux.new.orig/mm/page-writeback.c	2004-03-17 11:26:43.302274947 -0500
+++ linux.new/mm/page-writeback.c	2004-03-17 11:26:55.268761039 -0500
@@ -677,6 +677,7 @@ int test_set_page_writeback(struct page 
 	return ret;
 
 }
+EXPORT_SYMBOL(test_set_page_writeback);
 
 /*
  * Return true if any of the pages in the mapping are marged with the
