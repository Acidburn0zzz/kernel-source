From smaneesh@in.ibm.com via Glen Johnson <gjohnson@austin.ibm.com>

revalidate_special() is called from link_path_walk as the last path component is
(".."). In revalidate_special() we called 

real_lookup(dentry->d_parent,&dentry->d_name, nd), which called cifs_lookup(). 
which doesnot initialises dentry->d_op pointer if there is no corresponding
inode to the dentry. cifs_lookup() returned NULL dentry with d_op() as NULL. 

so, in the second iteration of the loop in revalidate_special() we have d_op 
as NULL and hence the crash in

  if (!dentry->d_op->d_revalidate(dentry, nd)) { 


diff -urN linux-2.6.5-7.69/fs/namei.c linux-2.6.5-7.69-9150/fs/namei.c
--- linux-2.6.5-7.69/fs/namei.c	2004-06-02 18:40:32.000000000 -0500
+++ linux-2.6.5-7.69-9150/fs/namei.c	2004-06-07 14:40:49.780230776 -0500
@@ -598,9 +598,9 @@
 	struct dentry *dentry = nd->dentry;
 	int err, counter = 0;
 
+ revalidate_again:
 	if (!dentry->d_op || !dentry->d_op->d_revalidate)
 		return 0;
- revalidate_again:
 	if (!dentry->d_op->d_revalidate(dentry, nd)) {
 		struct dentry *new;
 		if ((err = permission(dentry->d_parent->d_inode, MAY_EXEC,nd)))
