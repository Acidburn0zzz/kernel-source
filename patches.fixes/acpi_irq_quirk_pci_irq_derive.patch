From: Thomas Renninger <trenn@suse.de>
Subject: ACPI: Do not derive IRQ from parent bridge/device via boot param/dmi list
References: bnc#437211
Patch-Mainline: not yet

Signed-off-by: Thomas Renninger <trenn@suse.de>

---
 drivers/acpi/blacklist.c |   18 ++++++++++++++++++
 drivers/acpi/pci_irq.c   |   19 ++++++++++++++++---
 include/linux/acpi.h     |    2 ++
 3 files changed, 36 insertions(+), 3 deletions(-)

Index: linux-2.6.27/drivers/acpi/pci_irq.c
===================================================================
--- linux-2.6.27.orig/drivers/acpi/pci_irq.c
+++ linux-2.6.27/drivers/acpi/pci_irq.c
@@ -524,12 +524,25 @@ acpi_pci_irq_derive(struct pci_dev *dev,
 		return -1;
 	}
 
-	ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Derive IRQ %d for device %s from %s\n",
-			  irq, pci_name(dev), pci_name(bridge)));
+	dev_printk(KERN_INFO, &dev->dev, "Derive IRQ %d from %s\n", irq,
+		   pci_name(bridge));
 
 	return irq;
 }
 
+int irq_disable_derivation;
+
+/* Other OSes seem not to follow up parent devices
+ * (at least pci bridges) to derive an irq from them.
+ */
+static int __init acpi_irq_disable_derivation(char *str)
+{
+	irq_disable_derivation = 1;
+	return 0;
+}
+
+__setup("acpi_irq_disable_derivation", acpi_irq_disable_derivation);
+
 /*
  * acpi_pci_irq_enable
  * success: return 0
@@ -576,7 +589,7 @@ int acpi_pci_irq_enable(struct pci_dev *
 	 * If no PRT entry was found, we'll try to derive an IRQ from the
 	 * device's parent bridge.
 	 */
-	if (irq < 0)
+	if (irq < 0 && irq_disable_derivation == 0)
 		irq = acpi_pci_irq_derive(dev, pin, &triggering,
 					  &polarity, &link,
 					  acpi_pci_allocate_irq);
Index: linux-2.6.27/include/linux/acpi.h
===================================================================
--- linux-2.6.27.orig/include/linux/acpi.h
+++ linux-2.6.27/include/linux/acpi.h
@@ -157,6 +157,8 @@ struct acpi_prt_list {
 
 struct pci_dev;
 
+extern int irq_disable_derivation;
+
 int acpi_pci_irq_enable (struct pci_dev *dev);
 void acpi_penalize_isa_irq(int irq, int active);
 
Index: linux-2.6.27/drivers/acpi/blacklist.c
===================================================================
--- linux-2.6.27.orig/drivers/acpi/blacklist.c
+++ linux-2.6.27/drivers/acpi/blacklist.c
@@ -193,6 +193,16 @@ static int __init dmi_disable_osi_vista(
 	return 0;
 }
 
+extern int irq_disable_derivation;
+
+static int __init dmi_irq_disable_derivation(const struct dmi_system_id *d)
+{
+	printk(KERN_NOTICE PREFIX "DMI detect: %s, IRQ derivation disabled\n",
+	       d->ident);
+	irq_disable_derivation = 1;
+	return 0;
+}
+
 /*
  * Most BIOS that invoke OSI(Linux) do nothing with it.
  * But some cause Linux to break.
@@ -626,6 +636,14 @@ static struct dmi_system_id acpi_osi_dmi
 		     DMI_MATCH(DMI_SYS_VENDOR, "TOSHIBA"),
 		},
 	},
+	{
+	.callback = dmi_irq_disable_derivation,
+	.ident = "ASUS M2A-VM",
+	.matches = {
+		     DMI_MATCH(DMI_BOARD_VENDOR, "ASUSTeK"),
+		     DMI_MATCH(DMI_BIOS_VERSION, "M2A-VM "),
+		},
+	},
 	{}
 };
 
