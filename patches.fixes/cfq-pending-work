From: Jens Axboe <axboe@suse.de>
Subject: Fix CFQ 'do we have pending requests' check
Patch-mainline: 
References: 73056 and 70918

In some places cfq only checks the ->busy_queues to see if we have work
to do, but that is only enough for fs requests queued through
ELV_INSERT_SORT.

Acked-by: 
Signed-off-by: 

--- linux-2.6.11/drivers/block/cfq-iosched.c~	2005-03-16 17:35:32.000000000 +0100
+++ linux-2.6.11/drivers/block/cfq-iosched.c	2005-03-16 17:37:32.000000000 +0100
@@ -1724,11 +1724,16 @@
 	}
 }
 
+static inline int cfq_pending_requests(struct cfq_data *cfqd)
+{
+	return list_empty(&cfqd->queue->queue_head) && !cfqd->busy_queues;
+}
+
 static int cfq_queue_empty(request_queue_t *q)
 {
 	struct cfq_data *cfqd = q->elevator->elevator_data;
 
-	return list_empty(&q->queue_head) && !cfqd->busy_queues;
+	return cfq_pending_requests(cfqd);
 }
 
 static void cfq_completed_request(request_queue_t *q, struct request *rq)
@@ -2049,7 +2054,7 @@
 		 * only expire and reinvoke request handler, if there are
 		 * other queues with pending requests
 		 */
-		if (!cfqd->busy_queues) {
+		if (!cfq_pending_requests(cfqd)) {
 			cfqd->idle_slice_timer.expires = min(now + cfqd->cfq_slice_idle, cfqq->slice_end);
 			add_timer(&cfqd->idle_slice_timer);
 			goto out_cont;
@@ -2066,7 +2071,7 @@
 expire:
 	cfq_slice_expired(cfqd, 0);
 out_kick:
-	if (cfqd->busy_queues)
+	if (cfq_pending_requests(cfqd))
 		kblockd_schedule_work(&cfqd->unplug_work);
 out_cont:
 	spin_unlock_irqrestore(cfqd->queue->queue_lock, flags);
