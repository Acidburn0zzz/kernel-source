
This patch allows LLDs to override the default read/write timeout used
for scsi disks. The default timeout value used is too short for many
RAID array devices, such as those created by the ipr driver.

---


diff -puN drivers/scsi/sd.c~sd_timeout_mod drivers/scsi/sd.c
--- linux-2.6.5/drivers/scsi/sd.c~sd_timeout_mod	Mon Apr  5 14:18:48 2004
+++ linux-2.6.5-bjking1/drivers/scsi/sd.c	Mon Apr  5 14:18:48 2004
@@ -203,9 +203,7 @@ static int sd_init_command(struct scsi_c
 	sector_t block;
 	struct scsi_device *sdp = SCpnt->device;
 
-	timeout = SD_TIMEOUT;
-	if (SCpnt->device->type != TYPE_DISK)
-		timeout = SD_MOD_TIMEOUT;
+	timeout = sdp->rw_timeout;
 
 	/*
 	 * these are already setup, just copy cdb basically
@@ -1370,6 +1368,13 @@ static int sd_probe(struct device *dev)
 	sdkp->index = index;
 	sdkp->openers = 0;
 
+	if (!sdp->rw_timeout) {
+		if (sdp->type == TYPE_DISK)
+			sdp->rw_timeout = SD_TIMEOUT;
+		else
+			sdp->rw_timeout = SD_MOD_TIMEOUT;
+	}
+
 	devno = make_sd_dev(index, 0);
 	gd->major = MAJOR(devno);
 	gd->first_minor = MINOR(devno);
diff -puN include/scsi/scsi_device.h~sd_timeout_mod include/scsi/scsi_device.h
--- linux-2.6.5/include/scsi/scsi_device.h~sd_timeout_mod	Mon Apr  5 14:18:48 2004
+++ linux-2.6.5-bjking1/include/scsi/scsi_device.h	Mon Apr  5 14:18:48 2004
@@ -104,6 +104,8 @@ struct scsi_device {
 	unsigned int max_device_blocked; /* what device_blocked counts down from  */
 #define SCSI_DEFAULT_DEVICE_BLOCKED	3
 
+	int rw_timeout;
+
 	struct device		sdev_gendev;
 	struct class_device	sdev_classdev;
 

_
