From: Hannes Reinecke <hare@suse.de>
Subject: Do not call complete on libata errors

When libata throws error it should _not_ try to call complete, as this
would clear the command in the upper layers before the midlayer has a
chance to clear it from the scsi_eh queue.

--- linux-2.6.12/drivers/scsi/libata-core.c.orig	2005-08-03 08:32:20.000000000 +0200
+++ linux-2.6.12/drivers/scsi/libata-core.c	2005-08-03 13:46:41.000000000 +0200
@@ -2885,13 +2885,12 @@ static void ata_qc_timeout(struct ata_qu
 		goto out;
 	}
 
-	/* hack alert!  We cannot use the supplied completion
-	 * function from inside the ->eh_strategy_handler() thread.
-	 * libata is the only user of ->eh_strategy_handler() in
-	 * any kernel, so the default scsi_done() assumes it is
-	 * not being called from the SCSI EH.
+	/*
+	 * Do not call scsi_finish_command; this will be handled
+	 * by scsi_eh (control is passed back to scsi_eh after
+	 * this routine has finished).
 	 */
-	qc->scsidone = scsi_finish_command;
+	qc->scsidone = ata_qc_timeout_done;
 
 	switch (qc->tf.protocol) {
 
