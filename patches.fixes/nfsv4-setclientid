From: NeilBrown <neilb@suse.de>
Subject: Improve unqiueness of client id sent by NFSv4
Patch-mainline: not yet
References: 167953

When the NFS client creates locking state on the server, it used
SETCLIENTID which requires the creation of a unique identifier for
the client.

To handle cases where the server might claim an identifer is already
in use, the client has a numerical 'uniquifier' which is incremented
on failure.
Because buffer available for this unique name is only 31 chars,
and because the uniquifier is at the end, it can sometimes
be left off thus making it completely useless.

This patch moves the uniquifier to the start so it will always have
a valuable effect.

Normally the uniquifier should not be needed as the client's IP address
is already in the string.  However on (some?) suse clients, the
IP address is determined to be 127.0.0.2, which isn't very useful.

We could make the buffer larger (the protocol limit is 1024) but 
this seems like a smaller change.

IP address comes from the 'mount' program and it should be enhanced to
make a better attempt at getting a good IP address.  Work is proceeding
on that.  However this patch is simple and reasonably effective.

Without this patch, multiple clients can end up being serialised causing
incredibly slow throughput.

Signed-off-by: Neil Brown <neilb@suse.de>

Index: linux-2.6.16/fs/nfs/nfs4proc.c
===================================================================
--- linux-2.6.16.orig/fs/nfs/nfs4proc.c	2006-06-20 12:43:19.000000000 +1000
+++ linux-2.6.16/fs/nfs/nfs4proc.c	2006-06-20 12:44:38.000000000 +1000
@@ -2873,10 +2873,10 @@
 
 	for(;;) {
 		setclientid.sc_name_len = scnprintf(setclientid.sc_name,
-				sizeof(setclientid.sc_name), "%s/%u.%u.%u.%u %s %u",
+				sizeof(setclientid.sc_name), "%u %s/%u.%u.%u.%u %s",
+				clp->cl_id_uniquifier,
 				clp->cl_ipaddr, NIPQUAD(clp->cl_addr.s_addr),
-				cred->cr_ops->cr_name,
-				clp->cl_id_uniquifier);
+				cred->cr_ops->cr_name);
 		setclientid.sc_netid_len = scnprintf(setclientid.sc_netid,
 				sizeof(setclientid.sc_netid), "tcp");
 		setclientid.sc_uaddr_len = scnprintf(setclientid.sc_uaddr,
