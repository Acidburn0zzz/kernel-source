diff -Nru a/arch/i386/lib/delay.c b/arch/i386/lib/delay.c
--- a/arch/i386/lib/delay.c	Mon Jun  7 17:56:35 2004
+++ b/arch/i386/lib/delay.c	Mon Jun  7 17:56:35 2004
@@ -28,18 +28,24 @@
 	cur_timer->delay(loops);
 }
 
+/* In order to support cpu frequencies > 4Ghz, 
+ * we need to insure loops_per_jiffy * HZ fits in 32 bits.
+ * Thus we multiply xloops up by 4 and divide HZ down by four.
+ */
+#define SCALE_FACTOR 4 
 inline void __const_udelay(unsigned long xloops)
 {
 	int d0;
+	xloops *= SCALE_FACTOR;
 	__asm__("mull %0"
 		:"=d" (xloops), "=&a" (d0)
-		:"1" (xloops),"0" (current_cpu_data.loops_per_jiffy));
-        __delay(xloops * HZ);
+		:"1" (xloops),"0" ((HZ/SCALE_FACTOR)*current_cpu_data.loops_per_jiffy));
+	__delay(xloops?xloops:1);
 }
 
 void __udelay(unsigned long usecs)
 {
-	__const_udelay(usecs * 0x000010c6);  /* 2**32 / 1000000 */
+	__const_udelay(usecs * 0x000010c7);  /* 2**32 / 1000000 */
 }
 
 void __ndelay(unsigned long nsecs)
diff -Nru a/include/asm-i386/delay.h b/include/asm-i386/delay.h
--- a/include/asm-i386/delay.h	Mon Jun  7 17:56:35 2004
+++ b/include/asm-i386/delay.h	Mon Jun  7 17:56:35 2004
@@ -16,7 +16,7 @@
 extern void __delay(unsigned long loops);
 
 #define udelay(n) (__builtin_constant_p(n) ? \
-	((n) > 20000 ? __bad_udelay() : __const_udelay((n) * 0x10c6ul)) : \
+	((n) > 20000 ? __bad_udelay() : __const_udelay((n) * 0x10c7ul)) : \
 	__udelay(n))
 	
 #define ndelay(n) (__builtin_constant_p(n) ? \
