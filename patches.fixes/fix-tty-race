ChangeSet
  1.1608.6.120 04/05/10 14:07:55 akpm@osdl.org[torvalds] +1 -0
  [PATCH] Fix race on tty close

  From: Benjamin Herrenschmidt <benh@kernel.crashing.org>

  ldisc close can race with the flush_to_ldisc workqueue.

  This patch fixes it by killing the workqueue first.

  drivers/char/tty_io.c
    1.137 04/05/10 04:25:52 akpm@osdl.org[torvalds] +12 -12
    Fix race on tty close


===== drivers/char/tty_io.c 1.136 vs edited =====
--- 1.136/drivers/char/tty_io.c	Tue Apr 13 03:54:18 2004
+++ edited/drivers/char/tty_io.c	Mon May  3 11:50:46 2004
@@ -1267,6 +1267,18 @@
 #endif
 
 	/*
+	 * Prevent flush_to_ldisc() from rescheduling the work for later.  Then
+	 * kill any delayed work.
+	 */
+	clear_bit(TTY_DONT_FLIP, &tty->flags);
+	cancel_delayed_work(&tty->flip.work);
+
+	/*
+	 * Wait for ->hangup_work and ->flip.work handlers to terminate
+	 */
+	flush_scheduled_work();
+
+	/*
 	 * Shutdown the current line discipline, and reset it to N_TTY.
 	 * N.B. why reset ldisc when we're releasing the memory??
 	 */
@@ -1281,19 +1293,7 @@
 			(o_tty->ldisc.close)(o_tty);
 		module_put(o_tty->ldisc.owner);
 		o_tty->ldisc = ldiscs[N_TTY];
-	}
-	
-	/*
-	 * Prevent flush_to_ldisc() from rescheduling the work for later.  Then
-	 * kill any delayed work.
-	 */
-	clear_bit(TTY_DONT_FLIP, &tty->flags);
-	cancel_delayed_work(&tty->flip.work);
-
-	/*
-	 * Wait for ->hangup_work and ->flip.work handlers to terminate
-	 */
-	flush_scheduled_work();
+	}	
 
 	/* 
 	 * The release_mem function takes care of the details of clearing


