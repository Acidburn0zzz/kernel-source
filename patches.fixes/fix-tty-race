Return-Path: <benh@kernel.crashing.org>
Received: from hermes.suse.de (hermes.suse.de [10.0.0.1])
	by wotan.suse.de (Postfix) with ESMTP id B57FA20035
	for <olh@wotan.suse.de>; Thu,  6 May 2004 05:25:27 +0200 (CEST)
Received: by hermes.suse.de (Postfix)
	id B281268E2F; Thu,  6 May 2004 05:25:27 +0200 (CEST)
Received: from scanhost.suse.de (scanhost.suse.de [10.0.0.5])
	by hermes.suse.de (Postfix) with ESMTP id AC99C68E0F
	for <olh@suse.de>; Thu,  6 May 2004 05:25:27 +0200 (CEST)
Received: from hermes.suse.de ([10.0.0.1])
 by scanhost.suse.de (scanhost [10.0.0.5]) (amavisd-new, port 10025)
 with ESMTP id 30648-18 for <olh@suse.de>;
 Thu,  6 May 2004 05:25:24 +0200 (CEST)
Received: from Cantor.suse.de (ns.suse.de [195.135.220.2])
	(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))
	(No client certificate requested)
	by hermes.suse.de (Postfix) with ESMTP id AF22368E2F
	for <olh@suse.de>; Thu,  6 May 2004 05:25:24 +0200 (CEST)
Received: from gate.crashing.org (gate.crashing.org [63.228.1.57])
	(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))
	(No client certificate requested)
	by Cantor.suse.de (Postfix) with ESMTP id 29D7B556429
	for <olh@suse.de>; Thu,  6 May 2004 05:25:23 +0200 (CEST)
Received: from localhost (localhost.localdomain [127.0.0.1])
	by gate.crashing.org (8.12.8/8.12.8) with ESMTP id i463MZRo023181
	for <olh@suse.de>; Wed, 5 May 2004 22:22:36 -0500
Subject: [PATCH] Fix tty race
From: Benjamin Herrenschmidt <benh@kernel.crashing.org>
To: Olaf Hering <olh@suse.de>
Content-Type: text/plain
Message-Id: <1083813585.19138.71.camel@gaston>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.4.6 
Date: Thu, 06 May 2004 13:19:46 +1000
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: by amavisd-new at scanhost.suse.de
X-Spam-Checker-Version: SpamAssassin 2.63 (2004-01-11) on wotan.suse.de
X-Spam-Level: 
X-Spam-Status: No, hits=-4.8 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=2.63

Hi Olaf !

I think this patch will fix the crash on reboot that happens
with the tty stuff on blades.

===== drivers/char/tty_io.c 1.136 vs edited =====
--- 1.136/drivers/char/tty_io.c	Tue Apr 13 03:54:18 2004
+++ edited/drivers/char/tty_io.c	Mon May  3 11:50:46 2004
@@ -1267,6 +1267,18 @@
 #endif
 
 	/*
+	 * Prevent flush_to_ldisc() from rescheduling the work for later.  Then
+	 * kill any delayed work.
+	 */
+	clear_bit(TTY_DONT_FLIP, &tty->flags);
+	cancel_delayed_work(&tty->flip.work);
+
+	/*
+	 * Wait for ->hangup_work and ->flip.work handlers to terminate
+	 */
+	flush_scheduled_work();
+
+	/*
 	 * Shutdown the current line discipline, and reset it to N_TTY.
 	 * N.B. why reset ldisc when we're releasing the memory??
 	 */
@@ -1281,19 +1293,7 @@
 			(o_tty->ldisc.close)(o_tty);
 		module_put(o_tty->ldisc.owner);
 		o_tty->ldisc = ldiscs[N_TTY];
-	}
-	
-	/*
-	 * Prevent flush_to_ldisc() from rescheduling the work for later.  Then
-	 * kill any delayed work.
-	 */
-	clear_bit(TTY_DONT_FLIP, &tty->flags);
-	cancel_delayed_work(&tty->flip.work);
-
-	/*
-	 * Wait for ->hangup_work and ->flip.work handlers to terminate
-	 */
-	flush_scheduled_work();
+	}	
 
 	/* 
 	 * The release_mem function takes care of the details of clearing


