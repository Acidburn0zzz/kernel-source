diff -u linux/drivers/char/agp/sis-agp.c-X linux/drivers/char/agp/sis-agp.c
--- linux/drivers/char/agp/sis-agp.c-X	2004-05-18 10:48:15.000000000 +0200
+++ linux/drivers/char/agp/sis-agp.c	2004-05-18 10:48:44.000000000 +0200
@@ -93,10 +93,14 @@
 
 		pci_write_config_dword(device, agp + PCI_AGP_COMMAND, command);
 
-		if(device->device == PCI_DEVICE_ID_SI_648) {
-			// weird: on 648 and 648fx chipsets any rate change in the target command register
-			// triggers a 5ms screwup during which the master cannot be configured
-			printk(KERN_INFO PFX "sis 648 agp fix - giving bridge time to recover\n");
+		/*
+		 * Weird: on 648(fx) and 746(fx) chipsets any rate change in the target
+		 * command register triggers a 5ms screwup during which the master
+		 * cannot be configured		 
+		 */
+		if (device->device == PCI_DEVICE_ID_SI_648 ||
+		    device->device == PCI_DEVICE_ID_SI_746) {
+			printk(KERN_INFO PFX "SiS chipset with AGP problems detected. Giving bridge time to recover.\n");
 			set_current_state(TASK_UNINTERRUPTIBLE);
 			schedule_timeout (1+(HZ*10)/1000);
 		}
@@ -221,20 +225,27 @@
 
 static void __devinit sis_get_driver(struct agp_bridge_data *bridge)
 {
-	if (bridge->dev->device == PCI_DEVICE_ID_SI_648) {
-		if (agp_bridge->major_version == 3 && agp_bridge->minor_version < 5) {
-			sis_driver.agp_enable=sis_648_enable;
-		} else {
-			sis_driver.agp_enable			= sis_648_enable;
-			sis_driver.aperture_sizes		= agp3_generic_sizes;
-			sis_driver.size_type			= U16_APER_SIZE;
-			sis_driver.num_aperture_sizes	= AGP_GENERIC_SIZES_ENTRIES;
-			sis_driver.configure			= agp3_generic_configure;
-			sis_driver.fetch_size			= agp3_generic_fetch_size;
-			sis_driver.cleanup				= agp3_generic_cleanup;
-			sis_driver.tlb_flush			= agp3_generic_tlbflush;
+	if (bridge->dev->device == PCI_DEVICE_ID_SI_648) { 
+		sis_driver.agp_enable=sis_648_enable;
+		if (agp_bridge->major_version == 3) {
+			sis_driver.aperture_sizes = agp3_generic_sizes;
+			sis_driver.size_type = U16_APER_SIZE;
+			sis_driver.num_aperture_sizes = AGP_GENERIC_SIZES_ENTRIES;
+			sis_driver.configure = agp3_generic_configure;
+			sis_driver.fetch_size = agp3_generic_fetch_size;
+			sis_driver.cleanup = agp3_generic_cleanup;
+			sis_driver.tlb_flush = agp3_generic_tlbflush;
 		}
 	}
+
+	if (bridge->dev->device == PCI_DEVICE_ID_SI_746) {
+		/*
+		 * We don't know enough about the 746 to enable it properly.
+		 * Though we do know that it needs the 'delay' hack to settle
+		 * after changing modes.
+		 */
+		sis_driver.agp_enable=sis_648_enable;
+	}
 }
 
 
