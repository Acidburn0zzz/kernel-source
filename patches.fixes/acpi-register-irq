--- linux-2.6.7/include/asm-ia64/acpi.h.~1~	2004-06-16 07:19:52.000000000 +0200
+++ linux-2.6.7/include/asm-ia64/acpi.h	2004-08-05 11:05:42.309209517 +0200
@@ -95,7 +95,6 @@ static inline void disable_acpi(void) { 
 
 const char *acpi_get_sysname (void);
 int acpi_request_vector (u32 int_type);
-int acpi_register_irq (u32 gsi, u32 polarity, u32 trigger);
 int acpi_gsi_to_irq (u32 gsi, unsigned int *irq);
 
 #ifdef CONFIG_ACPI_NUMA
--- linux-2.6.7/sound/drivers/mpu401/mpu401.c.~1~	2004-08-05 11:29:36.258858177 +0200
+++ linux-2.6.7/sound/drivers/mpu401/mpu401.c	2004-08-05 11:32:09.045139404 +0200
@@ -30,6 +30,9 @@
 #ifdef CONFIG_ACPI_BUS
 #include <acpi/acpi_bus.h>
 #endif
+#ifdef CONFIG_IA64
+#include <linux/acpi.h>
+#endif
 #include <linux/moduleparam.h>
 #include <sound/core.h>
 #include <sound/mpu401.h>
@@ -99,9 +102,9 @@ static acpi_status __devinit snd_mpu401_
 	if (res->id == ACPI_RSTYPE_IRQ) {
 		if (res->data.irq.number_of_interrupts > 0) {
 #ifdef CONFIG_IA64
-			resources->irq = acpi_register_irq(res->data.irq.interrupts[0],
-							   res->data.irq.active_high_low,
-							   res->data.irq.edge_level);
+			resources->irq = acpi_register_gsi(res->data.irq.interrupts[0],
+							   res->data.irq.edge_level,
+							   res->data.irq.active_high_low);
 #else
 			resources->irq = res->data.irq.interrupts[0];
 #endif
