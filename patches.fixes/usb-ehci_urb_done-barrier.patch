             Bugzilla Bug 43633 - high load on a USB 2.0 device will crash the system



 - It's possible smp_mb() is needed before dropping
   ehci->lock in ehci_urb_done() ... cache coherency
   rules relating to spinlocks are unclear to me.
   (Not documented anywhere I've noticed, either.)

 - In qh_completions() at the end, there's sometimes
   a call to qh_update() after fault cleanup.  On one
   embedded platform, I've had a report about a
   race there, controller reading "old" values for
   other QH fields and then the "new" hw_token.

   Fix must involve a delay before updating the
   token, e.g. "next microframe" or maybe just
   a small udelay().

I can imagine either of these causing trouble in your
SMP testing.

  Dave


--- ./drivers/usb/host/ehci-q.c~	2004-08-13 13:30:12.000000000 +0200
+++ ./drivers/usb/host/ehci-q.c	2004-08-13 13:36:12.857710335 +0200
@@ -214,6 +214,7 @@ ehci_urb_done (struct ehci_hcd *ehci, st
 		COUNT (ehci->stats.unlink);
 		break;
 	}
+	smp_wmb();
 	spin_unlock (&urb->lock);
 
 #ifdef EHCI_URB_TRACE
