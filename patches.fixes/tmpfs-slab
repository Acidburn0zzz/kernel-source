# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2004/09/14 07:45:23-07:00 hugh@veritas.com 
#   [PATCH] shmem: don't SLAB_HWCACHE_ALIGN
#   
#   Anton recently removed SLAB_HWCACHE_ALIGN from the fs inode caches, now do the
#   same for tmpfs inode cache: fits 9 per page where 7 before.
#   
#   Was saying SLAB_RECLAIM_ACCOUNT too, but that's wrong: tmpfs inodes are not
#   reclaimed under pressure; and hugetlbfs had copied that too.
#   
#   Rearrange shmem_inode_info fields so those most likely to be needed are most
#   likely to be in the same cacheline as the spinlock guarding them.
#   
#   Signed-off-by: Hugh Dickins <hugh@veritas.com>
#   Signed-off-by: Andrew Morton <akpm@osdl.org>
#   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
# 
# fs/hugetlbfs/inode.c
#   2004/09/13 17:23:17-07:00 hugh@veritas.com +1 -2
#   shmem: don't SLAB_HWCACHE_ALIGN
# 
# include/linux/shmem_fs.h
#   2004/09/13 17:23:17-07:00 hugh@veritas.com +7 -7
#   shmem: don't SLAB_HWCACHE_ALIGN
# 
# mm/shmem.c
#   2004/09/13 17:23:17-07:00 hugh@veritas.com +1 -2
#   shmem: don't SLAB_HWCACHE_ALIGN
# 
diff -Nru a/fs/hugetlbfs/inode.c b/fs/hugetlbfs/inode.c
--- a/fs/hugetlbfs/inode.c	2004-09-18 01:05:13 -07:00
+++ b/fs/hugetlbfs/inode.c	2004-09-18 01:05:13 -07:00
@@ -800,8 +800,7 @@
 
 	hugetlbfs_inode_cachep = kmem_cache_create("hugetlbfs_inode_cache",
 					sizeof(struct hugetlbfs_inode_info),
-					0, SLAB_RECLAIM_ACCOUNT,
-					init_once, NULL);
+					0, 0, init_once, NULL);
 	if (hugetlbfs_inode_cachep == NULL)
 		return -ENOMEM;
 
diff -Nru a/include/linux/shmem_fs.h b/include/linux/shmem_fs.h
--- a/include/linux/shmem_fs.h	2004-09-18 01:05:13 -07:00
+++ b/include/linux/shmem_fs.h	2004-09-18 01:05:13 -07:00
@@ -10,14 +10,14 @@
 
 struct shmem_inode_info {
 	spinlock_t		lock;
-	unsigned long		next_index;
-	swp_entry_t		i_direct[SHMEM_NR_DIRECT]; /* for the first blocks */
-	struct page	       *i_indirect; /* indirect blocks */
-	unsigned long		alloced;    /* data pages allocated to file */
-	unsigned long		swapped;    /* subtotal assigned to swap */
 	unsigned long		flags;
-	struct shared_policy     policy;
-	struct list_head	list;
+	unsigned long		alloced;	/* data pages alloced to file */
+	unsigned long		swapped;	/* subtotal assigned to swap */
+	unsigned long		next_index;	/* highest alloced index + 1 */
+	struct shared_policy	policy;		/* NUMA memory alloc policy */
+	struct page		*i_indirect;	/* top indirect blocks page */
+	swp_entry_t		i_direct[SHMEM_NR_DIRECT]; /* first blocks */
+	struct list_head	list;		/* chain of all shmem inodes */
 	struct inode		vfs_inode;
 };
 
diff -Nru a/mm/shmem.c b/mm/shmem.c
--- a/mm/shmem.c	2004-09-18 01:05:13 -07:00
+++ b/mm/shmem.c	2004-09-18 01:05:13 -07:00
@@ -1897,8 +1897,7 @@
 {
 	shmem_inode_cachep = kmem_cache_create("shmem_inode_cache",
 				sizeof(struct shmem_inode_info),
-				0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT,
-				init_once, NULL);
+				0, 0, init_once, NULL);
 	if (shmem_inode_cachep == NULL)
 		return -ENOMEM;
 	return 0;
