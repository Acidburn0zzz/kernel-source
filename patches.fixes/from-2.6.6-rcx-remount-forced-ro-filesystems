#date: 2004-04-16
#id: 1.1371.714.5
#tag: other
#time: 14:27:28
#title: remount: forced-ro filesystems
#who: viro@www.linux.org.uk[torvalds]
#
# ChangeSet
#   1.1371.714.5 04/04/16 14:27:28 viro@www.linux.org.uk[torvalds] +6 -0
#   [PATCH] remount: forced-ro filesystems
#   
#    - a bunch of r/o filesystems did force MS_RDONLY on mount but forgot to
#      do the same on remount.  Fixed.
#
# fs/romfs/inode.c +7 -0
# fs/qnx4/inode.c +4 -0
# fs/isofs/inode.c +8 -0
# fs/freevxfs/vxfs_super.c +8 -0
# fs/efs/super.c +7 -0
# fs/cramfs/inode.c +7 -0
#
diff -Nru a/fs/cramfs/inode.c b/fs/cramfs/inode.c
--- a/fs/cramfs/inode.c	Wed Apr 28 00:46:16 2004
+++ b/fs/cramfs/inode.c	Wed Apr 28 00:46:16 2004
@@ -193,6 +193,12 @@
 	sb->s_fs_info = NULL;
 }
 
+static int cramfs_remount(struct super_block *sb, int *flags, char *data)
+{
+	*flags |= MS_RDONLY;
+	return 0;
+}
+
 static int cramfs_fill_super(struct super_block *sb, void *data, int silent)
 {
 	int i;
@@ -483,6 +489,7 @@
 
 static struct super_operations cramfs_ops = {
 	.put_super	= cramfs_put_super,
+	.remount_fs	= cramfs_remount,
 	.statfs		= cramfs_statfs,
 };
 
diff -Nru a/fs/efs/super.c b/fs/efs/super.c
--- a/fs/efs/super.c	Wed Apr 28 00:46:16 2004
+++ b/fs/efs/super.c	Wed Apr 28 00:46:16 2004
@@ -77,12 +77,19 @@
 	s->s_fs_info = NULL;
 }
 
+static int efs_remount(struct super_block *sb, int *flags, char *data)
+{
+	*flags |= MS_RDONLY;
+	return 0;
+}
+
 static struct super_operations efs_superblock_operations = {
 	.alloc_inode	= efs_alloc_inode,
 	.destroy_inode	= efs_destroy_inode,
 	.read_inode	= efs_read_inode,
 	.put_super	= efs_put_super,
 	.statfs		= efs_statfs,
+	.remount_fs	= efs_remount,
 };
 
 static int __init init_efs_fs(void) {
diff -Nru a/fs/freevxfs/vxfs_super.c b/fs/freevxfs/vxfs_super.c
--- a/fs/freevxfs/vxfs_super.c	Wed Apr 28 00:46:16 2004
+++ b/fs/freevxfs/vxfs_super.c	Wed Apr 28 00:46:16 2004
@@ -56,12 +56,14 @@
 
 static void		vxfs_put_super(struct super_block *);
 static int		vxfs_statfs(struct super_block *, struct kstatfs *);
+static int		vxfs_remount(struct super_block *, int *, char *);
 
 static struct super_operations vxfs_super_ops = {
 	.read_inode =		vxfs_read_inode,
 	.put_inode =		vxfs_put_inode,
 	.put_super =		vxfs_put_super,
 	.statfs =		vxfs_statfs,
+	.remount_fs =		vxfs_remount,
 };
 
 /**
@@ -118,6 +120,12 @@
 	bufp->f_ffree = infp->vsi_raw->vs_ifree;
 	bufp->f_namelen = VXFS_NAMELEN;
 
+	return 0;
+}
+
+static int vxfs_remount(struct super_block *sb, int *flags, char *data)
+{
+	*flags |= MS_RDONLY;
 	return 0;
 }
 
diff -Nru a/fs/isofs/inode.c b/fs/isofs/inode.c
--- a/fs/isofs/inode.c	Wed Apr 28 00:46:16 2004
+++ b/fs/isofs/inode.c	Wed Apr 28 00:46:16 2004
@@ -119,12 +119,20 @@
 		printk(KERN_INFO "iso_inode_cache: not all structures were freed\n");
 }
 
+static int isofs_remount(struct super_block *sb, int *flags, char *data)
+{
+	/* we probably want a lot more here */
+	*flags |= MS_RDONLY;
+	return 0;
+}
+
 static struct super_operations isofs_sops = {
 	.alloc_inode	= isofs_alloc_inode,
 	.destroy_inode	= isofs_destroy_inode,
 	.read_inode	= isofs_read_inode,
 	.put_super	= isofs_put_super,
 	.statfs		= isofs_statfs,
+	.remount_fs	= isofs_remount,
 };
 
 /* the export_operations structure for describing
diff -Nru a/fs/qnx4/inode.c b/fs/qnx4/inode.c
--- a/fs/qnx4/inode.c	Wed Apr 28 00:46:16 2004
+++ b/fs/qnx4/inode.c	Wed Apr 28 00:46:16 2004
@@ -149,9 +149,13 @@
 
 	qs = qnx4_sb(sb);
 	qs->Version = QNX4_VERSION;
+#ifndef CONFIG_QNX4FS_RW
+	*flags |= MS_RDONLY;
+#endif
 	if (*flags & MS_RDONLY) {
 		return 0;
 	}
+
 	mark_buffer_dirty(qs->sb_buf);
 
 	return 0;
diff -Nru a/fs/romfs/inode.c b/fs/romfs/inode.c
--- a/fs/romfs/inode.c	Wed Apr 28 00:46:16 2004
+++ b/fs/romfs/inode.c	Wed Apr 28 00:46:16 2004
@@ -592,11 +592,18 @@
 		printk(KERN_INFO "romfs_inode_cache: not all structures were freed\n");
 }
 
+static int romfs_remount(struct super_block *sb, int *flags, char *data)
+{
+	*flags |= MS_RDONLY;
+	return 0;
+}
+
 static struct super_operations romfs_ops = {
 	.alloc_inode	= romfs_alloc_inode,
 	.destroy_inode	= romfs_destroy_inode,
 	.read_inode	= romfs_read_inode,
 	.statfs		= romfs_statfs,
+	.remount_fs	= romfs_remount,
 };
 
 static struct super_block *romfs_get_sb(struct file_system_type *fs_type,
