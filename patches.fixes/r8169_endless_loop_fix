Subject: r8169 driver cause a IRQ nobody cared storm and dhcpd hang 
From: Karsten Keil <kkeil@suse.de>
References: 50488

The current r8169 driver ignores IRQs completly if !netif_running(dev),
this can burn few cycles on modern CPUs since with level triggered
interrupts the IRQ will be here forever. It should ACK the IRQ and ignore
only the event itself.
The second problem is, that the r8169_down routine does a
netif_poll_disable(dev); which cause a endless loop in
net/core/dev.c dev_close():
...
        while (test_bit(__LINK_STATE_RX_SCHED, &dev->state)) {
                /* No hurry. */
                current->state = TASK_INTERRUPTIBLE;
                schedule_timeout(1);
        }

This patch fix both problems.

Signed-off-by: Karsten Keil <kkeil@suse.de>

--- linux-2.6.11-rc2/drivers/net/r8169.c.org	2005-02-08 13:44:01.899058836 +0100
+++ linux-2.6.11-rc2/drivers/net/r8169.c	2005-02-08 14:06:31.831943990 +0100
@@ -2217,9 +2217,6 @@
 	int status = 0;
 	int handled = 0;
 
-	if (unlikely(!netif_running(dev)))
-		goto out;
-
 	do {
 		status = RTL_R16(IntrStatus);
 
@@ -2233,6 +2230,9 @@
 		RTL_W16(IntrStatus,
 			(status & RxFIFOOver) ? (status | RxOverflow) : status);
 
+		if (unlikely(!netif_running(dev)))
+			break;
+
 		if (!(status & rtl8169_intr_mask))
 			break;
 
@@ -2274,7 +2274,7 @@
 		/* Clear all interrupt sources. */
 		RTL_W16(IntrStatus, 0xffff);
 	}
-out:
+
 	return IRQ_RETVAL(handled);
 }
 
@@ -2335,8 +2335,6 @@
 
 	synchronize_irq(dev->irq);
 
-	netif_poll_disable(dev);
-
 	/* Give a racing hard_start_xmit a few cycles to complete. */
 	set_current_state(TASK_UNINTERRUPTIBLE);
 	schedule_timeout(1);
