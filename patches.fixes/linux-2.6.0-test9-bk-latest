diff -purN linux-2.6.0-test9/Makefile linux-2.5/Makefile
--- linux-2.6.0-test9/Makefile	2003-11-17 22:03:16.000000000 +0000
+++ linux-2.5/Makefile	2003-10-25 18:37:56.000000000 +0000
@@ -1,7 +1,7 @@
 VERSION = 2
 PATCHLEVEL = 6
 SUBLEVEL = 0
-EXTRAVERSION = -test9-bk22
+EXTRAVERSION = -test9
 
 # *DOCUMENTATION*
 # To see a list of typical targets execute "make help"
diff -purN linux-2.6.0-test9/arch/arm/kernel/signal.c linux-2.5/arch/arm/kernel/signal.c
--- linux-2.6.0-test9/arch/arm/kernel/signal.c	2003-11-17 22:03:16.000000000 +0000
+++ linux-2.5/arch/arm/kernel/signal.c	2003-11-16 09:36:56.000000000 +0000
@@ -187,6 +187,9 @@ asmlinkage int sys_sigreturn(struct pt_r
 	struct sigframe *frame;
 	sigset_t set;
 
+	/* Always make any pending restarted system calls return -EINTR */
+	current_thread_info()->restart_block.fn = do_no_restart_syscall;
+
 	/*
 	 * Since we stacked the signal on a 64-bit boundary,
 	 * then 'sp' should be word aligned here.  If it's
@@ -232,6 +235,9 @@ asmlinkage int sys_rt_sigreturn(struct p
 	struct rt_sigframe *frame;
 	sigset_t set;
 
+	/* Always make any pending restarted system calls return -EINTR */
+	current_thread_info()->restart_block.fn = do_no_restart_syscall;
+
 	/*
 	 * Since we stacked the signal on a 64-bit boundary,
 	 * then 'sp' should be word aligned here.  If it's
@@ -462,8 +468,6 @@ handle_signal(unsigned long sig, siginfo
 	if (syscall) {
 		switch (regs->ARM_r0) {
 		case -ERESTART_RESTARTBLOCK:
-			current_thread_info()->restart_block.fn =
-				do_no_restart_syscall;
 		case -ERESTARTNOHAND:
 			regs->ARM_r0 = -EINTR;
 			break;
diff -purN linux-2.6.0-test9/fs/lockd/clntlock.c linux-2.5/fs/lockd/clntlock.c
--- linux-2.6.0-test9/fs/lockd/clntlock.c	2003-10-25 18:44:45.000000000 +0000
+++ linux-2.5/fs/lockd/clntlock.c	2003-11-17 09:37:40.000000000 +0000
@@ -188,7 +188,7 @@ nlmclnt_recovery(struct nlm_host *host, 
 		nlmclnt_prepare_reclaim(host, newstate);
 		nlm_get_host(host);
 		__module_get(THIS_MODULE);
-		if (kernel_thread(reclaimer, host, CLONE_KERNEL))
+		if (kernel_thread(reclaimer, host, CLONE_KERNEL) < 0)
 			module_put(THIS_MODULE);
 	}
 }
diff -purN linux-2.6.0-test9/mm/bootmem.c linux-2.5/mm/bootmem.c
--- linux-2.6.0-test9/mm/bootmem.c	2003-10-25 18:43:18.000000000 +0000
+++ linux-2.5/mm/bootmem.c	2003-11-17 10:44:59.000000000 +0000
@@ -48,24 +48,8 @@ static unsigned long __init init_bootmem
 	bootmem_data_t *bdata = pgdat->bdata;
 	unsigned long mapsize = ((end - start)+7)/8;
 
-
-	/*
-	 * sort pgdat_list so that the lowest one comes first,
-	 * which makes alloc_bootmem_low_pages work as desired.
-	 */
-	if (!pgdat_list || pgdat_list->node_start_pfn > pgdat->node_start_pfn) {
-		pgdat->pgdat_next = pgdat_list;
-		pgdat_list = pgdat;
-	} else {
-		pg_data_t *tmp = pgdat_list;
-		while (tmp->pgdat_next) {
-			if (tmp->pgdat_next->node_start_pfn > pgdat->node_start_pfn)
-				break;
-			tmp = tmp->pgdat_next;
-		}
-		pgdat->pgdat_next = tmp->pgdat_next;
-		tmp->pgdat_next = pgdat;
-	}
+	pgdat->pgdat_next = pgdat_list;
+	pgdat_list = pgdat;
 
 	mapsize = (mapsize + (sizeof(long) - 1UL)) & ~(sizeof(long) - 1UL);
 	bdata->node_bootmem_map = phys_to_virt(mapstart << PAGE_SHIFT);
