diff -purN linux-2.6.0-test9/Makefile linux-2.5/Makefile
--- linux-2.6.0-test9/Makefile	2003-11-18 14:41:35.000000000 +0000
+++ linux-2.5/Makefile	2003-10-25 18:37:56.000000000 +0000
@@ -1,7 +1,7 @@
 VERSION = 2
 PATCHLEVEL = 6
 SUBLEVEL = 0
-EXTRAVERSION = -test9-bk23
+EXTRAVERSION = -test9
 
 # *DOCUMENTATION*
 # To see a list of typical targets execute "make help"
diff -purN linux-2.6.0-test9/arch/sparc/kernel/signal.c linux-2.5/arch/sparc/kernel/signal.c
--- linux-2.6.0-test9/arch/sparc/kernel/signal.c	2003-11-18 14:41:35.000000000 +0000
+++ linux-2.5/arch/sparc/kernel/signal.c	2003-11-14 00:24:09.000000000 +0000
@@ -284,9 +284,6 @@ asmlinkage void do_sigreturn(struct pt_r
 	sigset_t set;
 	int err;
 
-	/* Always make any pending restarted system calls return -EINTR */
-	current_thread_info()->restart_block.fn = do_no_restart_syscall;
-
 	synchronize_user_stack();
 
 	if (current->thread.new_signal)
@@ -1088,6 +1085,12 @@ asmlinkage int do_signal(sigset_t *oldse
 		
 		ka = &current->sighand->action[signr-1];
 
+		/* Always make any pending restarted system
+		 * calls return -EINTR.
+		 */
+		current_thread_info()->restart_block.fn =
+			do_no_restart_syscall;
+
 		if (cookie.restart_syscall)
 			syscall_restart(cookie.orig_i0, regs, &ka->sa);
 		handle_signal(signr, ka, &info, oldset, regs, svr4_signal);
diff -purN linux-2.6.0-test9/arch/sparc64/kernel/signal.c linux-2.5/arch/sparc64/kernel/signal.c
--- linux-2.6.0-test9/arch/sparc64/kernel/signal.c	2003-11-18 14:41:35.000000000 +0000
+++ linux-2.5/arch/sparc64/kernel/signal.c	2003-11-14 00:24:10.000000000 +0000
@@ -382,9 +382,6 @@ void do_rt_sigreturn(struct pt_regs *reg
 	stack_t st;
 	int err;
 
-	/* Always make any pending restarted system calls return -EINTR */
-	current_thread_info()->restart_block.fn = do_no_restart_syscall;
-
 	synchronize_user_stack ();
 	sf = (struct rt_signal_frame __user *)
 		(regs->u_regs [UREG_FP] + STACK_BIAS);
@@ -630,6 +627,12 @@ static int do_signal(sigset_t *oldset, s
 
 		ka = &current->sighand->action[signr-1];
 
+		/* Always make any pending restarted system
+		 * calls return -EINTR.
+		 */
+		current_thread_info()->restart_block.fn =
+			do_no_restart_syscall;
+
 		if (cookie.restart_syscall)
 			syscall_restart(orig_i0, regs, &ka->sa);
 		handle_signal(signr, ka, &info, oldset, regs);
diff -purN linux-2.6.0-test9/arch/sparc64/kernel/signal32.c linux-2.5/arch/sparc64/kernel/signal32.c
--- linux-2.6.0-test9/arch/sparc64/kernel/signal32.c	2003-11-18 14:41:35.000000000 +0000
+++ linux-2.5/arch/sparc64/kernel/signal32.c	2003-11-14 00:24:10.000000000 +0000
@@ -331,9 +331,6 @@ asmlinkage void do_sigreturn32(struct pt
 	unsigned int seta[_COMPAT_NSIG_WORDS];
 	int err;
 
-	/* Always make any pending restarted system calls return -EINTR */
-	current_thread_info()->restart_block.fn = do_no_restart_syscall;
-
 	synchronize_user_stack();
 	if (test_thread_flag(TIF_NEWSIGNALS))
 		return do_new_sigreturn32(regs);
@@ -401,9 +398,6 @@ asmlinkage void do_rt_sigreturn32(struct
 	stack_t st;
 	int err, i;
 	
-	/* Always make any pending restarted system calls return -EINTR */
-	current_thread_info()->restart_block.fn = do_no_restart_syscall;
-
 	synchronize_user_stack();
 	regs->u_regs[UREG_FP] &= 0x00000000ffffffffUL;
 	sf = (struct rt_signal_frame32 __user *) regs->u_regs[UREG_FP];
@@ -1264,6 +1258,12 @@ int do_signal32(sigset_t *oldset, struct
 
 		ka = &current->sighand->action[signr-1];
 
+		/* Always make any pending restarted system
+		 * calls return -EINTR.
+		 */
+		current_thread_info()->restart_block.fn =
+			do_no_restart_syscall;
+
 		if (cookie.restart_syscall)
 			syscall_restart32(orig_i0, regs, &ka->sa);
 		handle_signal32(signr, ka, &info, oldset, regs, svr4_signal);
diff -purN linux-2.6.0-test9/drivers/video/console/Kconfig linux-2.5/drivers/video/console/Kconfig
--- linux-2.6.0-test9/drivers/video/console/Kconfig	2003-11-18 14:41:35.000000000 +0000
+++ linux-2.5/drivers/video/console/Kconfig	2003-09-12 03:19:35.000000000 +0000
@@ -6,7 +6,7 @@ menu "Console display driver support"
 
 config VGA_CONSOLE
 	bool "VGA text console" if EMBEDDED || !X86
-	depends on !ARCH_ACORN && !ARCH_EBSA110 && !4xx && !8xx && !SPARC32 && !SPARC64
+	depends on !ARCH_ACORN && !ARCH_EBSA110 || !4xx && !8xx
 	default y
 	help
 	  Saying Y here will allow you to use Linux in text mode through a
diff -purN linux-2.6.0-test9/net/ipv6/mcast.c linux-2.5/net/ipv6/mcast.c
--- linux-2.6.0-test9/net/ipv6/mcast.c	2003-11-18 14:41:35.000000000 +0000
+++ linux-2.5/net/ipv6/mcast.c	2003-10-27 08:05:19.000000000 +0000
@@ -664,7 +664,7 @@ static void igmp6_group_dropped(struct i
 		goto done;
 	spin_unlock_bh(&mc->mca_lock);
 
-	if (!mc->idev->dead)
+	if (dev->flags&IFF_UP)
 		igmp6_leave_group(mc);
 
 	spin_lock_bh(&mc->mca_lock);
diff -purN linux-2.6.0-test9/net/ipv6/route.c linux-2.5/net/ipv6/route.c
--- linux-2.6.0-test9/net/ipv6/route.c	2003-11-18 14:41:35.000000000 +0000
+++ linux-2.5/net/ipv6/route.c	2003-11-11 07:09:55.000000000 +0000
@@ -1558,13 +1558,13 @@ rtattr_failure:
 static int rt6_dump_route(struct rt6_info *rt, void *p_arg)
 {
 	struct rt6_rtnl_dump_arg *arg = (struct rt6_rtnl_dump_arg *) p_arg;
+	struct rtmsg *rtm;
 	int prefix;
 
-	if (arg->cb->nlh->nlmsg_len >= NLMSG_LENGTH(sizeof(struct rtmsg))) {
-		struct rtmsg *rtm = NLMSG_DATA(arg->cb->nlh);
+	rtm = NLMSG_DATA(arg->cb->nlh);
+	if (rtm)
 		prefix = (rtm->rtm_flags & RTM_F_PREFIX) != 0;
-	} else
-		prefix = 0;
+	else prefix = 0;
 
 	return rt6_fill_node(arg->skb, rt, NULL, NULL, 0, RTM_NEWROUTE,
 		     NETLINK_CB(arg->cb->skb).pid, arg->cb->nlh->nlmsg_seq,
diff -purN linux-2.6.0-test9/net/ipv6/udp.c linux-2.5/net/ipv6/udp.c
--- linux-2.6.0-test9/net/ipv6/udp.c	2003-11-18 14:41:35.000000000 +0000
+++ linux-2.5/net/ipv6/udp.c	2003-10-27 07:59:57.000000000 +0000
@@ -551,7 +551,6 @@ static struct sock *udp_v6_mcast_next(st
 			if (!ipv6_addr_any(&np->rcv_saddr)) {
 				if (!ipv6_addr_cmp(&np->rcv_saddr, loc_addr))
 					return s;
-				continue;
 			}
 			if(!inet6_mc_check(s, loc_addr, rmt_addr))
 				continue;
