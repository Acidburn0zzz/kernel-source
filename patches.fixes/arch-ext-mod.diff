From: Andreas Gruenbacher <agruen@suse.de>
Subject: External modules for pseudo-architectures

The documented way to compile externel modules is to use ``make -C $DIR
M=$(pwd)''.  DIR can either be a kernel source tree, or an object file
tree generated with ``make -C $KERNEL_SOURCE_DIR O=$KERNEL_DIR''.

In case of pseudo-architectures like uml and xen, the
pseudo-architecture needs to be included as well, or else compiling
modules would fail: ``make -C $DIR M=$(pwd) ARCH=um''.

We can include this ARCH setting in the makefiles which we generate in
O= directories though, so that we don't need to specify it in that case.
This allows us to iterate over a set of output directories (e.g., up,
smp, uml, xen) for generating modules for each configuration easily:

  for flavor in $(ls /usr/src/linux-obj/`uname -r`); do
    rm -rf obj/$flavor
    cp -r source obj/$flavor
    make -C /usr/src/linux-obj/`uname -r`/$flavor \
    	 M=`pwd`/obj/$flavor
  done

Signed-off-by: Andreas Gruenbacher <agruen@suse.de>

Index: linux-2.6.13-rc6/scripts/mkmakefile
===================================================================
--- linux-2.6.13-rc6.orig/scripts/mkmakefile
+++ linux-2.6.13-rc6/scripts/mkmakefile
@@ -11,13 +11,14 @@
 
 
 cat << EOF
-# Automatically generated by $0: don't edit
+# Automatically generated by $(basename $0): don't edit
 
 VERSION = $3
 PATCHLEVEL = $4
 
 KERNELSRC    := $1
 KERNELOUTPUT := $2
+export ARCH  := $ARCH
 
 MAKEFLAGS += --no-print-directory
 
