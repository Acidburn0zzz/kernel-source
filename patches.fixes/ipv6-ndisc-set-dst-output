Index: linux-2.6.5/net/ipv6/ndisc.c
===================================================================
--- linux-2.6.5.orig/net/ipv6/ndisc.c	2004-06-09 11:41:34.000000000 +0200
+++ linux-2.6.5/net/ipv6/ndisc.c	2004-06-09 12:19:19.000000000 +0200
@@ -416,7 +416,7 @@
 
 	ndisc_flow_init(&fl, NDISC_NEIGHBOUR_ADVERTISEMENT, src_addr, daddr);
 
-	dst = ndisc_dst_alloc(dev, neigh, daddr, ip6_output2);
+	dst = ndisc_dst_alloc(dev, neigh, daddr, ip6_output);
 	if (!dst)
 		return;
 
@@ -506,7 +506,7 @@
 
 	ndisc_flow_init(&fl, NDISC_NEIGHBOUR_SOLICITATION, saddr, daddr);
 
-	dst = ndisc_dst_alloc(dev, neigh, daddr, ip6_output2);
+	dst = ndisc_dst_alloc(dev, neigh, daddr, ip6_output);
 	if (!dst)
 		return;
 
@@ -581,7 +581,7 @@
 
 	ndisc_flow_init(&fl, NDISC_ROUTER_SOLICITATION, saddr, daddr);
 
-	dst = ndisc_dst_alloc(dev, NULL, daddr, ip6_output2);
+	dst = ndisc_dst_alloc(dev, NULL, daddr, ip6_output);
 	if (!dst)
 		return;
 
Index: linux-2.6.5/net/ipv6/route.c
===================================================================
--- linux-2.6.5.orig/net/ipv6/route.c	2004-06-09 11:41:34.000000000 +0200
+++ linux-2.6.5/net/ipv6/route.c	2004-06-09 12:22:10.000000000 +0200
@@ -89,6 +89,8 @@
 static int		ip6_pkt_discard(struct sk_buff *skb);
 static void		ip6_link_failure(struct sk_buff *skb);
 static void		ip6_rt_update_pmtu(struct dst_entry *dst, u32 mtu);
+static int		ipv6_get_mtu(struct net_device *dev);
+static unsigned int	ipv6_advmss(unsigned int mtu);
 
 static struct dst_ops ip6_dst_ops = {
 	.family			=	AF_INET6,
@@ -603,6 +605,8 @@
 	rt->rt6i_metric   = 0;
 	atomic_set(&rt->u.dst.__refcnt, 1);
 	rt->u.dst.metrics[RTAX_HOPLIMIT-1] = 255;
+	rt->u.dst.metrics[RTAX_MTU-1] = ipv6_get_mtu(rt->rt6i_dev);
+	rt->u.dst.metrics[RTAX_ADVMSS-1] = ipv6_advmss(dst_pmtu(&rt->u.dst));
 	rt->u.dst.output  = output;
 
 	write_lock_bh(&rt6_lock);
@@ -678,7 +682,7 @@
 	return mtu;
 }
 
-static inline unsigned int ipv6_advmss(unsigned int mtu)
+static unsigned int ipv6_advmss(unsigned int mtu)
 {
 	mtu -= sizeof(struct ipv6hdr) + sizeof(struct tcphdr);
 
