axboe@suse.de

Bugfix

Some disks nedd much more than 2 hours to low-level format ...

On Tue, May 11 2004, Arjan van de Ven wrote:
> On Tue, 2004-05-11 at 14:20, Jens Axboe wrote:
> > On Tue, May 11 2004, Kurt Garloff wrote:
> > > Hi,
> > block/scsi_ioctl.c should likely receive similar treatment then.
> 
> how about sticking these in a shared header between the 2 files ?

yep would be best, ala

===== drivers/block/scsi_ioctl.c 1.42 vs edited =====
Index: linux-2.6.8/drivers/block/scsi_ioctl.c
===================================================================
--- linux-2.6.8.orig/drivers/block/scsi_ioctl.c
+++ linux-2.6.8/drivers/block/scsi_ioctl.c
@@ -319,13 +319,8 @@ static int sg_io(struct file *file, requ
 	 * structure (struct sg_io_hdr).  */
 	return 0;
 }
 
-#define FORMAT_UNIT_TIMEOUT		(2 * 60 * 60 * HZ)
-#define START_STOP_TIMEOUT		(60 * HZ)
-#define MOVE_MEDIUM_TIMEOUT		(5 * 60 * HZ)
-#define READ_ELEMENT_STATUS_TIMEOUT	(5 * 60 * HZ)
-#define READ_DEFECT_DATA_TIMEOUT	(60 * HZ )
 #define OMAX_SB_LEN 16          /* For backward compatibility */
 
 static int sg_scsi_ioctl(struct file *file, request_queue_t *q,
 			 struct gendisk *bd_disk, Scsi_Ioctl_Command __user *sic)
Index: linux-2.6.8/drivers/scsi/scsi_ioctl.c
===================================================================
--- linux-2.6.8.orig/drivers/scsi/scsi_ioctl.c
+++ linux-2.6.8/drivers/scsi/scsi_ioctl.c
@@ -24,13 +24,8 @@
 #include "scsi_logging.h"
 
 #define NORMAL_RETRIES			5
 #define IOCTL_NORMAL_TIMEOUT			(10 * HZ)
-#define FORMAT_UNIT_TIMEOUT		(2 * 60 * 60 * HZ)
-#define START_STOP_TIMEOUT		(60 * HZ)
-#define MOVE_MEDIUM_TIMEOUT		(5 * 60 * HZ)
-#define READ_ELEMENT_STATUS_TIMEOUT	(5 * 60 * HZ)
-#define READ_DEFECT_DATA_TIMEOUT	(60 * HZ )  /* ZIP-250 on parallel port takes as long! */
 
 #define MAX_BUF PAGE_SIZE
 
 /*
Index: linux-2.6.8/include/scsi/scsi.h
===================================================================
--- linux-2.6.8.orig/include/scsi/scsi.h
+++ linux-2.6.8/include/scsi/scsi.h
@@ -349,8 +349,16 @@ struct scsi_lun {
 #define sense_class(sense)  (((sense) >> 4) & 0x7)
 #define sense_error(sense)  ((sense) & 0xf)
 #define sense_valid(sense)  ((sense) & 0x80);
 
+/*
+ * default timeouts
+ */
+#define FORMAT_UNIT_TIMEOUT		(12 * 60 * 60 * HZ)
+#define START_STOP_TIMEOUT		(60 * HZ)
+#define MOVE_MEDIUM_TIMEOUT		(5 * 60 * HZ)
+#define READ_ELEMENT_STATUS_TIMEOUT	(5 * 60 * HZ)
+#define READ_DEFECT_DATA_TIMEOUT	(60 * HZ )
 
 #define IDENTIFY_BASE       0x80
 #define IDENTIFY(can_disconnect, lun)   (IDENTIFY_BASE |\
 		     ((can_disconnect) ?  0x40 : 0) |\
