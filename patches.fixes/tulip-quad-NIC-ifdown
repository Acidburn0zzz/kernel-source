diff -urNp linux-2.6.5/drivers/net/tulip/tulip.h linux-2.6.5.SUSE/drivers/net/tulip/tulip.h
--- linux-2.6.5/drivers/net/tulip/tulip.h	2004-04-04 05:38:16.000000000 +0200
+++ linux-2.6.5.SUSE/drivers/net/tulip/tulip.h	2004-05-12 15:24:40.000000000 +0200
@@ -469,16 +469,18 @@ static inline void tulip_start_rxtx(stru
 	(void) inl(ioaddr + CSR6); /* mmio sync */
 }
 
-static inline void tulip_stop_rxtx(struct tulip_private *tp)
+static inline int tulip_stop_rxtx(struct tulip_private *tp)
 {
 	long ioaddr = tp->base_addr;
 	u32 csr6 = inl(ioaddr + CSR6);
+	unsigned int i = 13; /* min of 1250usec */
 
 	if (csr6 & RxTx) {
 		outl(csr6 & ~RxTx, ioaddr + CSR6);
 		barrier();
-		(void) inl(ioaddr + CSR6); /* mmio sync */
+		while (i-- && ((inl(ioaddr + CSR5) & (TxDied|RxDied)) != (TxDied|RxDied))) udelay(100); /* mmio sync */
 	}
+	return (!(i>0)); /* return 0 (success) or 1 (failure) */;
 }
 
 static inline void tulip_restart_rxtx(struct tulip_private *tp)
diff -urNp linux-2.6.5/drivers/net/tulip/tulip_core.c linux-2.6.5.SUSE/drivers/net/tulip/tulip_core.c
--- linux-2.6.5/drivers/net/tulip/tulip_core.c	2004-05-12 15:23:39.000000000 +0200
+++ linux-2.6.5.SUSE/drivers/net/tulip/tulip_core.c	2004-05-12 15:27:42.000000000 +0200
@@ -452,7 +452,7 @@ media_picked:
 		tulip_select_media(dev, 1);
 
 	/* Start the chip's Tx to process setup frame. */
-	tulip_stop_rxtx(tp);
+	(void)tulip_stop_rxtx(tp);
 	barrier();
 	udelay(5);
 	outl(tp->csr6 | TxOn, ioaddr + CSR6);
@@ -738,7 +738,8 @@ static void tulip_down (struct net_devic
 	outl (0x00000000, ioaddr + CSR7);
 
 	/* Stop the Tx and Rx processes. */
-	tulip_stop_rxtx(tp);
+	if (tulip_stop_rxtx(tp))
+		printk (KERN_DEBUG "%s: tulip_down(): tulip_stop_rxtx() failed\n", dev->name);
 
 	/* prepare receive buffers */
 	tulip_refill_rx(dev);
@@ -1409,7 +1410,7 @@ static int __devinit tulip_init_one (str
 #endif
 
 	/* Stop the chip's Tx and Rx processes. */
-	tulip_stop_rxtx(tp);
+	(void)tulip_stop_rxtx(tp);
 
 	pci_set_master(pdev);
 
@@ -1761,6 +1762,10 @@ static void __devexit tulip_remove_one (
 		return;
 
 	tp = netdev_priv(dev);
+
+	/* shoot NIC in the head before deallocating descriptors */
+	pci_disable_device(tp->pdev);
+
 	unregister_netdev(dev);
 	pci_free_consistent (pdev,
 			     sizeof (struct tulip_rx_desc) * RX_RING_SIZE +
