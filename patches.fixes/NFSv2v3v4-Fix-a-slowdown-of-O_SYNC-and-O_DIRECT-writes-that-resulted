#date: 2004-04-11
#id: 1.1371.694.10
#tag: nfs+rpc
#time: 11:23:05
#title: NFSv2/v3/v4: Fix a slowdown of O_SYNC and O_DIRECT writes that resulted
#who: trond.myklebust@fys.uio.no
#
# ChangeSet
#   1.1371.694.10 04/04/11 11:23:05 trond.myklebust@fys.uio.no +4 -0
#   NFSv2/v3/v4: Fix a slowdown of O_SYNC and O_DIRECT writes that resulted
#   from over-aggressive attribute cache revalidation.
#
# include/linux/nfs_fs.h +1 -0
# fs/nfs/write.c +2 -2
# fs/nfs/inode.c +23 -0
# fs/nfs/direct.c +1 -6
#   NFSv2/v3/v4: Fix a slowdown of O_SYNC and O_DIRECT writes that resulted
#     from over-aggressive attribute cache revalidation.
#
diff -Nru a/fs/nfs/direct.c b/fs/nfs/direct.c
--- a/fs/nfs/direct.c	Wed Apr 28 00:07:19 2004
+++ b/fs/nfs/direct.c	Wed Apr 28 00:07:19 2004
@@ -337,8 +337,7 @@
 						VERF_SIZE) != 0)
 			goto sync_retry;
 	}
-	nfs_end_data_update(inode);
-	NFS_FLAGS(inode) |= NFS_INO_INVALID_DATA;
+	nfs_end_data_update_defer(inode);
 
 	return tot_bytes;
 
@@ -397,10 +396,6 @@
 		if (result < size)
 			break;
 	}
-	/* Zap the page cache if we managed to write */
-	if (tot_bytes > 0)
-		invalidate_remote_inode(inode);
-
 	return tot_bytes;
 }
 
diff -Nru a/fs/nfs/inode.c b/fs/nfs/inode.c
--- a/fs/nfs/inode.c	Wed Apr 28 00:07:19 2004
+++ b/fs/nfs/inode.c	Wed Apr 28 00:07:19 2004
@@ -1012,6 +1012,8 @@
  * nfs_end_data_update
  * @inode - pointer to inode
  * Declare end of the operations that will update file data
+ * This will mark the inode as immediately needing revalidation
+ * of its attribute cache.
  */
 void nfs_end_data_update(struct inode *inode)
 {
@@ -1024,6 +1026,27 @@
 		nfsi->flags |= NFS_INO_INVALID_DATA;
 	nfsi->cache_change_attribute ++;
 	atomic_dec(&nfsi->data_updates);
+}
+
+/**
+ * nfs_end_data_update_defer
+ * @inode - pointer to inode
+ * Declare end of the operations that will update file data
+ * This will defer marking the inode as needing revalidation
+ * unless there are no other pending updates.
+ */
+void nfs_end_data_update_defer(struct inode *inode)
+{
+	struct nfs_inode *nfsi = NFS_I(inode);
+
+	if (atomic_dec_and_test(&nfsi->data_updates)) {
+		/* Mark the attribute cache for revalidation */
+		nfsi->flags |= NFS_INO_INVALID_ATTR;
+		/* Directories and symlinks: invalidate page cache too */
+		if (S_ISDIR(inode->i_mode) || S_ISLNK(inode->i_mode))
+			nfsi->flags |= NFS_INO_INVALID_DATA;
+		nfsi->cache_change_attribute ++;
+	}
 }
 
 /**
diff -Nru a/fs/nfs/write.c b/fs/nfs/write.c
--- a/fs/nfs/write.c	Wed Apr 28 00:07:19 2004
+++ b/fs/nfs/write.c	Wed Apr 28 00:07:19 2004
@@ -233,7 +233,7 @@
 		ClearPageError(page);
 
 io_error:
-	nfs_end_data_update(inode);
+	nfs_end_data_update_defer(inode);
 	if (wdata.cred)
 		put_rpccred(wdata.cred);
 
@@ -404,7 +404,7 @@
 	nfsi->npages--;
 	if (!nfsi->npages) {
 		spin_unlock(&nfs_wreq_lock);
-		nfs_end_data_update(inode);
+		nfs_end_data_update_defer(inode);
 		iput(inode);
 	} else
 		spin_unlock(&nfs_wreq_lock);
diff -Nru a/include/linux/nfs_fs.h b/include/linux/nfs_fs.h
--- a/include/linux/nfs_fs.h	Wed Apr 28 00:07:19 2004
+++ b/include/linux/nfs_fs.h	Wed Apr 28 00:07:19 2004
@@ -277,6 +277,7 @@
 extern void nfs_end_attr_update(struct inode *);
 extern void nfs_begin_data_update(struct inode *);
 extern void nfs_end_data_update(struct inode *);
+extern void nfs_end_data_update_defer(struct inode *);
 
 /* linux/net/ipv4/ipconfig.c: trims ip addr off front of name, too. */
 extern u32 root_nfs_parse_addr(char *name); /*__init*/
