#date: 2004-04-11
#id: 1.1371.694.9
#tag: nfs+rpc
#time: 11:22:21
#title: RPCSEC_GSS: Fix integrity checksum bugs. Need to take into account the
#who: trond.myklebust@fys.uio.no
#
# ChangeSet
#   1.1371.694.9 04/04/11 11:22:21 trond.myklebust@fys.uio.no +1 -0
#   RPCSEC_GSS: Fix integrity checksum bugs. Need to take into account the
#   starting offset when calculating the page length.
#
# net/sunrpc/auth_gss/gss_krb5_crypto.c +19 -16
#   RPCSEC_GSS: Fix integrity checksum bugs. Need to take into account the
#     starting offset when calculating the page length.
#
diff -Nru a/net/sunrpc/auth_gss/gss_krb5_crypto.c b/net/sunrpc/auth_gss/gss_krb5_crypto.c
--- a/net/sunrpc/auth_gss/gss_krb5_crypto.c	Wed Apr 28 00:07:26 2004
+++ b/net/sunrpc/auth_gss/gss_krb5_crypto.c	Wed Apr 28 00:07:26 2004
@@ -40,6 +40,7 @@
 #include <asm/scatterlist.h>
 #include <linux/crypto.h>
 #include <linux/highmem.h>
+#include <linux/pagemap.h>
 #include <linux/sunrpc/gss_krb5.h>
 
 #ifdef RPC_DEBUG
@@ -171,22 +172,24 @@
 	}
 
 	len = body->page_len;
-	offset = body->page_base;
-	i = 0;
-	while (len) {
-		sg->page = body->pages[i];
-		sg->offset = offset;
-		offset = 0;
-		if (PAGE_SIZE > len)
-			thislen = len;
-		else
-			thislen = PAGE_SIZE;
-		sg->length = thislen;
-		kmap(sg->page); /* XXX kmap_atomic? */
-		crypto_digest_update(tfm, sg, 1);
-		kunmap(sg->page);
-		len -= thislen;
-		i++;
+	if (len != 0) {
+		offset = body->page_base & (PAGE_CACHE_SIZE - 1);
+		i = body->page_base >> PAGE_CACHE_SHIFT;
+		thislen = PAGE_CACHE_SIZE - offset;
+		do {
+			if (thislen > len)
+				thislen = len;
+			sg->page = body->pages[i];
+			sg->offset = offset;
+			sg->length = thislen;
+			kmap(sg->page); /* XXX kmap_atomic? */
+			crypto_digest_update(tfm, sg, 1);
+			kunmap(sg->page);
+			len -= thislen;
+			i++;
+			offset = 0;
+			thislen = PAGE_CACHE_SIZE;
+		} while(len != 0);
 	}
 	if (body->tail[0].iov_len) {
 		buf_to_sg(sg, body->tail[0].iov_base, body->tail[0].iov_len);
