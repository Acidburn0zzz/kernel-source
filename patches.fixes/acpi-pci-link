Len.Brown@intel.com

Bugfix

Fix for 2.6.6, fixing IDE IRQ issues.
Ported to 2.6.5 (garloff), but unclear status.

diff -uNrp linux-2.6.5/drivers/acpi/pci_link.c linux-2.6.5.pci-link/drivers/acpi/pci_link.c
--- linux-2.6.5/drivers/acpi/pci_link.c	2004-05-11 14:46:20.000000000 +0200
+++ linux-2.6.5.pci-link/drivers/acpi/pci_link.c	2004-05-11 15:16:38.000000000 +0200
@@ -515,7 +515,7 @@ static int acpi_irq_penalty[ACPI_MAX_IRQ
 	PIRQ_PENALTY_PCI_AVAILABLE,	/* IRQ9  PCI, often acpi */
 	PIRQ_PENALTY_PCI_AVAILABLE,	/* IRQ10 PCI */
 	PIRQ_PENALTY_PCI_AVAILABLE,	/* IRQ11 PCI */
-	PIRQ_PENALTY_ISA_TYPICAL,	/* IRQ12 mouse */
+	PIRQ_PENALTY_ISA_USED,	/* IRQ12 mouse */
 	PIRQ_PENALTY_ISA_USED,	/* IRQ13 fpe, sometimes */
 	PIRQ_PENALTY_ISA_USED,	/* IRQ14 ide0 */
 	PIRQ_PENALTY_ISA_USED,	/* IRQ15 ide1 */
@@ -578,7 +578,7 @@ static int acpi_pci_link_allocate(struct
 	if (link->irq.active) {
 		irq = link->irq.active;
 	} else {
-		irq = link->irq.possible[0];
+		irq = link->irq.possible[0];	/* or irq.possible[link->irq_possible_count-1] */
 	}
 
 	if (acpi_irq_balance || !link->irq.active) {
@@ -699,6 +699,7 @@ acpi_pci_link_add (
 		if (link->irq.active == link->irq.possible[i]) {
 			printk(" *%d", link->irq.possible[i]);
 			found = 1;
+			break;
 		}
 		else
 			printk(" %d", link->irq.possible[i]);
@@ -706,6 +707,16 @@ acpi_pci_link_add (
 	printk(")\n");
 //#endif /* CONFIG_ACPI_DEBUG */
 
+ 	/*
+ 	 * forget active IRQ that is not in possible list
+ 	 */
+ 	if (i == link->irq.possible_count) {
+ 		if (acpi_strict)
+ 			printk(KERN_WARNING PREFIX "_CRS %d not found"
+ 				" in _PRS\n", link->irq.active);
+ 		link->irq.active = 0;
+ 	}
+
 	/* TBD: Acquire/release lock */
 	list_add_tail(&link->node, &acpi_link.entries);
 	acpi_link.count++;
