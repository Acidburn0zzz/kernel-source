#date: 2004-04-16
#id: 1.1371.714.4
#tag: other
#time: 14:27:14
#title: remount: fs/jffs2
#who: viro@www.linux.org.uk[torvalds]
#
# ChangeSet
#   1.1371.714.4 04/04/16 14:27:14 viro@www.linux.org.uk[torvalds] +2 -0
#   [PATCH] remount: fs/jffs2
#   
#    - jff2->remount_fs() was buggy - it played with sb->s_flags instead of
#      doing modifications to *flags (->s_flags will be overwritten using
#      *flags right after the call of ->remount_fs()).  Moreover, it tried
#      to do the wrong thing - it should just enforce noatime and be done
#      with that.  Fixed, ACKed by maintainer.
#
# fs/jffs2/super.c +1 -1
# fs/jffs2/fs.c +1 -1
#
diff -Nru a/fs/jffs2/fs.c b/fs/jffs2/fs.c
--- a/fs/jffs2/fs.c	Wed Apr 28 00:46:23 2004
+++ b/fs/jffs2/fs.c	Wed Apr 28 00:46:23 2004
@@ -350,7 +350,7 @@
 	if (!(*flags & MS_RDONLY))
 		jffs2_start_garbage_collect_thread(c);
 	
-	sb->s_flags = (sb->s_flags & ~MS_RDONLY)|(*flags & MS_RDONLY);
+	*flags |= MS_NOATIME;
 
 	return 0;
 }
diff -Nru a/fs/jffs2/super.c b/fs/jffs2/super.c
--- a/fs/jffs2/super.c	Wed Apr 28 00:46:23 2004
+++ b/fs/jffs2/super.c	Wed Apr 28 00:46:23 2004
@@ -129,7 +129,7 @@
 		  mtd->index, mtd->name));
 
 	sb->s_op = &jffs2_super_operations;
-	sb->s_flags |= MS_NODIRATIME;
+	sb->s_flags |= MS_NOATIME;
 
 	ret = jffs2_do_fill_super(sb, data, (flags&MS_VERBOSE)?1:0);
 
