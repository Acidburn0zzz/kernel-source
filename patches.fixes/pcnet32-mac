--- linux-2.6.6-rc3/drivers/net/orig.pcnet32.c	Wed Apr 28 15:43:44 2004
+++ linux-2.6.6-rc3/drivers/net/pcnet32.c	Wed Apr 28 15:48:35 2004
@@ -844,12 +844,12 @@
     return 0;
 }
 
-int pcnet32_get_regs_len(struct net_device *dev)
+static int pcnet32_get_regs_len(struct net_device *dev)
 {
     return(PCNET32_NUM_REGS * sizeof(u16));
 }
 
-void pcnet32_get_regs(struct net_device *dev, struct ethtool_regs *regs,
+static void pcnet32_get_regs(struct net_device *dev, struct ethtool_regs *regs,
 	void *ptr)
 {
     int i, csr0;
@@ -895,7 +895,7 @@
     *buff++ = a->read_csr(ioaddr, 114);
 
     for (i = 0; i <= 35; i++) {
-	*buff++ = a->read_bcr(ioaddr, i);
+	*buff++ = (i == 34) ? 0xdead : a->read_bcr(ioaddr, i); 
     }
 
     if (!(csr0 & 0x0004)) {	/* If not stopped */
@@ -1004,7 +1004,6 @@
     char *chipname;
     struct net_device *dev;
     struct pcnet32_access *a = NULL;
-    u8 promaddr[6];
     int ret = -ENODEV;
 
     /* reset the chip */
@@ -1126,40 +1125,12 @@
     if (pcnet32_debug & NETIF_MSG_PROBE)
 	printk(KERN_INFO PFX "%s at %#3lx,", chipname, ioaddr);
 
-    /* In most chips, after a chip reset, the ethernet address is read from the
-     * station address PROM at the base address and programmed into the
-     * "Physical Address Registers" CSR12-14.
-     * As a precautionary measure, we read the PROM values and complain if
-     * they disagree with the CSRs.  Either way, we use the CSR values, and
-     * double check that they are valid.
+    /* In early chips, the Physical Address Registers CSR12-14 are undefined.
+     * Later chips initialize the CSR12-14 from the EEPROM.
+     * Either way, we use the PROM values.
      */
-    for (i = 0; i < 3; i++) {
-	unsigned int val;
-	val = a->read_csr(ioaddr, i+12) & 0x0ffff;
-	/* There may be endianness issues here. */
-	dev->dev_addr[2*i] = val & 0x0ff;
-	dev->dev_addr[2*i+1] = (val >> 8) & 0x0ff;
-    }
-
-    /* read PROM address and compare with CSR address */
     for (i = 0; i < 6; i++)
-	promaddr[i] = inb(ioaddr + i);
-
-    if (memcmp(promaddr, dev->dev_addr, 6)
-	|| !is_valid_ether_addr(dev->dev_addr)) {
-#ifndef __powerpc__
-	if (is_valid_ether_addr(promaddr)) {
-#else
-	if (!is_valid_ether_addr(dev->dev_addr)
-	    && is_valid_ether_addr(promaddr)) {
-#endif
-	    if (pcnet32_debug & NETIF_MSG_PROBE) {
-		printk(" warning: CSR address invalid,\n");
-		printk(KERN_INFO "    using instead PROM address of");
-	    }
-	    memcpy(dev->dev_addr, promaddr, 6);
-	}
-    }
+	dev->dev_addr[i] = inb(ioaddr + i);
 
     /* if the ethernet address is not valid, force to 00:00:00:00:00:00 */
     if (!is_valid_ether_addr(dev->dev_addr))
