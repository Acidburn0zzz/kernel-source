Subject: Fix broken locking on NFS -o nolock mounts
From: Olaf Kirch <okir@suse.de>
References: 47287

A previous change broke locking on NFS file systems mounted -o nolock.
This patch fixes the problem by making all NFS lock calls return
LOCK_USE_CLNT in this case, and treating it the way we did previously.

Signed-off-by: Olaf Kirch <okir@suse.de>

Index: okir-2.6.9/fs/locks.c
===================================================================
--- okir-2.6.9.orig/fs/locks.c
+++ okir-2.6.9/fs/locks.c
@@ -1534,7 +1534,8 @@ int fcntl_setlk(struct file *filp, unsig
 
 	if (filp->f_op && filp->f_op->lock != NULL) {
 		error = filp->f_op->lock(filp, cmd, file_lock);
-		goto out;
+		if (error != LOCK_USE_CLNT)
+			goto out;
 	}
 
 	for (;;) {
@@ -1668,7 +1669,8 @@ int fcntl_setlk64(struct file *filp, uns
 
 	if (filp->f_op && filp->f_op->lock != NULL) {
 		error = filp->f_op->lock(filp, cmd, file_lock);
-		goto out;
+		if (error != LOCK_USE_CLNT)
+			goto out;
 	}
 
 	for (;;) {
@@ -1719,8 +1721,8 @@ void locks_remove_posix(struct file *fil
 	lock.fl_lmops = NULL;
 
 	if (filp->f_op && filp->f_op->lock != NULL) {
-		filp->f_op->lock(filp, F_SETLK, &lock);
-		goto out;
+		if (filp->f_op->lock(filp, F_SETLK, &lock) != LOCK_USE_CLNT)
+			goto out;
 	}
 
 	/* Can't use posix_lock_file here; we need to remove it no matter
Index: okir-2.6.9/fs/nfs/file.c
===================================================================
--- okir-2.6.9.orig/fs/nfs/file.c
+++ okir-2.6.9/fs/nfs/file.c
@@ -397,11 +397,9 @@ nfs_lock(struct file *filp, int cmd, str
 		return -ENOLCK;
 
 	if (NFS_PROTO(inode)->version != 4) {
-		/* Fake OK code if mounted without NLM support */
+		/* If mounted NONLM, tell VFS to use local locking only. */
 		if (NFS_SERVER(inode)->flags & NFS_MOUNT_NONLM) {
-			if (IS_GETLK(cmd))
-				return LOCK_USE_CLNT;
-			return 0;
+			return LOCK_USE_CLNT;
 		}
 	}
 
