From: olh@suse.de
Subject: 2.6.11-rc4-bk10

 -- www.kernel.org/pub/linux/kernel/v2.6/snapshots/patch-2.6.11-rc4-bk9.log	2005-02-21 13:39:52.000000000 +0100
 ++ www.kernel.org/pub/linux/kernel/v2.6/snapshots/patch-2.6.11-rc4-bk10.log	2005-02-22 13:41:20.000000000 +0100
 ChangeSet@1.2081, 2005-02-21 16:33:57-08:00, shemminger@osdl.org
   [TCP]: Fix BIC max_cwnd calculation error.
   
   The BIC TCP cwnd problem as identified by Yee-Ting Li and Doug Leith
   is that the computation is recalc_ssthresh is incorrect and
   BICTCP_1_OVER_BETA/2 should be BICTCP_1_OVER_BETA*2.
   
   My fix is to implement the code from BIC TCP 1.1 which uses a sysctl
   to set the beta.  There are a few variable name changes from the 1.1
   code, and made the scaling factor a #define instead of hardcoded.
   
   I validated this using netem and kprobes, for more details see
   http://developer.osdl.org/shemminger/bic-beta-patch.pdf
   
   Signed-off-by: Stephen Hemminger <shemminger@osdl.org>
   Signed-off-by: David S. Miller <davem@davemloft.net>
 
 ChangeSet@1.2080, 2005-02-21 14:48:18-08:00, jgarzik@pobox.com
   [PATCH] libata kfree fix
   
   Fixes double-kfree that caused slab corruption.
   
   Signed-off-by: Jeff Garzik <jgarzik@pobox.com>
   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
 
 ChangeSet@1.2079, 2005-02-21 09:37:02-08:00, benh@kernel.crashing.org
   [PATCH] ppc32: fix ptep_test_and_clear_young
   
   ppc32's implementation of ptep_test_and_clear_young() has a logic error
   which makes it fail to flush the hash table. Thus PAGE_ACCESSED is
   almost never set again after beeing cleared (unless something else cause
   that hash entry to be flushed).
   
   Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
 
diff -purN linux-2.6.11-rc4-bk9/Makefile linux-2.6.11-rc4-bk10/Makefile
--- linux-2.6.11-rc4-bk9/Makefile	2005-02-22 18:41:32.460161272 +0100
+++ linux-2.6.11-rc4-bk10/Makefile	2005-02-22 18:41:38.445159057 +0100
@@ -1,7 +1,7 @@
 VERSION = 2
 PATCHLEVEL = 6
 SUBLEVEL = 11
-EXTRAVERSION = -rc4-bk9
+EXTRAVERSION = -rc4-bk10
 NAME=Woozy Numbat
 
 # *DOCUMENTATION*
diff -purN linux-2.6.11-rc4-bk9/drivers/scsi/libata-core.c linux-2.6.11-rc4-bk10/drivers/scsi/libata-core.c
--- linux-2.6.11-rc4-bk9/drivers/scsi/libata-core.c	2005-02-13 04:04:47.000000000 +0100
+++ linux-2.6.11-rc4-bk10/drivers/scsi/libata-core.c	2005-02-22 18:41:38.672123629 +0100
@@ -2800,7 +2800,7 @@ static inline int ata_should_dma_map(str
 			return 1;
 
 		/* fall through */
-	
+
 	default:
 		return 0;
 	}
@@ -3743,16 +3743,13 @@ int ata_pci_init_one (struct pci_dev *pd
 	if (legacy_mode) {
 		if (legacy_mode & (1 << 0))
 			ata_device_add(probe_ent);
-		else
-			kfree(probe_ent);
 		if (legacy_mode & (1 << 1))
 			ata_device_add(probe_ent2);
-		else
-			kfree(probe_ent2);
-	} else {
+	} else
 		ata_device_add(probe_ent);
-	}
+
 	kfree(probe_ent);
+	kfree(probe_ent2);
 
 	return 0;
 
diff -purN linux-2.6.11-rc4-bk9/include/asm-ppc/pgtable.h linux-2.6.11-rc4-bk10/include/asm-ppc/pgtable.h
--- linux-2.6.11-rc4-bk9/include/asm-ppc/pgtable.h	2005-02-13 04:07:51.000000000 +0100
+++ linux-2.6.11-rc4-bk10/include/asm-ppc/pgtable.h	2005-02-22 18:41:38.762109583 +0100
@@ -560,12 +560,12 @@ extern void flush_hash_one_pte(pte_t *pt
 static inline int ptep_test_and_clear_young(pte_t *ptep)
 {
 	unsigned long old;
-	old = (pte_update(ptep, _PAGE_ACCESSED, 0) & _PAGE_ACCESSED);
+	old = pte_update(ptep, _PAGE_ACCESSED, 0);
 #if _PAGE_HASHPTE != 0
 	if (old & _PAGE_HASHPTE)
 		flush_hash_one_pte(ptep);
 #endif
-	return old != 0;
+	return (old & _PAGE_ACCESSED) != 0;
 }
 
 static inline int ptep_test_and_clear_dirty(pte_t *ptep)
diff -purN linux-2.6.11-rc4-bk9/include/linux/sysctl.h linux-2.6.11-rc4-bk10/include/linux/sysctl.h
--- linux-2.6.11-rc4-bk9/include/linux/sysctl.h	2005-02-13 04:06:53.000000000 +0100
+++ linux-2.6.11-rc4-bk10/include/linux/sysctl.h	2005-02-22 18:41:38.776107398 +0100
@@ -344,6 +344,7 @@ enum
 	NET_TCP_DEFAULT_WIN_SCALE=105,
 	NET_TCP_MODERATE_RCVBUF=106,
 	NET_TCP_TSO_WIN_DIVISOR=107,
+	NET_TCP_BIC_BETA=108,
 };
 
 enum {
diff -purN linux-2.6.11-rc4-bk9/include/net/tcp.h linux-2.6.11-rc4-bk10/include/net/tcp.h
--- linux-2.6.11-rc4-bk9/include/net/tcp.h	2005-02-13 04:05:28.000000000 +0100
+++ linux-2.6.11-rc4-bk10/include/net/tcp.h	2005-02-22 18:41:38.781106618 +0100
@@ -505,9 +505,8 @@ static __inline__ int tcp_sk_listen_hash
 # define TCP_TW_RECYCLE_TICK (12+2-TCP_TW_RECYCLE_SLOTS_LOG)
 #endif
 
-#define BICTCP_1_OVER_BETA	8	/*
-					 * Fast recovery
-					 * multiplicative decrease factor
+#define BICTCP_BETA_SCALE    1024	/* Scale factor beta calculation
+					 * max_cwnd = snd_cwnd * beta
 					 */
 #define BICTCP_MAX_INCREMENT 32		/*
 					 * Limit on the amount of
@@ -606,6 +605,7 @@ extern int sysctl_tcp_nometrics_save;
 extern int sysctl_tcp_bic;
 extern int sysctl_tcp_bic_fast_convergence;
 extern int sysctl_tcp_bic_low_window;
+extern int sysctl_tcp_bic_beta;
 extern int sysctl_tcp_moderate_rcvbuf;
 extern int sysctl_tcp_tso_win_divisor;
 
@@ -1244,15 +1244,16 @@ static inline __u32 tcp_recalc_ssthresh(
 	if (tcp_is_bic(tp)) {
 		if (sysctl_tcp_bic_fast_convergence &&
 		    tp->snd_cwnd < tp->bictcp.last_max_cwnd)
-			tp->bictcp.last_max_cwnd
-				= (tp->snd_cwnd * (2*BICTCP_1_OVER_BETA-1))
-				/ (BICTCP_1_OVER_BETA/2);
+			tp->bictcp.last_max_cwnd = (tp->snd_cwnd * 
+						    (BICTCP_BETA_SCALE
+						     + sysctl_tcp_bic_beta))
+				/ (2 * BICTCP_BETA_SCALE);
 		else
 			tp->bictcp.last_max_cwnd = tp->snd_cwnd;
 
 		if (tp->snd_cwnd > sysctl_tcp_bic_low_window)
-			return max(tp->snd_cwnd - (tp->snd_cwnd/BICTCP_1_OVER_BETA),
-				   2U);
+			return max((tp->snd_cwnd * sysctl_tcp_bic_beta)
+				   / BICTCP_BETA_SCALE, 2U);
 	}
 
 	return max(tp->snd_cwnd >> 1U, 2U);
diff -purN linux-2.6.11-rc4-bk9/net/ipv4/sysctl_net_ipv4.c linux-2.6.11-rc4-bk10/net/ipv4/sysctl_net_ipv4.c
--- linux-2.6.11-rc4-bk9/net/ipv4/sysctl_net_ipv4.c	2005-02-13 04:07:01.000000000 +0100
+++ linux-2.6.11-rc4-bk10/net/ipv4/sysctl_net_ipv4.c	2005-02-22 18:41:38.805102872 +0100
@@ -682,6 +682,14 @@ ctl_table ipv4_table[] = {
 		.mode		= 0644,
 		.proc_handler	= &proc_dointvec,
 	},
+	{
+		.ctl_name	= NET_TCP_BIC_BETA,
+		.procname	= "tcp_bic_beta",
+		.data		= &sysctl_tcp_bic_beta,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
 	{ .ctl_name = 0 }
 };
 
diff -purN linux-2.6.11-rc4-bk9/net/ipv4/tcp_input.c linux-2.6.11-rc4-bk10/net/ipv4/tcp_input.c
--- linux-2.6.11-rc4-bk9/net/ipv4/tcp_input.c	2005-02-13 04:07:01.000000000 +0100
+++ linux-2.6.11-rc4-bk10/net/ipv4/tcp_input.c	2005-02-22 18:41:38.814101467 +0100
@@ -102,6 +102,7 @@ int sysctl_tcp_vegas_gamma = 1<<V_PARAM_
 int sysctl_tcp_bic = 1;
 int sysctl_tcp_bic_fast_convergence = 1;
 int sysctl_tcp_bic_low_window = 14;
+int sysctl_tcp_bic_beta = 819;		/* = 819/1024 (BICTCP_BETA_SCALE) */
 
 #define FLAG_DATA		0x01 /* Incoming frame contained data.		*/
 #define FLAG_WIN_UPDATE		0x02 /* Incoming ACK was a window update.	*/
