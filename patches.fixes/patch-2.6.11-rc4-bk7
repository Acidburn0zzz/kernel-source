From: olh@suse.de
Subject: 2.6.11-rc4-bk7

 -- www.kernel.org/pub/linux/kernel/v2.6/snapshots/patch-2.6.11-rc4-bk6.log	2005-02-18 13:40:16.000000000 +0100
 ++ www.kernel.org/pub/linux/kernel/v2.6/snapshots/patch-2.6.11-rc4-bk7.log	2005-02-19 13:40:41.000000000 +0100
 ChangeSet@1.2062, 2005-02-17 11:59:58-08:00, zaitcev@redhat.com
 ChangeSet@1.2065, 2005-02-18 23:26:25+01:00, marcel@holtmann.org
   [Bluetooth] The new Microsoft dongle needs HCI_Reset
   
   For the new Microsoft Wireless Transceiver for Bluetooth 2.0 it is
   necessary to send the HCI_Reset on every device initialization.
   
   Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
 
 ChangeSet@1.2058.1.8, 2005-02-18 22:24:01+00:00, rmk@flint.arm.linux.org.uk
   [ARM] Take account of vm_pgoff for DMA mmap
   
   The DMA mmap code was ignoring vm_pgoff which prevented a partial
   mmap() of a DMA buffer.
   
   Signed-off-by: Russell King <rmk@arm.linux.org.uk>
 
 ChangeSet@1.2058.1.7, 2005-02-18 21:55:29+00:00, buytenh@org.rmk.(none)
   [ARM PATCH] 2494/1: fix 'CONFGI_' -> 'CONFIG_' in mach-ixp2000/ixdp2x00.c
   
   Patch from Lennert Buytenhek
   
   Fix a misspelled config symbol name in the ixp2000 code.
   
   Signed-off-by: Lennert Buytenhek
   Signed-off-by: Russell King
 
 ChangeSet@1.2058.1.6, 2005-02-18 21:48:16+00:00, buytenh@org.rmk.(none)
   [ARM PATCH] 2493/1: put IXP2000 slowport in 8-bit mode after boot
   
   Patch from Lennert Buytenhek
   
   This is an old patch from 2.6.9-rc3-ds2 that never made it upstream.
   The IXP2000 slowport has two modes of operation, 8-bit and 32-bit.
   The slowport itself is a byte-wide bus, and in 8-bit mode, it does the
   more-or-less obvious thing: every word read causes four byte reads,
   and those bytes are then combined into a word according to the xscale
   core's current endian setting.  So, what value you get depends on what
   endianity your IXP2000 is running in.
   In 32-bit mode, however, it is the slowport itself which combines
   bytes into words, and for this it unconditionally uses little endian
   mode.  In this mode, word reads from the slowport will return the
   same value no matter whether the xscale core is running in big or
   little endian mode.  This can be a plus in some cases.  Byte (and
   halfword) accesses in 32-bit mode have rather useless semantics
   due to this, though.
   The usefulness of 32-bit mode is limited to the initial boot.  When
   the IXP2000 resets, the slowport is always in 32-bit mode, so if you
   flash the bootloader into flash (which is connected to the slowport)
   using little-endian byte ordering, the xscale will always read the
   instruction stream correctly, no matter whether it's running in big
   or little endian mode.
   After booting it makes no sense to use 32-bit mode anymore.  Especially
   since the slowport's word ordering in 32-bit mode is little endian,
   and the IXP2000 is conventionally run in big endian, which gives all
   kinds of fun issues when trying to access peripherals connected to
   the slowport.
   In fact, the current MTD map driver for IXP2000 already sets the
   slowport to 8-bit mode because it cannot access the flash otherwise.
   However, this means that if the MTD map driver is not compiled in for
   some reason, the slowport will stay in 32-bit mode after the initial
   boot, which will cause peripheral accesses to unexpectedly break!
   
   Signed-off-by: Lennert Buytenhek
   Signed-off-by: Russell King
 
 ChangeSet@1.2063, 2005-02-18 10:25:55-08:00, davem@nuts.davemloft.net
   [SPARC64]: BUG on rediculious memcpy lengths.
   
   Anything larger than MAX_INT is suspect.  Do this
   for user copies too.
   
   Signed-off-by: David S. Miller <davem@davemloft.net>
 
 ChangeSet@1.2062, 2005-02-17 21:53:25-08:00, davem@nuts.davemloft.net
   [SPARC64]: Use common sys_ipc() compat code.
   
   No need to duplicate it locally.  This also fixes
   several arg sign extension bugs and the subsequent
   ltp testsuite failures.
   
   Signed-off-by: David S. Miller <davem@davemloft.net>
 
 ChangeSet@1.2058.1.4, 2005-02-17 11:59:58-08:00, zaitcev@redhat.com
 ChangeSet@1.2061, 2005-02-17 11:56:54-08:00, zaitcev@redhat.com
 ChangeSet@1.2058.1.3, 2005-02-17 11:56:54-08:00, zaitcev@redhat.com
 ChangeSet@1.2058.1.8, 2005-02-17 10:08:34-08:00, rddunlap@osdl.org
 ChangeSet@1.2058.2.8, 2005-02-17 10:08:34-08:00, rddunlap@osdl.org
 ChangeSet@1.2058.1.7, 2005-02-17 10:08:20-08:00, takata@linux-m32r.org
 ChangeSet@1.2058.2.7, 2005-02-17 10:08:20-08:00, takata@linux-m32r.org
 ChangeSet@1.2058.1.6, 2005-02-17 10:08:06-08:00, takata@linux-m32r.org
 ChangeSet@1.2058.2.6, 2005-02-17 10:08:06-08:00, takata@linux-m32r.org
 ChangeSet@1.2058.1.5, 2005-02-17 10:07:53-08:00, takata@linux-m32r.org
 ChangeSet@1.2058.2.5, 2005-02-17 10:07:53-08:00, takata@linux-m32r.org
 ChangeSet@1.2058.1.4, 2005-02-17 07:57:40-08:00, nickpiggin@yahoo.com.au
 ChangeSet@1.2061, 2005-02-17 08:54:52-08:00, davem@nuts.davemloft.net
   [SPARC64]: Fix access_ok() args in sys_sparc32.c:get_tv32().
   
   Signed-off-by: David S. Miller <davem@davemloft.net>
 
 ChangeSet@1.2058.3.3, 2005-02-17 16:09:14+00:00, buytenh@org.rmk.(none)
   [ARM PATCH] 2487/1: minor IRQ routing tweaks for ENP-2611
   
   Patch from Lennert Buytenhek
   
   - The PCI2050B bridge is not wired to any interrupt pin.
   - The SPI-3 option board slot is wired to PCI_B.
   - Don't printk every time enp2611_map_pci_irq is called.
   - Complain loudly if we encounter an unknown device.
   
   Signed-off-by: Lennert Buytenhek
   Signed-off-by: Russell King
 
 ChangeSet@1.2058.3.2, 2005-02-17 16:01:50+00:00, buytenh@org.rmk.(none)
   [ARM PATCH] 2486/1: fix incorrect comment in arch/arm/kernel/debug.S
   
   Patch from Lennert Buytenhek
   
   arch/arm/kernel/debug.S has a comment at the top stating that the
   file is called debug-armv.S, which is clearly not so.
   
   Signed-off-by: Lennert Buytenhek
   Signed-off-by: Russell King
 
 ChangeSet@1.2058.2.4, 2005-02-17 07:57:40-08:00, nickpiggin@yahoo.com.au
 ChangeSet@1.2058.1.3, 2005-02-17 07:54:19-08:00, benh@kernel.crashing.org
 ChangeSet@1.2058.2.3, 2005-02-17 07:54:19-08:00, benh@kernel.crashing.org
 ChangeSet@1.2058.1.2, 2005-02-17 07:54:05-08:00, benh@kernel.crashing.org
 ChangeSet@1.2058.2.2, 2005-02-17 07:54:05-08:00, benh@kernel.crashing.org
 ChangeSet@1.2058.1.1, 2005-02-17 07:53:51-08:00, benh@kernel.crashing.org
 ChangeSet@1.2058.3.1, 2005-02-17 15:54:04+00:00, buytenh@org.rmk.(none)
   [ARM PATCH] 2485/1: fix enp2611 coexistence with other machine types
   
   Patch from Lennert Buytenhek
   
   If enp2611 support is compiled in, the kernel will unconditionally
   perform enp2611-style PCI initialisation.  Conditionalise this on
   machine_is_enp2611().
   
   Signed-off-by: Lennert Buytenhek
   Signed-off-by: Russell King
 
 ChangeSet@1.2058.2.1, 2005-02-17 07:53:51-08:00, benh@kernel.crashing.org
 ChangeSet@1.2053.1.3, 2005-02-16 15:37:06-08:00, davem@nuts.davemloft.net
   [SPARC64]: Fix access_ok() and friends warnings.
   
   The implementation is a nop on sparc64, we always return
   true, but we have to add at least a (void) reference to
   the arguments to avoid compiler/checker warnings.
   
   Signed-off-by: David S. Miller <davem@davemloft.net>
 
 ChangeSet@1.2053.1.2, 2005-02-16 15:33:43-08:00, davem@nuts.davemloft.net
   [SPARC64]: Put PROM trampolines into asm file.
   
   No need for these enormous inline asm statements.
   
   Signed-off-by: David S. Miller <davem@davemloft.net>
 
 ChangeSet@1.2053.1.1, 2005-02-16 12:33:23-08:00, davem@nuts.davemloft.net
   [SPARC64]: auxio_register is pointer not integer.
   
   Signed-off-by: David S. Miller <davem@davemloft.net>
 
diff -purN linux-2.6.11-rc4-bk6/Makefile linux-2.6.11-rc4-bk7/Makefile
--- linux-2.6.11-rc4-bk6/Makefile	2005-02-19 16:10:05.117188845 +0100
+++ linux-2.6.11-rc4-bk7/Makefile	2005-02-19 16:10:13.206128278 +0100
@@ -1,7 +1,7 @@
 VERSION = 2
 PATCHLEVEL = 6
 SUBLEVEL = 11
-EXTRAVERSION = -rc4-bk6
+EXTRAVERSION = -rc4-bk7
 NAME=Woozy Numbat
 
 # *DOCUMENTATION*
diff -purN linux-2.6.11-rc4-bk6/arch/arm/kernel/debug.S linux-2.6.11-rc4-bk7/arch/arm/kernel/debug.S
--- linux-2.6.11-rc4-bk6/arch/arm/kernel/debug.S	2005-02-13 04:05:51.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/arm/kernel/debug.S	2005-02-19 16:10:13.215126876 +0100
@@ -1,5 +1,5 @@
 /*
- *  linux/arch/arm/kernel/debug-armv.S
+ *  linux/arch/arm/kernel/debug.S
  *
  *  Copyright (C) 1994-1999 Russell King
  *
diff -purN linux-2.6.11-rc4-bk6/arch/arm/mach-ixp2000/core.c linux-2.6.11-rc4-bk7/arch/arm/mach-ixp2000/core.c
--- linux-2.6.11-rc4-bk6/arch/arm/mach-ixp2000/core.c	2005-02-13 04:07:49.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/arm/mach-ixp2000/core.c	2005-02-19 16:10:13.219126253 +0100
@@ -160,6 +160,9 @@ void __init ixp2000_map_io(void)
 	iotable_init(ixp2000_small_io_desc, ARRAY_SIZE(ixp2000_small_io_desc));
 	iotable_init(ixp2000_large_io_desc, ARRAY_SIZE(ixp2000_large_io_desc));
 	early_serial_setup(&ixp2000_serial_port);
+
+	/* Set slowport to 8-bit mode.  */
+	ixp2000_reg_write(IXP2000_SLOWPORT_FRM, 1);
 }
 
 /*************************************************************************
diff -purN linux-2.6.11-rc4-bk6/arch/arm/mach-ixp2000/enp2611.c linux-2.6.11-rc4-bk7/arch/arm/mach-ixp2000/enp2611.c
--- linux-2.6.11-rc4-bk6/arch/arm/mach-ixp2000/enp2611.c	2005-02-13 04:06:05.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/arm/mach-ixp2000/enp2611.c	2005-02-19 16:10:13.221125941 +0100
@@ -124,20 +124,28 @@ static int __init enp2611_pci_map_irq(st
 {
 	int irq;
 
-	if (dev->bus->number == 0x00 && PCI_SLOT(dev->devfn) == 0x01) {
+	if (dev->bus->number == 0 && PCI_SLOT(dev->devfn) == 0) {
+		/* IXP2400. */
+		irq = IRQ_IXP2000_PCIA;
+	} else if (dev->bus->number == 0 && PCI_SLOT(dev->devfn) == 1) {
 		/* 21555 non-transparent bridge.  */
 		irq = IRQ_IXP2000_PCIB;
-	} else if (dev->bus->number == 0x01 && PCI_SLOT(dev->devfn) == 0x00) {
+	} else if (dev->bus->number == 0 && PCI_SLOT(dev->devfn) == 4) {
+		/* PCI2050B transparent bridge.  */
+		irq = -1;
+	} else if (dev->bus->number == 1 && PCI_SLOT(dev->devfn) == 0) {
 		/* 82559 ethernet.  */
 		irq = IRQ_IXP2000_PCIA;
+	} else if (dev->bus->number == 1 && PCI_SLOT(dev->devfn) == 1) {
+		/* SPI-3 option board.  */
+		irq = IRQ_IXP2000_PCIB;
 	} else {
-		printk(KERN_INFO "enp2611_pci_map_irq for unknown device\n");
-		irq = IRQ_IXP2000_PCI;
+		printk(KERN_ERR "enp2611_pci_map_irq() called for unknown "
+				"device PCI:%d:%d:%d\n", dev->bus->number,
+				PCI_SLOT(dev->devfn), PCI_FUNC(dev->devfn));
+		irq = -1;
 	}
 
-	printk(KERN_INFO "Assigned IRQ %d to PCI:%d:%d:%d\n", irq,
-		dev->bus->number, PCI_SLOT(dev->devfn), PCI_FUNC(dev->devfn));
-
 	return irq;
 }
 
@@ -151,7 +159,9 @@ struct hw_pci enp2611_pci __initdata = {
 
 int __init enp2611_pci_init(void)
 {
-	pci_common_init(&enp2611_pci);
+	if (machine_is_enp2611())
+		pci_common_init(&enp2611_pci);
+
 	return 0;
 }
 
diff -purN linux-2.6.11-rc4-bk6/arch/arm/mach-ixp2000/ixdp2x00.c linux-2.6.11-rc4-bk7/arch/arm/mach-ixp2000/ixdp2x00.c
--- linux-2.6.11-rc4-bk6/arch/arm/mach-ixp2000/ixdp2x00.c	2005-02-13 04:05:10.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/arm/mach-ixp2000/ixdp2x00.c	2005-02-19 16:10:13.222125785 +0100
@@ -91,7 +91,7 @@ static void ixdp2x00_irq_unmask(unsigned
 	unsigned long dummy;
 	static struct slowport_cfg old_cfg;
 
-#ifdef CONFGI_ARCH_IXDP2400
+#ifdef CONFIG_ARCH_IXDP2400
 	if (machine_is_ixdp2400())
 		ixp2000_acquire_slowport(&slowport_cpld_cfg, &old_cfg);
 #endif
diff -purN linux-2.6.11-rc4-bk6/arch/arm/mm/consistent.c linux-2.6.11-rc4-bk7/arch/arm/mm/consistent.c
--- linux-2.6.11-rc4-bk6/arch/arm/mm/consistent.c	2005-02-13 04:07:18.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/arm/mm/consistent.c	2005-02-19 16:10:13.228124850 +0100
@@ -284,13 +284,15 @@ static int dma_mmap(struct device *dev, 
 	spin_unlock_irqrestore(&consistent_lock, flags);
 
 	if (c) {
+		unsigned long off = vma->vm_pgoff;
+
 		kern_size = (c->vm_end - c->vm_start) >> PAGE_SHIFT;
 
-		if (vma->vm_pgoff < kern_size &&
-		    user_size <= (kern_size - vma->vm_pgoff)) {
+		if (off < kern_size &&
+		    user_size <= (kern_size - off)) {
 			vma->vm_flags |= VM_RESERVED;
 			ret = remap_pfn_range(vma, vma->vm_start,
-					      page_to_pfn(c->vm_pages),
+					      page_to_pfn(c->vm_pages) + off,
 					      user_size, vma->vm_page_prot);
 		}
 	}
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/Kconfig linux-2.6.11-rc4-bk7/arch/sparc64/Kconfig
--- linux-2.6.11-rc4-bk6/arch/sparc64/Kconfig	2005-02-13 04:07:38.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/Kconfig	2005-02-19 16:10:13.274117682 +0100
@@ -18,6 +18,11 @@ config TIME_INTERPOLATION
 
 source "init/Kconfig"
 
+config SYSVIPC_COMPAT
+	bool
+	depends on COMPAT && SYSVIPC
+	default y
+
 menu "General machine setup"
 
 config BBC_I2C
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/defconfig linux-2.6.11-rc4-bk7/arch/sparc64/defconfig
--- linux-2.6.11-rc4-bk6/arch/sparc64/defconfig	2005-02-13 04:05:51.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/defconfig	2005-02-19 16:10:13.277117215 +0100
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
-# Linux kernel version: 2.6.11-rc3
-# Mon Feb  7 15:29:00 2005
+# Linux kernel version: 2.6.11-rc4
+# Thu Feb 17 15:32:19 2005
 #
 CONFIG_64BIT=y
 CONFIG_MMU=y
@@ -53,6 +53,7 @@ CONFIG_MODVERSIONS=y
 CONFIG_MODULE_SRCVERSION_ALL=y
 CONFIG_KMOD=y
 CONFIG_STOP_MACHINE=y
+CONFIG_SYSVIPC_COMPAT=y
 
 #
 # General machine setup
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/kernel/auxio.c linux-2.6.11-rc4-bk7/arch/sparc64/kernel/auxio.c
--- linux-2.6.11-rc4-bk6/arch/sparc64/kernel/auxio.c	2005-02-13 04:06:56.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/kernel/auxio.c	2005-02-19 16:10:13.278117059 +0100
@@ -17,7 +17,7 @@
 #include <asm/auxio.h>
 
 /* This cannot be static, as it is referenced in entry.S */
-void __iomem *auxio_register = 0UL;
+void __iomem *auxio_register = NULL;
 
 enum auxio_type {
 	AUXIO_TYPE_NODEV,
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/kernel/sys_sparc32.c linux-2.6.11-rc4-bk7/arch/sparc64/kernel/sys_sparc32.c
--- linux-2.6.11-rc4-bk6/arch/sparc64/kernel/sys_sparc32.c	2005-02-13 04:06:55.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/kernel/sys_sparc32.c	2005-02-19 16:10:13.287115657 +0100
@@ -242,7 +242,7 @@ asmlinkage long sys32_getegid16(void)
 
 static long get_tv32(struct timeval *o, struct compat_timeval __user *i)
 {
-	return (!access_ok(VERIFY_READ, tv32, sizeof(*tv32)) ||
+	return (!access_ok(VERIFY_READ, i, sizeof(*i)) ||
 		(__get_user(o->tv_sec, &i->tv_sec) |
 		 __get_user(o->tv_usec, &i->tv_usec)));
 }
@@ -254,602 +254,70 @@ static inline long put_tv32(struct compa
 		 __put_user(i->tv_usec, &o->tv_usec)));
 }
 
-struct msgbuf32 { s32 mtype; char mtext[1]; };
-
-struct ipc_perm32 {
-	key_t    	  key;
-        compat_uid_t  uid;
-        compat_gid_t  gid;
-        compat_uid_t  cuid;
-        compat_gid_t  cgid;
-        compat_mode_t mode;
-        unsigned short  seq;
-};
-
-struct semid_ds32 {
-        struct ipc_perm32 sem_perm;               /* permissions .. see ipc.h */
-        compat_time_t   sem_otime;              /* last semop time */
-        compat_time_t   sem_ctime;              /* last change time */
-        u32 sem_base;              /* ptr to first semaphore in array */
-        u32 sem_pending;          /* pending operations to be processed */
-        u32 sem_pending_last;    /* last pending operation */
-        u32 undo;                  /* undo requests on this array */
-        unsigned short  sem_nsems;              /* no. of semaphores in array */
-};
-
-struct semid64_ds32 {
-	struct ipc64_perm sem_perm;		  /* this structure is the same on sparc32 and sparc64 */
-	unsigned int	  __pad1;
-	compat_time_t   sem_otime;
-	unsigned int	  __pad2;
-	compat_time_t   sem_ctime;
-	u32 sem_nsems;
-	u32 __unused1;
-	u32 __unused2;
-};
-
-struct msqid_ds32
-{
-        struct ipc_perm32 msg_perm;
-        u32 msg_first;
-        u32 msg_last;
-        compat_time_t   msg_stime;
-        compat_time_t   msg_rtime;
-        compat_time_t   msg_ctime;
-        u32 wwait;
-        u32 rwait;
-        unsigned short msg_cbytes;
-        unsigned short msg_qnum;  
-        unsigned short msg_qbytes;
-        compat_ipc_pid_t msg_lspid;
-        compat_ipc_pid_t msg_lrpid;
-};
-
-struct msqid64_ds32 {
-	struct ipc64_perm msg_perm;
-	unsigned int   __pad1;
-	compat_time_t   msg_stime;
-	unsigned int   __pad2;
-	compat_time_t   msg_rtime;
-	unsigned int   __pad3;
-	compat_time_t   msg_ctime;
-	unsigned int  msg_cbytes;
-	unsigned int  msg_qnum;
-	unsigned int  msg_qbytes;
-	compat_pid_t msg_lspid;
-	compat_pid_t msg_lrpid;
-	unsigned int  __unused1;
-	unsigned int  __unused2;
-};
-
-
-struct shmid_ds32 {
-	struct ipc_perm32       shm_perm;
-	int                     shm_segsz;
-	compat_time_t         shm_atime;
-	compat_time_t         shm_dtime;
-	compat_time_t         shm_ctime;
-	compat_ipc_pid_t    shm_cpid; 
-	compat_ipc_pid_t    shm_lpid; 
-	unsigned short          shm_nattch;
-};
-
-struct shmid64_ds32 {
-	struct ipc64_perm	shm_perm;
-	unsigned int		__pad1;
-	compat_time_t  	shm_atime;
-	unsigned int		__pad2;
-	compat_time_t  	shm_dtime;
-	unsigned int		__pad3;
-	compat_time_t  	shm_ctime;
-	compat_size_t	shm_segsz;
-	compat_pid_t	shm_cpid;
-	compat_pid_t	shm_lpid;
-	unsigned int		shm_nattch;
-	unsigned int		__unused1;
-	unsigned int		__unused2;
-};
-
-                                                        
-/*
- * sys32_ipc() is the de-multiplexer for the SysV IPC calls in 32bit emulation..
- *
- * This is really horribly ugly.
- */
-#define IPCOP_MASK(__x)	(1UL << ((__x)&~IPC_64))
-static int do_sys32_semctl(int first, int second, int third,
-			   compat_uptr_t __user *uptr)
-{
-	union semun fourth;
-	compat_uptr_t pad;
-	int err = -EINVAL;
-
-	if (!uptr)
-		goto out;
-	err = -EFAULT;
-	if (get_user(pad, uptr))
-		goto out;
-	if ((third & ~IPC_64) == SETVAL)
-		fourth.val = (int)pad;
-	else
-		fourth.__pad = compat_ptr(pad);
-	if (IPCOP_MASK (third) &
-	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (SEM_INFO) | IPCOP_MASK (GETVAL) |
-	     IPCOP_MASK (GETPID) | IPCOP_MASK (GETNCNT) | IPCOP_MASK (GETZCNT) |
-	     IPCOP_MASK (GETALL) | IPCOP_MASK (SETALL) | IPCOP_MASK (IPC_RMID))) {
-		err = sys_semctl (first, second, third, fourth);
-	} else if (third & IPC_64) {
-		struct semid64_ds s;
-		struct semid64_ds32 __user *usp = compat_ptr(pad);
-		mm_segment_t old_fs;
-		int need_back_translation;
-
-		if (third == (IPC_SET|IPC_64)) {
-			err = get_user (s.sem_perm.uid, &usp->sem_perm.uid);
-			err |= __get_user (s.sem_perm.gid, &usp->sem_perm.gid);
-			err |= __get_user (s.sem_perm.mode, &usp->sem_perm.mode);
-			if (err)
-				goto out;
-			fourth.__pad = (void __user *) &s;
-		}
-		need_back_translation =
-			(IPCOP_MASK (third) &
-			 (IPCOP_MASK (SEM_STAT) | IPCOP_MASK (IPC_STAT))) != 0;
-		if (need_back_translation)
-			fourth.__pad = (void __user *) &s;
-		old_fs = get_fs ();
-		set_fs (KERNEL_DS);
-		err = sys_semctl (first, second, third, fourth);
-		set_fs (old_fs);
-		if (need_back_translation) {
-			int err2 = copy_to_user (&usp->sem_perm, &s.sem_perm, sizeof(struct ipc64_perm) + 2*sizeof(time_t));
-			err2 |= __put_user (s.sem_nsems, &usp->sem_nsems);
-			if (err2) err = -EFAULT;
-		}
-	} else {
-		struct semid_ds s;
-		struct semid_ds32 __user *usp = compat_ptr(pad);
-		mm_segment_t old_fs;
-		int need_back_translation;
-
-		if (third == IPC_SET) {
-			err = get_user (s.sem_perm.uid, &usp->sem_perm.uid);
-			err |= __get_user (s.sem_perm.gid, &usp->sem_perm.gid);
-			err |= __get_user (s.sem_perm.mode, &usp->sem_perm.mode);
-			if (err)
-				goto out;
-			fourth.__pad = (void __user *) &s;
-		}
-		need_back_translation =
-			(IPCOP_MASK (third) &
-			 (IPCOP_MASK (SEM_STAT) | IPCOP_MASK (IPC_STAT))) != 0;
-		if (need_back_translation)
-			fourth.__pad = (void __user *) &s;
-		old_fs = get_fs ();
-		set_fs (KERNEL_DS);
-		err = sys_semctl (first, second, third, fourth);
-		set_fs (old_fs);
-		if (need_back_translation) {
-			int err2 = put_user (s.sem_perm.key, &usp->sem_perm.key);
-			err2 |= __put_user (high2lowuid(s.sem_perm.uid), &usp->sem_perm.uid);
-			err2 |= __put_user (high2lowgid(s.sem_perm.gid), &usp->sem_perm.gid);
-			err2 |= __put_user (high2lowuid(s.sem_perm.cuid), &usp->sem_perm.cuid);
-			err2 |= __put_user (high2lowgid(s.sem_perm.cgid), &usp->sem_perm.cgid);
-			err2 |= __put_user (s.sem_perm.mode, &usp->sem_perm.mode);
-			err2 |= __put_user (s.sem_perm.seq, &usp->sem_perm.seq);
-			err2 |= __put_user (s.sem_otime, &usp->sem_otime);
-			err2 |= __put_user (s.sem_ctime, &usp->sem_ctime);
-			err2 |= __put_user (s.sem_nsems, &usp->sem_nsems);
-			if (err2) err = -EFAULT;
-		}
-	}
-out:
-	return err;
-}
-
-static int do_sys32_msgsnd(int first, int second, int third,
-			   void __user *uptr)
-{
-	struct msgbuf32 __user *up = uptr;
-	struct msgbuf *p;
-	mm_segment_t old_fs;
-	int err;
-
-	p = kmalloc(second + sizeof (struct msgbuf), GFP_USER);
-	if (!p)
-		return -ENOMEM;
-	err = -EFAULT;
-	if (get_user (p->mtype, &up->mtype) ||
-	    __copy_from_user (p->mtext, &up->mtext, second))
-		goto out;
-	old_fs = get_fs ();
-	set_fs (KERNEL_DS);
-	err = sys_msgsnd (first, (struct msgbuf __user *) p,
-			  second, third);
-	set_fs (old_fs);
-out:
-	kfree (p);
-	return err;
-}
-
-static int do_sys32_msgrcv(int first, int second, int msgtyp, int third,
-			   int version, void __user *uptr)
+#ifdef CONFIG_SYSVIPC                                                        
+asmlinkage long compat_sys_ipc(u32 call, u32 first, u32 second, u32 third, compat_uptr_t ptr, u32 fifth)
 {
-	struct msgbuf32 __user *up;
-	struct msgbuf *p;
-	mm_segment_t old_fs;
-	int err;
-
-	if (!version) {
-		struct ipc_kludge __user *uipck = uptr;
-		struct ipc_kludge ipck;
-
-		err = -EINVAL;
-		if (!uptr)
-			goto out;
-		err = -EFAULT;
-		if (copy_from_user (&ipck, uipck,
-				    sizeof (struct ipc_kludge)))
-			goto out;
-		uptr = compat_ptr(ipck.msgp);
-		msgtyp = ipck.msgtyp;
-	}
-	err = -ENOMEM;
-	p = kmalloc(second + sizeof (struct msgbuf), GFP_USER);
-	if (!p)
-		goto out;
-	old_fs = get_fs ();
-	set_fs (KERNEL_DS);
-	err = sys_msgrcv (first, (struct msgbuf __user *) p, second,
-			  msgtyp, third);
-	set_fs (old_fs);
-	if (err < 0)
-		goto free_then_out;
-	up = uptr;
-	if (put_user (p->mtype, &up->mtype) ||
-	    __copy_to_user (&up->mtext, p->mtext, err))
-		err = -EFAULT;
-free_then_out:
-	kfree (p);
-out:
-	return err;
-}
-
-static int do_sys32_msgctl(int first, int second, void __user *uptr)
-{
-	int err;
-
-	if (IPCOP_MASK (second) &
-	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (MSG_INFO) |
-	     IPCOP_MASK (IPC_RMID))) {
-		err = sys_msgctl (first, second, uptr);
-	} else if (second & IPC_64) {
-		struct msqid64_ds m;
-		struct msqid64_ds32 __user *up = uptr;
-		mm_segment_t old_fs;
-
-		if (second == (IPC_SET|IPC_64)) {
-			err = get_user (m.msg_perm.uid,
-					&up->msg_perm.uid);
-			err |= __get_user (m.msg_perm.gid,
-					   &up->msg_perm.gid);
-			err |= __get_user (m.msg_perm.mode,
-					   &up->msg_perm.mode);
-			err |= __get_user (m.msg_qbytes,
-					   &up->msg_qbytes);
-			if (err)
-				goto out;
-		}
-		old_fs = get_fs ();
-		set_fs (KERNEL_DS);
-		err = sys_msgctl(first, second,
-				 (struct msqid_ds __user *)&m);
-		set_fs (old_fs);
-		if (IPCOP_MASK (second) &
-		    (IPCOP_MASK (MSG_STAT) | IPCOP_MASK (IPC_STAT))) {
-			int err2 = copy_to_user(&up->msg_perm,
-						&m.msg_perm,
-						(sizeof(struct ipc64_perm) + 3*sizeof(time_t)));
-			err2 |= __put_user (m.msg_cbytes,
-					    &up->msg_cbytes);
-			err2 |= __put_user (m.msg_qnum, &up->msg_qnum);
-			err2 |= __put_user (m.msg_qbytes,
-					    &up->msg_qbytes);
-			err2 |= __put_user (m.msg_lspid, &up->msg_lspid);
-			err2 |= __put_user (m.msg_lrpid, &up->msg_lrpid);
-			if (err2)
-				err = -EFAULT;
-		}
-	} else {
-		struct msqid_ds m;
-		struct msqid_ds32 __user *up = uptr;
-		mm_segment_t old_fs;
-
-		if (second == IPC_SET) {
-			err = get_user(m.msg_perm.uid,
-				       &up->msg_perm.uid);
-			err |= __get_user(m.msg_perm.gid,
-					  &up->msg_perm.gid);
-			err |= __get_user(m.msg_perm.mode,
-					  &up->msg_perm.mode);
-			err |= __get_user(m.msg_qbytes,
-					  &up->msg_qbytes);
-			if (err)
-				goto out;
-		}
-		old_fs = get_fs ();
-		set_fs (KERNEL_DS);
-		err = sys_msgctl(first, second,
-				 (struct msqid_ds __user *) &m);
-		set_fs (old_fs);
-		if (IPCOP_MASK (second) &
-		    (IPCOP_MASK (MSG_STAT) | IPCOP_MASK (IPC_STAT))) {
-			int err2 = put_user(m.msg_perm.key,
-					    &up->msg_perm.key);
-			err2 |= __put_user(high2lowuid(m.msg_perm.uid),
-					   &up->msg_perm.uid);
-			err2 |= __put_user(high2lowgid(m.msg_perm.gid),
-					   &up->msg_perm.gid);
-			err2 |= __put_user(high2lowuid(m.msg_perm.cuid),
-					   &up->msg_perm.cuid);
-			err2 |= __put_user(high2lowgid(m.msg_perm.cgid),
-					   &up->msg_perm.cgid);
-			err2 |= __put_user(m.msg_perm.mode,
-					   &up->msg_perm.mode);
-			err2 |= __put_user(m.msg_perm.seq,
-					   &up->msg_perm.seq);
-			err2 |= __put_user(m.msg_stime, &up->msg_stime);
-			err2 |= __put_user(m.msg_rtime, &up->msg_rtime);
-			err2 |= __put_user(m.msg_ctime, &up->msg_ctime);
-			err2 |= __put_user(m.msg_cbytes,
-					   &up->msg_cbytes);
-			err2 |= __put_user(m.msg_qnum, &up->msg_qnum);
-			err2 |= __put_user(m.msg_qbytes,
-					   &up->msg_qbytes);
-			err2 |= __put_user(m.msg_lspid, &up->msg_lspid);
-			err2 |= __put_user(m.msg_lrpid, &up->msg_lrpid);
-			if (err2)
-				err = -EFAULT;
-		}
-	}
-
-out:
-	return err;
-}
-
-static int do_sys32_shmat (int first, int second, int third, int version, void __user *uptr)
-{
-	unsigned long raddr;
-	u32 __user *uaddr = compat_ptr((compat_uptr_t)third);
-	int err = -EINVAL;
-
-	if (version == 1)
-		goto out;
-	err = do_shmat (first, uptr, second, &raddr);
-	if (err)
-		goto out;
-	err = put_user (raddr, uaddr);
-out:
-	return err;
-}
-
-static int do_sys32_shmctl(int first, int second, void __user *uptr)
-{
-	int err;
-
-	if (IPCOP_MASK (second) &
-	    (IPCOP_MASK (IPC_INFO) | IPCOP_MASK (SHM_LOCK) |
-	     IPCOP_MASK (SHM_UNLOCK) | IPCOP_MASK (IPC_RMID))) {
-		if (second == (IPC_INFO|IPC_64)) {
-			/* So that we don't have to translate it */
-			second = IPC_INFO;
-		}
-		err = sys_shmctl(first, second, uptr);
-	} else if ((second & IPC_64) && second != (SHM_INFO|IPC_64)) {
-		struct shmid64_ds s;
-		struct shmid64_ds32 __user *up = uptr;
-		mm_segment_t old_fs;
-
-		if (second == (IPC_SET|IPC_64)) {
-			err = get_user(s.shm_perm.uid,
-				       &up->shm_perm.uid);
-			err |= __get_user(s.shm_perm.gid,
-					  &up->shm_perm.gid);
-			err |= __get_user(s.shm_perm.mode,
-					  &up->shm_perm.mode);
-			if (err)
-				goto out;
-		}
-		old_fs = get_fs();
-		set_fs(KERNEL_DS);
-		err = sys_shmctl(first, second,
-				 (struct shmid_ds __user *)&s);
-		set_fs(old_fs);
-		if (err < 0)
-			goto out;
-
-		/* Mask it even in this case so it becomes a CSE. */
-		if (IPCOP_MASK (second) &
-		    (IPCOP_MASK (SHM_STAT) | IPCOP_MASK (IPC_STAT))) {
-			int err2 = copy_to_user(&up->shm_perm,
-						&s.shm_perm,
-						sizeof(struct ipc64_perm) + 3*sizeof(time_t));
-			err2 |= __put_user(s.shm_segsz, &up->shm_segsz);
-			err2 |= __put_user(s.shm_nattch,&up->shm_nattch);
-			err2 |= __put_user(s.shm_cpid, &up->shm_cpid);
-			err2 |= __put_user(s.shm_lpid, &up->shm_lpid);
-			if (err2)
-				err = -EFAULT;
-		}
-	} else {
-		struct shmid_ds s;
-		struct shmid_ds32 __user *up = uptr;
-		mm_segment_t old_fs;
-
-		second &= ~IPC_64;
-		if (second == IPC_SET) {
-			err = get_user(s.shm_perm.uid,
-				       &up->shm_perm.uid);
-			err |= __get_user(s.shm_perm.gid,
-					  &up->shm_perm.gid);
-			err |= __get_user(s.shm_perm.mode,
-					  &up->shm_perm.mode);
-			if (err)
-				goto out;
-		}
-		old_fs = get_fs();
-		set_fs(KERNEL_DS);
-		err = sys_shmctl(first, second,
-				 (struct shmid_ds __user *) &s);
-		set_fs(old_fs);
-		if (err < 0)
-			goto out;
-
-		/* Mask it even in this case so it becomes a CSE. */
-		if (second == SHM_INFO) {
-			struct shm_info32 {
-				int used_ids;
-				u32 shm_tot, shm_rss, shm_swp;
-				u32 swap_attempts, swap_successes;
-			};
-			struct shm_info32 __user *uip = uptr;
-			struct shm_info *kp = (struct shm_info *) &s;
-			int err2 = put_user(kp->used_ids,
-					    &uip->used_ids);
-			err2 |= __put_user(kp->shm_tot, &uip->shm_tot);
-			err2 |= __put_user(kp->shm_rss, &uip->shm_rss);
-			err2 |= __put_user(kp->shm_swp, &uip->shm_swp);
-			err2 |= __put_user(kp->swap_attempts,
-					   &uip->swap_attempts);
-			err2 |= __put_user(kp->swap_successes,
-					   &uip->swap_successes);
-			if (err2)
-				err = -EFAULT;
-		} else if (IPCOP_MASK (second) &
-			   (IPCOP_MASK (SHM_STAT) |
-			    IPCOP_MASK (IPC_STAT))) {
-			int err2;
-
-			err2  = put_user(s.shm_perm.key,
-					 &up->shm_perm.key);
-			err2 |= __put_user(high2lowuid(s.shm_perm.uid),
-					   &up->shm_perm.uid);
-			err2 |= __put_user(high2lowuid(s.shm_perm.gid),
-					   &up->shm_perm.gid);
-			err2 |= __put_user(high2lowuid(s.shm_perm.cuid),
-					   &up->shm_perm.cuid);
-			err2 |= __put_user(high2lowuid(s.shm_perm.cgid),
-					   &up->shm_perm.cgid);
-			err2 |= __put_user(s.shm_perm.mode,
-					   &up->shm_perm.mode);
-			err2 |= __put_user(s.shm_perm.seq,
-					   &up->shm_perm.seq);
-			err2 |= __put_user(s.shm_atime, &up->shm_atime);
-			err2 |= __put_user(s.shm_dtime, &up->shm_dtime);
-			err2 |= __put_user(s.shm_ctime, &up->shm_ctime);
-			err2 |= __put_user(s.shm_segsz, &up->shm_segsz);
-			err2 |= __put_user(s.shm_nattch,&up->shm_nattch);
-			err2 |= __put_user(s.shm_cpid, &up->shm_cpid);
-			err2 |= __put_user(s.shm_lpid, &up->shm_lpid);
-			if (err2)
-				err = -EFAULT;
-		}
-	}
-out:
-	return err;
-}
-
-static int sys32_semtimedop(int semid, struct sembuf __user *tsems,
-		int nsems,
-		const struct compat_timespec __user *timeout32)
-{
-	struct compat_timespec t32;
-	struct timespec __user *t64;
-
-	t64 = compat_alloc_user_space(sizeof(*t64));
-	if (copy_from_user(&t32, timeout32, sizeof(t32)))
-		return -EFAULT;
-
-	if (put_user(t32.tv_sec, &t64->tv_sec) ||
-	    put_user(t32.tv_nsec, &t64->tv_nsec))
-		return -EFAULT;
-
-	return sys_semtimedop(semid, tsems, nsems, t64);
-}
-
-asmlinkage long compat_sys_ipc(u32 call, int first, int second, int third, compat_uptr_t __ptr, u32 fifth)
-{
-	int version, err;
-	void __user *ptr = compat_ptr(__ptr);
+	int version;
 
 	version = call >> 16; /* hack for backward compatibility */
 	call &= 0xffff;
 
-	if (call <= SEMCTL) {
-		switch (call) {
-		case SEMOP:
-			/* struct sembuf is the same on 32 and 64 :)) */
-			err = sys_semtimedop (first, ptr, second, NULL);
-			goto out;
-		case SEMTIMEDOP:
-			err = sys32_semtimedop(first, ptr, second,
-					       compat_ptr(fifth));
-		case SEMGET:
-			err = sys_semget(first, second, third);
-			goto out;
-		case SEMCTL:
-			err = do_sys32_semctl(first, second, third, ptr);
-			goto out;
-		default:
-			err = -ENOSYS;
-			goto out;
-		};
-	}
-	if (call <= MSGCTL) {
-		switch (call) {
-		case MSGSND:
-			err = do_sys32_msgsnd(first, second, third, ptr);
-			goto out;
-		case MSGRCV:
-			err = do_sys32_msgrcv(first, second, fifth,
-					      third, version, ptr);
-			goto out;
-		case MSGGET:
-			err = sys_msgget((key_t) first, second);
-			goto out;
-		case MSGCTL:
-			err = do_sys32_msgctl(first, second, ptr);
-			goto out;
-		default:
-			err = -ENOSYS;
-			goto out;
-		};
-	}
-	if (call <= SHMCTL) {
-		switch (call) {
-		case SHMAT:
-			err = do_sys32_shmat(first, second, third,
-					     version, ptr);
-			goto out;
-		case SHMDT: 
-			err = sys_shmdt(ptr);
-			goto out;
-		case SHMGET:
-			err = sys_shmget(first, (unsigned)second, third);
-			goto out;
-		case SHMCTL:
-			err = do_sys32_shmctl(first, second, ptr);
-			goto out;
-		default:
-			err = -ENOSYS;
-			goto out;
-		};
-	}
-	err = -ENOSYS;
+	switch (call) {
+	case SEMTIMEDOP:
+		if (third)
+			/* sign extend semid */
+			return compat_sys_semtimedop((int)first,
+						     compat_ptr(ptr), second,
+						     compat_ptr(third));
+		/* else fall through for normal semop() */
+	case SEMOP:
+		/* struct sembuf is the same on 32 and 64bit :)) */
+		/* sign extend semid */
+		return sys_semtimedop((int)first, compat_ptr(ptr), second,
+				      NULL);
+	case SEMGET:
+		/* sign extend key, nsems */
+		return sys_semget((int)first, (int)second, third);
+	case SEMCTL:
+		/* sign extend semid, semnum */
+		return compat_sys_semctl((int)first, (int)second, third,
+					 compat_ptr(ptr));
+
+	case MSGSND:
+		/* sign extend msqid */
+		return compat_sys_msgsnd((int)first, (int)second, third,
+					 compat_ptr(ptr));
+	case MSGRCV:
+		/* sign extend msqid, msgtyp */
+		return compat_sys_msgrcv((int)first, second, (int)fifth,
+					 third, version, compat_ptr(ptr));
+	case MSGGET:
+		/* sign extend key */
+		return sys_msgget((int)first, second);
+	case MSGCTL:
+		/* sign extend msqid */
+		return compat_sys_msgctl((int)first, second, compat_ptr(ptr));
+
+	case SHMAT:
+		/* sign extend shmid */
+		return compat_sys_shmat((int)first, second, third, version,
+					compat_ptr(ptr));
+	case SHMDT:
+		return sys_shmdt(compat_ptr(ptr));
+	case SHMGET:
+		/* sign extend key_t */
+		return sys_shmget((int)first, second, third);
+	case SHMCTL:
+		/* sign extend shmid */
+		return compat_sys_shmctl((int)first, second, compat_ptr(ptr));
+
+	default:
+		return -ENOSYS;
+	};
 
-out:
-	return err;
+	return -ENOSYS;
 }
+#endif
 
 asmlinkage long sys32_truncate64(const char __user * path, unsigned long high, unsigned long low)
 {
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/lib/U1memcpy.S linux-2.6.11-rc4-bk7/arch/sparc64/lib/U1memcpy.S
--- linux-2.6.11-rc4-bk6/arch/sparc64/lib/U1memcpy.S	2005-02-13 04:05:51.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/lib/U1memcpy.S	2005-02-19 16:10:13.289115345 +0100
@@ -119,6 +119,9 @@
 	.globl		FUNC_NAME
 	.type		FUNC_NAME,#function
 FUNC_NAME:		/* %o0=dst, %o1=src, %o2=len */
+	srlx		%o2, 31, %g2
+	cmp		%g2, 0
+	tne		%xcc, 5
 	PREAMBLE
 	mov		%o0, %g5
 	cmp		%o2, 0
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/lib/U3memcpy.S linux-2.6.11-rc4-bk7/arch/sparc64/lib/U3memcpy.S
--- linux-2.6.11-rc4-bk6/arch/sparc64/lib/U3memcpy.S	2005-02-13 04:07:50.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/lib/U3memcpy.S	2005-02-19 16:10:13.290115189 +0100
@@ -80,6 +80,9 @@
 	.globl	FUNC_NAME
 	.type	FUNC_NAME,#function
 FUNC_NAME:	/* %o0=dst, %o1=src, %o2=len */
+	srlx		%o2, 31, %g2
+	cmp		%g2, 0
+	tne		%xcc, 5
 	PREAMBLE
 	mov		%o0, %g5
 	cmp		%o2, 0
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/prom/Makefile linux-2.6.11-rc4-bk7/arch/sparc64/prom/Makefile
--- linux-2.6.11-rc4-bk6/arch/sparc64/prom/Makefile	2005-02-13 04:07:19.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/prom/Makefile	2005-02-19 16:10:13.291115033 +0100
@@ -7,4 +7,4 @@ EXTRA_AFLAGS := -ansi
 EXTRA_CFLAGS := -Werror
 
 lib-y   := bootstr.o devops.o init.o memory.o misc.o \
-	   tree.o console.o printf.o p1275.o map.o
+	   tree.o console.o printf.o p1275.o map.o cif.o
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/prom/cif.S linux-2.6.11-rc4-bk7/arch/sparc64/prom/cif.S
--- linux-2.6.11-rc4-bk6/arch/sparc64/prom/cif.S	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/prom/cif.S	2005-02-19 16:10:13.294114566 +0100
@@ -0,0 +1,225 @@
+/* cif.S: PROM entry/exit assembler trampolines.
+ *
+ * Copyright (C) 1996,1997 Jakub Jelinek (jj@sunsite.mff.cuni.cz)
+ * Copyright (C) 2005 David S. Miller <davem@davemloft.net>
+ */
+
+#include <asm/pstate.h>
+
+	.text
+	.globl	prom_cif_interface
+prom_cif_interface:
+	sethi	%hi(p1275buf), %o0
+	or	%o0, %lo(p1275buf), %o0
+	ldx	[%o0 + 0x010], %o1	! prom_cif_stack
+	save	%o1, -0x190, %sp
+	ldx	[%i0 + 0x008], %l2	! prom_cif_handler
+	rdpr	%pstate, %l4
+	wrpr	%g0, 0x15, %pstate	! save alternate globals
+	stx	%g1, [%sp + 2047 + 0x0b0]
+	stx	%g2, [%sp + 2047 + 0x0b8]
+	stx	%g3, [%sp + 2047 + 0x0c0]
+	stx	%g4, [%sp + 2047 + 0x0c8]
+	stx	%g5, [%sp + 2047 + 0x0d0]
+	stx	%g6, [%sp + 2047 + 0x0d8]
+	stx	%g7, [%sp + 2047 + 0x0e0]
+	wrpr	%g0, 0x814, %pstate	! save interrupt globals
+	stx	%g1, [%sp + 2047 + 0x0e8]
+	stx	%g2, [%sp + 2047 + 0x0f0]
+	stx	%g3, [%sp + 2047 + 0x0f8]
+	stx	%g4, [%sp + 2047 + 0x100]
+	stx	%g5, [%sp + 2047 + 0x108]
+	stx	%g6, [%sp + 2047 + 0x110]
+	stx	%g7, [%sp + 2047 + 0x118]
+	wrpr	%g0, 0x14, %pstate	! save normal globals
+	stx	%g1, [%sp + 2047 + 0x120]
+	stx	%g2, [%sp + 2047 + 0x128]
+	stx	%g3, [%sp + 2047 + 0x130]
+	stx	%g4, [%sp + 2047 + 0x138]
+	stx	%g5, [%sp + 2047 + 0x140]
+	stx	%g6, [%sp + 2047 + 0x148]
+	stx	%g7, [%sp + 2047 + 0x150]
+	wrpr	%g0, 0x414, %pstate	! save mmu globals
+	stx	%g1, [%sp + 2047 + 0x158]
+	stx	%g2, [%sp + 2047 + 0x160]
+	stx	%g3, [%sp + 2047 + 0x168]
+	stx	%g4, [%sp + 2047 + 0x170]
+	stx	%g5, [%sp + 2047 + 0x178]
+	stx	%g6, [%sp + 2047 + 0x180]
+	stx	%g7, [%sp + 2047 + 0x188]
+	mov	%g1, %l0		! also save to locals, so we can handle
+	mov	%g2, %l1		! tlb faults later on, when accessing
+	mov	%g3, %l3		! the stack.
+	mov	%g7, %l5
+	wrpr	%l4, PSTATE_IE, %pstate	! turn off interrupts
+	call	%l2
+	 add	%i0, 0x018, %o0		! prom_args
+	wrpr	%g0, 0x414, %pstate	! restore mmu globals
+	mov	%l0, %g1
+	mov	%l1, %g2
+	mov	%l3, %g3
+	mov	%l5, %g7
+	wrpr	%g0, 0x14, %pstate	! restore normal globals
+	ldx	[%sp + 2047 + 0x120], %g1
+	ldx	[%sp + 2047 + 0x128], %g2
+	ldx	[%sp + 2047 + 0x130], %g3
+	ldx	[%sp + 2047 + 0x138], %g4
+	ldx	[%sp + 2047 + 0x140], %g5
+	ldx	[%sp + 2047 + 0x148], %g6
+	ldx	[%sp + 2047 + 0x150], %g7
+	wrpr	%g0, 0x814, %pstate	! restore interrupt globals
+	ldx	[%sp + 2047 + 0x0e8], %g1
+	ldx	[%sp + 2047 + 0x0f0], %g2
+	ldx	[%sp + 2047 + 0x0f8], %g3
+	ldx	[%sp + 2047 + 0x100], %g4
+	ldx	[%sp + 2047 + 0x108], %g5
+	ldx	[%sp + 2047 + 0x110], %g6
+	ldx	[%sp + 2047 + 0x118], %g7
+	wrpr	%g0, 0x15, %pstate	! restore alternate globals
+	ldx	[%sp + 2047 + 0x0b0], %g1
+	ldx	[%sp + 2047 + 0x0b8], %g2
+	ldx	[%sp + 2047 + 0x0c0], %g3
+	ldx	[%sp + 2047 + 0x0c8], %g4
+	ldx	[%sp + 2047 + 0x0d0], %g5
+	ldx	[%sp + 2047 + 0x0d8], %g6
+	ldx	[%sp + 2047 + 0x0e0], %g7
+	wrpr	%l4, 0, %pstate	! restore original pstate
+	ret
+	 restore
+
+	.globl	prom_cif_callback
+prom_cif_callback:
+	sethi	%hi(p1275buf), %o1
+	or	%o1, %lo(p1275buf), %o1
+	save	%sp, -0x270, %sp
+	rdpr	%pstate, %l4
+	wrpr	%g0, 0x15, %pstate	! save PROM alternate globals
+	stx	%g1, [%sp + 2047 + 0x0b0]
+	stx	%g2, [%sp + 2047 + 0x0b8]
+	stx	%g3, [%sp + 2047 + 0x0c0]
+	stx	%g4, [%sp + 2047 + 0x0c8]
+	stx	%g5, [%sp + 2047 + 0x0d0]
+	stx	%g6, [%sp + 2047 + 0x0d8]
+	stx	%g7, [%sp + 2047 + 0x0e0]
+					! restore Linux alternate globals
+	ldx	[%sp + 2047 + 0x190], %g1
+	ldx	[%sp + 2047 + 0x198], %g2
+	ldx	[%sp + 2047 + 0x1a0], %g3
+	ldx	[%sp + 2047 + 0x1a8], %g4
+	ldx	[%sp + 2047 + 0x1b0], %g5
+	ldx	[%sp + 2047 + 0x1b8], %g6
+	ldx	[%sp + 2047 + 0x1c0], %g7
+	wrpr	%g0, 0x814, %pstate	! save PROM interrupt globals
+	stx	%g1, [%sp + 2047 + 0x0e8]
+	stx	%g2, [%sp + 2047 + 0x0f0]
+	stx	%g3, [%sp + 2047 + 0x0f8]
+	stx	%g4, [%sp + 2047 + 0x100]
+	stx	%g5, [%sp + 2047 + 0x108]
+	stx	%g6, [%sp + 2047 + 0x110]
+	stx	%g7, [%sp + 2047 + 0x118]
+					! restore Linux interrupt globals
+	ldx	[%sp + 2047 + 0x1c8], %g1
+	ldx	[%sp + 2047 + 0x1d0], %g2
+	ldx	[%sp + 2047 + 0x1d8], %g3
+	ldx	[%sp + 2047 + 0x1e0], %g4
+	ldx	[%sp + 2047 + 0x1e8], %g5
+	ldx	[%sp + 2047 + 0x1f0], %g6
+	ldx	[%sp + 2047 + 0x1f8], %g7
+	wrpr	%g0, 0x14, %pstate	! save PROM normal globals
+	stx	%g1, [%sp + 2047 + 0x120]
+	stx	%g2, [%sp + 2047 + 0x128]
+	stx	%g3, [%sp + 2047 + 0x130]
+	stx	%g4, [%sp + 2047 + 0x138]
+	stx	%g5, [%sp + 2047 + 0x140]
+	stx	%g6, [%sp + 2047 + 0x148]
+	stx	%g7, [%sp + 2047 + 0x150]
+					! restore Linux normal globals
+	ldx	[%sp + 2047 + 0x200], %g1
+	ldx	[%sp + 2047 + 0x208], %g2
+	ldx	[%sp + 2047 + 0x210], %g3
+	ldx	[%sp + 2047 + 0x218], %g4
+	ldx	[%sp + 2047 + 0x220], %g5
+	ldx	[%sp + 2047 + 0x228], %g6
+	ldx	[%sp + 2047 + 0x230], %g7
+	wrpr	%g0, 0x414, %pstate	! save PROM mmu globals
+	stx	%g1, [%sp + 2047 + 0x158]
+	stx	%g2, [%sp + 2047 + 0x160]
+	stx	%g3, [%sp + 2047 + 0x168]
+	stx	%g4, [%sp + 2047 + 0x170]
+	stx	%g5, [%sp + 2047 + 0x178]
+	stx	%g6, [%sp + 2047 + 0x180]
+	stx	%g7, [%sp + 2047 + 0x188]
+					! restore Linux mmu globals
+	ldx	[%sp + 2047 + 0x238], %o0
+	ldx	[%sp + 2047 + 0x240], %o1
+	ldx	[%sp + 2047 + 0x248], %l2
+	ldx	[%sp + 2047 + 0x250], %l3
+	ldx	[%sp + 2047 + 0x258], %l5
+	ldx	[%sp + 2047 + 0x260], %l6
+	ldx	[%sp + 2047 + 0x268], %l7
+					! switch to Linux tba
+	sethi	%hi(sparc64_ttable_tl0), %l1
+	rdpr	%tba, %l0		! save PROM tba
+	mov	%o0, %g1
+	mov	%o1, %g2
+	mov	%l2, %g3
+	mov	%l3, %g4
+	mov	%l5, %g5
+	mov	%l6, %g6
+	mov	%l7, %g7
+	wrpr	%l1, %tba		! install Linux tba
+	wrpr	%l4, 0, %pstate		! restore PSTATE
+	call	prom_world
+	 mov	%g0, %o0
+	ldx	[%i1 + 0x000], %l2
+	call	%l2
+	 mov	%i0, %o0
+	mov	%o0, %l1
+	call	prom_world
+	 or	%g0, 1, %o0
+	wrpr	%g0, 0x14, %pstate	! interrupts off
+					! restore PROM mmu globals
+	ldx	[%sp + 2047 + 0x158], %o0
+	ldx	[%sp + 2047 + 0x160], %o1
+	ldx	[%sp + 2047 + 0x168], %l2
+	ldx	[%sp + 2047 + 0x170], %l3
+	ldx	[%sp + 2047 + 0x178], %l5
+	ldx	[%sp + 2047 + 0x180], %l6
+	ldx	[%sp + 2047 + 0x188], %l7
+	wrpr	%g0, 0x414, %pstate	! restore PROM mmu globals
+	mov	%o0, %g1
+	mov	%o1, %g2
+	mov	%l2, %g3
+	mov	%l3, %g4
+	mov	%l5, %g5
+	mov	%l6, %g6
+	mov	%l7, %g7
+	wrpr	%l0, %tba		! restore PROM tba
+	wrpr	%g0, 0x14, %pstate	! restore PROM normal globals
+	ldx	[%sp + 2047 + 0x120], %g1
+	ldx	[%sp + 2047 + 0x128], %g2
+	ldx	[%sp + 2047 + 0x130], %g3
+	ldx	[%sp + 2047 + 0x138], %g4
+	ldx	[%sp + 2047 + 0x140], %g5
+	ldx	[%sp + 2047 + 0x148], %g6
+	ldx	[%sp + 2047 + 0x150], %g7
+	wrpr	%g0, 0x814, %pstate	! restore PROM interrupt globals
+	ldx	[%sp + 2047 + 0x0e8], %g1
+	ldx	[%sp + 2047 + 0x0f0], %g2
+	ldx	[%sp + 2047 + 0x0f8], %g3
+	ldx	[%sp + 2047 + 0x100], %g4
+	ldx	[%sp + 2047 + 0x108], %g5
+	ldx	[%sp + 2047 + 0x110], %g6
+	ldx	[%sp + 2047 + 0x118], %g7
+	wrpr	%g0, 0x15, %pstate	! restore PROM alternate globals
+	ldx	[%sp + 2047 + 0x0b0], %g1
+	ldx	[%sp + 2047 + 0x0b8], %g2
+	ldx	[%sp + 2047 + 0x0c0], %g3
+	ldx	[%sp + 2047 + 0x0c8], %g4
+	ldx	[%sp + 2047 + 0x0d0], %g5
+	ldx	[%sp + 2047 + 0x0d8], %g6
+	ldx	[%sp + 2047 + 0x0e0], %g7
+	wrpr	%l4, 0, %pstate
+	ret
+	 restore %l1, 0, %o0
+
diff -purN linux-2.6.11-rc4-bk6/arch/sparc64/prom/p1275.c linux-2.6.11-rc4-bk7/arch/sparc64/prom/p1275.c
--- linux-2.6.11-rc4-bk6/arch/sparc64/prom/p1275.c	2005-02-13 04:05:29.000000000 +0100
+++ linux-2.6.11-rc4-bk7/arch/sparc64/prom/p1275.c	2005-02-19 16:10:13.298113942 +0100
@@ -27,225 +27,8 @@ struct {
 
 extern void prom_world(int);
 
-void prom_cif_interface (void)
-{
-	__asm__ __volatile__ (
-"	mov	%0, %%o0\n"
-"	ldx	[%%o0 + 0x010], %%o1	! prom_cif_stack\n"
-"	save	%%o1, -0x190, %%sp\n"
-"	ldx	[%%i0 + 0x008], %%l2	! prom_cif_handler\n"
-"	rdpr	%%pstate, %%l4\n"
-"	wrpr	%%g0, 0x15, %%pstate	! save alternate globals\n"
-"	stx	%%g1, [%%sp + 2047 + 0x0b0]\n"
-"	stx	%%g2, [%%sp + 2047 + 0x0b8]\n"
-"	stx	%%g3, [%%sp + 2047 + 0x0c0]\n"
-"	stx	%%g4, [%%sp + 2047 + 0x0c8]\n"
-"	stx	%%g5, [%%sp + 2047 + 0x0d0]\n"
-"	stx	%%g6, [%%sp + 2047 + 0x0d8]\n"
-"	stx	%%g7, [%%sp + 2047 + 0x0e0]\n"
-"	wrpr	%%g0, 0x814, %%pstate	! save interrupt globals\n"
-"	stx	%%g1, [%%sp + 2047 + 0x0e8]\n"
-"	stx	%%g2, [%%sp + 2047 + 0x0f0]\n"
-"	stx	%%g3, [%%sp + 2047 + 0x0f8]\n"
-"	stx	%%g4, [%%sp + 2047 + 0x100]\n"
-"	stx	%%g5, [%%sp + 2047 + 0x108]\n"
-"	stx	%%g6, [%%sp + 2047 + 0x110]\n"
-"	stx	%%g7, [%%sp + 2047 + 0x118]\n"
-"	wrpr	%%g0, 0x14, %%pstate	! save normal globals\n"
-"	stx	%%g1, [%%sp + 2047 + 0x120]\n"
-"	stx	%%g2, [%%sp + 2047 + 0x128]\n"
-"	stx	%%g3, [%%sp + 2047 + 0x130]\n"
-"	stx	%%g4, [%%sp + 2047 + 0x138]\n"
-"	stx	%%g5, [%%sp + 2047 + 0x140]\n"
-"	stx	%%g6, [%%sp + 2047 + 0x148]\n"
-"	stx	%%g7, [%%sp + 2047 + 0x150]\n"
-"	wrpr	%%g0, 0x414, %%pstate	! save mmu globals\n"
-"	stx	%%g1, [%%sp + 2047 + 0x158]\n"
-"	stx	%%g2, [%%sp + 2047 + 0x160]\n"
-"	stx	%%g3, [%%sp + 2047 + 0x168]\n"
-"	stx	%%g4, [%%sp + 2047 + 0x170]\n"
-"	stx	%%g5, [%%sp + 2047 + 0x178]\n"
-"	stx	%%g6, [%%sp + 2047 + 0x180]\n"
-"	stx	%%g7, [%%sp + 2047 + 0x188]\n"
-"	mov	%%g1, %%l0		! also save to locals, so we can handle\n"
-"	mov	%%g2, %%l1		! tlb faults later on, when accessing\n"
-"	mov	%%g3, %%l3		! the stack.\n"
-"	mov	%%g7, %%l5\n"
-"	wrpr	%%l4, %1, %%pstate	! turn off interrupts\n"
-"	call	%%l2\n"
-"	 add	%%i0, 0x018, %%o0	! prom_args\n"
-"	wrpr	%%g0, 0x414, %%pstate	! restore mmu globals\n"
-"	mov	%%l0, %%g1\n"
-"	mov	%%l1, %%g2\n"
-"	mov	%%l3, %%g3\n"
-"	mov	%%l5, %%g7\n"
-"	wrpr	%%g0, 0x14, %%pstate	! restore normal globals\n"
-"	ldx	[%%sp + 2047 + 0x120], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x128], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x130], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x138], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x140], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x148], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x150], %%g7\n"
-"	wrpr	%%g0, 0x814, %%pstate	! restore interrupt globals\n"
-"	ldx	[%%sp + 2047 + 0x0e8], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x0f0], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x0f8], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x100], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x108], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x110], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x118], %%g7\n"
-"	wrpr	%%g0, 0x15, %%pstate	! restore alternate globals\n"
-"	ldx	[%%sp + 2047 + 0x0b0], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x0b8], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x0c0], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x0c8], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x0d0], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x0d8], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x0e0], %%g7\n"
-"	wrpr	%%l4, 0, %%pstate	! restore original pstate\n"
-"	ret\n"
-"	 restore\n"
-"	" : : "r" (&p1275buf), "i" (PSTATE_IE));
-}
-
-void prom_cif_callback(void)
-{
-	__asm__ __volatile__ (
-"	mov	%0, %%o1\n"
-"	save	%%sp, -0x270, %%sp\n"
-"	rdpr	%%pstate, %%l4\n"
-"	wrpr	%%g0, 0x15, %%pstate	! save PROM alternate globals\n"
-"	stx	%%g1, [%%sp + 2047 + 0x0b0]\n"
-"	stx	%%g2, [%%sp + 2047 + 0x0b8]\n"
-"	stx	%%g3, [%%sp + 2047 + 0x0c0]\n"
-"	stx	%%g4, [%%sp + 2047 + 0x0c8]\n"
-"	stx	%%g5, [%%sp + 2047 + 0x0d0]\n"
-"	stx	%%g6, [%%sp + 2047 + 0x0d8]\n"
-"	stx	%%g7, [%%sp + 2047 + 0x0e0]\n"
-"					! restore Linux alternate globals\n"
-"	ldx	[%%sp + 2047 + 0x190], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x198], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x1a0], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x1a8], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x1b0], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x1b8], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x1c0], %%g7\n"
-"	wrpr	%%g0, 0x814, %%pstate	! save PROM interrupt globals\n"
-"	stx	%%g1, [%%sp + 2047 + 0x0e8]\n"
-"	stx	%%g2, [%%sp + 2047 + 0x0f0]\n"
-"	stx	%%g3, [%%sp + 2047 + 0x0f8]\n"
-"	stx	%%g4, [%%sp + 2047 + 0x100]\n"
-"	stx	%%g5, [%%sp + 2047 + 0x108]\n"
-"	stx	%%g6, [%%sp + 2047 + 0x110]\n"
-"	stx	%%g7, [%%sp + 2047 + 0x118]\n"
-"					! restore Linux interrupt globals\n"
-"	ldx	[%%sp + 2047 + 0x1c8], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x1d0], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x1d8], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x1e0], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x1e8], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x1f0], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x1f8], %%g7\n"
-"	wrpr	%%g0, 0x14, %%pstate	! save PROM normal globals\n"
-"	stx	%%g1, [%%sp + 2047 + 0x120]\n"
-"	stx	%%g2, [%%sp + 2047 + 0x128]\n"
-"	stx	%%g3, [%%sp + 2047 + 0x130]\n"
-"	stx	%%g4, [%%sp + 2047 + 0x138]\n"
-"	stx	%%g5, [%%sp + 2047 + 0x140]\n"
-"	stx	%%g6, [%%sp + 2047 + 0x148]\n"
-"	stx	%%g7, [%%sp + 2047 + 0x150]\n"
-"					! restore Linux normal globals\n"
-"	ldx	[%%sp + 2047 + 0x200], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x208], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x210], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x218], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x220], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x228], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x230], %%g7\n"
-"	wrpr	%%g0, 0x414, %%pstate	! save PROM mmu globals\n"
-"	stx	%%g1, [%%sp + 2047 + 0x158]\n"
-"	stx	%%g2, [%%sp + 2047 + 0x160]\n"
-"	stx	%%g3, [%%sp + 2047 + 0x168]\n"
-"	stx	%%g4, [%%sp + 2047 + 0x170]\n"
-"	stx	%%g5, [%%sp + 2047 + 0x178]\n"
-"	stx	%%g6, [%%sp + 2047 + 0x180]\n"
-"	stx	%%g7, [%%sp + 2047 + 0x188]\n"
-"					! restore Linux mmu globals\n"
-"	ldx	[%%sp + 2047 + 0x238], %%o0\n"
-"	ldx	[%%sp + 2047 + 0x240], %%o1\n"
-"	ldx	[%%sp + 2047 + 0x248], %%l2\n"
-"	ldx	[%%sp + 2047 + 0x250], %%l3\n"
-"	ldx	[%%sp + 2047 + 0x258], %%l5\n"
-"	ldx	[%%sp + 2047 + 0x260], %%l6\n"
-"	ldx	[%%sp + 2047 + 0x268], %%l7\n"
-"					! switch to Linux tba\n"
-"	sethi	%%hi(sparc64_ttable_tl0), %%l1\n"
-"	rdpr	%%tba, %%l0		! save PROM tba\n"
-"	mov	%%o0, %%g1\n"
-"	mov	%%o1, %%g2\n"
-"	mov	%%l2, %%g3\n"
-"	mov	%%l3, %%g4\n"
-"	mov	%%l5, %%g5\n"
-"	mov	%%l6, %%g6\n"
-"	mov	%%l7, %%g7\n"
-"	wrpr	%%l1, %%tba		! install Linux tba\n"
-"	wrpr	%%l4, 0, %%pstate	! restore PSTATE\n"
-"	call	prom_world\n"
-"	 mov	%%g0, %%o0\n"
-"	ldx	[%%i1 + 0x000], %%l2\n"
-"	call	%%l2\n"
-"	 mov	%%i0, %%o0\n"
-"	mov	%%o0, %%l1\n"
-"	call	prom_world\n"
-"	 or	%%g0, 1, %%o0\n"
-"	wrpr	%%g0, 0x14, %%pstate	! interrupts off\n"
-"					! restore PROM mmu globals\n"
-"	ldx	[%%sp + 2047 + 0x158], %%o0\n"
-"	ldx	[%%sp + 2047 + 0x160], %%o1\n"
-"	ldx	[%%sp + 2047 + 0x168], %%l2\n"
-"	ldx	[%%sp + 2047 + 0x170], %%l3\n"
-"	ldx	[%%sp + 2047 + 0x178], %%l5\n"
-"	ldx	[%%sp + 2047 + 0x180], %%l6\n"
-"	ldx	[%%sp + 2047 + 0x188], %%l7\n"
-"	wrpr	%%g0, 0x414, %%pstate	! restore PROM mmu globals\n"
-"	mov	%%o0, %%g1\n"
-"	mov	%%o1, %%g2\n"
-"	mov	%%l2, %%g3\n"
-"	mov	%%l3, %%g4\n"
-"	mov	%%l5, %%g5\n"
-"	mov	%%l6, %%g6\n"
-"	mov	%%l7, %%g7\n"
-"	wrpr	%%l0, %%tba		! restore PROM tba\n"
-"	wrpr	%%g0, 0x14, %%pstate	! restore PROM normal globals\n"
-"	ldx	[%%sp + 2047 + 0x120], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x128], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x130], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x138], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x140], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x148], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x150], %%g7\n"
-"	wrpr	%%g0, 0x814, %%pstate	! restore PROM interrupt globals\n"
-"	ldx	[%%sp + 2047 + 0x0e8], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x0f0], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x0f8], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x100], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x108], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x110], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x118], %%g7\n"
-"	wrpr	%%g0, 0x15, %%pstate	! restore PROM alternate globals\n"
-"	ldx	[%%sp + 2047 + 0x0b0], %%g1\n"
-"	ldx	[%%sp + 2047 + 0x0b8], %%g2\n"
-"	ldx	[%%sp + 2047 + 0x0c0], %%g3\n"
-"	ldx	[%%sp + 2047 + 0x0c8], %%g4\n"
-"	ldx	[%%sp + 2047 + 0x0d0], %%g5\n"
-"	ldx	[%%sp + 2047 + 0x0d8], %%g6\n"
-"	ldx	[%%sp + 2047 + 0x0e0], %%g7\n"
-"	wrpr	%%l4, 0, %%pstate\n"
-"	ret\n"
-"	 restore %%l1, 0, %%o0\n"
-"	" : : "r" (&p1275buf), "i" (PSTATE_PRIV));
-}
+extern void prom_cif_interface(void);
+extern void prom_cif_callback(void);
 
 /*
  * This provides SMP safety on the p1275buf. prom_callback() drops this lock
diff -purN linux-2.6.11-rc4-bk6/drivers/bluetooth/hci_usb.c linux-2.6.11-rc4-bk7/drivers/bluetooth/hci_usb.c
--- linux-2.6.11-rc4-bk6/drivers/bluetooth/hci_usb.c	2005-02-13 04:07:40.000000000 +0100
+++ linux-2.6.11-rc4-bk7/drivers/bluetooth/hci_usb.c	2005-02-19 16:10:13.325109735 +0100
@@ -108,7 +108,7 @@ static struct usb_device_id blacklist_id
 	{ USB_DEVICE(0x0a5c, 0x2009), .driver_info = HCI_BCM92035 },
 
 	/* Microsoft Wireless Transceiver for Bluetooth 2.0 */
-	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_BCM92035 },
+	{ USB_DEVICE(0x045e, 0x009c), .driver_info = HCI_RESET },
 
 	/* ISSC Bluetooth Adapter v3.1 */
 	{ USB_DEVICE(0x1131, 0x1001), .driver_info = HCI_RESET },
diff -purN linux-2.6.11-rc4-bk6/include/asm-sparc64/compat.h linux-2.6.11-rc4-bk7/include/asm-sparc64/compat.h
--- linux-2.6.11-rc4-bk6/include/asm-sparc64/compat.h	2005-02-13 04:06:55.000000000 +0100
+++ linux-2.6.11-rc4-bk7/include/asm-sparc64/compat.h	2005-02-19 16:10:13.471086985 +0100
@@ -24,6 +24,7 @@ typedef u16		compat_ipc_pid_t;
 typedef s32		compat_daddr_t;
 typedef u32		compat_caddr_t;
 typedef __kernel_fsid_t	compat_fsid_t;
+typedef s32		compat_key_t;
 
 typedef s32		compat_int_t;
 typedef s32		compat_long_t;
@@ -139,4 +140,62 @@ static __inline__ void __user *compat_al
 	return (void __user *) (usp - len);
 }
 
+struct compat_ipc64_perm {
+	compat_key_t key;
+	__kernel_uid_t uid;
+	__kernel_gid_t gid;
+	__kernel_uid_t cuid;
+	__kernel_gid_t cgid;
+	unsigned short __pad1;
+	compat_mode_t mode;
+	unsigned short __pad2;
+	unsigned short seq;
+	unsigned long __unused1;	/* yes they really are 64bit pads */
+	unsigned long __unused2;
+};
+
+struct compat_semid64_ds {
+	struct compat_ipc64_perm sem_perm;
+	unsigned int	__pad1;
+	compat_time_t	sem_otime;
+	unsigned int	__pad2;
+	compat_time_t	sem_ctime;
+	u32		sem_nsems;
+	u32		__unused1;
+	u32		__unused2;
+};
+
+struct compat_msqid64_ds {
+	struct compat_ipc64_perm msg_perm;
+	unsigned int	__pad1;
+	compat_time_t	msg_stime;
+	unsigned int	__pad2;
+	compat_time_t	msg_rtime;
+	unsigned int	__pad3;
+	compat_time_t	msg_ctime;
+	unsigned int	msg_cbytes;
+	unsigned int	msg_qnum;
+	unsigned int	msg_qbytes;
+	compat_pid_t	msg_lspid;
+	compat_pid_t	msg_lrpid;
+	unsigned int	__unused1;
+	unsigned int	__unused2;
+};
+
+struct compat_shmid64_ds {
+	struct compat_ipc64_perm shm_perm;
+	unsigned int	__pad1;
+	compat_time_t	shm_atime;
+	unsigned int	__pad2;
+	compat_time_t	shm_dtime;
+	unsigned int	__pad3;
+	compat_time_t	shm_ctime;
+	compat_size_t	shm_segsz;
+	compat_pid_t	shm_cpid;
+	compat_pid_t	shm_lpid;
+	unsigned int	shm_nattch;
+	unsigned int	__unused1;
+	unsigned int	__unused2;
+};
+
 #endif /* _ASM_SPARC64_COMPAT_H */
diff -purN linux-2.6.11-rc4-bk6/include/asm-sparc64/uaccess.h linux-2.6.11-rc4-bk7/include/asm-sparc64/uaccess.h
--- linux-2.6.11-rc4-bk6/include/asm-sparc64/uaccess.h	2005-02-13 04:08:05.000000000 +0100
+++ linux-2.6.11-rc4-bk7/include/asm-sparc64/uaccess.h	2005-02-19 16:10:13.472086829 +0100
@@ -49,10 +49,10 @@ do {										\
 	__asm__ __volatile__ ("wr %%g0, %0, %%asi" : : "r" ((val).seg));	\
 } while(0)
 
-#define __user_ok(addr,size) 1
+#define __user_ok(addr,size) ((void)(addr), (void)(size), 1)
 #define __kernel_ok (segment_eq(get_fs(), KERNEL_DS))
-#define __access_ok(addr,size) 1
-#define access_ok(type,addr,size) 1
+#define __access_ok(addr,size) ((void)(addr), (void)(size), 1)
+#define access_ok(type,addr,size) ((void)(type), (void)(addr), (void)(size), 1)
 
 static inline int verify_area(int type, const void __user * addr, unsigned long size)
 {
