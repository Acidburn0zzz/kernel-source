From: olh@suse.de
Subject: 2.6.11-rc2-bk9

 -- www.kernel.org/pub/linux/kernel/v2.6/snapshots/patch-2.6.11-rc2-bk8.log	2005-01-30 14:04:17.000000000 +0100
 ++ www.kernel.org/pub/linux/kernel/v2.6/snapshots/patch-2.6.11-rc2-bk9.log	2005-01-31 13:52:05.000000000 +0100
 ChangeSet@1.1991.1.1, 2005-01-30 13:20:58-08:00, kaber@trash.net
   [PATCH] Fix conntrack fragment route cache memory leak
   
   Thanks to Russell King for some excellent debugging.
   
   Conntrack defragments locally generated packets before they hit
   ip_fragment.  In this case the fragments have skb->dst set, and
   that needs to be released.
   
   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
 
 ChangeSet@1.1992, 2005-01-30 19:38:54+00:00, rmk@flint.arm.linux.org.uk
   [ARM] [3/4] Introduce usr_entry macro to contain common entry code
   
   This is the third of 4 patches which factor out common code in
   the ARM exception entry assembly code, aiming towards a reduction
   in the size of the changes required here for SMP support.  These
   patches are low impact, and will be merged over the coarse of the
   next few days.
   
   This patch addresses the code handling exception entry from user
   modes.
 
diff -purN linux-2.6.11-rc2-bk8/Makefile linux-2.6.11-rc2-bk9/Makefile
--- linux-2.6.11-rc2-bk8/Makefile	2005-01-31 15:52:26.145672089 +0100
+++ linux-2.6.11-rc2-bk9/Makefile	2005-01-31 15:52:33.571712781 +0100
@@ -1,7 +1,7 @@
 VERSION = 2
 PATCHLEVEL = 6
 SUBLEVEL = 11
-EXTRAVERSION = -rc2-bk8
+EXTRAVERSION = -rc2-bk9
 NAME=Woozy Numbat
 
 # *DOCUMENTATION*
diff -purN linux-2.6.11-rc2-bk8/arch/arm/kernel/entry-armv.S linux-2.6.11-rc2-bk9/arch/arm/kernel/entry-armv.S
--- linux-2.6.11-rc2-bk8/arch/arm/kernel/entry-armv.S	2005-01-31 15:52:26.159669909 +0100
+++ linux-2.6.11-rc2-bk9/arch/arm/kernel/entry-armv.S	2005-01-31 15:52:33.586710446 +0100
@@ -191,15 +191,20 @@ __pabt_svc:
 /*
  * User mode handlers
  */
+	.macro	usr_entry, sym
+	sub	sp, sp, #S_FRAME_SIZE		@ Allocate frame size in one go
+	stmia	sp, {r0 - r12}			@ save r0 - r12
+	ldr	r7, .LC\sym
+	add	r5, sp, #S_PC
+	ldmia	r7, {r2 - r4}			@ Get USR pc, cpsr
+	stmia	r5, {r2 - r4}			@ Save USR pc, cpsr, old_r0
+	stmdb	r5, {sp, lr}^
+	.endm
+
 		.align	5
-__dabt_usr:	sub	sp, sp, #S_FRAME_SIZE		@ Allocate frame size in one go
-		stmia	sp, {r0 - r12}			@ save r0 - r12
-		ldr	r7, .LCabt
-		add	r5, sp, #S_PC
-		ldmia	r7, {r2 - r4}			@ Get USR pc, cpsr
-		stmia	r5, {r2 - r4}			@ Save USR pc, cpsr, old_r0
-		stmdb	r5, {sp, lr}^
-		alignment_trap r7, r7, __temp_abt
+__dabt_usr:
+		usr_entry abt
+		alignment_trap r7, r0, __temp_abt
 		zero_fp
 #ifdef MULTI_ABORT
 		ldr	r4, .LCprocfns			@ pass r2, r3 to
@@ -214,14 +219,9 @@ __dabt_usr:	sub	sp, sp, #S_FRAME_SIZE		@
 		b	do_DataAbort
 
 		.align	5
-__irq_usr:	sub	sp, sp, #S_FRAME_SIZE
-		stmia	sp, {r0 - r12}			@ save r0 - r12
-		ldr	r4, .LCirq
-		add	r8, sp, #S_PC
-		ldmia	r4, {r5 - r7}			@ get saved PC, SPSR
-		stmia	r8, {r5 - r7}			@ save pc, psr, old_r0
-		stmdb	r8, {sp, lr}^
-		alignment_trap r4, r7, __temp_irq
+__irq_usr:
+		usr_entry irq
+		alignment_trap r7, r0, __temp_irq
 		zero_fp
 #ifdef CONFIG_PREEMPT
 		get_thread_info r8
@@ -251,18 +251,13 @@ __irq_usr:	sub	sp, sp, #S_FRAME_SIZE
 		.ltorg
 
 		.align	5
-__und_usr:	sub	sp, sp, #S_FRAME_SIZE		@ Allocate frame size in one go
-		stmia	sp, {r0 - r12}			@ Save r0 - r12
-		ldr	r4, .LCund
-		add	r8, sp, #S_PC
-		ldmia	r4, {r5 - r7}
-		stmia	r8, {r5 - r7}			@ Save USR pc, cpsr, old_r0
-		stmdb	r8, {sp, lr}^			@ Save user sp, lr
-		alignment_trap r4, r7, __temp_und
+__und_usr:
+		usr_entry und
+		alignment_trap r7, r0, __temp_und
 		zero_fp
-		tst	r6, #PSR_T_BIT			@ Thumb mode?
+		tst	r3, #PSR_T_BIT			@ Thumb mode?
 		bne	fpundefinstr			@ ignore FP
-		sub	r4, r5, #4
+		sub	r4, r2, #4
 1:		ldrt	r0, [r4]			@ r0  = instruction
 		adrsvc	al, r9, ret_from_exception	@ r9  = normal FP return
 		adrsvc	al, lr, fpundefinstr		@ lr  = undefined instr return
@@ -361,14 +356,9 @@ fpundefinstr:	mov	r0, sp
 		b	do_undefinstr
 
 		.align	5
-__pabt_usr:	sub	sp, sp, #S_FRAME_SIZE		@ Allocate frame size in one go
-		stmia	sp, {r0 - r12}			@ Save r0 - r12
-		ldr	r4, .LCabt
-		add	r8, sp, #S_PC
-		ldmia	r4, {r5 - r7}			@ Get USR pc, cpsr
-		stmia	r8, {r5 - r7}			@ Save USR pc, cpsr, old_r0
-		stmdb	r8, {sp, lr}^			@ Save sp_usr lr_usr
-		alignment_trap r4, r7, __temp_abt
+__pabt_usr:
+		usr_entry abt
+		alignment_trap r7, r0, __temp_abt
 		zero_fp
 		enable_irq r0				@ Enable interrupts
 		mov	r0, r5				@ address (pc)
diff -purN linux-2.6.11-rc2-bk8/net/ipv4/ip_output.c linux-2.6.11-rc2-bk9/net/ipv4/ip_output.c
--- linux-2.6.11-rc2-bk8/net/ipv4/ip_output.c	2005-01-31 15:52:27.330751377 +0100
+++ linux-2.6.11-rc2-bk9/net/ipv4/ip_output.c	2005-01-31 15:52:34.762661577 +0100
@@ -389,6 +389,7 @@ static void ip_copy_metadata(struct sk_b
 	to->priority = from->priority;
 	to->protocol = from->protocol;
 	to->security = from->security;
+	dst_release(to->dst);
 	to->dst = dst_clone(from->dst);
 	to->dev = from->dev;
 
