From: chrisw@osdl.org
Subject: fix possible DoS in igmp code
Suse-bugzilla: 48895

diff -urNp linux-2.6.5/net/ipv4/igmp.c linux-2.6.5.SUSE/net/ipv4/igmp.c
--- linux-2.6.5/net/ipv4/igmp.c	2004-12-06 15:56:42.708210974 +0100
+++ linux-2.6.5.SUSE/net/ipv4/igmp.c	2004-12-06 15:56:56.842944295 +0100
@@ -1770,16 +1770,16 @@ int ip_mc_source(int add, int omode, str
 
 	psl = pmc->sflist;
 	if (!add) {
-		if (!psl)
+		if (!psl || !psl->sl_count)
 			goto done;
-		rv = !0;
+		rv = 1;
 		for (i=0; i<psl->sl_count; i++) {
-			rv = memcmp(&psl->sl_addr, &mreqs->imr_multiaddr,
+			rv = memcmp(&psl->sl_addr[i], &mreqs->imr_sourceaddr,
 				sizeof(__u32));
-			if (rv >= 0)
+			if (rv >= 0)	/* array is sorted */
 				break;
 		}
-		if (!rv)	/* source not found */
+		if (rv)		/* source not found */
 			goto done;
 
 		/* update the interface filter */
@@ -1821,7 +1821,7 @@ int ip_mc_source(int add, int omode, str
 	}
 	rv = 1;	/* > 0 for insert logic below if sl_count is 0 */
 	for (i=0; i<psl->sl_count; i++) {
-		rv = memcmp(&psl->sl_addr, &mreqs->imr_multiaddr,
+		rv = memcmp(&psl->sl_addr[i], &mreqs->imr_sourceaddr,
 			sizeof(__u32));
 		if (rv >= 0)
 			break;
diff -urNp linux-2.6.5/net/ipv6/mcast.c linux-2.6.5.SUSE/net/ipv6/mcast.c
--- linux-2.6.5/net/ipv6/mcast.c	2004-12-06 15:56:42.709210814 +0100
+++ linux-2.6.5.SUSE/net/ipv6/mcast.c	2004-12-06 15:56:56.843944134 +0100
@@ -385,16 +385,16 @@ int ip6_mc_source(int add, int omode, st
 
 	psl = pmc->sflist;
 	if (!add) {
-		if (!psl)
+		if (!psl || !psl->sl_count)
 			goto done;
-		rv = !0;
+		rv = 1;
 		for (i=0; i<psl->sl_count; i++) {
-			rv = memcmp(&psl->sl_addr, group,
+			rv = memcmp(&psl->sl_addr[i], source,
 				sizeof(struct in6_addr));
-			if (rv >= 0)
+			if (rv >= 0)	/* array is sorted */
 				break;
 		}
-		if (!rv)	/* source not found */
+		if (rv)		/* source not found */
 			goto done;
 
 		/* update the interface filter */
@@ -435,7 +435,7 @@ int ip6_mc_source(int add, int omode, st
 	}
 	rv = 1;	/* > 0 for insert logic below if sl_count is 0 */
 	for (i=0; i<psl->sl_count; i++) {
-		rv = memcmp(&psl->sl_addr, group, sizeof(struct in6_addr));
+		rv = memcmp(&psl->sl_addr[i], source, sizeof(struct in6_addr));
 		if (rv >= 0)
 			break;
 	}
