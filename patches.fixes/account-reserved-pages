From: Andrea Arcangeli <andrea@suse.de>
Subject: Avoid rawio to work on reserved pages except the ZERO_PAGE
Patch-mainline: no
References: SUSE48141

This avoids doing rawio on reserved pages that may be unreserved
from under us. ZERO_PAGE here is special: we allow reading from
zeropage since we know it cannot be unreserved under us.

Signed-off-by: Andrea Arcangeli <andrea@suse.de>

--- sp1-ref/mm/memory.c	2004-11-23 01:46:26.000000000 +0100
+++ sp1/mm/memory.c	2004-11-23 03:52:23.000000000 +0100
@@ -827,16 +827,18 @@ int get_user_pages(struct task_struct *t
 			}
 			if (pages) {
 				pages[i] = get_page_map(map);
-				if (!pages[i]) {
-					spin_unlock(&mm->page_table_lock);
-					while (i--)
-						page_cache_release(pages[i]);
-					i = -EFAULT;
-					goto out;
-				}
-				flush_dcache_page(pages[i]);
-				if (!PageReserved(pages[i]))
+				if (unlikely(!pages[i] || PageReserved(pages[i]))) {
+					if (pages[i] != ZERO_PAGE(start)) {
+						spin_unlock(&mm->page_table_lock);
+						while (i--)
+							page_cache_release(pages[i]);
+						i = -EFAULT;
+						goto out;
+					}
+				} else {
+					flush_dcache_page(pages[i]);
 					page_cache_get(pages[i]);
+				}
 			}
 			if (vmas)
 				vmas[i] = vma;

