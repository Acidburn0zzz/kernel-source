diff -p -purN /usr/src/linux-2.6.5-7.97/drivers/net/e1000/e1000_main.c linux-2.6.5-7.97/drivers/net/e1000/e1000_main.c
--- /usr/src/linux-2.6.5-7.97/drivers/net/e1000/e1000_main.c	2004-07-02 14:41:36.000000000 +0000
+++ linux-2.6.5-7.97/drivers/net/e1000/e1000_main.c	2004-07-19 13:40:56.766544813 +0000
@@ -847,7 +847,7 @@ e1000_configure_tx(struct e1000_adapter 
 {
 	uint64_t tdba = adapter->tx_ring.dma;
 	uint32_t tdlen = adapter->tx_ring.count * sizeof(struct e1000_tx_desc);
-	uint32_t tctl, tipg;
+	uint32_t tctl, tipg, tspmt;
 
 	E1000_WRITE_REG(&adapter->hw, TDBAL, (tdba & 0x00000000ffffffffULL));
 	E1000_WRITE_REG(&adapter->hw, TDBAH, (tdba >> 32));
@@ -859,6 +859,10 @@ e1000_configure_tx(struct e1000_adapter 
 	E1000_WRITE_REG(&adapter->hw, TDH, 0);
 	E1000_WRITE_REG(&adapter->hw, TDT, 0);
 
+	tspmt = E1000_READ_REG(&adapter->hw, TSPMT);
+        tspmt |= 0x0C000000;
+        E1000_WRITE_REG(&adapter->hw, TSPMT, tspmt);
+
 	/* Set the default values for the Tx Inter Packet Gap timer */
 
 	switch (adapter->hw.mac_type) {
@@ -2237,8 +2241,7 @@ e1000_clean_tx_irq(struct e1000_adapter 
 	unsigned int i, eop;
 	boolean_t cleaned = FALSE;
 
-
-
+	spin_lock(&adapter->tx_lock);
 
 	i = tx_ring->next_to_clean;
 	eop = tx_ring->buffer_info[i].next_to_watch;
@@ -2257,8 +2260,6 @@ e1000_clean_tx_irq(struct e1000_adapter 
 					       buffer_info->length,
 					       PCI_DMA_TODEVICE);
 
-				wmb();
-
 				buffer_info->dma = 0;
 			}
 
@@ -2283,8 +2284,6 @@ e1000_clean_tx_irq(struct e1000_adapter 
 
 	tx_ring->next_to_clean = i;
 
-	spin_lock(&adapter->tx_lock);
-
 	if(cleaned && netif_queue_stopped(netdev) && netif_carrier_ok(netdev))
 		netif_wake_queue(netdev);
 
