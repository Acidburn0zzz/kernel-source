Index: linux-2.6.7/drivers/net/e1000/e1000_main.c
===================================================================
--- linux-2.6.7.orig/drivers/net/e1000/e1000_main.c	2004-08-05 13:39:37.762667025 +0200
+++ linux-2.6.7/drivers/net/e1000/e1000_main.c	2004-08-05 13:45:54.998084812 +0200
@@ -824,7 +824,7 @@
 {
 	uint64_t tdba = adapter->tx_ring.dma;
 	uint32_t tdlen = adapter->tx_ring.count * sizeof(struct e1000_tx_desc);
-	uint32_t tctl, tipg;
+	uint32_t tctl, tipg, tspmt;
 
 	E1000_WRITE_REG(&adapter->hw, TDBAL, (tdba & 0x00000000ffffffffULL));
 	E1000_WRITE_REG(&adapter->hw, TDBAH, (tdba >> 32));
@@ -836,6 +836,10 @@
 	E1000_WRITE_REG(&adapter->hw, TDH, 0);
 	E1000_WRITE_REG(&adapter->hw, TDT, 0);
 
+	tspmt = E1000_READ_REG(&adapter->hw, TSPMT);
+        tspmt |= 0x0C000000;
+        E1000_WRITE_REG(&adapter->hw, TSPMT, tspmt);
+
 	/* Set the default values for the Tx Inter Packet Gap timer */
 
 	switch (adapter->hw.mac_type) {
@@ -2175,6 +2179,7 @@
 	unsigned int i, eop;
 	boolean_t cleaned = FALSE;
 
+	spin_lock(&adapter->tx_lock);
 
 	i = tx_ring->next_to_clean;
 	eop = tx_ring->buffer_info[i].next_to_watch;
@@ -2193,8 +2198,6 @@
 					       buffer_info->length,
 					       PCI_DMA_TODEVICE);
 
-				wmb();
-
 				buffer_info->dma = 0;
 			}
 
@@ -2219,8 +2222,6 @@
 
 	tx_ring->next_to_clean = i;
 
-	spin_lock(&adapter->tx_lock);
-
 	if(cleaned && netif_queue_stopped(netdev) && netif_carrier_ok(netdev))
 		netif_wake_queue(netdev);
 
