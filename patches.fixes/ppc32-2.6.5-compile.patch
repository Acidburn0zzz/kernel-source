
The following is an uncleaned up (and slightly incomplete, there's
changes to <asm-ppc/dma-mapping.h> needed) patch that gets things
compiling for me.  I'm compiling now for a Motorola LoPEC and I'll
actually test the changes shortly.  If it works, I'll split it up
and send to akpm.

===== arch/ppc/syslib/indirect_pci.c 1.13 vs edited =====
--- 1.13/arch/ppc/syslib/indirect_pci.c	Tue Mar 16 08:49:56 2004
+++ edited/arch/ppc/syslib/indirect_pci.c	Tue Mar 16 10:01:42 2004
@@ -44,8 +44,8 @@
 			cfg_type = 1;
 
 	PCI_CFG_OUT(hose->cfg_addr, 					 
-		 (0x80000000 | ((dev->bus->number - hose->bus_offset) << 16) 
-		  | (dev->devfn << 8) | ((offset & 0xfc) | cfg_type)));	
+		 (0x80000000 | ((bus->number - hose->bus_offset) << 16) 
+		  | (devfn << 8) | ((offset & 0xfc) | cfg_type)));	
 
 	/*
 	 * Note: the caller has already checked that offset is
@@ -83,8 +83,8 @@
 			cfg_type = 1;
 
 	PCI_CFG_OUT(hose->cfg_addr, 					 
-		 (0x80000000 | ((dev->bus->number - hose->bus_offset) << 16) 
-		  | (dev->devfn << 8) | ((offset & 0xfc) | cfg_type)));	
+		 (0x80000000 | ((bus->number - hose->bus_offset) << 16) 
+		  | (devfn << 8) | ((offset & 0xfc) | cfg_type)));	
 
 	/*
 	 * Note: the caller has already checked that offset is
===== include/asm-ppc/pci.h 1.29 vs edited =====
--- 1.29/include/asm-ppc/pci.h	Tue Mar 16 08:50:02 2004
+++ edited/include/asm-ppc/pci.h	Tue Mar 16 09:56:13 2004
@@ -200,7 +200,7 @@
 {
 	BUG_ON(direction == PCI_DMA_NONE);
 
-	consistent_sync_for_cpu(bus_to_virt(dma_handle), size, direction);
+	consistent_sync(bus_to_virt(dma_handle), size, direction);
 }
 
 static inline void pci_dma_sync_single_for_device(struct pci_dev *hwdev,
@@ -209,7 +209,7 @@
 {
 	BUG_ON(direction == PCI_DMA_NONE);
 
-	consistent_sync_for_device(bus_to_virt(dma_handle), size, direction);
+	consistent_sync(bus_to_virt(dma_handle), size, direction);
 }
 
 /* Make physical memory consistent for a set of streaming
@@ -227,8 +227,8 @@
 	BUG_ON(direction == PCI_DMA_NONE);
 
 	for (i = 0; i < nelems; i++, sg++)
-		consistent_sync_page_for_cpu(sg->page, sg->offset,
-					     sg->length, direction);
+		consistent_sync_page(sg->page, sg->offset,
+				     sg->length, direction);
 }
 
 static inline void pci_dma_sync_sg_for_device(struct pci_dev *hwdev,
@@ -240,8 +240,8 @@
 	BUG_ON(direction == PCI_DMA_NONE);
 
 	for (i = 0; i < nelems; i++, sg++)
-		consistent_sync_page_for_device(sg->page, sg->offset,
-						sg->length, direction);
+		consistent_sync_page(sg->page, sg->offset,
+				     sg->length, direction);
 }
 
 /* Return whether the given PCI device DMA address mask can
===== include/asm-ppc/unistd.h 1.32 vs edited =====
--- 1.32/include/asm-ppc/unistd.h	Tue Mar 16 08:50:02 2004
+++ edited/include/asm-ppc/unistd.h	Tue Mar 16 09:42:07 2004
@@ -415,10 +415,10 @@
 int sys_pipe(int __user *fildes);
 int sys_ptrace(long request, long pid, long addr, long data);
 struct sigaction;
-asmlinkage long sys_rt_sigaction(int sig,
-				const struct sigaction __user *act,
-				struct sigaction __user *oact,
-				size_t sigsetsize);
+long sys_rt_sigaction(int sig,
+		      const struct sigaction __user *act,
+		      struct sigaction __user *oact,
+		      size_t sigsetsize);
 
 #endif /* __KERNEL_SYSCALLS__ */
 
