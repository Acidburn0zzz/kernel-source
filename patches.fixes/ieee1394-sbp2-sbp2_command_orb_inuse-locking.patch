From: Jody McIntyre <scjody@modernduck.com>
Subject: Re: oops in sbp2util_find_command_for_SCpnt

On Thu, Sep 29, 2005 at 11:24:20PM -0400, Jody McIntyre wrote:

> Interesting.  Looks like a locking issue.. try this patch:

By which I mean this patch:


sbp2: fix sbp2_command_orb_inuse locking.

sbp2_command_orb_lock must be held when accessing this list.  Fixes an oops:

https://bugzilla.novell.com/show_bug.cgi?id=113734

Signed-off-by: Jody McIntyre <scjody@steamballoon.com>
Signed-off-by: Olaf Hering <olh@suse.de>

Index: linux-2.6.14-rc2-git1/drivers/ieee1394/sbp2.c
===================================================================
--- linux-2.6.14-rc2-git1.orig/drivers/ieee1394/sbp2.c
+++ linux-2.6.14-rc2-git1/drivers/ieee1394/sbp2.c
@@ -2351,6 +2351,7 @@ static int sbp2_handle_status_write(stru
 	struct scsi_cmnd *SCpnt = NULL;
 	u32 scsi_status = SBP2_SCSI_STATUS_GOOD;
 	struct sbp2_command_info *command;
+	unsigned int flags;
 
 	SBP2_DEBUG("sbp2_handle_status_write");
 
@@ -2452,9 +2453,11 @@ static int sbp2_handle_status_write(stru
 		 * null out last orb so that next time around we write directly to the orb pointer...
 		 * Quick start saves one 1394 bus transaction.
 		 */
+		spin_lock_irqsave(&scsi_id->sbp2_command_orb_lock, flags);
 		if (list_empty(&scsi_id->sbp2_command_orb_inuse)) {
 			scsi_id->last_orb = NULL;
 		}
+		spin_unlock_irqrestore(&scsi_id->sbp2_command_orb_lock, flags);
 
 	} else {
 
@@ -2564,9 +2567,11 @@ static void sbp2scsi_complete_all_comman
 	struct sbp2scsi_host_info *hi = scsi_id->hi;
 	struct list_head *lh;
 	struct sbp2_command_info *command;
+	unsigned long flags;
 
 	SBP2_DEBUG("sbp2scsi_complete_all_commands");
 
+	spin_lock_irqsave(&scsi_id->sbp2_command_orb_lock, flags);
 	while (!list_empty(&scsi_id->sbp2_command_orb_inuse)) {
 		SBP2_DEBUG("Found pending command to complete");
 		lh = scsi_id->sbp2_command_orb_inuse.next;
@@ -2583,6 +2588,7 @@ static void sbp2scsi_complete_all_comman
 			command->Current_done(command->Current_SCpnt);
 		}
 	}
+	spin_unlock_irqrestore(&scsi_id->sbp2_command_orb_lock, flags);
 
 	return;
 }
