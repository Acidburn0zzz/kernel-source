From: ak@suse.de
Subject: x86-64: Fix canonical checking for segment registers in ptrace
Patch-mainline: no
References: 83143
Allowed user programs to set a non canonical segment base,
which would cause oopses in the kernel later.

Found by Alexander Nyberg

Signed-off-by: Andi Kleen <ak@suse.de>

diff -urNp linux-2.6.11/arch/x86_64/kernel/ptrace.c linux-2.6.11.SUSE/arch/x86_64/kernel/ptrace.c
--- linux-2.6.11/arch/x86_64/kernel/ptrace.c	2005-03-02 08:37:53.000000000 +0100
+++ linux-2.6.11.SUSE/arch/x86_64/kernel/ptrace.c	2005-05-17 16:06:31.262718919 +0200
@@ -129,13 +129,13 @@ static int putreg(struct task_struct *ch
 			value &= 0xffff;
 			return 0;
 		case offsetof(struct user_regs_struct,fs_base):
-			if (!((value >> 48) == 0 || (value >> 48) == 0xffff))
-				return -EIO; 
+			if (value >= TASK_SIZE)
+				return -EIO;
 			child->thread.fs = value;
 			return 0;
 		case offsetof(struct user_regs_struct,gs_base):
-			if (!((value >> 48) == 0 || (value >> 48) == 0xffff))
-				return -EIO; 
+			if (value >= TASK_SIZE)
+				return -EIO;
 			child->thread.gs = value;
 			return 0;
 		case offsetof(struct user_regs_struct, eflags):
