Subject: fix race: signal->curr_target update vs. thread exit
From: kraxel@suse.de
Patch-mainline: not yet
References: 157700

Fix "kernel BUG in __group_complete_signal at kernel/signal.c:978!"

Theory: __exit_signal() sets p->signal->curr_target to another thread in
case curr_thread points to the thread exiting.  In case multiple threads
are exiting at the same very same time it may happen that the other
thread is exiting too, has passed __exit_signal() already but is still
in the task list  -->  curr_target becomes invalid.

Index: linux-2.6.15/kernel/signal.c
===================================================================
--- linux-2.6.15.orig/kernel/signal.c
+++ linux-2.6.15/kernel/signal.c
@@ -379,7 +379,7 @@ void __exit_signal(struct task_struct *t
 			sig->group_exit_task = NULL;
 		}
 		if (tsk == sig->curr_target)
-			sig->curr_target = next_thread(tsk);
+			sig->curr_target = NULL; // was: next_thread(tsk);
 		tsk->signal = NULL;
 		/*
 		 * Accumulate here the counters for all threads but the
