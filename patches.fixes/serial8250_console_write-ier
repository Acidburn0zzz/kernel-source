Date: Wed, 02 Jun 2004 21:20:05 +0200
From: schwab@suse.de
Subject: 99% bugfix for #38480 (but we need a proper fix)
References: SUSE34840

It looks like there is a race in serial8250_console_write on writing the
UART IER register so that it's shadow doesn't agree with its real contents
any more, and interrupts get lost.  This patch from mls seems to fix the
race.  Does it look good?

It's imperfect, leaving two races open:
* Some other process enables the IER with unknown side-effects
  (If there were none, we could drop the messing with the IER in
   serial8250_console_write())
* The IER might change between in and out; the risk of this is tiny
  though.

For now, this patch will solve 99% of the problems at no risk ...

--- linux-2.6.5/drivers/serial/8250.c.~1~	2004-06-02 15:45:15.748196861 +0200
+++ linux-2.6.5/drivers/serial/8250.c	2004-06-02 17:21:44.414628612 +0200
@@ -1984,7 +1984,8 @@ serial8250_console_write(struct console 
 	 *	and restore the IER
 	 */
 	wait_for_xmitr(up);
-	serial_out(up, UART_IER, ier);
+	if (serial_in(up, UART_IER) == ((up->capabilities & UART_CAP_UUE)? UART_IER_UUE: 0))
+		serial_out(up, UART_IER, ier);
 }
 
 static int __init serial8250_console_setup(struct console *co, char *options)

