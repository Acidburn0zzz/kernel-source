From: NeilBrown <neilb@suse.de>
Subject: md: Don't read past end of bitmap when reading bitmap.
Patch-mainline: no
References: bnc#459557

When we read the write-intent-bitmap off the device, we currently
read a whole number of pages.
When PAGE_SIZE is 4K, this works due to the alignment we enforce
on the superblock and bitmap.
When PAGE_SIZE is 64K, this case read past the end-of-device
which causes an error.

When we write the superblock, we ensure to clip the last page
to just be the required size.  Copy that code into the read path
to just read the required number of sectors.

Signed-off-by: Neil Brown <neilb@suse.de>

---
 drivers/md/bitmap.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

--- linux-2.6.27.orig/drivers/md/bitmap.c
+++ linux-2.6.27/drivers/md/bitmap.c
@@ -221,13 +221,19 @@ static struct page *read_sb_page(mddev_t
 		return ERR_PTR(-ENOMEM);
 
 	rdev_for_each(rdev, tmp, mddev) {
+		int size = PAGE_SIZE;
+
 		if (! test_bit(In_sync, &rdev->flags)
 		    || test_bit(Faulty, &rdev->flags))
 			continue;
 
 		target = rdev->sb_start + offset + index * (PAGE_SIZE/512);
 
-		if (sync_page_io(rdev->bdev, target, PAGE_SIZE, page, READ)) {
+		if (index == mddev->bitmap->file_pages - 1)
+			size = roundup(mddev->bitmap->last_page_size,
+				       bdev_hardsect_size(rdev->bdev));
+
+		if (sync_page_io(rdev->bdev, target, size, page, READ)) {
 			page->index = index;
 			attach_page_buffers(page, NULL); /* so that free_buffer will
 							  * quietly no-op */
