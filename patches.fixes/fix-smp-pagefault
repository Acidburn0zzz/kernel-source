From: Andrea Arcangeli <andrea@suse.de>
Subject: fix race in SMP page fault handler
References: 49652

fix race in SMP page fault handler; correct version

Acked-by: Andrea Arcangeli <andrea@suse.de>

diff -urNp linux-2.6.8/mm/mmap.c linux-2.6.8.SUSE/mm/mmap.c
--- linux-2.6.8/mm/mmap.c	2005-01-13 08:42:26.391025746 +0100
+++ linux-2.6.8.SUSE/mm/mmap.c	2005-01-13 08:42:36.789359231 +0100
@@ -1352,6 +1352,13 @@ int expand_stack(struct vm_area_struct *
 	 */
 	address += 4 + PAGE_SIZE - 1;
 	address &= PAGE_MASK;
+
+	/* already expanded while waiting for anon_vma lock? */
+	if (vma->vm_end >= address) {
+		anon_vma_unlock(vma);
+		return 0;
+	}
+
 	grow = (address - vma->vm_end) >> PAGE_SHIFT;
 
 	/* Overcommit.. */
@@ -1409,6 +1416,12 @@ int expand_stack(struct vm_area_struct *
 		return -ENOMEM;
 	anon_vma_lock(vma);
 
+	/* already expanded while waiting for anon_vma lock? */
+	if (vma->vm_start <= address) {
+		anon_vma_unlock(vma);
+		return 0;
+	}
+
 	/*
 	 * vma->vm_start/vm_end cannot change under us because the caller
 	 * is required to hold the mmap_sem in read mode.  We need the
