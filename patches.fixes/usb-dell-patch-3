diff -uNrp linux-2.6.5/drivers/usb/core/devio.c linux-2.6.5.usbdell/drivers/usb/core/devio.c
--- linux-2.6.5/drivers/usb/core/devio.c	2004-06-01 14:19:17.415582887 +0200
+++ linux-2.6.5.usbdell/drivers/usb/core/devio.c	2004-06-01 14:27:32.009489540 +0200
@@ -1205,6 +1205,7 @@ static int usbdev_ioctl(struct inode *in
 		up_read(&ps->devsem);
 		return -ENODEV;
 	}
+	down(&(ps->dev->serialize));
 	switch (cmd) {
 	case USBDEVFS_CONTROL:
 		ret = proc_control(ps, (void __user *)arg);
@@ -1285,6 +1286,7 @@ static int usbdev_ioctl(struct inode *in
 		break;
 	}
+	up(&(ps->dev->serialize));
 	up_read(&ps->devsem);
 	if (ret >= 0)
 		inode->i_atime = CURRENT_TIME;
 	return ret;
diff -uNrp linux-2.6.5/drivers/usb/storage/transport.c linux-2.6.5.usbdell/drivers/usb/storage/transport.c
--- linux-2.6.5/drivers/usb/storage/transport.c	2004-06-01 14:19:17.289595135 +0200
+++ linux-2.6.5.usbdell/drivers/usb/storage/transport.c	2004-06-01 14:49:24.866849956 +0200
@@ -527,6 +527,15 @@ void usb_stor_invoke_transport(Scsi_Cmnd
 	int need_auto_sense;
 	int result;
 
+	/*
+	 * Grab device's serialize mutex to prevent /usbfs and others from
+	 * sending out a command in the middle of ours (if libusb sends a
+	 * get_descriptor or something on pipe 0 after our CBW and before
+	 * our CSW, and then we get a stall, we have trouble)
+	 */
+
+	down (&(us->pusb_dev->serialize));
+
 	/* send the command to the transport layer */
 	srb->resid = 0;
 	result = us->transport(srb, us);
@@ -544,13 +553,13 @@ void usb_stor_invoke_transport(Scsi_Cmnd
 		US_DEBUGP("-- transport indicates error, resetting\n");
 		us->transport_reset(us);
 		srb->result = DID_ERROR << 16;
-		return;
+		goto End_Transport;
 	}
 
 	/* if the transport provided its own sense data, don't auto-sense */
 	if (result == USB_STOR_TRANSPORT_NO_SENSE) {
 		srb->result = SAM_STAT_CHECK_CONDITION;
-		return;
+		goto End_Transport;
 	}
 
 	srb->result = SAM_STAT_GOOD;
@@ -676,7 +685,7 @@ void usb_stor_invoke_transport(Scsi_Cmnd
 			if (!(us->flags & US_FL_SCM_MULT_TARG))
 				us->transport_reset(us);
 			srb->result = DID_ERROR << 16;
-			return;
+			goto End_Transport;
 		}
 
 		US_DEBUGP("-- Result from auto-sense is %d\n", temp_result);
@@ -708,7 +717,7 @@ void usb_stor_invoke_transport(Scsi_Cmnd
 			srb->sense_buffer[0] = 0x0;
 		}
 	}
-	return;
+	goto End_Transport;
 
 	/* abort processing: the bulk-only transport requires a reset
 	 * following an abort */
@@ -720,6 +729,9 @@ void usb_stor_invoke_transport(Scsi_Cmnd
 		clear_bit(US_FLIDX_ABORTING, &us->flags);
 		us->transport_reset(us);
 	}
+
+  End_Transport:
+	up(&(us->pusb_dev->serialize));
 }
 
 /* Stop the current URB transfer */
