mason@suse.com

reiserfs_unmap_buffer should clean and wait on all buffers.  This fixes
a leak under fsx workloads.

Index: linux.mm/fs/reiserfs/tail_conversion.c
===================================================================
--- linux.mm.orig/fs/reiserfs/tail_conversion.c	2004-04-05 17:29:59.672388853 -0400
+++ linux.mm/fs/reiserfs/tail_conversion.c	2004-04-05 17:30:03.740901614 -0400
@@ -139,11 +139,10 @@ int direct2indirect (struct reiserfs_tra
 
 /* stolen from fs/buffer.c */
 void reiserfs_unmap_buffer(struct buffer_head *bh) {
-  if (buffer_mapped(bh)) {
+    lock_buffer(bh) ;
     if (buffer_journaled(bh) || buffer_journal_dirty(bh)) {
       BUG() ;
     }
-    lock_buffer(bh) ;
     clear_buffer_dirty(bh) ;
     /* Remove the buffer from whatever list it belongs to. We are mostly
        interested in removing it from per-sb j_dirty_buffers list, to avoid
@@ -161,7 +160,6 @@ void reiserfs_unmap_buffer(struct buffer
     clear_buffer_new(bh);
     bh->b_bdev = NULL;
     unlock_buffer(bh) ;
-  }
 }
 
 static void
