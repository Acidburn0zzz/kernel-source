diff -u linux-2.6.7rc2-amd64/arch/x86_64/mm/fault.c-o linux-2.6.7rc2-amd64/arch/x86_64/mm/fault.c
--- linux-2.6.7rc2-amd64/arch/x86_64/mm/fault.c-o	2004-04-06 13:12:05.000000000 +0200
+++ linux-2.6.7rc2-amd64/arch/x86_64/mm/fault.c	2004-06-02 10:40:27.000000000 +0200
@@ -423,8 +423,9 @@
 		printk(KERN_ALERT "Unable to handle kernel NULL pointer dereference");
 	else
 		printk(KERN_ALERT "Unable to handle kernel paging request");
-	printk(" at %016lx RIP: \n",address);	
+	printk(" at %016lx RIP: \n" KERN_ALERT,address);	
 	printk_address(regs->rip);
+	printk("\n");
 	dump_pagetable(address);
 	__die("Oops", regs, error_code);
 	/* Executive summary in case the body of the oops scrolled away */
diff -u linux-2.6.7rc2-amd64/arch/x86_64/kernel/traps.c-o linux-2.6.7rc2-amd64/arch/x86_64/kernel/traps.c
--- linux-2.6.7rc2-amd64/arch/x86_64/kernel/traps.c-o	2004-05-09 14:29:26.000000000 +0200
+++ linux-2.6.7rc2-amd64/arch/x86_64/kernel/traps.c	2004-06-02 10:34:09.000000000 +0200
@@ -302,7 +302,7 @@
 	if (__get_user(tmp, f.filename))
 		f.filename = "unmapped filename"; 
 	printk("----------- [cut here ] --------- [please bite here ] ---------\n");
-	printk("Kernel BUG at %.50s:%d\n", f.filename, f.line); 	
+	printk(KERN_ALERT "Kernel BUG at %.50s:%d\n", f.filename, f.line); 	
 } 
 
 void out_of_line_bug(void)
@@ -356,7 +356,7 @@
 	notify_die(DIE_OOPS, (char *)str, regs, err, 255, SIGSEGV);
 	show_registers(regs);
 	/* Executive summary in case the oops scrolled away */
-	printk("RIP "); 
+	printk(KERN_ALERT "RIP "); 
 	printk_address(regs->rip); 
 	printk(" RSP <%016lx>\n", regs->rsp); 
 }
diff -u linux/arch/i386/kernel/traps.c-o linux/arch/i386/kernel/traps.c
--- linux/arch/i386/kernel/traps.c-o	2004-05-28 12:30:51.000000000 +0200
+++ linux/arch/i386/kernel/traps.c	2004-06-02 10:43:00.000000000 +0200
@@ -256,7 +256,7 @@
 		file = "<bad filename>";
 
 	printk("------------[ cut here ]------------\n");
-	printk("kernel BUG at %s:%d!\n", file, line);
+	printk(KERN_ALERT "kernel BUG at %s:%d!\n", file, line);
 
 no_bug:
 	return;
@@ -277,7 +277,7 @@
 	spin_lock_irq(&die_lock);
 	bust_spinlocks(1);
 	handle_BUG(regs);
-	printk("%s: %04lx [#%d]\n", str, err & 0xffff, ++die_counter);
+	printk(KERN_ALERT "%s: %04lx [#%d]\n", str, err & 0xffff, ++die_counter);
 #ifdef CONFIG_PREEMPT
 	printk("PREEMPT ");
 	nl = 1;
diff -u linux/arch/i386/mm/fault.c-o linux/arch/i386/mm/fault.c
--- linux/arch/i386/mm/fault.c-o	2004-05-28 12:30:50.000000000 +0200
+++ linux/arch/i386/mm/fault.c	2004-06-02 10:42:03.000000000 +0200
@@ -425,7 +425,7 @@
 	else
 		printk(KERN_ALERT "Unable to handle kernel paging request");
 	printk(" at virtual address %08lx\n",address);
-	printk(" printing eip:\n");
+	printk(KERN_ALERT " printing eip:\n");
 	printk("%08lx\n", regs->eip);
 	asm("movl %%cr3,%0":"=r" (page));
 	page = ((unsigned long *) __va(page))[address >> 22];
