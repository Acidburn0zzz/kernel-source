From: Olaf Kirch <okir@suse.de>
Subject: hsb-hcd: change device state before enabling interrupts

If the controller state is changed after enabling interrupts,
it is possible that an interrupt arrives inbetween. The interrupt
handler will find that the device is still marked stopped, and
indicates that it didn't handle the interrupt. The kernel will
print "irq 10: nobody cared" and disble this interrupt entirely.

Index: linux-2.6.10/drivers/usb/host/uhci-hcd.c
===================================================================
--- linux-2.6.10.orig/drivers/usb/host/uhci-hcd.c
+++ linux-2.6.10/drivers/usb/host/uhci-hcd.c
@@ -1886,6 +1886,9 @@ static int start_hc(struct uhci_hcd *uhc
 		msleep(1);
 	}
 
+	/* Mark controller as running before we enable interrupts */
+        uhci_to_hcd(uhci)->state = USB_STATE_RUNNING;
+
 	/* Turn on PIRQ and all interrupts */
 	pci_write_config_word(to_pci_dev(uhci_dev(uhci)), USBLEGSUP,
 			USBLEGSUP_DEFAULT);
@@ -1901,7 +1904,6 @@ static int start_hc(struct uhci_hcd *uhc
 	uhci->state_end = jiffies + HZ;
 	outw(USBCMD_RS | USBCMD_CF | USBCMD_MAXP, io_addr + USBCMD);
 
-        uhci_to_hcd(uhci)->state = USB_STATE_RUNNING;
 	return 0;
 }
 


