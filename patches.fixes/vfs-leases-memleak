From: J. Bruce Fields <bfields@fieldses.org>
Subject: VFS: Fix memory leak with file leases
References: 133803
Patch-mainline: 2.6.14.2

   The patch
   http://linux.bkbits.net:8080/linux-2.6/diffs/fs/locks.c@1.70??nav=index.html
   introduced a pretty nasty memory leak in the lease code. When freeing
   the lease, the code in locks_delete_lock() will correctly clean up
   the fasync queue, but when we return to fcntl_setlease(), the freed
   fasync entry will be reinstated.
  
   This patch ensures that we skip the call to fasync_helper() when we're
   freeing up the lease.

Signed-off-by: Lars Marowsky-Bree <lmb@suse.de>
Signed-off-by: J. Bruce Fields <bfields@fieldses.org>
Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

--- a/fs/locks.c
+++ b/fs/locks.c
@@ -1430,7 +1430,7 @@ int fcntl_setlease(unsigned int fd, stru
 	lock_kernel();
 
 	error = __setlease(filp, arg, &flp);
-	if (error)
+	if (error || arg == F_UNLCK)
 		goto out_unlock;
 
 	error = fasync_helper(fd, filp, 1, &flp->fl_fasync);
