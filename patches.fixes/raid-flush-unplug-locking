diff -urp -X /home/axboe/cdrom/exclude /mnt/kscratch/linux-2.6.5/drivers/md/multipath.c linux-2.6.5-SUSE-20040618/drivers/md/multipath.c
--- /mnt/kscratch/linux-2.6.5/drivers/md/multipath.c	2004-06-18 09:35:53.000000000 +0200
+++ linux-2.6.5-SUSE-20040618/drivers/md/multipath.c	2004-06-18 11:35:17.000000000 +0200
@@ -159,16 +159,25 @@ static void unplug_slaves(mddev_t *mddev
 {
 	multipath_conf_t *conf = mddev_to_conf(mddev);
 	int i;
+	unsigned long flags;
 
+	spin_lock_irqsave(&conf->device_lock, flags);
 	for (i=0; i<mddev->raid_disks; i++) {
 		mdk_rdev_t *rdev = conf->multipaths[i].rdev;
 		if (rdev && !rdev->faulty) {
 			request_queue_t *r_queue = bdev_get_queue(rdev->bdev);
 
+			atomic_inc(&rdev->nr_pending);
+			spin_unlock_irqrestore(&conf->device_lock, flags);
+
 			if (r_queue->unplug_fn)
 				r_queue->unplug_fn(r_queue);
+
+			spin_lock_irqsave(&conf->device_lock, flags);
+			atomic_dec(&rdev->nr_pending);
 		}
 	}
+	spin_unlock_irqrestore(&conf->device_lock, flags);
 }
 static void multipath_unplug(request_queue_t *q)
 {
diff -urp -X /home/axboe/cdrom/exclude /mnt/kscratch/linux-2.6.5/drivers/md/raid1.c linux-2.6.5-SUSE-20040618/drivers/md/raid1.c
--- /mnt/kscratch/linux-2.6.5/drivers/md/raid1.c	2004-06-18 09:35:53.000000000 +0200
+++ linux-2.6.5-SUSE-20040618/drivers/md/raid1.c	2004-06-18 12:50:14.170742560 +0200
@@ -461,15 +461,20 @@ static int raid1_issue_flush(request_que
 	spin_lock_irqsave(&conf->device_lock, flags);
 	for (i=0; i<mddev->raid_disks; i++) {
 		mdk_rdev_t *rdev = conf->mirrors[i].rdev;
-		if (rdev && !rdev->faulty) {
+		if (rdev && !rdev->faulty && atomic_read(&rdev->nr_pending)) {
 			struct block_device *bdev = rdev->bdev;
 			request_queue_t *r_queue = bdev_get_queue(bdev);
 
-			if (r_queue->issue_flush_fn) {
+			atomic_inc(&rdev->nr_pending);
+			spin_unlock_irqrestore(&conf->device_lock, flags);
+
+			if (r_queue->issue_flush_fn)
 				ret = r_queue->issue_flush_fn(r_queue, bdev->bd_disk, error_sector);
-				if (ret)
-					break;
-			}
+
+			spin_lock_irqsave(&conf->device_lock, flags);
+			atomic_dec(&rdev->nr_pending);
+			if (ret)
+				break;
 		}
 	}
 	spin_unlock_irqrestore(&conf->device_lock, flags);
@@ -485,11 +490,17 @@ static void unplug_slaves(mddev_t *mddev
 	spin_lock_irqsave(&conf->device_lock, flags);
 	for (i=0; i<mddev->raid_disks; i++) {
 		mdk_rdev_t *rdev = conf->mirrors[i].rdev;
-		if (rdev && !rdev->faulty) {
+		if (rdev && atomic_read(&rdev->nr_pending)) {
 			request_queue_t *r_queue = bdev_get_queue(rdev->bdev);
 
+			atomic_inc(&rdev->nr_pending);
+			spin_unlock_irqrestore(&conf->device_lock, flags);
+
 			if (r_queue->unplug_fn)
 				r_queue->unplug_fn(r_queue);
+
+			spin_lock_irqsave(&conf->device_lock, flags);
+			atomic_dec(&rdev->nr_pending);
 		}
 	}
 	spin_unlock_irqrestore(&conf->device_lock, flags);
diff -urp -X /home/axboe/cdrom/exclude /mnt/kscratch/linux-2.6.5/drivers/md/raid5.c linux-2.6.5-SUSE-20040618/drivers/md/raid5.c
--- /mnt/kscratch/linux-2.6.5/drivers/md/raid5.c	2004-06-18 09:35:53.000000000 +0200
+++ linux-2.6.5-SUSE-20040618/drivers/md/raid5.c	2004-06-18 12:59:09.128406136 +0200
@@ -1301,18 +1301,25 @@ static void unplug_slaves(mddev_t *mddev
 {
 	raid5_conf_t *conf = mddev_to_conf(mddev);
 	int i;
+	unsigned long flags;
 
+	spin_lock_irqsave(&conf->device_lock, flags);
 	for (i=0; i<mddev->raid_disks; i++) {
 		mdk_rdev_t *rdev = conf->disks[i].rdev;
-		if (rdev && !rdev->faulty) {
-			struct block_device *bdev = rdev->bdev;
-			if (bdev) {
-				request_queue_t *r_queue = bdev_get_queue(bdev);
-				if (r_queue && r_queue->unplug_fn)
-					r_queue->unplug_fn(r_queue);
-			}
+		if (rdev && atomic_read(&rdev->nr_pending)) {
+			request_queue_t *r_queue = bdev_get_queue(rdev->bdev);
+
+			atomic_inc(&rdev->nr_pending);
+			spin_unlock_irqrestore(&conf->device_lock, flags);
+
+			if (r_queue && r_queue->unplug_fn)
+				r_queue->unplug_fn(r_queue);
+
+			spin_lock_irqsave(&conf->device_lock, flags);
+			atomic_dec(&rdev->nr_pending);
 		}
 	}
+	spin_unlock_irqrestore(&conf->device_lock, flags);
 }
 
 static void raid5_unplug_device(request_queue_t *q)
@@ -1337,11 +1344,14 @@ static int raid5_issue_flush(request_que
 {
 	mddev_t *mddev = q->queuedata;
 	raid5_conf_t *conf = mddev_to_conf(mddev);
+	unsigned long flags;
 	int i, ret = 0;
 
+	spin_lock_irqsave(&conf->device_lock, flags);
+
 	for (i=0; i<mddev->raid_disks; i++) {
 		mdk_rdev_t *rdev = conf->disks[i].rdev;
-		if (rdev && !rdev->faulty) {
+		if (rdev && !rdev->faulty && atomic_read(&rdev->nr_pending)) {
 			struct block_device *bdev = rdev->bdev;
 			request_queue_t *r_queue;
 
@@ -1357,11 +1367,19 @@ static int raid5_issue_flush(request_que
 				break;
 			}
 
+			atomic_inc(&rdev->nr_pending);
+			spin_unlock_irqrestore(&conf->device_lock, flags);
+
 			ret = r_queue->issue_flush_fn(r_queue, bdev->bd_disk, error_sector);
+
+			spin_lock_irqsave(&conf->device_lock, flags);
+			atomic_dec(&rdev->nr_pending);
+
 			if (ret)
 				break;
 		}
 	}
+	spin_unlock_irqrestore(&conf->device_lock, flags);
 	return ret;
 }
 
diff -urp -X /home/axboe/cdrom/exclude /mnt/kscratch/linux-2.6.5/drivers/md/raid6main.c linux-2.6.5-SUSE-20040618/drivers/md/raid6main.c
--- /mnt/kscratch/linux-2.6.5/drivers/md/raid6main.c	2004-06-18 09:35:53.000000000 +0200
+++ linux-2.6.5-SUSE-20040618/drivers/md/raid6main.c	2004-06-18 13:03:55.797151618 +0200
@@ -1461,21 +1461,27 @@ static inline void raid6_activate_delaye
 
 static void unplug_slaves(mddev_t *mddev)
 {
-	/* note: this is always called with device_lock held */
 	raid6_conf_t *conf = mddev_to_conf(mddev);
 	int i;
+	unsigned long flags;
 
+	spin_lock_irqsave(&conf->device_lock, flags);
 	for (i=0; i<mddev->raid_disks; i++) {
 		mdk_rdev_t *rdev = conf->disks[i].rdev;
-		if (rdev && !rdev->faulty) {
-			struct block_device *bdev = rdev->bdev;
-			if (bdev) {
-				request_queue_t *r_queue = bdev_get_queue(bdev);
-				if (r_queue && r_queue->unplug_fn)
-					r_queue->unplug_fn(r_queue);
-			}
+		if (rdev && atomic_read(&rdev->nr_pending)) {
+			request_queue_t *r_queue = bdev_get_queue(rdev->bdev);
+
+			atomic_inc(&rdev->nr_pending);
+			spin_unlock_irqrestore(&conf->device_lock, flags);
+
+			if (r_queue && r_queue->unplug_fn)
+				r_queue->unplug_fn(r_queue);
+
+			spin_lock_irqsave(&conf->device_lock, flags);
+			atomic_dec(&rdev->nr_pending);
 		}
 	}
+	spin_unlock_irqrestore(&conf->device_lock, flags);
 }
 
 static void raid6_unplug_device(request_queue_t *q)
@@ -1500,8 +1506,11 @@ static int raid6_issue_flush(request_que
 {
 	mddev_t *mddev = q->queuedata;
 	raid6_conf_t *conf = mddev_to_conf(mddev);
+	unsigned long flags;
 	int i, ret = 0;
 
+	spin_lock_irqsave(&conf->device_lock, flags);
+
 	for (i=0; i<mddev->raid_disks; i++) {
 		mdk_rdev_t *rdev = conf->disks[i].rdev;
 		if (rdev && !rdev->faulty) {
@@ -1520,11 +1529,19 @@ static int raid6_issue_flush(request_que
 				break;
 			}
 
+			atomic_inc(&rdev->nr_pending);
+			spin_unlock_irqrestore(&conf->device_lock, flags);
+
 			ret = r_queue->issue_flush_fn(r_queue, bdev->bd_disk, error_sector);
+
+			spin_lock_irqsave(&conf->device_lock, flags);
+			atomic_dec(&rdev->nr_pending);
+
 			if (ret)
 				break;
 		}
 	}
+	spin_unlock_irqrestore(&conf->device_lock, flags);
 	return ret;
 }
 
