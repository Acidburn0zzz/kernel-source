From: Matt Mackall <mpm@selenic.com>
Subject: [PATCH] random: fix bound check ordering
Patch-mainline:
References: 286672

On Thu, Jun 21, 2007 at 04:29:12PM -0500, Matt Mackall wrote:
> On Thu, Jun 21, 2007 at 10:29:51PM +0200, Willy Tarreau wrote:
> > Hi all,
> > 
> > PaX Team also sent me this information about /dev/random on 2.6. To be
> > honnest, I have not understood the exact details because I don't know
> > this code, but basically it's the classical thinko about min/max macros
> > which leads to the largest sized being used at some time.
> 
> Sigh. Yep, that looks like a DoS. Not likely to be able to do a
> privilege escalation here though. I'll make a cleaner patch.

random: fix bound check ordering

If root raised the default wakeup threshold over the size of the
output pool, the pool transfer function could overflow the stack with
RNG bytes, causing a DoS.

(Bug reported by PaX)

Signed-off-by: Matt Mackall <mpm@selenic.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---

 drivers/char/random.c |   10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

Index: mm/drivers/char/random.c
===================================================================
--- mm.orig/drivers/char/random.c	2007-06-21 16:39:35.000000000 -0500
+++ mm/drivers/char/random.c	2007-06-21 16:51:36.000000000 -0500
@@ -693,9 +693,14 @@ static void xfer_secondary_pool(struct e
 
 	if (r->pull && r->entropy_count < nbytes * 8 &&
 	    r->entropy_count < r->poolinfo->POOLBITS) {
-		int bytes = max_t(int, random_read_wakeup_thresh / 8,
-				min_t(int, nbytes, sizeof(tmp)));
+		/* If we're limited, always leave two wakeup worth's BITS */
 		int rsvd = r->limit ? 0 : random_read_wakeup_thresh/4;
+		int bytes = nbytes;
+
+		/* pull at least as many as BYTES as wakeup BITS */
+		bytes = max_t(int, bytes, random_read_wakeup_thresh / 8);
+		/* but never more than the buffer size */
+		bytes = min_t(int, bytes, sizeof(tmp));
 
 		DEBUG_ENT("going to reseed %s with %d bits "
 			  "(%d of %d requested)\n",

-- 
Mathematics is the supreme nostalgia of our time.
_______________________________________________
Vendor Security mailing list
Vendor Security@lst.de
https://www.lst.de/cgi-bin/mailman/listinfo/vendor-sec
