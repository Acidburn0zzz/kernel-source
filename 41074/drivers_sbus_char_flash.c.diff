--- linux-2.6.7/drivers/sbus/char/flash.c	2004-06-16 21:09:58.000000000 +0100
+++ linux-2.6.7-viroized/drivers/sbus/char/flash.c	2004-06-27 22:28:45.598089368 +0100
@@ -2,6 +2,8 @@
  * flash.c: Allow mmap access to the OBP Flash, for OBP updates.
  *
  * Copyright (C) 1997  Eddie C. Dost  (ecd@skynet.be)
+ *
+ * Added printk levels and locks for 2.6 (Alan Cox)
  */
 
 #include <linux/config.h>
@@ -22,8 +24,11 @@
 #include <asm/io.h>
 #include <asm/sbus.h>
 #include <asm/ebus.h>
+#include <asm/semaphore.h>
 
 static spinlock_t flash_lock = SPIN_LOCK_UNLOCKED;
+static DECLARE_MUTEX(flash_mutex);
+
 static struct {
 	unsigned long read_base;	/* Physical read address */
 	unsigned long write_base;	/* Physical write address */
@@ -83,7 +88,7 @@
 static long long
 flash_llseek(struct file *file, long long offset, int origin)
 {
-	lock_kernel();
+	down(&flash_mutex);
 	switch (origin) {
 		case 0:
 			file->f_pos = offset;
@@ -97,10 +102,10 @@
 			file->f_pos = flash.read_size;
 			break;
 		default:
-			unlock_kernel();
+			up(&flash_mutex);
 			return -EINVAL;
 	}
-	unlock_kernel();
+	up(&flash_mutex);
 	return file->f_pos;
 }
 
@@ -108,20 +113,26 @@
 flash_read(struct file * file, char * buf,
 	   size_t count, loff_t *ppos)
 {
-	unsigned long p = file->f_pos;
+	loff_t p;
 	int i;
 	
+	down(&flash_mutex);
+	p = *ppos;
 	if (count > flash.read_size - p)
 		count = flash.read_size - p;
 
 	for (i = 0; i < count; i++) {
 		u8 data = readb(flash.read_base + p + i);
 		if (put_user(data, buf))
+		{
+			up(s);
 			return -EFAULT;
+		}
 		buf++;
 	}
 
-	file->f_pos += count;
+	*ppos = p + count;
+	up(&flash_mutex);
 	return count;
 }
 
@@ -204,7 +215,7 @@
 
 		len = prom_getproperty(edev->prom_node, "reg", (void *)regs, sizeof(regs));
 		if ((len % sizeof(regs[0])) != 0) {
-			printk("flash: Strange reg property size %d\n", len);
+			printk(KERN_WARNING "flash: Strange reg property size %d\n", len);
 			return -ENODEV;
 		}
 
@@ -220,7 +231,7 @@
 			flash.write_base = edev->resource[1].start;
 			flash.write_size = regs[1].reg_size;
 		} else {
-			printk("flash: Strange number of regs %d\n", nregs);
+			printk(KERN_WARNING "flash: Strange number of regs %d\n", nregs);
 			return -ENODEV;
 		}
 
@@ -231,7 +242,7 @@
 #endif
 	}
 
-	printk("OBP Flash: RD %lx[%lx] WR %lx[%lx]\n",
+	printk(KERN_INFO "OBP Flash: RD %lx[%lx] WR %lx[%lx]\n",
 	       flash.read_base, flash.read_size,
 	       flash.write_base, flash.write_size);
 
