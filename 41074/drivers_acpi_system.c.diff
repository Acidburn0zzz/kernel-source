--- linux-2.6.7/drivers/acpi/system.c	2004-06-16 21:11:35.000000000 +0100
+++ linux-2.6.7-viroized/drivers/acpi/system.c	2004-06-27 18:23:52.136835008 +0100
@@ -94,16 +94,22 @@
 	struct acpi_buffer	dsdt = {ACPI_ALLOCATE_BUFFER, NULL};
 	void			*data = 0;
 	size_t			size = 0;
+	loff_t			pos = *ppos;
 
 	ACPI_FUNCTION_TRACE("acpi_system_read_dsdt");
+	
+	/* XXX - seek locking required */
 
 	status = acpi_get_table(ACPI_TABLE_DSDT, 1, &dsdt);
 	if (ACPI_FAILURE(status))
 		return_VALUE(-ENODEV);
 
-	if (*ppos < dsdt.length) {
-		data = dsdt.pointer + file->f_pos;
-		size = dsdt.length - file->f_pos;
+	if (pos < 0)
+		return -EINVAL;
+		
+	if (pos < dsdt.length) {
+		data = dsdt.pointer + pos;
+		size = dsdt.length - pos;
 		if (size > count)
 			size = count;
 		if (copy_to_user(buffer, data, size)) {
@@ -114,7 +120,7 @@
 
 	acpi_os_free(dsdt.pointer);
 
-	*ppos += size;
+	*ppos = pos + size;
 
 	return_VALUE(size);
 }
@@ -137,6 +143,7 @@
 	struct acpi_buffer	fadt = {ACPI_ALLOCATE_BUFFER, NULL};
 	void			*data = 0;
 	size_t			size = 0;
+	loff_t			pos = *ppos;
 
 	ACPI_FUNCTION_TRACE("acpi_system_read_fadt");
 
@@ -144,9 +151,13 @@
 	if (ACPI_FAILURE(status))
 		return_VALUE(-ENODEV);
 
-	if (*ppos < fadt.length) {
-		data = fadt.pointer + file->f_pos;
-		size = fadt.length - file->f_pos;
+	/* XXX - seek locking required */
+	if (pos < 0)
+		return -EINVAL;
+		
+	if (pos < fadt.length) {
+		data = fadt.pointer + pos;
+		size = fadt.length - pos;
 		if (size > count)
 			size = count;
 		if (copy_to_user(buffer, data, size)) {
@@ -157,7 +168,7 @@
 
 	acpi_os_free(fadt.pointer);
 
-	*ppos += size;
+	*ppos = pos + size;
 
 	return_VALUE(size);
 }
