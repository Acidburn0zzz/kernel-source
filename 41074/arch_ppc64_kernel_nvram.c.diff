Index: linux-2.6.5/arch/ppc64/kernel/nvram.c
===================================================================
--- linux-2.6.5.orig/arch/ppc64/kernel/nvram.c
+++ linux-2.6.5/arch/ppc64/kernel/nvram.c
@@ -57,6 +57,7 @@ struct err_log_info {
 static loff_t dev_nvram_llseek(struct file *file, loff_t offset, int origin)
 {
 	int size;
+	/* XXX needs locking */
 
 	if (ppc_md.nvram_size == NULL)
 		return -ENODEV;
@@ -83,6 +84,7 @@ static ssize_t dev_nvram_read(struct fil
 	ssize_t len;
 	char *tmp_buffer;
 	int size;
+	loff_t pos = *ppos;
 
 	if (ppc_md.nvram_size == NULL)
 		return -ENODEV;
@@ -90,7 +92,7 @@ static ssize_t dev_nvram_read(struct fil
 
 	if (verify_area(VERIFY_WRITE, buf, count))
 		return -EFAULT;
-	if (*ppos >= size)
+	if (pos >= size || pos < 0 || size < 0)
 		return 0;
 	if (count > size) 
 		count = size;
@@ -101,7 +103,9 @@ static ssize_t dev_nvram_read(struct fil
 		return -ENOMEM;
 	}
 
-	len = ppc_md.nvram_read(tmp_buffer, count, ppos);
+	len = ppc_md.nvram_read(tmp_buffer, count, &pos);
+	*ppos = pos;
+	
 	if ((long)len <= 0) {
 		kfree(tmp_buffer);
 		return len;
@@ -123,6 +127,7 @@ static ssize_t dev_nvram_write(struct fi
 	ssize_t len;
 	char * tmp_buffer;
 	int size;
+	loff_t pos = *ppos;
 
 	if (ppc_md.nvram_size == NULL)
 		return -ENODEV;
@@ -130,7 +135,7 @@ static ssize_t dev_nvram_write(struct fi
 
 	if (verify_area(VERIFY_READ, buf, count))
 		return -EFAULT;
-	if (*ppos >= size)
+	if (pos >= size || pos < 0 || size < 0)
 		return 0;
 	if (count > size)
 		count = size;
@@ -146,7 +151,9 @@ static ssize_t dev_nvram_write(struct fi
 		return -EFAULT;
 	}
 
-	len = ppc_md.nvram_write(tmp_buffer, count, ppos);
+	len = ppc_md.nvram_write(tmp_buffer, count, &pos);
+	*ppos = pos;
+	
 	if ((long)len <= 0) {
 		kfree(tmp_buffer);
 		return len;
