--- linux-2.6.7/arch/ppc/platforms/proc_rtas.c	2004-06-16 21:10:23.000000000 +0100
+++ linux-2.6.7-viroized/arch/ppc/platforms/proc_rtas.c	2004-06-27 18:05:19.983907952 +0100
@@ -265,18 +265,21 @@
 		size_t count, loff_t *ppos)
 {
 	int n;
+	loff_t pos = *ppos;
+	
+	/* XXX - needs seek locking */
 	if (power_on_time == 0)
 		n = sprintf(buf, "Power on time not set\n");
 	else
 		n = sprintf(buf, "%lu\n", power_on_time);
 
-	if (*ppos >= strlen(buf))
+	if (pos != (unsigned int)pos || pos >= strlen(buf))
 		return 0;
-	if (n > strlen(buf) - *ppos)
-		n = strlen(buf) - *ppos;
+	if (n > strlen(buf) - pos)
+		n = strlen(buf) - pos;
 	if (n > count)
 		n = count;
-	*ppos += n;
+	*ppos = pos + n;
 	return n;
 }
 
@@ -302,15 +305,19 @@
 		size_t count, loff_t *ppos)
 {
 	int n = 0;
+	loff_t pos = *ppos;
+	
+	/* XXX - needs seek locking */
+	
 	if (progress_led != NULL)
 		n = sprintf (buf, "%s\n", progress_led);
-	if (*ppos >= strlen(buf))
+	if (pos != (unsigned int)pos || pos >= strlen(buf))
 		return 0;
-	if (n > strlen(buf) - *ppos)
-		n = strlen(buf) - *ppos;
+	if (n > strlen(buf) - pos)
+		n = strlen(buf) - pos;
 	if (n > count)
 		n = count;
-	*ppos += n;
+	*ppos = pos + n;
 	return n;
 }
 
@@ -346,7 +353,13 @@
 {
 	unsigned int year, mon, day, hour, min, sec;
 	unsigned long *ret = kmalloc(4*8, GFP_KERNEL);
+	loff_t pos = *ppos;
 	int n, error;
+	
+	if(ret == NULL)
+		return -ENOMEM;
+		
+	/* Needs seek locking */
 
 	error = call_rtas("get-time-of-day", 0, 8, ret);
 
@@ -362,13 +375,13 @@
 	}
 	kfree(ret);
 
-	if (*ppos >= strlen(buf))
+	if (pos != (unsigned int)pos || pos >= strlen(buf))
 		return 0;
-	if (n > strlen(buf) - *ppos)
-		n = strlen(buf) - *ppos;
+	if (n > strlen(buf) - pos)
+		n = strlen(buf) - pos;
 	if (n > count)
 		n = count;
-	*ppos += n;
+	*ppos = pos + n;
 	return n;
 }
 
@@ -734,15 +747,19 @@
 		size_t count, loff_t *ppos)
 {
 	int n;
+	loff_t pos = *ppos;
+	
+	/* XXX - needs seek locking */
+	
 	n = sprintf(buf, "%lu\n", rtas_tone_frequency);
 
-	if (*ppos >= strlen(buf))
+	if (pos != (unsigned long)pos || pos >= strlen(buf))
 		return 0;
-	if (n > strlen(buf) - *ppos)
-		n = strlen(buf) - *ppos;
+	if (n > strlen(buf) - pos)
+		n = strlen(buf) - pos;
 	if (n > count)
 		n = count;
-	*ppos += n;
+	*ppos = pos + n;
 	return n;
 }
 /* ****************************************************************** */
@@ -774,15 +791,16 @@
 static ssize_t ppc_rtas_tone_volume_read(struct file * file, char * buf,
 		size_t count, loff_t *ppos)
 {
-	int n;
-	n = sprintf(buf, "%lu\n", rtas_tone_volume);
+	int n = sprintf(buf, "%lu\n", rtas_tone_volume);
+	loff_t pos = *ppos;
 
-	if (*ppos >= strlen(buf))
+	/* XXX - Needs locking - actual shouldnt these all have ONE helper */
+	if (pos != (unsigned int) pos || pos >= strlen(buf))
 		return 0;
-	if (n > strlen(buf) - *ppos)
-		n = strlen(buf) - *ppos;
+	if (n > strlen(buf) - pos)
+		n = strlen(buf) - pos;
 	if (n > count)
 		n = count;
-	*ppos += n;
+	*ppos =  pos + n;
 	return n;
 }
