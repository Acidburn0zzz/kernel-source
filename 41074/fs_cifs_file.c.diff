--- linux-2.6.7/fs/cifs/file.c	2004-06-16 21:11:36.000000000 +0100
+++ linux-2.6.7-viroized/fs/cifs/file.c	2004-06-28 14:47:28.922787064 +0100
@@ -584,6 +584,7 @@
 	struct cifsTconInfo *pTcon;
 	int xid, long_op;
 	struct cifsFileInfo * open_file;
+	loff_t offset = *poffset;
 
 	if(file->f_dentry == NULL)
 		return -EBADF;
@@ -608,7 +609,7 @@
 		return -EBADF;
 	}
 
-	if (*poffset > file->f_dentry->d_inode->i_size)
+	if (offset > file->f_dentry->d_inode->i_size)
 		long_op = 2;  /* writes past end of file can take a long time */
 	else
 		long_op = 1;
@@ -649,8 +650,10 @@
 				FreeXid(xid);
 				return rc;
 			}
-		} else
-			*poffset += bytes_written;
+		} else {
+			offset += bytes_written;
+			*poffset = offset;
+		}
 		long_op = FALSE; /* subsequent writes fast - 15 seconds is plenty */
 	}
 
@@ -966,6 +969,7 @@
 	int xid;
 	char * current_offset;
 	struct cifsFileInfo * open_file;
+	loff_t loffset = * poffset;
 
 	xid = GetXid();
 	cifs_sb = CIFS_SB(file->f_dentry->d_sb);
@@ -995,7 +999,7 @@
 
 			rc = CIFSSMBRead(xid, pTcon,
 				 open_file->netfid,
-				 current_read_size, *poffset,
+				 current_read_size, loffset,
 				 &bytes_read, &current_offset);
 		}
 		if (rc || (bytes_read == 0)) {
@@ -1012,7 +1016,8 @@
 			pTcon->bytes_read += total_read;
 			spin_unlock(&pTcon->stat_lock);
 #endif
-			*poffset += bytes_read;
+			loffset += bytes_read;
+			*poffset = loffset;
 		}
 	}
 	FreeXid(xid);
