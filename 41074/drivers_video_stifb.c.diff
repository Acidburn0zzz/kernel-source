--- linux-2.6.7/drivers/video/stifb.c	2004-06-16 21:10:01.000000000 +0100
+++ linux-2.6.7-viroized/drivers/video/stifb.c	2004-06-27 22:38:24.524079240 +0100
@@ -916,7 +916,7 @@
 static ssize_t
 stifb_read(struct file *file, char *buf, size_t count, loff_t *ppos)
 {
-	unsigned long p = *ppos;
+	unsigned long p;
 	struct inode *inode = file->f_dentry->d_inode;
 	int fbidx = iminor(inode);
 	struct fb_info *info = registered_fb[fbidx];
@@ -925,24 +925,33 @@
 	if (!info || ! info->screen_base)
 		return -ENODEV;
 
-	if (p >= info->fix.smem_len)
-	    return 0;
+	down(&info->mutex);
+	
+	p = *ppos;
+	
+	if (*ppos >= info->fix.smem_len || count + p > p)
+	{
+		up(&info->mutex);
+		return 0;
+	}
 	if (count >= info->fix.smem_len)
-	    count = info->fix.smem_len;
+		count = info->fix.smem_len;
 	if (count + p > info->fix.smem_len)
 		count = info->fix.smem_len - p;
 	if (count > sizeof(tmpbuf))
 		count = sizeof(tmpbuf);
 	if (count) {
-	    char *base_addr;
+		char *base_addr;
 
-	    base_addr = info->screen_base;
-	    memcpy_fromio(&tmpbuf, base_addr+p, count);
-	    count -= copy_to_user(buf, &tmpbuf, count);
-	    if (!count)
-		return -EFAULT;
-	    *ppos += count;
+		base_addr = info->screen_base;
+		memcpy_fromio(&tmpbuf, base_addr + p, count);
+		count -= copy_to_user(buf, &tmpbuf, count);
+		if (!count)
+			count = -EFAULT;
+		else
+			*ppos += count;
 	}
+	up(&info->mutex);
 	return count;
 }
 
@@ -952,7 +961,7 @@
 	struct inode *inode = file->f_dentry->d_inode;
 	int fbidx = iminor(inode);
 	struct fb_info *info = registered_fb[fbidx];
-	unsigned long p = *ppos;
+	unsigned long p;
 	size_t c;
 	int err;
 	char tmpbuf[TMPBUFLEN];
@@ -960,31 +969,39 @@
 	if (!info || !info->screen_base)
 		return -ENODEV;
 
-	if (p > info->fix.smem_len)
-	    return -ENOSPC;
+	down(&info->mutex);
+	p = *ppos;	/* Truncated version */
+	
+	if (*ppos  > info->fix.smem_len || p + count > p)
+	{
+		up(&info->mutex);
+		return -ENOSPC;
+	}
+
 	if (count >= info->fix.smem_len)
-	    count = info->fix.smem_len;
+		count = info->fix.smem_len;
 	err = 0;
 	if (count + p > info->fix.smem_len) {
-	    count = info->fix.smem_len - p;
-	    err = -ENOSPC;
+		count = info->fix.smem_len - p;
+		err = -ENOSPC;
 	}
 
 	p += (unsigned long)info->screen_base;
 	c = count;
 	while (c) {
-	    int len = c > sizeof(tmpbuf) ? sizeof(tmpbuf) : c;
-	    err = -EFAULT;
-	    if (copy_from_user(&tmpbuf, buf, len))
-		    break;
-	    memcpy_toio(p, &tmpbuf, len);
-	    c -= len;
-	    p += len;
-	    buf += len;
-	    *ppos += len;
-	}
-	if (count-c)
-		return (count-c);
+		int len = c > sizeof(tmpbuf) ? sizeof(tmpbuf) : c;
+		err = -EFAULT;
+		if (copy_from_user(&tmpbuf, buf, len))
+			break;
+		memcpy_toio(p, &tmpbuf, len);
+		c -= len;
+		p += len;
+		buf += len;
+		*ppos += len;
+	}
+	up(&info->mutex);
+	if (count - c)
+		return count - c;
 	return err;
 }
 
