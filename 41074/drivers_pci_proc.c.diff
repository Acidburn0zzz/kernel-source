Merged against -suse

Index: linux.t/drivers/pci/proc.c
===================================================================
--- linux.t.orig/drivers/pci/proc.c	2004-01-09 01:59:44.000000000 -0500
+++ linux.t/drivers/pci/proc.c	2004-06-29 16:56:10.747560416 -0400
@@ -34,7 +34,7 @@ proc_bus_pci_lseek(struct file *file, lo
 		new = file->f_pos + off;
 		break;
 	case 2:
-		new = PCI_CFG_SPACE_SIZE + off;
+		new = -EINVAL;
 		break;
 	}
 	if (new < 0 || new > PCI_CFG_SPACE_SIZE)
@@ -48,10 +48,10 @@ proc_bus_pci_lseek(struct file *file, lo
 static ssize_t
 proc_bus_pci_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos)
 {
-	const struct inode *ino = file->f_dentry->d_inode;
+	struct inode *ino = file->f_dentry->d_inode;
 	const struct proc_dir_entry *dp = PDE(ino);
 	struct pci_dev *dev = dp->data;
-	unsigned int pos = *ppos;
+	unsigned int pos;
 	unsigned int cnt, size;
 
 	/*
@@ -67,8 +67,13 @@ proc_bus_pci_read(struct file *file, cha
 	else
 		size = 64;
 
-	if (pos >= size)
+	down(&ino->i_sem);
+	if (*ppos >= size)
+	{
+		up(&ino->i_sem);
 		return 0;
+	}
+	pos = *ppos;
 	if (nbytes >= size)
 		nbytes = size;
 	if (pos + nbytes > size)
@@ -76,7 +81,10 @@ proc_bus_pci_read(struct file *file, cha
 	cnt = nbytes;
 
 	if (!access_ok(VERIFY_WRITE, buf, cnt))
+	{
+		up(&ino->i_sem);
 		return -EINVAL;
+	}
 
 	if ((pos & 1) && cnt) {
 		unsigned char val;
@@ -124,20 +132,25 @@ proc_bus_pci_read(struct file *file, cha
 	}
 
 	*ppos = pos;
+	up(&ino->i_sem);
 	return nbytes;
 }
 
 static ssize_t
 proc_bus_pci_write(struct file *file, const char __user *buf, size_t nbytes, loff_t *ppos)
 {
-	const struct inode *ino = file->f_dentry->d_inode;
+	struct inode *ino = file->f_dentry->d_inode;
 	const struct proc_dir_entry *dp = PDE(ino);
 	struct pci_dev *dev = dp->data;
-	int pos = *ppos;
+	unsigned int pos;
 	int cnt;
 
-	if (pos >= PCI_CFG_SPACE_SIZE)
+	down(&ino->i_sem);
+	if (*ppos >= PCI_CFG_SPACE_SIZE) {
+		up(&ino->i_sem);
 		return 0;
+	}
+	pos = *ppos;
 	if (nbytes >= PCI_CFG_SPACE_SIZE)
 		nbytes = PCI_CFG_SPACE_SIZE;
 	if (pos + nbytes > PCI_CFG_SPACE_SIZE)
@@ -145,8 +158,10 @@ proc_bus_pci_write(struct file *file, co
 	cnt = nbytes;
 
 	if (!access_ok(VERIFY_READ, buf, cnt))
+	{
+		up(&ino->i_sem);
 		return -EINVAL;
-
+	}
 	if ((pos & 1) && cnt) {
 		unsigned char val;
 		__get_user(val, buf);
@@ -191,8 +206,8 @@ proc_bus_pci_write(struct file *file, co
 		pos++;
 		cnt--;
 	}
-
 	*ppos = pos;
+	up(&ino->i_sem);
 	return nbytes;
 }
 
