Index: linux-2.6.5/net/atm/mpoa_proc.c
===================================================================
--- linux-2.6.5.orig/net/atm/mpoa_proc.c
+++ linux-2.6.5/net/atm/mpoa_proc.c
@@ -98,6 +98,7 @@ static const char *egress_state_string(i
 
 /*
  * READING function - called when the /proc/atm/mpoa file is read from.
+ * FIXME: needs seek locking
  */
 static ssize_t proc_mpc_read(struct file *file, char *buff,
 			     size_t count, loff_t *pos){
@@ -110,7 +111,9 @@ static ssize_t proc_mpc_read(struct file
 	eg_cache_entry *eg_entry;
 	struct timeval now;
 	unsigned char ip_string[16];
-	if(count == 0)
+	loff_t n = *pos;
+	
+	if(count == 0 || n < 0)
 	        return 0;
 	page = get_zeroed_page(GFP_KERNEL);
 	if(!page)
@@ -151,18 +154,18 @@ static ssize_t proc_mpc_read(struct file
 		mpc = mpc->next;
 	}
 
-	if (*pos >= length) length = 0;
+	if (n >= length) length = 0;
 	else {
-	  if ((count + *pos) > length) count = length - *pos;
+	  if (count  > length - n) count = length - n;
 	  if (copy_to_user(buff, (char *)page , count)) {
  		  free_page(page);
 		  return -EFAULT;
           }
-	  *pos += count;
+	  *pos = n + count;
 	}
 
  	free_page(page);
-        return length;
+        return count;
 }
 
 static ssize_t proc_mpc_write(struct file *file, const char *buff,
@@ -196,8 +199,6 @@ static ssize_t proc_mpc_write(struct fil
                 return -EFAULT;
         }
 
-        *ppos += incoming;
-
         page[incoming] = '\0';
 	retval = parse_qos(page, incoming);
         if (retval == 0)
