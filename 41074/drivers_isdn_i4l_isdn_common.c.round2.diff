--- linux-2.6.7.proc.orig/drivers/isdn/i4l/isdn_common.c
+++ linux-2.6.7.proc/drivers/isdn/i4l/isdn_common.c
@@ -937,7 +937,7 @@ isdn_info_update(void)
 }
 
 static ssize_t
-isdn_read(struct file *file, char *buf, size_t count, loff_t * off)
+isdn_read(struct file *file, char *buf, size_t count, loff_t * poff)
 {
 	uint minor = MINOR(file->f_dentry->d_inode->i_rdev);
 	int len = 0;
@@ -945,11 +945,14 @@ isdn_read(struct file *file, char *buf, 
 	int chidx;
 	int retval;
 	char *p;
+	loff_t off;
 
 	if (off != &file->f_pos)
 		return -ESPIPE;
 
 	lock_kernel();
+	off = *poff;
+	
 	if (minor == ISDN_MINOR_STATUS) {
 		if (!file->private_data) {
 			if (file->f_flags & O_NONBLOCK) {
@@ -965,7 +968,7 @@ isdn_read(struct file *file, char *buf, 
 				retval = -EFAULT;
 				goto out;
 			}
-			*off += len;
+			off += len;
 			retval = len;
 			goto out;
 		}
@@ -994,7 +997,7 @@ isdn_read(struct file *file, char *buf, 
 		}
 		len = isdn_readbchan(drvidx, chidx, p, 0, count,
 				     &dev->drv[drvidx]->rcv_waitq[chidx]);
-		*off += len;
+		off += len;
 		if (copy_to_user(buf,p,len)) 
 			len = -EFAULT;
 		kfree(p);
@@ -1027,7 +1030,7 @@ isdn_read(struct file *file, char *buf, 
 			dev->drv[drvidx]->stavail -= len;
 		else
 			dev->drv[drvidx]->stavail = 0;
-		*off += len;
+		off += len;
 		retval = len;
 		goto out;
 	}
@@ -1039,6 +1042,7 @@ isdn_read(struct file *file, char *buf, 
 #endif
 	retval = -ENODEV;
  out:
+ 	*poff = off;
 	unlock_kernel();
 	return retval;
 }
