--- linux-2.6.7/drivers/usb/host/uhci-debug.c	2004-06-16 21:11:36.000000000 +0100
+++ linux-2.6.7-viroized/drivers/usb/host/uhci-debug.c	2004-06-27 20:15:28.873776248 +0100
@@ -14,9 +14,12 @@
 #include <linux/proc_fs.h>
 #include <linux/smp_lock.h>
 #include <asm/io.h>
+#include <asm/semaphore.h>
 
 #include "uhci-hcd.h"
 
+DECLARE_MUTEX(uhci_debug_lock);
+
 /* Handle REALLY large printk's so we don't overflow buffers */
 static inline void lprintk(char *buf)
 {
@@ -545,11 +548,12 @@
 
 static loff_t uhci_proc_lseek(struct file *file, loff_t off, int whence)
 {
-	struct uhci_proc *up;
+	struct uhci_proc *uproc;
 	loff_t new = -1;
 
-	lock_kernel();
-	up = file->private_data;
+	down(&uhci_debug_lock);
+	
+	uproc = file->private_data;
 
 	switch (whence) {
 	case 0:
@@ -559,33 +563,37 @@
 		new = file->f_pos + off;
 		break;
 	}
-	if (new < 0 || new > up->size) {
-		unlock_kernel();
+	if (new < 0 || new > uproc->size) {
+		up(&uhci_debug_lock);
 		return -EINVAL;
 	}
-	unlock_kernel();
+	up(&uhci_debug_lock);
 	return (file->f_pos = new);
 }
 
 static ssize_t uhci_proc_read(struct file *file, char __user *buf,
 				size_t nbytes, loff_t *ppos)
 {
-	struct uhci_proc *up = file->private_data;
+	struct uhci_proc *uproc = file->private_data;
 	unsigned int pos;
 	unsigned int size;
 
+	down(&uhci_debug_lock);
+	
 	pos = *ppos;
-	size = up->size;
+	size = uproc->size;
+
 	if (pos >= size)
-		return 0;
-	if (nbytes > size - pos)
+		nbytes = 0;
+	else  if (nbytes > size - pos)
 		nbytes = size - pos;
 
-	if (copy_to_user(buf, up->data + pos, nbytes))
-		return -EFAULT;
-
-	*ppos += nbytes;
+	if (copy_to_user(buf, uproc->data + pos, nbytes))
+		nbytes = -EFAULT;
+	else
+		*ppos += nbytes;
 
+	up(&uhci_debug_lock);
 	return nbytes;
 }
 
