--- linux-2.6.7/drivers/oprofile/oprofilefs.c	2004-06-16 21:11:36.000000000 +0100
+++ linux-2.6.7-viroized/drivers/oprofile/oprofilefs.c	2004-06-27 18:54:34.800707520 +0100
@@ -48,20 +48,25 @@
 ssize_t oprofilefs_str_to_user(char const * str, char __user * buf, size_t count, loff_t * offset)
 {
 	size_t len = strlen(str);
+	loff_t pos = *offset;
+	
+	/* XXX - should do proper seek locking instead */
+	if(pos < 0)
+		return -EINVAL;
 
 	if (!count)
 		return 0;
 
-	if (*offset > len)
+	if (pos > len)
 		return 0;
 
-	if (count > len - *offset)
-		count = len - *offset;
+	if (count > len - pos)
+		count = len - pos;
 
-	if (copy_to_user(buf, str + *offset, count))
+	if (copy_to_user(buf, str + pos, count))
 		return -EFAULT;
 
-	*offset += count;
+	*offset = pos + count;
 
 	return count;
 }
@@ -73,9 +78,14 @@
 {
 	char tmpbuf[TMPBUFSIZE];
 	size_t maxlen;
+	loff_t pos = *offset;
 
 	if (!count)
 		return 0;
+	
+	/* XXX - should do proper seek locking instead */
+	if(pos < 0)
+		return -EINVAL;
 
 	spin_lock(&oprofilefs_lock);
 	maxlen = snprintf(tmpbuf, TMPBUFSIZE, "%lu\n", val);
@@ -83,16 +93,16 @@
 	if (maxlen > TMPBUFSIZE)
 		maxlen = TMPBUFSIZE;
 
-	if (*offset > maxlen)
+	if (pos > maxlen)
 		return 0;
 
-	if (count > maxlen - *offset)
-		count = maxlen - *offset;
+	if (count > maxlen - pos)
+		count = maxlen - pos;
 
-	if (copy_to_user(buf, tmpbuf + *offset, count))
+	if (copy_to_user(buf, tmpbuf + pos, count))
 		return -EFAULT;
 
-	*offset += count;
+	*offset = pos + count;
 
 	return count;
 }
