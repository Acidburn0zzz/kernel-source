From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date: Tue, 20 Nov 2018 10:08:18 +0100
Subject: [PATCH] Revert "ACPICA: AML interpreter: add region addresses in
 global list during initialization"
References: bnc#1012628
Patch-mainline: 4.19.3
Git-commit: 4abb951b73ff0a8a979113ef185651aa3c8da19b

This reverts commit 22083c028d0b3ee419232d25ce90367e5b25df8f which is
commit 4abb951b73ff0a8a979113ef185651aa3c8da19b upstream.

Jean writes:

	This commit was tagged with:

	    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200011
	    Tested-by: Jean-Marc Lenoir
	    Cc: All applicable <stable@vger.kernel.org>

	making it sound like it was fixing an actual bug. This is not the case.
	The commit fixes a side issue discovered while investigating bug
	#200011. It does NOT fix bug #200011 itself (as explicitly reported by
	Jean-Marc at https://bugzilla.kernel.org/show_bug.cgi?id=200011#c65 ).

	It does however cause regressions, despite what the commit message says. See:

	https://bugzilla.kernel.org/show_bug.cgi?id=201721

	and I expect more similar regressions, as ACPI resource conflicts are
	very frequent.

	This commit was not stable material to start with. It is intrusive,
	presents a risk of side effects, and does not solve an actual bug that
	is bothering users.

Reported-by: Jean Delvare <jdelvare@suse.de>
Cc: Jean-Marc Lenoir <archlinux@jihemel.com>
Cc: Erik Schmauss <erik.schmauss@intel.com>
Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/acpi/acpica/dsopcode.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/drivers/acpi/acpica/dsopcode.c b/drivers/acpi/acpica/dsopcode.c
index 78f9de260d5f..e9fb0bf3c8d2 100644
--- a/drivers/acpi/acpica/dsopcode.c
+++ b/drivers/acpi/acpica/dsopcode.c
@@ -417,10 +417,6 @@ acpi_ds_eval_region_operands(struct acpi_walk_state *walk_state,
 			  ACPI_FORMAT_UINT64(obj_desc->region.address),
 			  obj_desc->region.length));
 
-	status = acpi_ut_add_address_range(obj_desc->region.space_id,
-					   obj_desc->region.address,
-					   obj_desc->region.length, node);
-
 	/* Now the address and length are valid for this opregion */
 
 	obj_desc->region.flags |= AOPOBJ_DATA_VALID;
-- 
2.19.1

