From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] psmouse: fix section type conflict

 It seems parameter functions aren't allowed to be static, or it causes
 a section type conflict. This feature isn't used very much outside
 of the standard types, which are all global and exported.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

---

 drivers/char/ipmi/ipmi_watchdog.c  |   10 +++++-----
 drivers/input/mouse/psmouse-base.c |    9 +++++----
 drivers/md/md.c                    |    4 ++--
 drivers/video/uvesafb.c            |    2 +-
 4 files changed, 13 insertions(+), 12 deletions(-)

--- a/drivers/char/ipmi/ipmi_watchdog.c
+++ b/drivers/char/ipmi/ipmi_watchdog.c
@@ -188,7 +188,7 @@ static void ipmi_unregister_watchdog(int
    and ready. */
 static int start_now;
 
-static int set_param_int(const char *val, struct kernel_param *kp)
+int set_param_int(const char *val, struct kernel_param *kp)
 {
 	char *endp;
 	int  l;
@@ -207,7 +207,7 @@ static int set_param_int(const char *val
 	return rv;
 }
 
-static int get_param_int(char *buffer, struct kernel_param *kp)
+int get_param_int(char *buffer, struct kernel_param *kp)
 {
 	return sprintf(buffer, "%i", *((int *)kp->arg));
 }
@@ -219,7 +219,7 @@ static int preaction_op(const char *inva
 static int preop_op(const char *inval, char *outval);
 static void check_parms(void);
 
-static int set_param_str(const char *val, struct kernel_param *kp)
+int set_param_str(const char *val, struct kernel_param *kp)
 {
 	action_fn  fn = (action_fn) kp->arg;
 	int        rv = 0;
@@ -243,7 +243,7 @@ static int set_param_str(const char *val
 	return rv;
 }
 
-static int get_param_str(char *buffer, struct kernel_param *kp)
+int get_param_str(char *buffer, struct kernel_param *kp)
 {
 	action_fn fn = (action_fn) kp->arg;
 	int       rv;
@@ -255,7 +255,7 @@ static int get_param_str(char *buffer, s
 }
 
 
-static int set_param_wdog_ifnum(const char *val, struct kernel_param *kp)
+int set_param_wdog_ifnum(const char *val, struct kernel_param *kp)
 {
 	int rv = param_set_int(val, kp);
 	if (rv)
--- a/drivers/input/mouse/psmouse-base.c
+++ b/drivers/input/mouse/psmouse-base.c
@@ -37,8 +37,8 @@ MODULE_DESCRIPTION(DRIVER_DESC);
 MODULE_LICENSE("GPL");
 
 static unsigned int psmouse_max_proto = PSMOUSE_AUTO;
-static int psmouse_set_maxproto(const char *val, struct kernel_param *kp);
-static int psmouse_get_maxproto(char *buffer, struct kernel_param *kp);
+int psmouse_set_maxproto(const char *val, struct kernel_param *kp);
+int psmouse_get_maxproto(char *buffer, struct kernel_param *kp);
 #define param_check_proto_abbrev(name, p)	__param_check(name, p, unsigned int)
 #define param_set_proto_abbrev			psmouse_set_maxproto
 #define param_get_proto_abbrev			psmouse_get_maxproto
@@ -1572,7 +1572,8 @@ static ssize_t psmouse_attr_set_resoluti
 }
 
 
-static int psmouse_set_maxproto(const char *val, struct kernel_param *kp)
+/* These two should be static, but it causes a section type conflict */
+int psmouse_set_maxproto(const char *val, struct kernel_param *kp)
 {
 	const struct psmouse_protocol *proto;
 
@@ -1589,7 +1590,7 @@ static int psmouse_set_maxproto(const ch
 	return 0;
 }
 
-static int psmouse_get_maxproto(char *buffer, struct kernel_param *kp)
+int psmouse_get_maxproto(char *buffer, struct kernel_param *kp)
 {
 	int type = *((unsigned int *)kp->arg);
 
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -5866,11 +5866,11 @@ static __exit void md_exit(void)
 subsys_initcall(md_init);
 module_exit(md_exit)
 
-static int get_ro(char *buffer, struct kernel_param *kp)
+int get_ro(char *buffer, struct kernel_param *kp)
 {
 	return sprintf(buffer, "%d", start_readonly);
 }
-static int set_ro(const char *val, struct kernel_param *kp)
+int set_ro(const char *val, struct kernel_param *kp)
 {
 	char *e;
 	int num = simple_strtoul(val, &e, 10);
--- a/drivers/video/uvesafb.c
+++ b/drivers/video/uvesafb.c
@@ -44,7 +44,7 @@ static struct fb_fix_screeninfo uvesafb_
 
 static int mtrr		__devinitdata = 3; /* enable mtrr by default */
 static int blank	__devinitdata = 1; /* enable blanking by default */
-static int ypan		__devinitdata = 1; /* 0: scroll, 1: ypan, 2: ywrap */
+int ypan		__devinitdata = 1; /* 0: scroll, 1: ypan, 2: ywrap */
 static int pmi_setpal	__devinitdata = 1; /* use PMI for palette changes */
 static int nocrtc	__devinitdata; /* ignore CRTC settings */
 static int noedid	__devinitdata; /* don't try DDC transfers */
