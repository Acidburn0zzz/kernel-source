From: Thomas Renninger <trenn@suse.de>
Subject: more cpumask cleanups for previous (x86_sgi_cpu4096..) patches
References: Additional cpumask fixups
Patch-mainline: 2.6.28

Signed-off-by: Thomas Renninger <trenn@suse.de>

---
 include/asm/mach-es7000/mach_apic.h |   10 +++++-----
 include/asm/mach-summit/mach_apic.h |    6 +++---
 2 files changed, 8 insertions(+), 8 deletions(-)

Index: linux-2.6.27/include/asm/mach-summit/mach_apic.h
===================================================================
--- linux-2.6.27.orig/include/asm-x86/mach-summit/mach_apic.h
+++ linux-2.6.27/include/asm-x86/mach-summit/mach_apic.h
@@ -145,7 +145,7 @@ static inline unsigned int cpu_mask_to_a
 	int cpu;
 	int apicid;	
 
-	num_bits_set = cpus_weight(cpumask);
+	num_bits_set = cpus_weight(*cpumask);
 	/* Return id to all */
 	if (num_bits_set == NR_CPUS)
 		return (int) 0xFF;
@@ -153,10 +153,10 @@ static inline unsigned int cpu_mask_to_a
 	 * The cpus in the mask must all be on the apic cluster.  If are not 
 	 * on the same apicid cluster return default value of TARGET_CPUS. 
 	 */
-	cpu = first_cpu(cpumask);
+	cpu = first_cpu(*cpumask);
 	apicid = cpu_to_logical_apicid(cpu);
 	while (cpus_found < num_bits_set) {
-		if (cpu_isset(cpu, cpumask)) {
+		if (cpu_isset(cpu, *cpumask)) {
 			int new_apicid = cpu_to_logical_apicid(cpu);
 			if (apicid_cluster(apicid) != 
 					apicid_cluster(new_apicid)){
Index: linux-2.6.27/include/asm/mach-es7000/mach_apic.h
===================================================================
--- linux-2.6.27.orig/include/asm-x86/mach-es7000/mach_apic.h
+++ linux-2.6.27/include/asm-x86/mach-es7000/mach_apic.h
@@ -9,7 +9,7 @@ static inline int apic_id_registered(voi
 	        return (1);
 }
 
-static inline cpumask_t *target_cpus(void)
+static inline const cpumask_t *target_cpus(void)
 { 
 #if defined CONFIG_ES7000_CLUSTERED_APIC
 	return &CPU_MASK_ALL;
@@ -81,7 +81,7 @@ static inline void setup_apic_routing(vo
 	int apic = per_cpu(x86_bios_cpu_apicid, smp_processor_id());
 	printk("Enabling APIC mode:  %s.  Using %d I/O APICs, target cpus %lx\n",
 		(apic_version[apic] == 0x14) ? 
-		"Physical Cluster" : "Logical Cluster", nr_ioapics, cpus_addr(TARGET_CPUS)[0]);
+		"Physical Cluster" : "Logical Cluster", nr_ioapics, cpus_addr(*TARGET_CPUS)[0]);
 }
 
 static inline int multi_timer_check(int apic, int irq)
@@ -152,7 +152,7 @@ static inline unsigned int cpu_mask_to_a
 	int cpu;
 	int apicid;	
 
-	num_bits_set = cpus_weight(cpumask);
+	num_bits_set = cpus_weight(*cpumask);
 	/* Return id to all */
 	if (num_bits_set == NR_CPUS)
 #if defined CONFIG_ES7000_CLUSTERED_APIC
@@ -164,10 +164,10 @@ static inline unsigned int cpu_mask_to_a
 	 * The cpus in the mask must all be on the apic cluster.  If are not 
 	 * on the same apicid cluster return default value of TARGET_CPUS. 
 	 */
-	cpu = first_cpu(cpumask);
+	cpu = first_cpu(*cpumask);
 	apicid = cpu_to_logical_apicid(cpu);
 	while (cpus_found < num_bits_set) {
-		if (cpu_isset(cpu, cpumask)) {
+		if (cpu_isset(cpu, *cpumask)) {
 			int new_apicid = cpu_to_logical_apicid(cpu);
 			if (apicid_cluster(apicid) != 
 					apicid_cluster(new_apicid)){
