Subject: [PATCH] kdump-ppc64-xmon-stop-cpu
From: David Wilder <dwilder@us.ibm.com>
Date: Mon, 10 Apr 2006 15:32:21 -0700
Message-ID: <443ADCF5.60702@us.ibm.com>

Bug 149545 - LTC21344-kdump boot panic when a CPU hangs in the first kernel
Bug 149557 - LTC21346-kdump panicks during the system hang when the xmon is enabled

 - During CPU(s) hang scenarios, kdump could not stop these CPUs. However,
 the user could invoke soft-reset to shoot down CPUs reliably. But, when
 the debugger is enabled, these CPUs are returned to hang state after they
 exited from the debugger. This patch fixes this issue by calling
 crash_kexec_secondary() before returns to previous state.

Signed-off-by: Haren Myneni <haren@us.ibm.com>
Signed-off-by: Olaf Hering <olh@suse.de>

---
 arch/powerpc/kernel/traps.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

Index: linux-2.6.16-olh-kdump/arch/powerpc/kernel/traps.c
===================================================================
--- linux-2.6.16-olh-kdump.orig/arch/powerpc/kernel/traps.c
+++ linux-2.6.16-olh-kdump/arch/powerpc/kernel/traps.c
@@ -235,6 +235,16 @@ void system_reset_exception(struct pt_re
 
 	die("System Reset", regs, SIGABRT);
 
+	/*
+	 * Some CPUs which got released from debugger will execute this path.
+	 * These CPUs entered debugger first time via soft-reset - Means,
+	 * could be possible that these CPUs may not repond to an IPI later.
+	 * Therefore, has to call kdump func directly.
+	 * Not a problem if we exited from debugger to recover. In this case
+	 * there will not be any primary kexec CPU. Hence, will be returned.
+	 */
+	crash_kexec_secondary(regs);
+
 	/* Must die if the interrupt is not recoverable */
 	if (!(regs->msr & MSR_RI))
 		panic("Unrecoverable System Reset");
