From: Alexey Starikovskiy <astarikovskiy@suse.de>
Subject: ACPI: EC: Don't degrade to poll mode at storm automatically.
References: bnc#446142
Patch-Mainline: no

Signed-off-by: Thomas Renninger <trenn@suse.de>

Not all users of semi-broken EC devices want to degrade to poll mode, so
give them right to choose.

Signed-off-by: Alexey Starikovskiy <astarikovskiy@suse.de>
---

 Documentation/kernel-parameters.txt |    5 +++++
 drivers/acpi/ec.c                   |   36 +++++++++++++++++++++++++----------
 2 files changed, 31 insertions(+), 10 deletions(-)


Index: linux-2.6.27/Documentation/kernel-parameters.txt
===================================================================
--- linux-2.6.27.orig/Documentation/kernel-parameters.txt	2008-12-02 22:02:26.000000000 +0300
+++ linux-2.6.27/Documentation/kernel-parameters.txt	2008-12-02 22:23:10.000000000 +0300
@@ -696,6 +696,11 @@
 
 	eata=		[HW,SCSI]
 
+	ec_intr=	[HW,ACPI] ACPI Embedded Controller interrupt mode
+			Format: <int>
+			0: polling mode
+			non-0: interrupt mode (default)
+
 	edd=		[EDD]
 			Format: {"off" | "on" | "skip[mbr]"}
 
Index: linux-2.6.27/drivers/acpi/ec.c
===================================================================
--- linux-2.6.27.orig/drivers/acpi/ec.c	2008-12-02 22:02:01.000000000 +0300
+++ linux-2.6.27/drivers/acpi/ec.c	2008-12-02 23:26:51.000000000 +0300
@@ -121,6 +121,8 @@
 	spinlock_t curr_lock;
 } *boot_ec, *first_ec;
 
+int acpi_ec_intr = 1; /* Default is interrupt mode */
+
 /* 
  * Some Asus system have exchanged ECDT data/command IO addresses.
  */
@@ -896,6 +898,8 @@
 				  &acpi_ec_gpe_handler, ec);
 	if (ACPI_FAILURE(status))
 		return -ENODEV;
+	if (!acpi_ec_intr)
+		set_bit(EC_FLAGS_NO_GPE, &ec->flags);
 	acpi_set_gpe_type(NULL, ec->gpe, ACPI_GPE_TYPE_RUNTIME);
 	acpi_enable_gpe(NULL, ec->gpe, ACPI_NOT_ISR);
 	status = acpi_install_address_space_handler(ec->handle,
@@ -1087,3 +1091,14 @@
 	return;
 }
 #endif	/* 0 */
+
+static int __init acpi_ec_set_intr_mode(char *str)
+{
+	if (!get_option(&str, &acpi_ec_intr)) {
+		acpi_ec_intr = 0;
+		return 0;
+	}
+	return 1;
+}
+
+__setup("ec_intr=", acpi_ec_set_intr_mode);
