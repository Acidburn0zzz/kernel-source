From: Gerald Schaefer <geraldsc@de.ibm.com>
Subject: IBM Codestream linux-2.6.16 october2005, patch base-02
Patch-Mainline: 2.6.17-rc1

[patch] cio: wrong interrupt delivered for hsch() or csch()

When cio waits for the interrupt for a basic sense, interrupts for
hsch() or csch() issued in the meantime are wrongly counted as
interrupts for the basic sense and the accumulated irb is passed to
the device driver. In ccw_device_w4sense(), check for clear or halt
function in the irb and pass the irb for the csch() or hsch() to the
device driver.
Acked-by: Hannes Reinecke <hare@suse.de>

---

 drivers/s390/cio/device_fsm.c |   12 ++++++++++++
 1 files changed, 12 insertions(+)

diff -urpN linux-2.6/drivers/s390/cio/device_fsm.c linux-2.6-patched/drivers/s390/cio/device_fsm.c
--- linux-2.6/drivers/s390/cio/device_fsm.c	2006-03-20 06:53:29.000000000 +0100
+++ linux-2.6-patched/drivers/s390/cio/device_fsm.c	2006-03-22 11:46:40.000000000 +0100
@@ -827,6 +827,17 @@ ccw_device_w4sense(struct ccw_device *cd
 		}
 		return;
 	}
+	/*
+	 * Check if a halt or clear has been issued in the meanwhile. If yes,
+	 * only deliver the halt/clear interrupt to the device driver as if it
+	 * had killed the original request.
+	 */
+	if (irb->scsw.fctl & (SCSW_FCTL_CLEAR_FUNC | SCSW_FCTL_HALT_FUNC)) {
+		cdev->private->flags.dosense = 0;
+		memset(&cdev->private->irb, 0, sizeof(struct irb));
+		ccw_device_accumulate_irb(cdev, irb);
+		goto call_handler;
+	}
 	/* Add basic sense info to irb. */
 	ccw_device_accumulate_basic_sense(cdev, irb);
 	if (cdev->private->flags.dosense) {
@@ -834,6 +845,7 @@ ccw_device_w4sense(struct ccw_device *cd
 		ccw_device_do_sense(cdev, irb);
 		return;
 	}
+call_handler:
 	cdev->private->state = DEV_STATE_ONLINE;
 	/* Call the handler. */
 	if (ccw_device_call_handler(cdev) && cdev->private->flags.doverify)
