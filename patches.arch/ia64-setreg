# This is a BitKeeper generated patch for the following project:
# Project Name: Linux kernel tree
# This patch format is intended for GNU patch command version 2.5 or higher.
# This patch includes the following deltas:
#	           ChangeSet	1.1661.1.5 -> 1.1661.1.6
#	include/asm-ia64/gcc_intrin.h	1.2     -> 1.3    
#
# The following is the BitKeeper ChangeSet Log
# --------------------------------------------
# 04/03/16	davidm@tiger.hpl.hp.com	1.1664
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 04/03/16	davidm@tiger.hpl.hp.com	1.1665
# Fix merge error.
# --------------------------------------------
# 04/03/17	davidm@tiger.hpl.hp.com	1.1661.1.6
# ia64: Prevent GCC from clobbering r13.  Found by Luming You.
# 
# Without this change, GCC thinks it's OK to clobber r13.  It doesn't do it
# very often, but it's enough if it does it once and it turns out
# acpi_bus_receive_event() had code that would trigger this issue.
# Fix by declaring r13 as a global register variable.
# --------------------------------------------
#
diff -Nru a/include/asm-ia64/gcc_intrin.h b/include/asm-ia64/gcc_intrin.h
--- a/include/asm-ia64/gcc_intrin.h	Thu Mar 18 14:18:44 2004
+++ b/include/asm-ia64/gcc_intrin.h	Thu Mar 18 14:18:44 2004
@@ -23,6 +23,8 @@
 extern void ia64_bad_param_for_setreg (void);
 extern void ia64_bad_param_for_getreg (void);
 
+register unsigned long ia64_r13 asm ("r13");
+
 #define ia64_setreg(regnum, val)						\
 ({										\
 	switch (regnum) {							\
@@ -67,10 +69,7 @@
 		asm volatile ("mov %0=psr" : "=r"(ia64_intri_res));		\
 		break;								\
 	case _IA64_REG_TP:	/* for current() */				\
-		{								\
-			register __u64 ia64_r13 asm ("r13");			\
-			ia64_intri_res = ia64_r13;				\
-		}								\
+		ia64_intri_res = ia64_r13;					\
 		break;								\
 	case _IA64_REG_AR_KR0 ... _IA64_REG_AR_EC:				\
 		asm volatile ("mov %0=ar%1" : "=r" (ia64_intri_res)		\
