Subject: [PATCH]: powerpc/pseries: Increment fail counter in PCI recovery
From: Linas Vepstas <linas@austin.ibm.com>
References: 171020 - LTC23497

When a PCI device driver does not support PCI error recovery,
the powerpc/pseries code takes a walk through a branch of code 
that resets the failure counter. Because of this, if a broken
PCI card is present, the kernel will attempt to reset it an
infinite number of times. (This is annoying but mostly harmless:
each rest takes about 10-20 seconds, and uses almost no CPU time).

This patch preserves the failure count across resets.

Signed-off-by: Linas Vepstas <linas@austin.ibm.com>
Signed-off-by: Olaf Hering <olh@suse.de>

----
 arch/powerpc/platforms/pseries/eeh_driver.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

Index: linux-2.6.16/arch/powerpc/platforms/pseries/eeh_driver.c
===================================================================
--- linux-2.6.16.orig/arch/powerpc/platforms/pseries/eeh_driver.c
+++ linux-2.6.16/arch/powerpc/platforms/pseries/eeh_driver.c
@@ -201,7 +201,11 @@ static void eeh_report_failure(struct pc
 
 static int eeh_reset_device (struct pci_dn *pe_dn, struct pci_bus *bus)
 {
-	int rc;
+	int cnt, rc;
+
+	/* pcibios will clear the counter; save the value */
+	cnt = pe_dn->eeh_freeze_count;
+
 	if (bus)
 		pcibios_remove_pci_devices(bus);
 
@@ -240,6 +244,7 @@ static int eeh_reset_device (struct pci_
 		ssleep (5);
 		pcibios_add_pci_devices(bus);
 	}
+	pe_dn->eeh_freeze_count = cnt;
 
 	return 0;
 }
