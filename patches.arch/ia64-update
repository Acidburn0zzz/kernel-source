# This is a BitKeeper generated patch for the following project:
# Project Name: Linux kernel tree
# This patch format is intended for GNU patch command version 2.5 or higher.
# This patch includes the following deltas:
#	           ChangeSet	1.1510  -> 1.1525 
#	arch/i386/kernel/process.c	1.51.1.6 -> 1.57   
#	include/asm-x86_64/agp.h	1.2     -> 1.4    
#	arch/ia64/kernel/fsys.S	1.20    -> 1.21   
#	arch/ppc64/kernel/signal.c	1.28    -> 1.29   
#	drivers/input/serio/i8042-io.h	1.4.1.1 -> 1.6    
#	include/asm-parisc/unistd.h	1.8.1.1 -> 1.11   
#	arch/sparc/kernel/module.c	1.11    -> 1.12   
#	include/asm-ppc64/page.h	1.19.1.1 -> 1.22   
#	include/asm-i386/agp.h	1.1.1.1 -> 1.4    
#	include/asm-ia64/delay.h	1.6     -> 1.8    
#	include/asm-generic/sections.h	1.2     -> 1.3    
#	arch/alpha/kernel/module.c	1.5     -> 1.6    
#	include/asm-ppc64/unistd.h	1.20.1.2 -> 1.26   
#	arch/ppc64/kernel/entry.S	1.26.1.1 -> 1.29   
#	include/asm-mips/unistd.h	1.6.1.2 -> 1.10   
#	include/asm-alpha/agp.h	1.2     -> 1.4    
#	         fs/select.c	1.20.1.1 -> 1.22   
#	  arch/ia64/Makefile	1.60    -> 1.61   
#	include/linux/timex.h	1.5.1.3 -> 1.11   
#	include/asm-alpha/hw_irq.h	1.2     -> 1.4    
#	  include/linux/mm.h	1.121.1.12 -> 1.127  
#	include/linux/init.h	1.26.1.1 -> 1.28   
#	arch/arm/kernel/module.c	1.7     -> 1.8    
#	drivers/serial/8250.c	1.34.1.6 -> 1.37   
#	include/asm-ia64/io.h	1.13.1.4 -> 1.19   
#	arch/ppc64/kernel/udbg.c	1.8     -> 1.10   
#	include/asm-ppc64/processor.h	1.30.1.2 -> 1.33   
#	include/asm-i386/ptrace.h	1.5     -> 1.7    
#	include/asm-sparc/unistd.h	1.20.1.6 -> 1.26   
#	 arch/ia64/defconfig	1.19.1.1 -> 1.21   
#	drivers/char/drm/i830_dma.c	1.18.1.1 -> 1.20   
#	       kernel/fork.c	1.124.1.20 -> 1.132  
#	include/linux/sched.h	1.151.1.19 -> 1.162  
#	net/sunrpc/svcsock.c	1.62    -> 1.63   
#	include/asm-ppc64/module.h	1.4     -> 1.6    
#	        kernel/sys.c	1.43.1.20 -> 1.52   
#	     kernel/sysctl.c	1.46.1.9 -> 1.52   
#	include/asm-ia64/unistd.h	1.36    -> 1.37   
#	include/asm-ppc64/thread_info.h	1.7.1.1 -> 1.9    
#	include/asm-ppc64/ucontext.h	1.3     -> 1.5    
#	include/asm-sparc64/agp.h	1.1     -> 1.3    
#	arch/ppc64/kernel/chrp_setup.c	1.29.1.2 -> 1.33   
#	include/asm-ia64/page.h	1.21    -> 1.22   
#	include/asm-i386/thread_info.h	1.11.1.2 -> 1.14   
#	arch/ia64/kernel/setup.c	1.59    -> 1.63   
#	arch/ppc64/kernel/rtas.c	1.11.1.1 -> 1.14   
#	drivers/char/drm/r128_cce.c	1.12.1.3 -> 1.16   
#	drivers/char/drm/drm_memory_debug.h	1.1.1.4 -> 1.5    
#	include/asm-sparc64/unistd.h	1.19.1.6 -> 1.25   
#	arch/i386/kernel/traps.c	1.52.1.8 -> 1.58   
#	drivers/char/drm/drm_memory.h	1.8.1.6 -> 1.13   
#	arch/i386/kernel/Makefile	1.44.1.8 -> 1.50   
#	drivers/char/drm/radeon_cp.c	1.20.1.1 -> 1.22   
#	include/asm-ppc/unistd.h	1.23.1.3 -> 1.27   
#	include/asm-ia64/sn/nodepda.h	1.9     -> 1.10   
#	include/asm-ppc64/sigcontext.h	1.4     -> 1.6    
#	include/linux/serial.h	1.8.1.1 -> 1.10   
#	arch/ia64/kernel/time.c	1.35    -> 1.36   
#	include/asm-ia64/mca.h	1.9     -> 1.10   
#	include/asm-ppc/pgtable.h	1.23.1.3 -> 1.26   
#	include/asm-ppc/thread_info.h	1.7.1.3 -> 1.11   
#	       kernel/time.c	1.11.1.6 -> 1.18   
#	drivers/char/drm/drm_bufs.h	1.14.1.2 -> 1.17   
#	drivers/serial/serial_core.c	1.72    -> 1.73   
#	include/asm-ia64/asmmacro.h	1.12    -> 1.13   
#	    kernel/softirq.c	1.39.1.8 -> 1.44   
#	arch/ppc64/kernel/LparData.c	1.9     -> 1.11   
#	arch/ia64/sn/kernel/setup.c	1.19    -> 1.20   
#	drivers/net/tulip/media.c	1.11    -> 1.12   
#	arch/ppc/kernel/module.c	1.9.1.1 -> 1.11   
#	drivers/acpi/pci_root.c	1.13.1.3 -> 1.17   
#	include/asm-ppc64/types.h	1.3     -> 1.5    
#	 arch/ia64/mm/numa.c	1.3     -> 1.4    
#	include/asm-ia64/meminit.h	1.1     -> 1.3    
#	include/asm-ia64/pgtable.h	1.29    -> 1.30   
#	arch/ppc64/kernel/ras.c	1.5     -> 1.7    
#	include/asm-ia64/uaccess.h	1.12    -> 1.13   
#	include/asm-parisc/thread_info.h	1.2.1.1 -> 1.4    
#	include/asm-ia64/posix_types.h	1.4     -> 1.5    
#	include/asm-um/thread_info.h	1.3.1.1 -> 1.5    
#	drivers/char/drm/i810_dma.c	1.26.1.4 -> 1.31   
#	include/asm-h8300/thread_info.h	1.1.1.2 -> 1.4    
#	arch/ia64/mm/contig.c	1.1     -> 1.3    
#	include/asm-ia64/numa.h	1.9     -> 1.11   
#	include/linux/nfs_fs.h	1.45.1.6 -> 1.49   
#	drivers/media/video/Makefile	1.18.1.3 -> 1.22   
#	include/asm-v850/thread_info.h	1.2.1.1 -> 1.4    
#	include/asm-ia64/machvec_sn2.h	1.8     -> 1.9    
#	include/asm-ppc64/proc_fs.h	1.2     -> 1.4    
#	           mm/swap.c	1.52.1.1 -> 1.55   
#	drivers/acpi/tables.c	1.14.1.2 -> 1.17   
#	include/linux/pci_ids.h	1.103.1.20 -> 1.110  
#	 include/linux/irq.h	1.6.1.3 -> 1.12   
#	include/linux/moduleloader.h	1.6     -> 1.7    
#	include/asm-alpha/unistd.h	1.18.1.4 -> 1.23   
#	 arch/ia64/mm/init.c	1.48    -> 1.52   
#	include/asm-m68knommu/thread_info.h	1.2.1.1 -> 1.4    
#	arch/ppc64/kernel/irq.c	1.30.1.3 -> 1.33   
#	include/asm-ia64/serial.h	1.3     -> 1.4    
#	drivers/acpi/pci_irq.c	1.16.1.6 -> 1.23   
#	         mm/memory.c	1.123.1.16 -> 1.134  
#	include/linux/moduleparam.h	1.3.1.1 -> 1.5    
#	arch/ia64/kernel/ia64_ksyms.c	1.33    -> 1.34   
#	arch/ppc64/kernel/rtas-proc.c	1.6     -> 1.8    
#	arch/ppc64/kernel/setup.c	1.28.1.3 -> 1.32   
#	 include/linux/pci.h	1.90.1.18 -> 1.98   
#	arch/ia64/kernel/mca.c	1.43    -> 1.45   
#	include/asm-arm/thread_info.h	1.6.1.2 -> 1.9    
#	arch/ia64/kernel/process.c	1.39.1.7 -> 1.48   
#	include/asm-m68k/unistd.h	1.8     -> 1.10   
#	arch/i386/kernel/module.c	1.11    -> 1.12   
#	arch/ia64/kernel/acpi.c	1.52    -> 1.55   
#	drivers/serial/Makefile	1.14.1.6 -> 1.22   
#	include/asm-ppc64/naca.h	1.6     -> 1.8    
#	include/asm-h8300/unistd.h	1.1.1.1 -> 1.4    
#	include/linux/acpi_serial.h	1.2.1.1 -> 1.4    
#	  drivers/char/mem.c	1.42.1.2 -> 1.45   
#	arch/ppc64/kernel/traps.c	1.19.1.1 -> 1.21   
#	include/asm-m68knommu/unistd.h	1.2     -> 1.4    
#	kernel/posix-timers.c	1.19.1.2 -> 1.22   
#	arch/ppc64/kernel/head.S	1.36.1.2 -> 1.39   
#	arch/ia64/mm/hugetlbpage.c	1.14    -> 1.15   
#	include/asm-ppc64/xics.h	1.5     -> 1.7    
#	include/linux/sunrpc/svc.h	1.20.1.5 -> 1.26   
#	include/linux/sysctl.h	1.47.1.5 -> 1.52   
#	arch/ppc64/kernel/xics.c	1.25.1.3 -> 1.28   
#	   drivers/net/tg3.c	1.72.1.35 -> 1.78   
#	 include/linux/smp.h	1.22.1.4 -> 1.25   
#	        usr/Makefile	1.6.1.3 -> 1.10   
#	arch/v850/kernel/module.c	1.5     -> 1.6    
#	include/asm-ia64/perfmon.h	1.16    -> 1.17   
#	Documentation/ia64/fsys.txt	1.5     -> 1.7    
#	drivers/media/radio/Makefile	1.9     -> 1.10   
#	arch/ppc64/kernel/htab.c	1.34.1.2 -> 1.37   
#	arch/ppc64/mm/init.c	1.46.1.6 -> 1.53   
#	arch/ppc64/kernel/open_pic.c	1.15.1.1 -> 1.17   
#	drivers/char/agp/i460-agp.c	1.25.1.3 -> 1.30   
#	arch/ppc64/kernel/process.c	1.35.1.6 -> 1.40   
#	arch/ppc64/kernel/pci_dma.c	1.16    -> 1.17   
#	arch/ia64/lib/csum_partial_copy.c	1.5     -> 1.6    
#	arch/ia64/ia32/sys_ia32.c	1.79    -> 1.82   
#	           mm/mmap.c	1.85.1.7 -> 1.90   
#	      fs/proc/base.c	1.42.1.17 -> 1.51   
#	include/linux/time.h	1.16.1.5 -> 1.20   
#	arch/sparc64/kernel/module.c	1.14.1.2 -> 1.16   
#	arch/ppc64/kernel/open_pic_defs.h	1.2     -> 1.4    
#	include/asm-i386/unistd.h	1.25.1.5 -> 1.31   
#	sound/oss/cs4281/cs4281pm-24.c	1.3.1.1 -> 1.5    
#	arch/ppc64/kernel/asm-offsets.c	1.14.1.1 -> 1.17   
#	include/asm-m68k/thread_info.h	1.4.1.1 -> 1.6    
#	            Makefile	1.410.1.25 -> 1.422  
#	          fs/fcntl.c	1.28.1.3 -> 1.31   
#	include/asm-ia64/pal.h	1.7     -> 1.8    
#	arch/ia64/kernel/head.S	1.14    -> 1.15   
#	include/asm-s390/thread_info.h	1.4.1.1 -> 1.6    
#	include/asm-x86_64/unistd.h	1.14.1.4 -> 1.20   
#	include/asm-ppc64/mmu.h	1.7.1.1 -> 1.10   
#	arch/ppc64/mm/numa.c	1.7.1.3 -> 1.10   
#	arch/ia64/kernel/patch.c	1.5     -> 1.6    
#	drivers/char/agp/backend.c	1.83.1.7 -> 1.87   
#	arch/ppc64/kernel/syscalls.c	1.11.1.2 -> 1.15   
#	include/asm-x86_64/thread_info.h	1.12.1.1 -> 1.14   
#	include/asm-ppc64/ptrace.h	1.2     -> 1.4    
#	arch/ppc64/kernel/sys_ppc32.c	1.66.1.4 -> 1.68   
#	include/asm-sparc64/thread_info.h	1.10.1.2 -> 1.13   
#	include/asm-ia64/nodedata.h	1.5     -> 1.6    
#	arch/ppc64/kernel/prom.c	1.28.1.3 -> 1.33   
#	     kernel/module.c	1.86.1.7 -> 1.93   
#	include/asm-x86_64/pgtable.h	1.21.1.2 -> 1.24   
#	arch/ppc64/kernel/iSeries_setup.c	1.15.1.1 -> 1.18   
#	arch/ia64/kernel/perfmon_mckinley.h	1.8     -> 1.9    
#	arch/ppc64/kernel/smp.c	1.40.1.2 -> 1.43   
#	drivers/char/drm/drmP.h	1.23.1.6 -> 1.28   
#	arch/ia64/sn/io/sn2/ml_SN_intr.c	1.6     -> 1.7    
#	include/asm-i386/pgtable.h	1.35.1.3 -> 1.39   
#	net/ipv4/tcp_input.c	1.39.1.7 -> 1.44   
#	include/asm-ia64/percpu.h	1.12    -> 1.13   
#	arch/ppc64/mm/fault.c	1.10.1.2 -> 1.14   
#	include/linux/highmem.h	1.25.1.2 -> 1.28   
#	arch/ppc64/kernel/pacaData.c	1.7.1.1 -> 1.10   
#	arch/ia64/sn/io/machvec/pci_bus_cvlink.c	1.13    -> 1.14   
#	           mm/slab.c	1.93.1.14 -> 1.100  
#	include/linux/module.h	1.66.1.2 -> 1.70   
#	      kernel/sched.c	1.193.1.27 -> 1.203  
#	drivers/char/agp/hp-agp.c	1.24.1.3 -> 1.30   
#	  drivers/acpi/osl.c	1.37.1.5 -> 1.43   
#	 include/linux/jbd.h	1.21.1.17 -> 1.25   
#	arch/ia64/kernel/gate.S	1.18    -> 1.19   
#	arch/alpha/kernel/traps.c	1.24.1.3 -> 1.28   
#	drivers/char/drm/drm_drv.h	1.20.1.5 -> 1.25   
#	      kernel/timer.c	1.59.1.9 -> 1.68   
#	drivers/scsi/sym53c8xx_2/sym_malloc.c	1.2     -> 1.4    
#	arch/ppc64/xmon/xmon.c	1.26.1.3 -> 1.30   
#	arch/ppc64/kernel/pci.c	1.33.1.2 -> 1.37   
#	arch/ia64/lib/checksum.c	1.4     -> 1.5    
#	arch/ia64/mm/discontig.c	1.6     -> 1.8    
#	include/asm-sh/unistd.h	1.5.1.1 -> 1.8    
#	include/asm-m68k/pgtable.h	1.8.1.1 -> 1.10   
#	arch/ppc64/kernel/misc.S	1.62    -> 1.63   
#	arch/ia64/kernel/mca_asm.S	1.10    -> 1.12   
#	drivers/char/drm/mga_dma.c	1.13.1.1 -> 1.15   
#	arch/s390/kernel/module.c	1.8.1.2 -> 1.11   
#	drivers/char/drm/mga_drv.h	1.13.1.1 -> 1.15   
#	arch/x86_64/kernel/module.c	1.9.1.2 -> 1.12   
#	arch/ia64/sn/kernel/sn2/io.c	1.3     -> 1.4    
#	arch/arm/kernel/process.c	1.28.1.4 -> 1.31   
#	include/linux/percpu.h	1.5.1.2 -> 1.7    
#	include/asm-alpha/thread_info.h	1.5.1.1 -> 1.7    
#	arch/ppc64/kernel/signal32.c	1.40    -> 1.42   
#	include/asm-cris/unistd.h	1.10.1.1 -> 1.13   
#	drivers/serial/Kconfig	1.8.1.11 -> 1.17   
#	drivers/char/drm/gamma_dma.c	1.12.1.4 -> 1.16   
#	arch/ppc64/kernel/rtas_flash.c	1.5     -> 1.7    
#	    net/sunrpc/svc.c	1.21.1.1 -> 1.23   
#	include/asm-ia64/mca_asm.h	1.7     -> 1.8    
#	arch/ia64/kernel/asm-offsets.c	1.1     -> 1.2    
#	include/linux/irq_cpustat.h	1.7.1.3 -> 1.10   
#	arch/ia64/kernel/perfmon.c	1.61    -> 1.64   
#	include/asm-arm/unistd.h	1.16.1.2 -> 1.20   
#	   arch/ia64/Kconfig	1.38.1.8 -> 1.46   
#	include/asm-ppc64/pgtable.h	1.23.1.2 -> 1.25   
#	include/asm-ppc64/mmzone.h	1.11.1.2 -> 1.14   
#	include/asm-sparc/thread_info.h	1.4.1.1 -> 1.6    
#	include/asm-ppc64/io.h	1.8     -> 1.10   
#	drivers/video/radeonfb.c	1.26.1.4 -> 1.29   
#	include/asm-v850/unistd.h	1.6     -> 1.8    
#	include/asm-ppc64/topology.h	1.8.1.1 -> 1.10   
#	   kernel/kallsyms.c	1.11.1.3 -> 1.15   
#	arch/ppc64/kernel/Makefile	1.27.1.1 -> 1.30   
#	arch/ppc64/kernel/module.c	1.6     -> 1.7    
#	include/asm-ppc64/rtas.h	1.6.1.1 -> 1.9    
#	include/asm-i386/hw_irq.h	1.21.1.3 -> 1.26   
#	sound/oss/cs4281/cs4281m.c	1.21.1.5 -> 1.25   
#	arch/ppc64/kernel/align.c	1.10    -> 1.11   
#	     kernel/printk.c	1.25.1.3 -> 1.30   
#	arch/ppc64/kernel/ioctl32.c	1.35.1.3 -> 1.39   
#	drivers/scsi/qla1280.c	1.38.1.12 -> 1.43   
#	arch/ppc64/kernel/pSeries_lpar.c	1.21.1.1 -> 1.24   
#	drivers/char/drm/drm_vm.h	1.23.1.2 -> 1.26   
#	arch/ia64/kernel/perfmon_itanium.h	1.5     -> 1.6    
#	include/asm-s390/unistd.h	1.16.1.1 -> 1.19   
#	include/asm-ia64/mmzone.h	1.5     -> 1.6    
#	arch/parisc/kernel/module.c	1.5.1.3 -> 1.8    
#	drivers/scsi/sym53c8xx_2/sym_glue.c	1.23.1.15 -> 1.29   
#	               (new)	        -> 1.1     drivers/media/video/dummy.c
#	               (new)	        -> 1.1     drivers/media/radio/dummy.c
#
# The following is the BitKeeper ChangeSet Log
# --------------------------------------------
# 03/10/08	janetmor@us.ibm.com	1.1217.8.34
# [PATCH] ia64: sys_ia32.c fix for epoll
# 
# I ran into some bugs testing epoll in ia32-emulation mode on ia64.
# The attached patch fixes the problems and is well tested.
# Here is a summary of the changes:
# 
# Changes to sys32_epoll_ctl() and sys32_epoll_wait():
# - changed epoll_event32.data to an array (this is subjective, but seems
# to make the code more readable)
# 
# Changes to sys32_epoll_wait():
# - added call to __get_free_pages if kmalloc(epoll_event array) fails.  This
#   provides needed scalability and fixes the -ENOMEM failure during
# epoll-pipetest.
# - deleted copy-in of epoll_event array since this is not a user-inputsyscall
# - changed to check numevents > 0 as indicator of success on call to
#   sys_epoll_wait.
# - changed to loop on numevents not maxevents when copying out to userspace.
# --------------------------------------------
# 03/10/09	jbarnes@sgi.com	1.1511
# [PATCH] ia64: fix NUMA page table allocation to get memory from the right node
# 
# --------------------------------------------
# 03/10/09	jbarnes@sgi.com	1.1217.8.35
# [PATCH] ia64: fix SN2 code for GENERIC builds
# 
# Don't try to use the sn2 I/O code if we're not on sn2 or we may get into
# trouble.  Only makes a difference for generic kernels.
# --------------------------------------------
# 03/10/09	jbarnes@sgi.com	1.1217.8.36
# [PATCH] ia64: fix is_headless_node() for systems w/<64p
# 
# I didn't realize that any_online_cpu() wouldn't work for
# is_headless_node(), so this patch reverts the function back to using the
# node_to_cpu_mask[] array, fixing sn2 for systems with less than 64p.
# --------------------------------------------
# 03/10/09	jbarnes@sgi.com	1.1217.8.37
# [PATCH] ia64: early SN setup fix
# 
# Small fix to build early_sn_setup even if early printk is turned off.
# --------------------------------------------
# 03/10/09	jbarnes@sgi.com	1.1217.8.38
# [PATCH] ia64: deal with lack of SRAT in GENERIC kernels
# 
# n platforms without an SRAT (e.g. zx1), the cpu_to_node_map will get
# built incorrectly without this fix, making generic kernels fail when
# they try to alloc_pages_node() from a nodeid of -1.
# --------------------------------------------
# 03/10/09	kenneth.w.chen@intel.com	1.1217.8.39
# [PATCH] ia64: fix NUMA hugetlb support
# 
# Here is a patch that adds numa support for hugetlb page on ia64.  It is
# taken from x86 numa implementation.  The low level hugetlb page
# pre-allocation is done in round robin fashion on each numa node and
# allocation for user level code is node local aware.
# --------------------------------------------
# 03/10/09	davidm@tiger.hpl.hp.com	1.1512
# Merge tiger.hpl.hp.com:/data1/bk/vanilla/linux-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# --------------------------------------------
# 03/10/09	davidm@tiger.hpl.hp.com	1.1513
# Merge with 2.6.0-test7.
# --------------------------------------------
# 03/10/09	peterc@chubb.wattle.id.au	1.1512.1.1
# [PATCH] ia64: drop stale check for GAS_HAS_LOCAL_TAGS
# 
# GAS_HAS_LOCAL_TAGS was removed a long time ago, but uaccess.h never got
# updated.  Without this fix, bad syscall args may cause a SEGFAULT instead
# of failing gracefully.
# --------------------------------------------
# 03/10/09	davidm@tiger.hpl.hp.com	1.1514
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/09	arun.sharma@intel.com	1.1512.1.2
# [PATCH] ia64: fix ia32 epoll emulation warnings
# 
# --------------------------------------------
# 03/10/10	arun.sharma@intel.com	1.1512.1.3
# [PATCH] ia64: Fix unaligned faults in IA-32 putstat64
# 
# This seems to be introduced by recent changes in 2.6.0-test series.
# --------------------------------------------
# 03/10/10	jbarnes@sgi.com	1.1512.1.4
# [PATCH] ia64: fix SN2 interrupt allocation
# 
# Patch from Christoph.  Fixes interrupt allocation code for sn2.
# --------------------------------------------
# 03/10/10	schwab@suse.de	1.1512.1.5
# [PATCH] ia64: fix misnamed syscalls
# 
# This fixes a misnomer of some syscalls in 2.6.0-test[567].  Glibc wants
# them without the sys_ infix.
# --------------------------------------------
# 03/10/10	davidm@tiger.hpl.hp.com	1.1515
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/10	jbarnes@sgi.com	1.1512.1.6
# [PATCH] ia64: 2nd step to fix GENERIC builds: split contig and discontig paging_init functions
# 
# --------------------------------------------
# 03/10/10	davidm@tiger.hpl.hp.com	1.1512.1.7
# ia64: Patch by Jesse Barnes:
# 
# This patch fixes the combination of CONFIG_DISCONTIGMEM and
# CONFIG_VIRTUAL_MEM_MAP so that generic kernels will work on all ia64
# platforms, including sn2, and also makes sn2 specific kernels work
# (which I think is a first).
# 
# I've cleaned this patch up heavily based on feedback from yourself,
# Christoph and others.  I've tested sn2, zx1, and dig (thanks Xavier!)
# specific configurations, as well as a generic configuration that allows
# the same binary to boot on zx1, dig, and sn2.
# --------------------------------------------
# 03/10/10	jbarnes@sgi.com	1.1512.1.8
# [PATCH] ia64: fix NUMA boot
# 
# Now that the ACPI table parsing stuff has been fixed we can move
# find_memory() back where it belongs--after the SRAT table has been
# parsed.
# --------------------------------------------
# 03/10/10	davidm@tiger.hpl.hp.com	1.1516
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/10	tony.luck@intel.com	1.1512.1.9
# [PATCH] ia64: fix register numbers in MCA save/restore
# 
# This corrects the save/restore code in mca_asm.S
# which was written long ago, before the assembler understood
# mnemonic names for 'cr' and 'ar' registers (in fact it
# appears to have been written pre-silicon, some of the
# control register numbers don't match with what actually
# got built).  There were other goofs too (like using
# 0, 1, 2, etc. for region register subscripts).
# --------------------------------------------
# 03/10/10	jbarnes@sgi.com	1.1512.1.10
# [PATCH] ia64: nable SN2 in generic builds
# 
# Now that it works, we can enable sn2 in generic builds.  This should not
# only allow generic kernels to work on sn2, but also fix the build
# problems people have been seeing with the qla1280 driver.  I tested a
# generic kernel built with this patch on zx1 and it worked.
# --------------------------------------------
# 03/10/13	tony.luck@intel.com	1.1512.1.11
# [PATCH] ia64: infinite loop in ia64_mca_wakeup_ipi_wait
# 
# This bugfix has been hiding inside the MCA TLB patches.
# 
# There is an infinite loop in ia64_mca_wakeup_ipi_wait() because
# the compiler optimizes away the test at the bottom of the while
# loop.  It does this because IA64_MCA_WAKEUP_VECTOR is 0xf0, so
# irr_bit is known to be the constant 0x30, a.k.a. 48 in decimal.
# So when the compiler looks at the expression:
# 
# 
# It observes that 1' as unsigned
# long.
# --------------------------------------------
# 03/10/13	tony.luck@intel.com	1.1512.1.12
# [PATCH] ia64: cannot convert region 5 address to physical by clearing bits 63:61
# 
# Another no-brainer bug fix snipped out of the quagmire of
# the MCA/TLB patch.  This one is for 2.6 only, we must use
# the new LOAD_PHYSICAL() macro to get the physical address of
# the code label that we want to jump to, the INST_VA_TO_PA()
# macro just clears the region bits, which only works for region
# 7 addresses.
# --------------------------------------------
# 03/10/14	tony.luck@intel.com	1.1512.1.13
# [PATCH] ia64: Another MCA fix
# 
# The definition of the pal_process_state_info_s structure
# misses out some useful pieces (e.g. the "mi" bit which indicates
# whether we should call PAL_MC_ERROR_INFO to get more details).
# 
# Worse yet, some of the bits are in the wrong places (cc/tc/bc).
# 
# See Volume 2 of "Intel Itanium Architecture Software Developer's
# Manual".  (In the Rev 2.1 October 2002 edition, p. 2:268 and 2:276).
# --------------------------------------------
# 03/10/14	jbarnes@sgi.com	1.1512.1.14
# [PATCH] ia64: SN2 module fix
# 
# Because we're the only platform with seperate in, out, and read
# routines, we have to include the file that defines them in our machvec
# header so that users of the functions will get the right defines and not
# use the non-inline function variants (which are only necessary for
# generic kernels).
# --------------------------------------------
# 03/10/14	ianw@gelato.unsw.edu.au	1.1512.1.15
# [PATCH] ia64: drop bogus "now < last_tick" message
# 
# itc_get_offset() has a consistency check which is no longer valid now that
# xtime_lock is a seq_lock.  Drop the bogus check.
# --------------------------------------------
# 03/10/14	davidm@tiger.hpl.hp.com	1.1517
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/15	jbarnes@sgi.com	1.1512.1.16
# [PATCH] ia64: force on appropriate generic options
# 
# Make sure that generic kernels actually build by forcing on the
# necessary options.  With this patch I was able to build a generic kernel
# out of the to-linus-2.5 tree.
# --------------------------------------------
# 03/10/15	davidm@tiger.hpl.hp.com	1.1512.1.17
# ia64: Fix __delay() to do The Right Thing.  In practice, this may
# 	cause BogoMIPS to drop to half the clock-speed with current
# 	versions of GCC, but this just shows that GCC doesn't generate
# 	very good code for single-cycle loops.  Perhaps it will motivate
# 	someone to improve GCC in this area (though it's hardly of
# 	practical value, other than for producing large BogoMIPS values).
# --------------------------------------------
# 03/10/15	nathans@sgi.com	1.1512.1.18
# [PATCH] ia64: correct ino_t to be 64 bits wide
# 
# This brings the kernel in sync with glibc (and all other 64-bit platforms
# other than Alpha and S390x).  This fixes ustat() and breaks nfsctl_export,
# but the latter is a deprecated interface anyhow (newer versions of
# nfsutils use "exportfs" instead).
# --------------------------------------------
# 03/10/15	davidm@tiger.hpl.hp.com	1.1518
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/15	bjorn.helgaas@hp.com	1.1512.1.19
# [PATCH] ia64: fix serial port naming
# 
# Now that the serial driver fully supports discovery via ACPI,
# we can get rid of all the legacy junk in asm-ia64/serial.h.
# This keeps the serial driver from blindly probing I/O port
# space.
# 
# This also fixes a long-standing serial device naming issue:
# ttyS0-ttyS3 were always reserved for the compiled-in
# COM ports, even if they weren't present in the box.
# Any additional PCI or ACPI ports appeared starting at
# ttyS4 (except for the special case of things described
# in the HCDP).   Now we'll just name ttyS devices in the
# order they're discovered, without any holes for non-existent
# devices.
# 
# This is a little bit ugly for serial console because the HCDP
# is currently the only way we learn about serial ports before
# the actual ACPI discovery.  All HP firmware implements HCDP,
# but Intel firmware does not.  So in the absence of an HCDP,
# we have to probe for legacy COM ports.  Otherwise, the serial
# console wouldn't work until the serial driver discovers the
# port via ACPI.
# --------------------------------------------
# 03/10/15	davidm@tiger.hpl.hp.com	1.1519
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/15	davidm@tiger.hpl.hp.com	1.1512.1.20
# ia64: Fix __delay() even more: it's just not safe to inline the delay-
# 	loop because, e.g., the compiler might decide to unroll the
# 	loop when passed a constant, etc.
# --------------------------------------------
# 03/10/15	davidm@tiger.hpl.hp.com	1.1520
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/15	ianw@gelato.unsw.edu.au	1.1512.1.21
# [PATCH] ia64: a little more documentation in fsys.txt
# 
# Attached is a suggestion for a small addition to fsys.txt about how
# userspace can use fast system calls.
# 
# If people think this is totally wrong, or that something like this
# might be more appropriate in our WiKi, that's fine.
# --------------------------------------------
# 03/10/15	davidm@tiger.hpl.hp.com	1.1512.1.22
# ia64: Important security fix for fsyscalls.  Without this patch, the McKinley E9
# 	workaround caused fsyscalls to return with the wrong privilege level.
# 	This patch also adds fsys_rt_sigprocmask(), which happens to be a good
# 	test-case for this bug.  Only McKinley systems using fsyscalls are affected.
# 	Merced and Madison are OK.
# --------------------------------------------
# 03/10/15	davidm@tiger.hpl.hp.com	1.1521
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/16	bjorn.helgaas@hp.com	1.1522
# [PATCH] serial console registration bugfix
# 
# uart_set_options() can dereference a null pointer.  This happens
# if you specify a console that hasn't previously been setup by
# early_serial_setup().
# 
# For example, on ia64, the HCDP typically tells us about line 0,
# so we calls early_serial_setup() for it.  If the user specifies
# "console=ttyS3", we machine-check when trying to follow the
# uninitialized port->ops pointer.
# 
# It's not entirely clear to me whether we should return 0 or -ENODEV
# or something.  The advantage of returning zero is that if the user
# specifies "console=ttyS0" and we just lack the HCDP, the console
# doesn't work as early as usual, but it does start working after the
# serial driver detects the port (though the baud/parity/etc from the
# command line are lost).  Returning -ENODEV seems to prevent it from
# ever working.
# --------------------------------------------
# 03/10/16	bjorn.helgaas@hp.com	1.1523
# [PATCH] early_serial_setup array bounds check
# 
# early_serial_setup() doesn't validate the array index,
# so a caller could corrupt memory after serial8250_ports[]
# by supplying a value of port->line that's too large.
# 
# I haven't seen a failure related to this, but it seems fragile
# to rely on callers to know how many ports the driver supports.
# --------------------------------------------
# 03/10/16	tony.luck@intel.com	1.1512.1.23
# [PATCH] ia64: MCA min_state area must be uncacheable
# 
# Software Developer's Manual page 2:270, section 11.3.2.3
# says that the processor min-state save area must be in an
# uncacheable region ... but current MCA recovery code
# allocates the min-state area "ia64_mca_min_state_save_info"
# in regular kernel data/bss.
# 
# This patch re-uses the same min-state area that the PAL/SAL
# used to report the error to Linux ... which mostly requires
# deleting code and declarations (some of which were wrong,
# MIN_STATE_AREA_SIZE ought to have been 58).  The real "work"
# is copying the pointer to the min-state area from the
# sal_to_os handoff structure into the os_to_sal structure.
# --------------------------------------------
# 03/10/16	eranian@hpl.hp.com	1.1512.1.24
# [PATCH] ia64: perfmon-2 fixes
# 
#  - remove PFM_FL_UNSECURE support because broken
#  - remove instrumentation code for syswide ctx update (5% speedup)
#  - integrated cleanups from John Levon
#  - remove references to pmu_conf.ovfl_val from loops, use local variable
#  - updated pfm_bad_permissions()
#  - support reset values for non-counting pmds
#  - serialization of PFM_RESTART
#  - added support for restart_active in per-task mode
#  - remove potential deadlock caused by calling pfm_overflow_handler()   from pfm_load_regs()
#  - fix invalid check in perfmon_mckinley() for PMC13
# --------------------------------------------
# 03/10/16	rusty@linux.co.intel.com	1.1512.1.25
# [PATCH] ia64: fix perfmon typo that broke Itanium build
# 
# --------------------------------------------
# 03/10/16	davidm@tiger.hpl.hp.com	1.1524
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
# 03/10/17	jbarnes@sgi.com	1.1512.1.26
# [PATCH] ia64: fix topology init
# 
# Populate topology directories correctly now that NUMA kernels work.
# --------------------------------------------
# 03/10/17	davidm@tiger.hpl.hp.com	1.1512.1.27
# ia64: Add missing exports to modules build again.
# --------------------------------------------
# 03/10/17	davidm@tiger.hpl.hp.com	1.1512.1.28
# ia64: Fix printk format error.
# --------------------------------------------
# 03/10/17	davidm@tiger.hpl.hp.com	1.1512.1.29
# ia64: Don't mix code and declarations (not C90-compliant).
# --------------------------------------------
# 03/10/17	davidm@tiger.hpl.hp.com	1.1525
# Merge tiger.hpl.hp.com:/data1/bk/lia64/to-linus-2.5
# into tiger.hpl.hp.com:/data1/bk/lia64/linux-ia64-2.5
# --------------------------------------------
#
diff -Nru a/arch/ia64/Kconfig b/arch/ia64/Kconfig
--- a/arch/ia64/Kconfig	Thu Oct 16 00:38:51 2003
+++ b/arch/ia64/Kconfig	Thu Oct 16 00:38:51 2003
@@ -620,6 +620,33 @@
 	  send a BREAK and then within 5 seconds a command keypress. The
 	  keys are documented in <file:Documentation/sysrq.txt>. Don't say Y
 	  unless you really know what this hack does.
+
+config IA64_EARLY_PRINTK
+	bool "Early printk support"
+	depends on DEBUG_KERNEL && !IA64_GENERIC
+	help
+	  Selecting this option uses the VGA screen or serial console for
+	  printk() output before the consoles are initialised.  It is useful
+	  for debugging problems early in the boot process, but only if you
+	  have a suitable VGA/serial console attached.  If you're unsure,
+	  select N.
+
+config IA64_EARLY_PRINTK_UART
+	bool "Early printk on MMIO serial port"
+	depends on IA64_EARLY_PRINTK
+
+config IA64_EARLY_PRINTK_UART_BASE
+	hex "UART MMIO base address"
+	depends on IA64_EARLY_PRINTK_UART
+	default "ff5e0000"
+
+config IA64_EARLY_PRINTK_VGA
+	bool "Early printk on VGA"
+	depends on IA64_EARLY_PRINTK
+
+config IA64_EARLY_PRINTK_SGI_SN
+	bool "Early printk on SGI SN serial console"
+	depends on IA64_EARLY_PRINTK && (IA64_GENERIC || IA64_SGI_SN2)
 
 config DEBUG_SLAB
 	bool "Debug memory allocations"
diff -Nru a/arch/ia64/kernel/ia64_ksyms.c b/arch/ia64/kernel/ia64_ksyms.c
--- a/arch/ia64/kernel/ia64_ksyms.c	Sat Oct 18 00:38:30 2003
+++ b/arch/ia64/kernel/ia64_ksyms.c	Sat Oct 18 00:38:30 2003
@@ -34,13 +34,8 @@
 #include <linux/interrupt.h>
 EXPORT_SYMBOL(probe_irq_mask);
 
-#include <linux/in6.h>
 #include <asm/checksum.h>
-/* not coded yet?? EXPORT_SYMBOL(csum_ipv6_magic); */
-EXPORT_SYMBOL(csum_partial_copy_nocheck);
-EXPORT_SYMBOL(csum_tcpudp_magic);
-EXPORT_SYMBOL(ip_compute_csum);
-EXPORT_SYMBOL(ip_fast_csum);
+EXPORT_SYMBOL(ip_fast_csum);		/* hand-coded assembly */
 
 #include <asm/io.h>
 EXPORT_SYMBOL(__ia64_memcpy_fromio);
@@ -58,9 +53,11 @@
 EXPORT_SYMBOL(clear_page);
 
 #ifdef CONFIG_VIRTUAL_MEM_MAP
+#include <linux/bootmem.h>
 #include <asm/pgtable.h>
 EXPORT_SYMBOL(vmalloc_end);
 EXPORT_SYMBOL(ia64_pfn_valid);
+EXPORT_SYMBOL(max_low_pfn);	/* defined by bootmem.c, but not exported by generic code */
 #endif
 
 #include <asm/processor.h>
diff -Nru a/arch/ia64/lib/checksum.c b/arch/ia64/lib/checksum.c
--- a/arch/ia64/lib/checksum.c	Sat Oct 18 00:38:31 2003
+++ b/arch/ia64/lib/checksum.c	Sat Oct 18 00:38:31 2003
@@ -1,8 +1,8 @@
 /*
  * Network checksum routines
  *
- * Copyright (C) 1999 Hewlett-Packard Co
- * Copyright (C) 1999 Stephane Eranian <eranian@hpl.hp.com>
+ * Copyright (C) 1999, 2003 Hewlett-Packard Co
+ *	Stephane Eranian <eranian@hpl.hp.com>
  *
  * Most of the code coming from arch/alpha/lib/checksum.c
  *
@@ -10,6 +10,7 @@
  * in an architecture-specific manner due to speed..
  */
 
+#include <linux/module.h>
 #include <linux/string.h>
 
 #include <asm/byteorder.h>
@@ -40,6 +41,8 @@
 			   ((unsigned long) proto << 8));
 }
 
+EXPORT_SYMBOL(csum_tcpudp_magic);
+
 unsigned int
 csum_tcpudp_nofold (unsigned long saddr, unsigned long daddr, unsigned short len,
 		    unsigned short proto, unsigned int sum)
@@ -84,6 +87,7 @@
 	return result;
 }
 
+EXPORT_SYMBOL(csum_partial);
 
 /*
  * this routine is used for miscellaneous IP-like checksums, mainly
@@ -94,3 +98,5 @@
 {
 	return ~do_csum(buff,len);
 }
+
+EXPORT_SYMBOL(ip_compute_csum);
diff -Nru a/arch/ia64/lib/csum_partial_copy.c b/arch/ia64/lib/csum_partial_copy.c
--- a/arch/ia64/lib/csum_partial_copy.c	Sat Oct 18 00:38:30 2003
+++ b/arch/ia64/lib/csum_partial_copy.c	Sat Oct 18 00:38:30 2003
@@ -1,12 +1,13 @@
 /*
  * Network Checksum & Copy routine
  *
- * Copyright (C) 1999 Hewlett-Packard Co
- * Copyright (C) 1999 Stephane Eranian <eranian@hpl.hp.com>
+ * Copyright (C) 1999, 2003 Hewlett-Packard Co
+ *	Stephane Eranian <eranian@hpl.hp.com>
  *
  * Most of the code has been imported from Linux/Alpha
  */
 
+#include <linux/module.h>
 #include <linux/types.h>
 #include <linux/string.h>
 
@@ -146,3 +147,4 @@
 	return do_csum_partial_copy_from_user(src, dst, len, sum, NULL);
 }
 
+EXPORT_SYMBOL(csum_partial_copy_nocheck);
diff -Nru a/arch/ia64/mm/init.c b/arch/ia64/mm/init.c
--- a/arch/ia64/mm/init.c	Sat Oct 18 00:38:30 2003
+++ b/arch/ia64/mm/init.c	Sat Oct 18 00:38:30 2003
@@ -13,6 +13,7 @@
 #include <linux/elf.h>
 #include <linux/mm.h>
 #include <linux/mmzone.h>
+#include <linux/module.h>
 #include <linux/personality.h>
 #include <linux/reboot.h>
 #include <linux/slab.h>
@@ -42,6 +43,8 @@
 #ifdef CONFIG_VIRTUAL_MEM_MAP
   unsigned long vmalloc_end = VMALLOC_END_INIT;
   struct page *vmem_map;
+
+  EXPORT_SYMBOL(vmem_map);
 #endif
 
 static int pgt_cache_water[2] = { 25, 50 };
diff -Nru a/arch/ia64/mm/numa.c b/arch/ia64/mm/numa.c
--- a/arch/ia64/mm/numa.c	Sat Oct 18 00:38:30 2003
+++ b/arch/ia64/mm/numa.c	Sat Oct 18 00:38:30 2003
@@ -11,12 +11,19 @@
  */
 
 #include <linux/config.h>
+#include <linux/cpu.h>
 #include <linux/kernel.h>
+#include <linux/memblk.h>
 #include <linux/mm.h>
+#include <linux/node.h>
 #include <linux/init.h>
 #include <linux/bootmem.h>
 #include <asm/numa.h>
 
+static struct memblk *sysfs_memblks;
+static struct node *sysfs_nodes;
+static struct cpu *sysfs_cpus;
+
 /*
  * The following structures are usually initialized by ACPI or
  * similar mechanisms and describe the NUMA characteristics of the machine.
@@ -43,3 +50,49 @@
 
 	return (i < num_memblks) ? node_memblk[i].nid : (num_memblks ? -1 : 0);
 }
+
+static int __init topology_init(void)
+{
+	int i, err = 0;
+
+	sysfs_nodes = kmalloc(sizeof(struct node) * numnodes, GFP_KERNEL);
+	if (!sysfs_nodes) {
+		err = -ENOMEM;
+		goto out;
+	}
+
+	sysfs_memblks = kmalloc(sizeof(struct memblk) * num_memblks,
+				GFP_KERNEL);
+	if (!sysfs_memblks) {
+		kfree(sysfs_nodes);
+		err = -ENOMEM;
+		goto out;
+	}
+
+	sysfs_cpus = kmalloc(sizeof(struct cpu) * NR_CPUS, GFP_KERNEL);
+	if (!sysfs_cpus) {
+		kfree(sysfs_memblks);
+		kfree(sysfs_nodes);
+		err = -ENOMEM;
+		goto out;
+	}
+
+	for (i = 0; i < numnodes; i++)
+		if ((err = register_node(&sysfs_nodes[i], i, 0)))
+			goto out;
+
+	for (i = 0; i < num_memblks; i++)
+		if ((err = register_memblk(&sysfs_memblks[i], i,
+					   &sysfs_nodes[memblk_to_node(i)])))
+			goto out;
+
+	for (i = 0; i < NR_CPUS; i++)
+		if (cpu_online(i))
+			if((err = register_cpu(&sysfs_cpus[i], i,
+					       &sysfs_nodes[cpu_to_node(i)])))
+				goto out;
+ out:
+	return err;
+}
+
+__initcall(topology_init);
diff -Nru a/drivers/acpi/tables.c b/drivers/acpi/tables.c
--- a/drivers/acpi/tables.c	Thu Oct 16 00:38:51 2003
+++ b/drivers/acpi/tables.c	Thu Oct 16 00:38:51 2003
@@ -262,10 +262,17 @@
 
 	/* Map the DSDT header via the pointer in the FADT */
 	if (id == ACPI_DSDT) {
-		struct acpi_table_fadt *fadt = (struct acpi_table_fadt *) *header;
+		struct fadt_descriptor_rev2 *fadt = (struct fadt_descriptor_rev2 *) *header;
+
+		if (fadt->revision == 3 && fadt->Xdsdt) {
+			*header = (void *) __acpi_map_table(fadt->Xdsdt,
+					sizeof(struct acpi_table_header));
+		} else if (fadt->V1_dsdt) {
+			*header = (void *) __acpi_map_table(fadt->V1_dsdt,
+					sizeof(struct acpi_table_header));
+		} else
+			*header = 0;
 
-		*header = (void *) __acpi_map_table(fadt->dsdt_addr,
-				sizeof(struct acpi_table_header));
 		if (!*header) {
 			printk(KERN_WARNING PREFIX "Unable to map DSDT\n");
 			return -ENODEV;
diff -Nru a/drivers/media/radio/Makefile b/drivers/media/radio/Makefile
--- a/drivers/media/radio/Makefile	Thu Oct 16 00:38:51 2003
+++ b/drivers/media/radio/Makefile	Thu Oct 16 00:38:51 2003
@@ -2,6 +2,8 @@
 # Makefile for the kernel character device drivers.
 #
 
+obj-y		:= dummy.o
+
 miropcm20-objs	:= miropcm20-rds-core.o miropcm20-radio.o
 
 obj-$(CONFIG_RADIO_AZTECH) += radio-aztech.o
diff -Nru a/drivers/media/radio/dummy.c b/drivers/media/radio/dummy.c
--- /dev/null	Wed Dec 31 16:00:00 1969
+++ b/drivers/media/radio/dummy.c	Thu Oct 16 00:38:51 2003
@@ -0,0 +1 @@
+/* just so the linker knows what kind of object files it's deadling with... */
diff -Nru a/drivers/media/video/Makefile b/drivers/media/video/Makefile
--- a/drivers/media/video/Makefile	Thu Oct 16 00:38:51 2003
+++ b/drivers/media/video/Makefile	Thu Oct 16 00:38:51 2003
@@ -7,6 +7,7 @@
 zoran-objs      :=	zr36120.o zr36120_i2c.o zr36120_mem.o
 zr36067-objs	:=	zoran_procfs.o zoran_device.o \
 			zoran_driver.o zoran_card.o
+obj-y		:=	dummy.o
 
 obj-$(CONFIG_VIDEO_DEV) += videodev.o v4l2-common.o v4l1-compat.o
 
diff -Nru a/drivers/media/video/dummy.c b/drivers/media/video/dummy.c
--- /dev/null	Wed Dec 31 16:00:00 1969
+++ b/drivers/media/video/dummy.c	Thu Oct 16 00:38:51 2003
@@ -0,0 +1 @@
+/* just so the linker knows what kind of object files it's deadling with... */
diff -Nru a/drivers/net/tulip/media.c b/drivers/net/tulip/media.c
--- a/drivers/net/tulip/media.c	Thu Oct 16 00:38:51 2003
+++ b/drivers/net/tulip/media.c	Thu Oct 16 00:38:51 2003
@@ -278,6 +278,10 @@
 				for (i = 0; i < init_length; i++)
 					outl(init_sequence[i], ioaddr + CSR12);
 			}
+
+			(void) inl(ioaddr + CSR6); /* flush CSR12 writes */
+			udelay(500);		/* Give MII time to recover */
+
 			tmp_info = get_u16(&misc_info[1]);
 			if (tmp_info)
 				tp->advertising[phy_num] = tmp_info | 1;
diff -Nru a/drivers/serial/8250.c b/drivers/serial/8250.c
--- a/drivers/serial/8250.c	Sat Oct 18 00:38:30 2003
+++ b/drivers/serial/8250.c	Sat Oct 18 00:38:30 2003
@@ -2086,6 +2086,9 @@
 
 int __init early_serial_setup(struct uart_port *port)
 {
+	if (port->line >= ARRAY_SIZE(serial8250_ports))
+		return -ENODEV;
+
 	serial8250_isa_init_ports();
 	serial8250_ports[port->line].port	= *port;
 	serial8250_ports[port->line].port.ops	= &serial8250_pops;
diff -Nru a/drivers/serial/serial_core.c b/drivers/serial/serial_core.c
--- a/drivers/serial/serial_core.c	Sat Oct 18 00:38:30 2003
+++ b/drivers/serial/serial_core.c	Sat Oct 18 00:38:30 2003
@@ -1859,6 +1859,9 @@
 	if (flow == 'r')
 		termios.c_cflag |= CRTSCTS;
 
+	if (!port->ops)
+		return 0;
+
 	port->ops->set_termios(port, &termios, NULL);
 	co->cflag = termios.c_cflag;
 
diff -Nru a/include/linux/module.h b/include/linux/module.h
--- a/include/linux/module.h	Thu Oct 16 00:38:51 2003
+++ b/include/linux/module.h	Thu Oct 16 00:38:51 2003
@@ -60,10 +60,11 @@
 #define __module_cat(a,b) ___module_cat(a,b)
 #define __MODULE_INFO(tag, name, info)					  \
 static const char __module_cat(name,__LINE__)[]				  \
+  __attribute_used__							  \
   __attribute__((section(".modinfo"),unused)) = __stringify(tag) "=" info
 
-#define MODULE_GENERIC_TABLE(gtype,name)			\
-extern const struct gtype##_id __mod_##gtype##_table		\
+#define MODULE_GENERIC_TABLE(gtype,name)		\
+extern const struct gtype##_id __mod_##gtype##_table	\
   __attribute__ ((unused, alias(__stringify(name))))
 
 #define THIS_MODULE (&__this_module)
@@ -142,6 +143,7 @@
 #define __CRC_SYMBOL(sym, sec)					\
 	extern void *__crc_##sym __attribute__((weak));		\
 	static const unsigned long __kcrctab_##sym		\
+	__attribute_used__					\
 	__attribute__((section("__kcrctab" sec), unused))	\
 	= (unsigned long) &__crc_##sym;
 #else
@@ -155,6 +157,7 @@
 	__attribute__((section("__ksymtab_strings")))		\
 	= MODULE_SYMBOL_PREFIX #sym;                    	\
 	static const struct kernel_symbol __ksymtab_##sym	\
+	__attribute_used__					\
 	__attribute__((section("__ksymtab" sec), unused))	\
 	= { (unsigned long)&sym, __kstrtab_##sym }
 
diff -Nru a/include/linux/moduleparam.h b/include/linux/moduleparam.h
--- a/include/linux/moduleparam.h	Thu Oct 16 00:38:51 2003
+++ b/include/linux/moduleparam.h	Thu Oct 16 00:38:51 2003
@@ -52,6 +52,7 @@
 #define __module_param_call(prefix, name, set, get, arg, perm)		\
 	static char __param_str_##name[] __initdata = prefix #name;	\
 	static struct kernel_param const __param_##name			\
+	__attribute_used__						\
     __attribute__ ((unused,__section__ ("__param"),aligned(sizeof(void *)))) \
 	= { __param_str_##name, perm, set, get, arg }
 
diff -Nru a/include/linux/nfs_fs.h b/include/linux/nfs_fs.h
--- a/include/linux/nfs_fs.h	Thu Oct 16 00:38:51 2003
+++ b/include/linux/nfs_fs.h	Thu Oct 16 00:38:51 2003
@@ -403,7 +403,7 @@
 nfs_size_to_loff_t(__u64 size)
 {
 	loff_t maxsz = (((loff_t) ULONG_MAX) << PAGE_CACHE_SHIFT) + PAGE_CACHE_SIZE - 1;
-	if (size > maxsz)
+	if (size > (__u64) maxsz)
 		return maxsz;
 	return (loff_t) size;
 }
diff -Nru a/include/linux/sysctl.h b/include/linux/sysctl.h
--- a/include/linux/sysctl.h	Thu Oct 16 00:38:51 2003
+++ b/include/linux/sysctl.h	Thu Oct 16 00:38:51 2003
@@ -127,6 +127,7 @@
 	KERN_PANIC_ON_OOPS=57,  /* int: whether we will panic on an oops */
 	KERN_HPPA_PWRSW=58,	/* int: hppa soft-power enable */
 	KERN_HPPA_UNALIGNED=59,	/* int: hppa unaligned-trap enable */
+	KERN_CACHEDECAYTICKS=60,/* ulong: value for cache_decay_ticks (EXPERIMENTAL!) */
 };
 
 
diff -Nru a/kernel/printk.c b/kernel/printk.c
--- a/kernel/printk.c	Thu Oct 16 00:38:51 2003
+++ b/kernel/printk.c	Thu Oct 16 00:38:51 2003
@@ -361,6 +361,12 @@
 			__call_console_drivers(start, end);
 		}
 	}
+#ifdef CONFIG_IA64_EARLY_PRINTK
+	if (!console_drivers) {
+		void early_printk (const char *str, size_t len);
+		early_printk(&LOG_BUF(start), end - start);
+	}
+#endif
 }
 
 /*
@@ -678,7 +684,11 @@
 		 * for us.
 		 */
 		spin_lock_irqsave(&logbuf_lock, flags);
+#ifdef CONFIG_IA64_EARLY_PRINTK
+		con_start = log_end;
+#else
 		con_start = log_start;
+#endif
 		spin_unlock_irqrestore(&logbuf_lock, flags);
 	}
 	release_console_sem();
@@ -731,3 +741,117 @@
 		tty->driver->write(tty, 0, msg, strlen(msg));
 	return;
 }
+
+#ifdef CONFIG_IA64_EARLY_PRINTK
+
+#include <asm/io.h>
+
+# ifdef CONFIG_IA64_EARLY_PRINTK_VGA
+
+
+#define VGABASE		((char *)0xc0000000000b8000)
+#define VGALINES	24
+#define VGACOLS		80
+
+static int current_ypos = VGALINES, current_xpos = 0;
+
+static void
+early_printk_vga (const char *str, size_t len)
+{
+	char c;
+	int  i, k, j;
+
+	while (len-- > 0) {
+		c = *str++;
+		if (current_ypos >= VGALINES) {
+			/* scroll 1 line up */
+			for (k = 1, j = 0; k < VGALINES; k++, j++) {
+				for (i = 0; i < VGACOLS; i++) {
+					writew(readw(VGABASE + 2*(VGACOLS*k + i)),
+					       VGABASE + 2*(VGACOLS*j + i));
+				}
+			}
+			for (i = 0; i < VGACOLS; i++) {
+				writew(0x720, VGABASE + 2*(VGACOLS*j + i));
+			}
+			current_ypos = VGALINES-1;
+		}
+		if (c == '\n') {
+			current_xpos = 0;
+			current_ypos++;
+		} else if (c != '\r')  {
+			writew(((0x7 << 8) | (unsigned short) c),
+			       VGABASE + 2*(VGACOLS*current_ypos + current_xpos++));
+			if (current_xpos >= VGACOLS) {
+				current_xpos = 0;
+				current_ypos++;
+			}
+		}
+	}
+}
+
+# endif /* CONFIG_IA64_EARLY_PRINTK_VGA */
+
+# ifdef CONFIG_IA64_EARLY_PRINTK_UART
+
+#include <linux/serial_reg.h>
+#include <asm/system.h>
+
+static void early_printk_uart(const char *str, size_t len)
+{
+	static char *uart = NULL;
+	unsigned long uart_base;
+	char c;
+
+	if (!uart) {
+		uart_base = 0;
+#  ifdef CONFIG_SERIAL_8250_HCDP
+		{
+			extern unsigned long hcdp_early_uart(void);
+			uart_base = hcdp_early_uart();
+		}
+#  endif
+#  if CONFIG_IA64_EARLY_PRINTK_UART_BASE
+		if (!uart_base)
+			uart_base = CONFIG_IA64_EARLY_PRINTK_UART_BASE;
+#  endif
+		if (!uart_base)
+			return;
+
+		uart = ioremap(uart_base, 64);
+		if (!uart)
+			return;
+	}
+
+	while (len-- > 0) {
+		c = *str++;
+		while ((readb(uart + UART_LSR) & UART_LSR_TEMT) == 0)
+			cpu_relax(); /* spin */
+
+		writeb(c, uart + UART_TX);
+
+		if (c == '\n')
+			writeb('\r', uart + UART_TX);
+	}
+}
+
+# endif /* CONFIG_IA64_EARLY_PRINTK_UART */
+
+#ifdef CONFIG_IA64_EARLY_PRINTK_SGI_SN
+extern int early_printk_sn_sal(const char *str, int len);
+#endif
+
+void early_printk(const char *str, size_t len)
+{
+#ifdef CONFIG_IA64_EARLY_PRINTK_UART
+	early_printk_uart(str, len);
+#endif
+#ifdef CONFIG_IA64_EARLY_PRINTK_VGA
+	early_printk_vga(str, len);
+#endif
+#ifdef CONFIG_IA64_EARLY_PRINTK_SGI_SN
+ 	early_printk_sn_sal(str, len);
+#endif
+}
+
+#endif /* CONFIG_IA64_EARLY_PRINTK */
diff -Nru a/kernel/sysctl.c b/kernel/sysctl.c
--- a/kernel/sysctl.c	Thu Oct 16 00:38:51 2003
+++ b/kernel/sysctl.c	Thu Oct 16 00:38:51 2003
@@ -579,6 +579,16 @@
 		.mode		= 0644,
 		.proc_handler	= &proc_dointvec,
 	},
+#ifdef CONFIG_SMP
+	{
+		.ctl_name	= KERN_CACHEDECAYTICKS,
+		.procname	= "cache_decay_ticks",
+		.data		= &cache_decay_ticks,
+		.maxlen		= sizeof(cache_decay_ticks),
+		.mode		= 0644,
+		.proc_handler	= &proc_doulongvec_minmax,
+	},
+#endif
 	{ .ctl_name = 0 }
 };
 
diff -Nru a/mm/memory.c b/mm/memory.c
--- a/mm/memory.c	Thu Oct 16 00:38:51 2003
+++ b/mm/memory.c	Thu Oct 16 00:38:51 2003
@@ -121,8 +121,10 @@
 	}
 	pmd = pmd_offset(dir, 0);
 	pgd_clear(dir);
-	for (j = 0; j < PTRS_PER_PMD ; j++)
+	for (j = 0; j < PTRS_PER_PMD ; j++) {
+		prefetchw(pmd + j + PREFETCH_STRIDE/sizeof(*pmd));
 		free_one_pmd(tlb, pmd+j);
+	}
 	pmd_free_tlb(tlb, pmd);
 }
 
