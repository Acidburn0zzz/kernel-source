From: Christian Borntraeger <cborntra@de.ibm.com>
Subject: s390: fix qdio alignment problem with CONFIG_DEBUG_SLAB
References: 146136, LTC21180

The qib structure must be aligned to 256 Bytes AND is enmbedded into the 
qeth_irq structure. The alignment cannot be guaranteed with slab debugging.
If you force the qeth_irq structure to a page boundary qeth works for me with 
CONFIG_DEBUG_SLAB.

Acked-by: Jan Blunck <jblunck@suse.de>
---
 drivers/s390/cio/qdio.c |    7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

Index: linux-2.6.16/drivers/s390/cio/qdio.c
===================================================================
--- linux-2.6.16.orig/drivers/s390/cio/qdio.c
+++ linux-2.6.16/drivers/s390/cio/qdio.c
@@ -1637,7 +1637,7 @@ next:
 
 	}
 	kfree(irq_ptr->qdr);
-	kfree(irq_ptr);
+	free_page((unsigned long) irq_ptr);
 }
 
 static void
@@ -2984,7 +2984,7 @@ qdio_allocate(struct qdio_initialize *in
 	qdio_allocate_do_dbf(init_data);
 
 	/* create irq */
-	irq_ptr=kmalloc(sizeof(struct qdio_irq), GFP_KERNEL | GFP_DMA);
+	irq_ptr=(void *) get_zeroed_page(GFP_KERNEL | GFP_DMA);
 
 	QDIO_DBF_TEXT0(0,setup,"irq_ptr:");
 	QDIO_DBF_HEX0(0,setup,&irq_ptr,sizeof(void*));
@@ -2994,14 +2994,13 @@ qdio_allocate(struct qdio_initialize *in
 		return -ENOMEM;
 	}
 
-	memset(irq_ptr,0,sizeof(struct qdio_irq));
 
 	init_MUTEX(&irq_ptr->setting_up_sema);
 
 	/* QDR must be in DMA area since CCW data address is only 32 bit */
 	irq_ptr->qdr=kmalloc(sizeof(struct qdr), GFP_KERNEL | GFP_DMA);
   	if (!(irq_ptr->qdr)) {
-   		kfree(irq_ptr);
+   		free_page((unsigned long) irq_ptr);
     		QDIO_PRINT_ERR("kmalloc of irq_ptr->qdr failed!\n");
 		return -ENOMEM;
        	}
