ChangeSet
  1.1320.684.32 04/03/29 07:40:16 benh@kernel.crashing.org[torvalds] +1 -0
  [PATCH] ppc64: syscall error test incorrect for 64 bits results
  
  The syscall return path on ppc64 checks if the error is between
  -LAST_ERRNO and 0, if it is, does the usual inversion along with
  setting a CR bit indicating to glibc that an error occured.
  
  However, we had an interesting bug where we used a 32 bits logica
  (unsigned) comparison, thus possibly doing false positives for
  valid 64 bits unsigned values whose low 32 bits happen to be in
  the error range.
  
  Fix that.

  arch/ppc64/kernel/entry.S
    1.27.1.6 04/03/26 09:56:07 benh@kernel.crashing.org[torvalds] +1 -1
    ppc64: syscall error test incorrect for 64 bits results

diff -Nru a/arch/ppc64/kernel/entry.S b/arch/ppc64/kernel/entry.S
--- a/arch/ppc64/kernel/entry.S	Tue Mar 30 06:56:54 2004
+++ b/arch/ppc64/kernel/entry.S	Tue Mar 30 06:56:54 2004
@@ -139,7 +139,7 @@
 91:
 #endif
 	li	r10,-_LAST_ERRNO
-	cmpl	0,r3,r10
+	cmpld	0,r3,r10
 	blt	30f
 	neg	r3,r3
 22:	ld	r10,_CCR(r1)	/* Set SO bit in CR */
.........................................................................
# vim: syntax=diff

