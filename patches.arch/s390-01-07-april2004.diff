- Description: Kernel: Race condition with kernel preemption.
  Symptom:     If the configuration option CONFIG_PREEMPT is used the
               kernel can crash. This happens in particular under heavy
               network load.
  Problem:     The do_softirq function uses the asynchronous interrupt
               stack. The switch from the per process kernel stack to
               the asynchronous interrupt stack might be done while
               running enabled. If an asynchronous interrupts comes
               in and the kernel get preempted the information stored
               by do_softirq on the asynchronous interrupt stack gets
               lost. This results in a crash as soon as the preempted
               process is scheduled again.
  Solution:    Disable interrupts before switching to the asychronous
               interrupt stack.
  Problem-ID:  -
  Archs:       s390-31, s390-64

--- linux-2.5/arch/s390/kernel/entry.S	29 Mar 2004 09:24:49 -0000	1.50
+++ linux-2.5/arch/s390/kernel/entry.S	16 Apr 2004 16:12:01 -0000	1.50.2.1
@@ -198,7 +198,8 @@
  */
 	.global do_call_softirq
 do_call_softirq:
-	stm	%r12,%r15,24(%r15)
+	stnsm	24(%r15),0xfc
+	stm	%r12,%r15,28(%r15)
 	lr	%r12,%r15
         basr    %r13,0
 do_call_base:
@@ -211,7 +212,8 @@
         st	%r12,0(%r15)	# store backchain
 	l	%r1,.Ldo_softirq-do_call_base(%r13)
 	basr	%r14,%r1
-	lm	%r12,%r15,24(%r12)
+	lm	%r12,%r15,28(%r12)
+	ssm	24(%r15)
 	br	%r14
 	
 __critical_start:

--- linux-2.5/arch/s390/kernel/entry64.S	29 Mar 2004 09:24:49 -0000	1.22
+++ linux-2.5/arch/s390/kernel/entry64.S	16 Apr 2004 16:12:01 -0000	1.22.2.1
@@ -186,7 +186,8 @@
  */
 	.global do_call_softirq
 do_call_softirq:
-	stmg	%r12,%r15,48(%r15)
+	stnsm	48(%r15),0xfc
+	stmg	%r12,%r15,56(%r15)
 	lgr	%r12,%r15
 	lg	%r0,__LC_ASYNC_STACK
 	slgr    %r0,%r15
@@ -196,7 +197,8 @@
 0:	aghi	%r15,-STACK_FRAME_OVERHEAD
 	stg	%r12,0(%r15)		# store back chain
 	brasl	%r14,do_softirq
-	lmg	%r12,%r15,48(%r12)
+	lmg	%r12,%r15,56(%r12)
+	ssm	48(%r15)
 	br	%r14
 
 __critical_start:

