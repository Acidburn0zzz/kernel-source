From: Mike Kravetz <kravetz@us.ibm.com>
Subject: [PATCH] powerpc: Workaround for pSeries RTAS bug
X-Git-Commit: 9fe901d124871f5781b9c4ccbb7ff93fdff9d39e
Patch-mainline: yes

Bug 162384 - LTC21927-Unable to DLPAR add memory on sles10 beta4

A bug in the RTAS services incorrectly interprets some bits in the CR
when called from the OS.  Specifically, bits in CR4.  The result could
be a firmware crash that also takes down the partition.  A firmware
fix is in the works.  We have seen this situation when performing DLPAR
operations.  As a temporary workaround, clear the CR in enter_rtas().
Note that enter_rtas() will not set any bits in CR4 before calling RTAS.

Also note that the 32 bit version of enter_rtas() should have the same
work around even though the chances of hitting the bug are much smaller
due to the lack of DLPAR on 32 bit kernels.  However, my assembly skills
are a bit rusty and the 32 bit code doesn't seem to follow the conventions
for where things should be saved.  In addition, I don't have a system
to test 32 bit kernels.  Help creating and at least touch testing the
same workaround for 32 bit would be appreciated.

Signed-off-by: Mike Kravetz <kravetz@us.ibm.com>
Signed-off-by: Paul Mackerras <paulus@samba.org>
Signed-off-by: Olaf Hering <olh@suse.de>

 arch/powerpc/kernel/entry_64.S |    6 ++++++
 1 file changed, 6 insertions(+)

Index: linux-2.6.16/arch/powerpc/kernel/entry_64.S
===================================================================
--- linux-2.6.16.orig/arch/powerpc/kernel/entry_64.S
+++ linux-2.6.16/arch/powerpc/kernel/entry_64.S
@@ -619,6 +619,12 @@ _GLOBAL(enter_rtas)
 	mfsrr1	r10
 	std	r10,_SRR1(r1)
 
+	/* Temporary workaround to clear CR until RTAS can be modified to
+	 * ignore all bits.
+	 */
+	li	r0,0
+	mtcr	r0
+
 	/* There is no way it is acceptable to get here with interrupts enabled,
 	 * check it with the asm equivalent of WARN_ON
 	 */
