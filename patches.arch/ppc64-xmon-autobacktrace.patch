Subject: [PATCH] allow xmon=bt to print a backtrace by default                                                                                                       
From: Olaf Hering <olh@suse.de>                                                                                                                                      

xmon does not print a backtrace per default. This is bad on systems with 
USB keyboard, the most needed info about the crash is lost.
print a backtrace during the very first xmon entry.

Booting with xmon=nobt disables the autobacktrace functionality.

Signed-off-by: Olaf Hering <olh@suse.de>

 arch/ppc64/Kconfig.debug  |    2 ++
 arch/ppc64/kernel/setup.c |    4 ++++
 arch/ppc64/xmon/xmon.c    |    7 +++++++
 3 files changed, 13 insertions(+)

Index: linux-2.6.14/arch/powerpc/Kconfig.debug
===================================================================
--- linux-2.6.14.orig/arch/powerpc/Kconfig.debug	2005-12-01 13:13:43.473593926 +0100
+++ linux-2.6.14/arch/powerpc/Kconfig.debug	2005-12-01 13:34:15.956281242 +0100
@@ -74,6 +74,8 @@ config XMON
 	  very early during boot. 'xmon=on' will just enable the xmon
 	  debugger hooks.  'xmon=off' will disable the debugger hooks
 	  if CONFIG_XMON_DEFAULT is set.
+	  xmon will print a backtrace on the very first invocation.
+	  'xmon=nobt' will disable this autobacktrace.
 
 config XMON_DEFAULT
 	bool "Enable xmon by default"
Index: linux-2.6.14/arch/powerpc/kernel/setup-common.c
===================================================================
--- linux-2.6.14.orig/arch/powerpc/kernel/setup-common.c	2005-12-01 13:27:26.328669072 +0100
+++ linux-2.6.14/arch/powerpc/kernel/setup-common.c	2005-12-01 13:35:16.248225236 +0100
@@ -580,6 +580,8 @@ void __init smp_setup_cpu_maps(void)
 #endif /* CONFIG_SMP */
 
 #ifdef CONFIG_XMON
+extern int xmon_no_auto_backtrace;
+
 static int __init early_xmon(char *p)
 {
 	/* ensure xmon is enabled */
@@ -588,6 +590,8 @@ static int __init early_xmon(char *p)
 			xmon_init(1);
 		if (strncmp(p, "off", 3) == 0)
 			xmon_init(0);
+		if (strncmp(p, "nobt", 4) == 0)
+			xmon_no_auto_backtrace = 1;
 		if (strncmp(p, "early", 5) != 0)
 			return 0;
 	}
Index: linux-2.6.14/arch/powerpc/xmon/xmon.c
===================================================================
--- linux-2.6.14.orig/arch/powerpc/xmon/xmon.c	2005-12-01 13:13:43.993593259 +0100
+++ linux-2.6.14/arch/powerpc/xmon/xmon.c	2005-12-01 13:36:20.696165663 +0100
@@ -141,10 +141,14 @@ static void bootcmds(void);
 static void proccall(void);
 void dump_segments(void);
 static void symbol_lookup(void);
+static void xmon_show_stack(unsigned long sp, unsigned long lr,
+			    unsigned long pc);
 static void xmon_print_symbol(unsigned long address, const char *mid,
 			      const char *after);
 static const char *getvecname(unsigned long vec);
 
+int xmon_no_auto_backtrace;
+
 extern int print_insn_powerpc(unsigned long, unsigned long, int);
 
 extern void xmon_enter(void);
@@ -740,6 +744,10 @@ cmds(struct pt_regs *excp)
 
 	last_cmd = NULL;
 	xmon_regs = excp;
+
+	if (!xmon_no_auto_backtrace++)
+		xmon_show_stack(excp->gpr[1], excp->link, excp->nip);
+
 	for(;;) {
 #ifdef CONFIG_SMP
 		printf("%x:", smp_processor_id());
