commit 583aae1094d28aa1d58360318388c11d2ae7ed9c
tree c05810bf1cc055d67eb71c628cb464c3622348b4
parent 39a3d2d19cc8dc9d7ec3a1fefe95d7de0c6dc317
author Masakazu Mokuno <mokuno@sm.sony.co.jp> 1184920554 +0900
committer Jeff Garzik <jeff@garzik.org> 1185308920 -0400

    ps3: fix rare issue that reenabling rx DMA fails
    
    Fixed rare issue that 'lv1_net_start_rx_dma failed, status=-9" was shown
    in dmesg.  This meant restarting rx DMA had been rejected by the hypervisor.
    This issue would caused if the guest os requested starting DMA when
    the hypervisor thought the DMA was in progress.
    The state machine for DMA status of the hypervisor would be updated
    by processing interrupt in the hypervisor.
    Thus we should wait for the interrupt delivery before restarting
    DMA.
    
    Signed-off-by: Masakazu Mokuno <mokuno@sm.sony.co.jp>
    Signed-off-by: Jeff Garzik <jeff@garzik.org>

---
 drivers/net/gelic_net.c |    9 +++++++--
 drivers/net/gelic_net.h |    1 +
 2 files changed, 8 insertions(+), 2 deletions(-)

--- linux-2.6.22.orig/drivers/net/gelic_net.c
+++ linux-2.6.22/drivers/net/gelic_net.c
@@ -945,8 +945,8 @@ refill:
 	descr->prev->next_descr_addr = descr->bus_addr;
 
 	if (dmac_chain_ended) {
-		gelic_net_enable_rxdmac(card);
-		dev_dbg(ctodev(card), "reenable rx dma\n");
+		card->rx_dma_restart_required = 1;
+		dev_dbg(ctodev(card), "reenable rx dma scheduled\n");
 	}
 
 	return 1;
@@ -1022,6 +1022,11 @@ static irqreturn_t gelic_net_interrupt(i
 	if (!status)
 		return IRQ_NONE;
 
+	if (card->rx_dma_restart_required) {
+		card->rx_dma_restart_required = 0;
+		gelic_net_enable_rxdmac(card);
+	}
+
 	if (status & GELIC_NET_RXINT) {
 		gelic_net_rx_irq_off(card);
 		netif_rx_schedule(netdev);
--- linux-2.6.22.orig/drivers/net/gelic_net.h
+++ linux-2.6.22/drivers/net/gelic_net.h
@@ -217,6 +217,7 @@ struct gelic_net_card {
 
 	struct gelic_net_descr_chain tx_chain;
 	struct gelic_net_descr_chain rx_chain;
+	int rx_dma_restart_required;
 	/* gurad dmac descriptor chain*/
 	spinlock_t chain_lock;
 
