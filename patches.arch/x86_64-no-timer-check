From: ak@suse.de
Subject: i386/x86-64: Fix time going twice as fast problem on ATI Xpress chipsets
Suse-bugzilla: 113313

From Chuck Ebbert 
Original patch from Bertro Simul  

This is probably still not quite correct, but seems to be
the best solution so far.

Index: linux-2.6.13/arch/i386/kernel/acpi/earlyquirk.c
===================================================================
--- linux-2.6.13.orig/arch/i386/kernel/acpi/earlyquirk.c
+++ linux-2.6.13/arch/i386/kernel/acpi/earlyquirk.c
@@ -7,6 +7,7 @@
 #include <linux/pci.h>
 #include <asm/pci-direct.h>
 #include <asm/acpi.h>
+#include <asm/apic.h>
 
 static int __init check_bridge(int vendor, int device) 
 {
@@ -15,6 +16,13 @@ static int __init check_bridge(int vendo
 	if (vendor == PCI_VENDOR_ID_NVIDIA) { 
 		acpi_skip_timer_override = 1; 		
 	}
+	/*
+	 * ATI IXP chipsets get double timer interrupts.
+	 * For now just do this for all ATI chipsets.
+ 	 * FIXME: this needs to be checked for the non ACPI case too.
+	 */
+	if (vendor == PCI_VENDOR_ID_ATI)
+		disable_timer_pin_1 = 1;
 	return 0;
 }
    
Index: linux-2.6.13/arch/i386/kernel/setup.c
===================================================================
--- linux-2.6.13.orig/arch/i386/kernel/setup.c
+++ linux-2.6.13/arch/i386/kernel/setup.c
@@ -846,6 +846,11 @@ static void __init parse_cmdline_early (
 #endif
 
 #ifdef CONFIG_X86_LOCAL_APIC
+		if (!memcmp(from, "disable_timer_pin_1", 19))
+			disable_timer_pin_1 = 1;
+		if (!memcmp(from, "enable_timer_pin_1", 18))
+			disable_timer_pin_1 = -1;
+
 		/* disable IO-APIC */
 		else if (!memcmp(from, "noapic", 6))
 			disable_ioapic_setup();
Index: linux-2.6.13/arch/i386/kernel/io_apic.c
===================================================================
--- linux-2.6.13.orig/arch/i386/kernel/io_apic.c
+++ linux-2.6.13/arch/i386/kernel/io_apic.c
@@ -62,6 +62,8 @@ int sis_apic_bug = -1;
  */
 int nr_ioapic_registers[MAX_IO_APICS];
 
+int disable_timer_pin_1 __initdata;
+
 /*
  * Rough estimation of how many shared IRQs there are, can
  * be changed anytime.
@@ -2217,6 +2219,8 @@ static inline void check_timer(void)
 				setup_nmi();
 				enable_8259A_irq(0);
 			}
+			if (disable_timer_pin_1 > 0)
+				clear_IO_APIC_pin(0, pin1);
 			return;
 		}
 		clear_IO_APIC_pin(0, pin1);
Index: linux-2.6.13/arch/x86_64/kernel/io_apic.c
===================================================================
--- linux-2.6.13.orig/arch/x86_64/kernel/io_apic.c
+++ linux-2.6.13/arch/x86_64/kernel/io_apic.c
@@ -45,6 +45,8 @@ int sis_apic_bug; /* not actually suppor
 
 static int no_timer_check;
 
+int disable_timer_pin_1 __initdata;
+
 static DEFINE_SPINLOCK(ioapic_lock);
 
 /*
@@ -270,6 +272,15 @@ void __init check_ioapic(void) 
 #endif
 					/* RED-PEN skip them on mptables too? */
 					return;
+				case PCI_VENDOR_ID_ATI:
+					/* All timer interrupts on atiixp
+				           are doubled. Disable one. */
+					if (disable_timer_pin_1 == 0) {
+						disable_timer_pin_1 = 1;
+						printk(KERN_INFO
+		"ATI board detected. Disabling timer pin 1.\n");
+					}
+					return;
 				} 
 
 				/* No multi-function device? */
@@ -1642,6 +1653,8 @@ static inline void check_timer(void)
 				setup_nmi();
 				enable_8259A_irq(0);
 			}
+			if (disable_timer_pin_1 > 0)
+				clear_IO_APIC_pin(0, pin1);
 			return;
 		}
 		clear_IO_APIC_pin(0, pin1);
Index: linux-2.6.13/arch/x86_64/kernel/setup.c
===================================================================
--- linux-2.6.13.orig/arch/x86_64/kernel/setup.c
+++ linux-2.6.13/arch/x86_64/kernel/setup.c
@@ -336,6 +336,11 @@ static __init void parse_cmdline_early (
 #endif
 #endif
 
+		if (!memcmp(from, "disable_timer_pin_1", 19))
+			disable_timer_pin_1 = 1;
+		if (!memcmp(from, "enable_timer_pin_1", 18))
+			disable_timer_pin_1 = -1;
+
 		if (!memcmp(from, "nolapic", 7) ||
 		    !memcmp(from, "disableapic", 11))
 			disable_apic = 1;
Index: linux-2.6.13/include/asm-i386/apic.h
===================================================================
--- linux-2.6.13.orig/include/asm-i386/apic.h
+++ linux-2.6.13/include/asm-i386/apic.h
@@ -130,6 +130,8 @@ extern unsigned int nmi_watchdog;
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern int disable_timer_pin_1;
+
 #else /* !CONFIG_X86_LOCAL_APIC */
 static inline void lapic_shutdown(void) { }
 
Index: linux-2.6.13/include/asm-x86_64/apic.h
===================================================================
--- linux-2.6.13.orig/include/asm-x86_64/apic.h
+++ linux-2.6.13/include/asm-x86_64/apic.h
@@ -109,6 +109,8 @@ extern unsigned int nmi_watchdog;
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern int disable_timer_pin_1;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 #define esr_disable 0
Index: linux-2.6.13/Documentation/kernel-parameters.txt
===================================================================
--- linux-2.6.13.orig/Documentation/kernel-parameters.txt
+++ linux-2.6.13/Documentation/kernel-parameters.txt
@@ -164,6 +164,15 @@ running once the system is up.
 			over-ride platform specific driver.
 			See also Documentation/acpi-hotkey.txt.
 
+	enable_timer_pin_1 [i386,x86-64]
+			Enable PIN 1 of APIC timer
+			Can be useful to work around chipset bugs (in particular on some ATI chipsets)
+			The kernel tries to set a reasonable default.
+
+	disable_timer_pin_1 [i386,x86-64]
+			Disable PIN 1 of APIC timer
+			Can be useful to work around chipset bugs.
+
 	ad1816=		[HW,OSS]
 			Format: <io>,<irq>,<dma>,<dma2>
 			See also Documentation/sound/oss/AD1816.
