Date: Fri, 30 Apr 2004 15:44:09 +1000
From: David Gibson <david@gibson.dropbear.id.au>
To: Olaf Hering <olh@suse.de>
Cc: Michael Ranweiler <mranweil@us.ibm.com>,
	Olof Johansson <olof@austin.ibm.com>,
	Wir heissen hier alle Olaf <olaf@suse.de>,
	Anton Blanchard <anton@samba.org>,
	"Martin J. Bligh" <mbligh@aracnet.com>

On Thu, Apr 29, 2004 at 09:15:47AM +0200, Olaf Hering wrote:
>  On Thu, Apr 29, David Gibson wrote:
> 
> > On Tue, Apr 27, 2004 at 08:30:31AM +0200, Olaf Hering wrote:
> > >  On Tue, Apr 27, David Gibson wrote:
> > > 
> > > > >     patches.fixes/hugetlb-06_sles-map-hugetlb-flag
> > > > >     patches.fixes/hugetlb-07_sles-hugetlb-implicit
> > > 
> > > > Ouch.  That's really, really weird.  I don't suppose we know which
> > > > specific patch is causing the problem?
> > > 
> > > probably one of the two above. They change too much, so it is not
> > > obvious to me.
> > 
> > Ok - there seems to be some indication that the 32-bit dynamic address
> > space patch went out with these other ones (bugzilla #7941).  I
> > believe Adam Litke has now narrowed down the i386 problem to the
> > map-hugetlb-flag patch, so can dynamic address space go back in please?
> 
> Can you send the patches? 7941 is not yet mirrored.

I believe Adam Litke has sent you the stack of outstanding hugetlb
patches (COW, MAP_HUGETLB, implicit).  However, #7941 turned out not
to be hugepage related after all.  Instead it is a problem in the
syscall translation layer.  Here is the patch for it (already in
ameslab and send to Linus/akpm):

The 32->64 bit syscall translation layer on ppc64 incorrectly
sign-extends rather than zero-extending the second parameter to
shmget(), which should be a size_t.  This means that it is impossible
to shmget() more 2GB or more from a 32-bit process.

Index: working-2.6/arch/ppc64/kernel/sys_ppc32.c
===================================================================
--- working-2.6.orig/arch/ppc64/kernel/sys_ppc32.c	2004-03-31 11:10:09.000000000 +1000
+++ working-2.6/arch/ppc64/kernel/sys_ppc32.c	2004-04-30 15:18:51.421878128 +1000
@@ -1666,7 +1666,7 @@
 		err = sys_shmdt((char *)AA(ptr));
 		break;
 	case SHMGET:
-		err = sys_shmget(first, second, third);
+		err = sys_shmget(first, second_parm, third);
 		break;
 	case SHMCTL:
 		err = do_sys32_shmctl(first, second, (void *)AA(ptr));


-- 
David Gibson			| For every complex problem there is a
david AT gibson.dropbear.id.au	| solution which is simple, neat and
				| wrong.
http://www.ozlabs.org/people/dgibson

