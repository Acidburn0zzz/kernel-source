Return-Path: <benh@kernel.crashing.org>
X-Original-To: olh@wotan.suse.de
Received: from hermes.suse.de (hermes.suse.de [149.44.160.1])
	by wotan.suse.de (Postfix) with ESMTP id A10FD2DCBE7
	for <olh@wotan.suse.de>; Mon, 23 May 2005 05:01:55 +0200 (CEST)
Received: by hermes.suse.de (Postfix)
	id 9C26E16C525; Mon, 23 May 2005 05:01:55 +0200 (CEST)
Received: from scanhost.suse.de (scanhost.suse.de [149.44.160.36])
	by hermes.suse.de (Postfix) with ESMTP id 95B8616C520
	for <olh@suse.de>; Mon, 23 May 2005 05:01:55 +0200 (CEST)
Received: from hermes.suse.de ([149.44.160.1])
 by scanhost.suse.de (scanhost [149.44.160.36]) (amavisd-new, port 10025)
 with ESMTP id 12889-01 for <olh@suse.de>;
 Mon, 23 May 2005 05:01:54 +0200 (CEST)
Received: from mx2.suse.de (cantor2.suse.de [195.135.220.15])
	(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))
	(No client certificate requested)
	by hermes.suse.de (Postfix) with ESMTP id D4D8C16C4F3
	for <olh@suse.de>; Mon, 23 May 2005 05:01:53 +0200 (CEST)
Received: from gate.crashing.org (gate.crashing.org [63.228.1.57])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx2.suse.de (Postfix) with ESMTP id 584BF10ED8
	for <olh@suse.de>; Mon, 23 May 2005 05:01:53 +0200 (CEST)
Received: from gaston (localhost [127.0.0.1])
	by gate.crashing.org (8.12.8/8.12.8) with ESMTP id j4N2sRZn010873;
	Sun, 22 May 2005 21:54:29 -0500
Subject: Fix HW clock sync on G5s
From: Benjamin Herrenschmidt <benh@kernel.crashing.org>
To: Owen Stampflee <ostampflee@terrasoftsolutions.com>,
	Olaf Hering <olh@suse.de>
Cc: linuxppc64-dev <linuxppc64-dev@ozlabs.org>
Content-Type: text/plain
Date: Mon, 23 May 2005 12:59:50 +1000
Message-Id: <1116817190.20084.30.camel@gaston>
Mime-Version: 1.0
X-Mailer: Evolution 2.2.2 
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: by amavisd-new at scanhost.suse.de
X-Spam-Status: No, hits=-1.0 tagged_above=-20.0 required=5.0 tests=BAYES_50,
 MY_LINUX
X-Spam-Level: 

Hi Owen, Olaf !

I got it wrong when I told you the patch for fixing that was already
upstream. It is not, it's in a local tree though. Here it is, please let
me know if it helps.

Signed-off-by: Olaf Hering <olh@suse.de>
Index: linux-2.6.11.4-20a/arch/ppc64/kernel/pmac_smp.c
===================================================================
--- linux-2.6.11.4-20a.orig/arch/ppc64/kernel/pmac_smp.c
+++ linux-2.6.11.4-20a/arch/ppc64/kernel/pmac_smp.c
@@ -68,6 +68,7 @@ extern struct smp_ops_t *smp_ops;
 
 static void (*pmac_tb_freeze)(int freeze);
 static struct device_node *pmac_tb_clock_chip_host;
+static u8 pmac_tb_pulsar_addr;
 static DEFINE_SPINLOCK(timebase_lock);
 static unsigned long timebase;
 
@@ -106,12 +107,9 @@ static void smp_core99_pulsar_tb_freeze(
 	u8 data;
 	int rc;
 
-	/* Strangely, the device-tree says address is 0xd2, but darwin
-	 * accesses 0xd0 ...
-	 */
 	pmac_low_i2c_setmode(pmac_tb_clock_chip_host, pmac_low_i2c_mode_combined);
 	rc = pmac_low_i2c_xfer(pmac_tb_clock_chip_host,
-			       0xd4 | pmac_low_i2c_read,
+			       pmac_tb_pulsar_addr | pmac_low_i2c_read,
 			       0x2e, &data, 1);
 	if (rc != 0)
 		goto bail;
@@ -120,7 +118,7 @@ static void smp_core99_pulsar_tb_freeze(
 
 	pmac_low_i2c_setmode(pmac_tb_clock_chip_host, pmac_low_i2c_mode_stdsub);
 	rc = pmac_low_i2c_xfer(pmac_tb_clock_chip_host,
-			       0xd4 | pmac_low_i2c_write,
+			       pmac_tb_pulsar_addr | pmac_low_i2c_write,
 			       0x2e, &data, 1);
  bail:
 	if (rc != 0) {
@@ -185,6 +183,12 @@ static int __init smp_core99_probe(void)
 	if (ncpus <= 1)
 		return 1;
 
+	/* HW sync only on these platforms */
+	if (!machine_is_compatible("PowerMac7,2") &&
+	    !machine_is_compatible("PowerMac7,3") &&
+	    !machine_is_compatible("RackMac3,1"))
+		goto nohwsync;
+
 	/* Look for the clock chip */
 	for (cc = NULL; (cc = of_find_node_by_name(cc, "i2c-hwclock")) != NULL;) {
 		struct device_node *p = of_get_parent(cc);
@@ -198,11 +202,18 @@ static int __init smp_core99_probe(void)
 			goto next;
 		switch (*reg) {
 		case 0xd2:
-			pmac_tb_freeze = smp_core99_cypress_tb_freeze;
-			printk(KERN_INFO "Timebase clock is Cypress chip\n");
+			if (device_is_compatible(cc, "pulsar-legacy-slewing")) {
+				pmac_tb_freeze = smp_core99_pulsar_tb_freeze;
+				pmac_tb_pulsar_addr = 0xd2;
+				printk(KERN_INFO "Timebase clock is Pulsar chip\n");
+			} else if (device_is_compatible(cc, "cy28508")) {
+				pmac_tb_freeze = smp_core99_cypress_tb_freeze;
+				printk(KERN_INFO "Timebase clock is Cypress chip\n");
+			}
 			break;
 		case 0xd4:
 			pmac_tb_freeze = smp_core99_pulsar_tb_freeze;
+			pmac_tb_pulsar_addr = 0xd4;
 			printk(KERN_INFO "Timebase clock is Pulsar chip\n");
 			break;
 		}
@@ -210,12 +221,15 @@ static int __init smp_core99_probe(void)
 			pmac_tb_clock_chip_host = p;
 			smp_ops->give_timebase = smp_core99_give_timebase;
 			smp_ops->take_timebase = smp_core99_take_timebase;
+			of_node_put(cc);
+			of_node_put(p);
 			break;
 		}
 	next:
 		of_node_put(p);
 	}
 
+ nohwsync:
 	mpic_request_ipis();
 
 	return ncpus;
