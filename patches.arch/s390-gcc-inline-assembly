--- linux-2.6.1/include/asm-s390/byteorder.h.orig	2004-01-15 17:21:01.080404988 +0100
+++ linux-2.6.1/include/asm-s390/byteorder.h	2004-01-15 17:22:07.680406644 +0100
@@ -50,7 +50,7 @@
 		"        icm   %0,4,2(%1)\n"
 		"        icm   %0,2,1(%1)\n"
 		"        ic    %0,0(%1)"
-		: "=&d" (result) : "a" (x) : "cc" );
+		: "=&d" (result) : "a" (x) , "m" (*x) : "cc" );
 #else /* __s390x__ */
 		"   lrv  %0,%1"
 		: "=d" (result) : "m" (*x) );
@@ -85,7 +85,7 @@
 #ifndef __s390x__
 		"        icm   %0,2,1(%1)\n"
 		"        ic    %0,0(%1)\n"
-		: "=&d" (result) : "a" (x) : "cc" );
+		: "=&d" (result) : "a" (x), "m" (*x) : "cc" );
 #else /* __s390x__ */
 		"   lrvh %0,%1"
 		: "=d" (result) : "m" (*x) );
--- linux-2.6.1/include/asm-s390/bitops.h.orig	2004-01-16 08:45:25.188222626 +0100
+++ linux-2.6.1/include/asm-s390/bitops.h	2004-01-16 08:56:42.918562999 +0100
@@ -560,7 +560,7 @@
                 "   alr  %0,%2\n"
                 "4:"
                 : "=&a" (res), "=&d" (cmp), "=&a" (count)
-                : "a" (size), "a" (addr), "a" (&_zb_findmap) : "cc" );
+                : "a" (size), "a" (addr), "a" (&_zb_findmap), "m" (*addr) : "cc" );
         return (res < size) ? res : size;
 }
 
@@ -599,7 +599,7 @@
                 "   alr  %0,%2\n"
                 "4:"
                 : "=&a" (res), "=&d" (cmp), "=&a" (count)
-                : "a" (size), "a" (addr), "a" (&_sb_findmap) : "cc" );
+                : "a" (size), "a" (addr), "a" (&_sb_findmap), "m" (*addr) : "cc" );
         return (res < size) ? res : size;
 }
 
@@ -777,7 +777,8 @@
                 "   algr  %0,%2\n"
                 "5:"
                 : "=&a" (res), "=&d" (cmp), "=&a" (count)
-		: "a" (size), "a" (addr), "a" (&_zb_findmap) : "cc" );
+		: "a" (size), "a" (addr), "a" (&_zb_findmap), "m" (*addr) 
+		: "cc" );
         return (res < size) ? res : size;
 }
 
@@ -819,7 +820,8 @@
                 "   algr  %0,%2\n"
                 "5:"
                 : "=&a" (res), "=&d" (cmp), "=&a" (count)
-		: "a" (size), "a" (addr), "a" (&_sb_findmap) : "cc" );
+		: "a" (size), "a" (addr), "a" (&_sb_findmap), "m" (*addr) 
+		: "cc" );
         return (res < size) ? res : size;
 }
 
@@ -1098,6 +1100,7 @@
 ext2_find_first_zero_bit(void *vaddr, unsigned int size)
 {
 	unsigned long cmp, count;
+	unsigned long *addr = vaddr;
         unsigned int res;
 
         if (!size)
@@ -1130,7 +1133,8 @@
                 "   alr  %0,%2\n"
                 "4:"
                 : "=&a" (res), "=&d" (cmp), "=&a" (count)
-                : "a" (size), "a" (vaddr), "a" (&_zb_findmap) : "cc" );
+                : "a" (size), "a" (addr), "a" (&_zb_findmap), "m" (*addr) 
+		: "cc" );
         return (res < size) ? res : size;
 }
 
@@ -1150,7 +1154,7 @@
                         "   icm  %0,2,1(%1)\n"
                         "   icm  %0,4,2(%1)\n"
                         "   icm  %0,8,3(%1)"
-                        : "=&a" (word) : "a" (p) : "cc" );
+                        : "=&a" (word) : "a" (p), "m" (*p) : "cc" );
 		word >>= bit;
                 res = bit;
                 /* Look for zero in first longword */
@@ -1183,6 +1187,7 @@
 ext2_find_first_zero_bit(void *vaddr, unsigned long size)
 {
         unsigned long res, cmp, count;
+	unsigned long *addr = vaddr;
 
         if (!size)
                 return 0;
@@ -1217,7 +1222,8 @@
                 "   algr  %0,%2\n"
                 "5:"
                 : "=&a" (res), "=&d" (cmp), "=&a" (count)
-		: "a" (size), "a" (vaddr), "a" (&_zb_findmap) : "cc" );
+		: "a" (size), "a" (addr), "a" (&_zb_findmap), "m" (*addr) 
+		: "cc" );
         return (res < size) ? res : size;
 }
 
