Subject: Re: ppc-kdump-xics-interrupt-priority.patch                                                                                                                  
From: Michael Ellerman <michael@ellerman.id.au>                                                                                                                       

Bug 152932 - LTC21954 - kdump: js20 stuck after "Brought up 2 CPUs"

Yep, so I think any disable/eoi stuff really needs to happen in the
first kernel. It's a pity, because it increases the code in the panic
path, but I think it's the best option.

FWIW, I don't think the JS20 is "hanging" in firmware doing the eoi.
It's rather that we call plpar_eoi(x) and then immediately get irq x
again and again. So it looks like the eoi isn't actually working. This
might be an artifact of the xics emulation for JS20.

This patch fixes the EOI bug (dead console on LPAR) and also the JS20
bug.

Signed-off-by: Olaf Hering <olh@suse.de>
---
 arch/powerpc/kernel/crash.c |   13 +++++++++++++
 1 file changed, 13 insertions(+)

Index: linux-2.6.16-olh-kdump/arch/powerpc/kernel/crash.c
===================================================================
--- linux-2.6.16-olh-kdump.orig/arch/powerpc/kernel/crash.c
+++ linux-2.6.16-olh-kdump/arch/powerpc/kernel/crash.c
@@ -22,6 +22,7 @@
 #include <linux/elf.h>
 #include <linux/elfcore.h>
 #include <linux/init.h>
+#include <linux/irq.h>
 #include <linux/types.h>
 
 #include <asm/processor.h>
@@ -186,6 +187,8 @@ static void crash_kexec_prepare_cpus(voi
 
 void default_machine_crash_shutdown(struct pt_regs *regs)
 {
+	unsigned int irq;
+
 	/*
 	 * This function is only called after the system
 	 * has paniced or is otherwise in a critical state.
@@ -198,6 +201,16 @@ void default_machine_crash_shutdown(stru
 	 */
 	local_irq_disable();
 
+	for_each_irq(irq) {
+		struct irq_desc *desc = &irq_desc[irq];
+
+		if (desc->status & IRQ_INPROGRESS)
+			desc->handler->end(irq);
+
+		if (!(desc->status & IRQ_DISABLED))
+			desc->handler->disable(irq);
+	}
+
 	if (ppc_md.kexec_cpu_down)
 		ppc_md.kexec_cpu_down(1, 0);
 
