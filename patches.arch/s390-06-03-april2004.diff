- Description: qeth: IP Assist commands get timeout after long system uptime
  Symptom:     After a system and its qeth device have be up for a long time
               and a lot of IP Assists have been issued, following IP Assist
               request may end up in a timeout.
  Problem:     For our internal book-keeping of IPA sequence numbers we used
               u32 variables, and an int in qeth_reply. In IPA PDUs the seqno
               field is only 2 bytes. As a result, we could not match received
               IPA PDUs to replies in our command waiter list as soon as our
               IPA seqno got larger than 2^16.
  Solution:    Set type ipa in struct qeth_seqno to u16. Use an unsigned int
               for seqno in struct qeth_reply so the comparison in
               send_control_data_cb works. Note: seqno in qeth_reply must be
               32 bits, because we want to be able to encode
               QETH_IDC_COMMAND_SEQNO there.
  Problem-ID:  9631
  Archs:       s390-31, s390-64

--- linux-2.5/drivers/s390/net/qeth_mpc.h	24 May 2004 16:06:48 -0000	1.27.2.5
+++ linux-2.5/drivers/s390/net/qeth_mpc.h	25 Jun 2004 11:33:49 -0000	1.27.2.6
@@ -14,7 +14,7 @@
 
 #include <asm/qeth.h>
 
-#define VERSION_QETH_MPC_H "$Revision: 1.27.2.5 $"
+#define VERSION_QETH_MPC_H "$Revision: 1.27.2.6 $"
 
 extern const char *VERSION_QETH_MPC_C;
 
@@ -36,7 +36,7 @@
 
 #define QETH_TIMEOUT 		(10 * HZ)	
 #define QETH_IPA_TIMEOUT 	(45 * HZ)
-#define QETH_IDX_COMMAND_SEQNO 	-1
+#define QETH_IDX_COMMAND_SEQNO 	0xffff0000
 #define SR_INFO_LEN		16
 
 #define QETH_CLEAR_CHANNEL_PARM	-10

--- linux-2.5/drivers/s390/net/qeth.h	21 Jun 2004 01:01:28 -0000	1.98.2.11
+++ linux-2.5/drivers/s390/net/qeth.h	25 Jun 2004 11:33:49 -0000	1.98.2.12
@@ -23,7 +23,7 @@
 
 #include "qeth_mpc.h"
 
-#define VERSION_QETH_H 		"$Revision: 1.98.2.11 $"
+#define VERSION_QETH_H 		"$Revision: 1.98.2.12 $"
 
 #ifdef CONFIG_QETH_IPV6
 #define QETH_VERSION_IPV6 	":IPv6"
@@ -610,14 +610,14 @@
 	__u32 trans_hdr;
 	__u32 pdu_hdr;
 	__u32 pdu_hdr_ack;
-	__u32 ipa;
+	__u16 ipa;
 };
 
 struct qeth_reply {
 	struct list_head list;
 	wait_queue_head_t wait_q;
 	int (*callback)(struct qeth_card *,struct qeth_reply *,unsigned long);
- 	int seqno;	
+ 	u32 seqno;	
 	unsigned long offset;
 	int received;
 	int rc;

