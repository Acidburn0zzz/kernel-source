- Description: Kernel: Lost dirty bits.
  Symptom:     Data corruption under memory pressure.
  Problem:     The hardware dirty bit is cleared everytime SetPageUptodate
               is called. The common memory management code calls the
               function even if the page already is up to date. In this
               case the dirty bit may not be cleared because the page
               is potentially mapped writable in some user process which
               could have written to the page since the last writeback.
  Solution:    Add a check to arch_set_page_uptodate to skip the clearing
               of the dirty if if the page is already up to date.
  Problem-ID:  8165
  Archs:       s390-31, s390-64

diff -urN linux-2.6.5/include/asm-s390/pgtable.h linux-2.6.5-s390/include/asm-s390/pgtable.h
--- linux-2.6.5/include/asm-s390/pgtable.h	Wed Jun 16 11:15:42 2004
+++ linux-2.6.5-s390/include/asm-s390/pgtable.h	Wed Jun 16 11:17:44 2004
@@ -650,9 +650,11 @@
 	__pte;                                                            \
 })
 
-#define arch_set_page_uptodate(__page)					  \
+#define SetPageUptodate(_page) \
 	do {								  \
-		asm volatile ("sske %0,%1" : : "d" (0),			  \
+		struct page *__page = (_page);				  \
+		if (!test_and_set_bit(PG_uptodate, &__page->flags))	  \
+			asm volatile ("sske %0,%1" : : "d" (0),		  \
 			      "a" (__pa((__page-mem_map) << PAGE_SHIFT)));\
 	} while (0)
 
diff -urN linux-2.6.5/include/linux/page-flags.h linux-2.6.5-s390/include/linux/page-flags.h
--- linux-2.6.5/include/linux/page-flags.h	Mon Apr  5 11:27:52 2004
+++ linux-2.6.5-s390/include/linux/page-flags.h	Wed Jun 16 11:16:07 2004
@@ -188,17 +188,11 @@
 #define ClearPageReferenced(page)	clear_bit(PG_referenced, &(page)->flags)
 #define TestClearPageReferenced(page) test_and_clear_bit(PG_referenced, &(page)->flags)
 
-#ifndef arch_set_page_uptodate
-#define arch_set_page_uptodate(page) do { } while (0)
-#endif
-
 #define PageUptodate(page)	test_bit(PG_uptodate, &(page)->flags)
-#define SetPageUptodate(page) \
-	do {								\
-		arch_set_page_uptodate(page);				\
-		set_bit(PG_uptodate, &(page)->flags);			\
-	} while (0)
+#ifndef SetPageUptodate
+#define SetPageUptodate(page)	set_bit(PG_uptodate, &(page)->flags)
+#endif
 #define ClearPageUptodate(page)	clear_bit(PG_uptodate, &(page)->flags)
 
 #define PageDirty(page)		test_bit(PG_dirty, &(page)->flags)
