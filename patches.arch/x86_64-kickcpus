diff -Nru linux-2.6.5-rc2/arch/x86_64/kernel/io_apic.c linux/arch/x86_64/kernel/io_apic.c
--- linux-2.6.5-rc2/arch/x86_64/kernel/io_apic.c	2004-03-19 16:11:18.000000000 -0800
+++ linux/arch/x86_64/kernel/io_apic.c	2004-03-29 10:12:59.000000000 -0800
@@ -1785,7 +1785,7 @@
 	 *      advantage of new APIC bus architecture.
 	 */
 
-	if (!physids_empty(apic_id_map))
+	if (physids_empty(apic_id_map))
 		apic_id_map = phys_cpu_present_map;
 
 	spin_lock_irqsave(&ioapic_lock, flags);
diff -Nru linux-2.6.5-rc2/arch/x86_64/kernel/mpparse.c linux/arch/x86_64/kernel/mpparse.c
--- linux-2.6.5-rc2/arch/x86_64/kernel/mpparse.c	2004-03-19 16:11:04.000000000 -0800
+++ linux/arch/x86_64/kernel/mpparse.c	2004-03-29 10:12:59.000000000 -0800
@@ -82,6 +82,9 @@
 #endif /*CONFIG_X86_IO_APIC*/
 #endif /*CONFIG_ACPI_BOOT*/
 
+u8 bios_cpu_apicid[NR_CPUS] = { [0 ... NR_CPUS-1] = BAD_APICID };
+
+
 /*
  * Intel MP BIOS table parsing routines:
  */
@@ -135,6 +138,7 @@
 		ver = 0x10;
 	}
 	apic_version[m->mpc_apicid] = ver;
+	bios_cpu_apicid[num_processors - 1] = m->mpc_apicid;
 }
 
 static void __init MP_bus_info (struct mpc_config_bus *m)
diff -Nru linux-2.6.5-rc2/arch/x86_64/kernel/smpboot.c linux/arch/x86_64/kernel/smpboot.c
--- linux-2.6.5-rc2/arch/x86_64/kernel/smpboot.c	2004-03-19 16:12:13.000000000 -0800
+++ linux/arch/x86_64/kernel/smpboot.c	2004-03-29 10:12:59.000000000 -0800
@@ -60,8 +60,6 @@
 /* Bitmask of currently online CPUs */
 cpumask_t cpu_online_map;
 
-/* which CPU (physical APIC ID) maps to which logical CPU number */
-volatile char x86_apicid_to_cpu[NR_CPUS];
 /* which logical CPU number maps to which CPU (physical APIC ID) */
 volatile char x86_cpu_to_apicid[NR_CPUS];
 
@@ -580,8 +578,6 @@
 		panic("failed fork for CPU %d", cpu);
 	wake_up_forked_process(idle);	
 	x86_cpu_to_apicid[cpu] = apicid;
-	x86_apicid_to_cpu[apicid] = cpu;
-
 
 	/*
 	 * We remove it from the pidhash and the runqueue
@@ -735,7 +731,7 @@
 
 static void __init smp_boot_cpus(unsigned int max_cpus)
 {
-	unsigned apicid, cpu;
+	unsigned apicid, cpu, bit, kicked;
 
 	nmi_watchdog_default();
 
@@ -820,11 +816,13 @@
 	 */
 	Dprintk("CPU present map: %lx\n", physids_coerce(phys_cpu_present_map));
 
-	for (apicid = 0; apicid < NR_CPUS; apicid++) {
+	kicked = 1;
+	for (bit = 0; kicked < NR_CPUS && bit < MAX_APICS; bit++) {
+		apicid = cpu_present_to_apicid(bit);
 		/*
 		 * Don't even attempt to start the boot CPU!
 		 */
-		if (apicid == boot_cpu_id)
+		if (apicid == boot_cpu_id || (apicid == BAD_APICID))
 			continue;
 
 		if (!cpu_isset(apicid, phys_cpu_present_map))
@@ -833,6 +831,7 @@
 			continue;
 
 		do_boot_cpu(apicid);
+		++kicked;
 	}
 
 	/*
diff -Nru linux-2.6.5-rc2/include/asm-x86_64/apicdef.h linux/include/asm-x86_64/apicdef.h
--- linux-2.6.5-rc2/include/asm-x86_64/apicdef.h	2004-03-19 16:11:04.000000000 -0800
+++ linux/include/asm-x86_64/apicdef.h	2004-03-29 10:12:59.000000000 -0800
@@ -370,4 +370,6 @@
 
 #undef u32
 
+#define BAD_APICID 0xFFu
+
 #endif
diff -Nru linux-2.6.5-rc2/include/asm-x86_64/smp.h linux/include/asm-x86_64/smp.h
--- linux-2.6.5-rc2/include/asm-x86_64/smp.h	2004-03-19 16:11:00.000000000 -0800
+++ linux/include/asm-x86_64/smp.h	2004-03-29 10:12:59.000000000 -0800
@@ -80,10 +80,30 @@
  * the real APIC ID <-> CPU # mapping.
  * AK: why is this volatile?
  */
-extern volatile char x86_apicid_to_cpu[NR_CPUS];
 extern volatile char x86_cpu_to_apicid[NR_CPUS];
 
-#define safe_smp_processor_id() (disable_apic ? 0 : x86_apicid_to_cpu[hard_smp_processor_id()])
+static inline char x86_apicid_to_cpu(char apicid)
+{
+	int i;
+
+	for (i = 0; i < NR_CPUS; ++i)
+		if (x86_cpu_to_apicid[i] == apicid)
+			return i;
+
+	return -1;
+}
+
+#define safe_smp_processor_id() (disable_apic ? 0 : x86_apicid_to_cpu(hard_smp_processor_id()))
+
+extern u8 bios_cpu_apicid[];
+
+static inline int cpu_present_to_apicid(int mps_cpu)
+{
+	if (mps_cpu < NR_CPUS)
+		return (int)bios_cpu_apicid[mps_cpu];
+	else
+		return BAD_APICID;
+}
 
 #define cpu_online(cpu) cpu_isset(cpu, cpu_online_map)
 #endif /* !ASSEMBLY */
