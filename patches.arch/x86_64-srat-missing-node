From: ak@suse.de
Subject: Handle empty nodes in SRAT parsing

blabla

Signed-off-by: Andi Kleen <ak@suse.de>

Index: linux/arch/x86_64/mm/srat.c
===================================================================
--- linux.orig/arch/x86_64/mm/srat.c	2005-01-22 05:52:56.%N +0100
+++ linux/arch/x86_64/mm/srat.c	2005-01-28 14:08:02.%N +0100
@@ -177,10 +177,18 @@
 		if (!node_isset(i, nodes_parsed))
 			continue;
 		cutoff_node(i, start, end);
-		if (nodes[i].start == nodes[i].end)
+		if (nodes[i].start == nodes[i].end) { 
+			node_clear(i, nodes_parsed);
 			continue;
+		}
 		setup_node_bootmem(i, nodes[i].start, nodes[i].end);
 	}
+	for (i = 0; i < NR_CPUS; i++) { 
+		if (cpu_to_node[i] == NUMA_NO_NODE)
+			continue;
+		if (!node_isset(cpu_to_node[i], nodes_parsed))
+			cpu_to_node[i] = NUMA_NO_NODE; 
+	}
 	numa_init_array();
 	return 0;
 }
Index: linux/include/asm-x86_64/numa.h
===================================================================
--- linux.orig/include/asm-x86_64/numa.h	2005-01-22 05:53:11.%N +0100
+++ linux/include/asm-x86_64/numa.h	2005-01-28 10:33:24.%N +0100
@@ -16,4 +16,6 @@
 extern void numa_init_array(void);
 extern int numa_off;
 
+#define NUMA_NO_NODE 0xff
+
 #endif
Index: linux/arch/x86_64/mm/numa.c
===================================================================
--- linux.orig/arch/x86_64/mm/numa.c	2005-01-23 10:46:15.%N +0100
+++ linux/arch/x86_64/mm/numa.c	2005-01-28 10:33:11.%N +0100
@@ -28,7 +28,6 @@
 int memnode_shift;
 u8  memnodemap[NODEMAPSIZE];
 
-#define NUMA_NO_NODE 0xff
 unsigned char cpu_to_node[NR_CPUS] = { [0 ... NR_CPUS-1] = NUMA_NO_NODE };
 cpumask_t     node_to_cpumask[MAX_NUMNODES];
 
