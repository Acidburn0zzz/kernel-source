diff -u linux/arch/x86_64/kernel/mce.c-o linux/arch/x86_64/kernel/mce.c
--- linux/arch/x86_64/kernel/mce.c-o	2004-06-17 15:22:08.000000000 +0200
+++ linux/arch/x86_64/kernel/mce.c	2004-06-18 00:41:55.000000000 +0200
@@ -143,10 +143,6 @@
 		return;
 	if (!(m.mcgstatus & MCG_STATUS_RIPV))
 		kill_it = 1;
-	if (regs) {
-		m.rip = regs->rip;
-		m.cs = regs->cs;
-	}
 	
 	rdtscll(mcestart);
 	mb();
@@ -154,7 +150,12 @@
 	for (i = 0; i < banks; i++) {
 		if (!bank[i])
 			continue;
-		
+
+		if (regs) {
+			m.rip = regs->rip;
+			m.cs = regs->cs;
+		}
+				
 		m.misc = 0; 
 		m.addr = 0;
 
@@ -166,16 +167,6 @@
 		if ((m.status & MCI_STATUS_EN) == 0)
 			continue;
 
-		/* Did this bank cause the exception? */ 
-		/* Assume that the bank with uncorrectable errors did it,
-		   and that there is only a single one. */
-		if (m.status & MCI_STATUS_UC) { 
-			panicm = m; 
-		} else {
-			m.rip = 0;
-			m.cs = 0;
-		}
-
 		/* In theory _OVER could be a nowayout too, but 
 		   assume any overflowed errors were no fatal. */
 		nowayout |= !!(m.status & MCI_STATUS_PCC);
@@ -188,6 +179,17 @@
 			rdmsrl(MSR_IA32_MC0_ADDR + i*4, m.addr);
 
 		rdtscll(m.tsc);
+
+		/* Did this bank cause the exception? */ 
+		/* Assume that the bank with uncorrectable errors did it,
+		   and that there is only a single one. */
+		if (m.status & MCI_STATUS_UC) { 
+			panicm = m; 
+		} else {
+			m.rip = 0;
+			m.cs = 0;
+		}
+
 		wrmsrl(MSR_IA32_MC0_STATUS + i*4, 0);
 		mce_log(&m);
 	}
@@ -197,7 +199,7 @@
 	if (!regs)
 		return;
 	if (nowayout)
-		mce_panic("Machine check", &m, mcestart);
+		mce_panic("Machine check", &panicm, mcestart);
 	if (kill_it) {
 		int user_space = 0;
 
