Subject: Handle empty node zero
From: Daniel Yeisley <dan.yeisley@unisys.com>
Acked-by: ak@suse.de
References: 166238

It is possible to boot a Unisys ES7000 with CPUs from multiple cells, and not
also include the memory from those cells.  This can create a scenario where
node 0 has cpus, but no associated memory.  The system will boot fine in a
configuration where node 0 has memory, but nodes 2 and 3 do not.

[AK: I rechecked the code and generic code seems to indeed handle that already.
Dan's original patch had a change for mm/slab.c that seems to be already in now.]

Signed-off-by: Andi Kleen <ak@suse.de>

Index: linux-2.6.16/arch/x86_64/kernel/pci-dma.c
===================================================================
--- linux-2.6.16.orig/arch/x86_64/kernel/pci-dma.c
+++ linux-2.6.16/arch/x86_64/kernel/pci-dma.c
@@ -52,6 +52,10 @@ dma_alloc_pages(struct device *dev, gfp_
 		node = pcibus_to_node(to_pci_dev(dev)->bus);
 	else
 		node = numa_node_id();
+
+	if (node < first_node(node_online_map))
+		node = first_node(node_online_map);
+
 	page = alloc_pages_node(node, gfp, order);
 	return page ? page_address(page) : NULL;
 }
Index: linux-2.6.16/arch/x86_64/kernel/setup.c
===================================================================
--- linux-2.6.16.orig/arch/x86_64/kernel/setup.c
+++ linux-2.6.16/arch/x86_64/kernel/setup.c
@@ -1032,7 +1032,7 @@ static void srat_detect_node(void)
 	   for now. */
 	node = apicid_to_node[hard_smp_processor_id()];
 	if (node == NUMA_NO_NODE)
-		node = 0;
+		node = first_node(node_online_map);
 	numa_set_node(cpu, node);
 
 	if (acpi_numa > 0)
Index: linux-2.6.16/arch/x86_64/mm/srat.c
===================================================================
--- linux-2.6.16.orig/arch/x86_64/mm/srat.c
+++ linux-2.6.16/arch/x86_64/mm/srat.c
@@ -399,8 +399,10 @@ int __init acpi_scan_nodes(unsigned long
 	/* First clean up the node list */
 	for (i = 0; i < MAX_NUMNODES; i++) {
  		cutoff_node(i, start, end);
-		if ((nodes[i].end - nodes[i].start) < NODE_MIN_SIZE)
+		if ((nodes[i].end - nodes[i].start) < NODE_MIN_SIZE) {
 			unparse_node(i);
+			node_set_offline(i);
+		}
 	}
 
 	if (acpi_numa <= 0)
