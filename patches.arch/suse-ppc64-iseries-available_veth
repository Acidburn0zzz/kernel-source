diff -purNX /tmp/kernel_exclude.txt /usr/src/linux-2.6.5-20040513/arch/ppc64/kernel/viopath.c ./arch/ppc64/kernel/viopath.c
--- /usr/src/linux-2.6.5-20040513/arch/ppc64/kernel/viopath.c	2004-05-13 16:36:19.000000000 +0000
+++ ./arch/ppc64/kernel/viopath.c	2004-05-13 17:38:36.000000000 +0000
@@ -191,6 +191,8 @@ EXPORT_SYMBOL(e2a);
 static int proc_viopath_show(struct seq_file *m, void *v)
 {
 	char *buf;
+	u16 vlanMap;
+	int vlanIndex;
 	dma_addr_t handle;
 	HvLpEvent_Rc hvrc;
 	DECLARE_MUTEX_LOCKED(Semaphore);
@@ -215,14 +217,20 @@ static int proc_viopath_show(struct seq_
 	if (hvrc != HvLpEvent_Rc_Good)
 		printk(VIOPATH_KERN_WARN "hv error on op %d\n", (int)hvrc);
 
+	vlanMap = HvLpConfig_getVirtualLanIndexMap();
 	down(&Semaphore);
 
-	dma_unmap_single(iSeries_vio_dev, handle, PAGE_SIZE, DMA_FROM_DEVICE);
-	kfree(buf);
 
+	vlanIndex = 0;
+	while (vlanMap != 0){
+		if (vlanMap & 0x8000)
+			vlanIndex++;;
+		vlanMap = vlanMap << 1;
+	}
 	buf[PAGE_SIZE] = '\0';
 	seq_printf(m, "%s", buf);
 
+	seq_printf(m, "AVAILABLE_VETH=%d\n", vlanIndex );
 	seq_printf(m, "SRLNBR=%c%c%c%c%c%c%c\n",
 		   e2a(xItExtVpdPanel.mfgID[2]),
 		   e2a(xItExtVpdPanel.mfgID[3]),
@@ -232,6 +240,9 @@ static int proc_viopath_show(struct seq_
 		   e2a(xItExtVpdPanel.systemSerial[4]),
 		   e2a(xItExtVpdPanel.systemSerial[5]));
 
+	dma_unmap_single(iSeries_vio_dev, handle, PAGE_SIZE, DMA_FROM_DEVICE);
+	kfree(buf);
+
 	return 0;
 }
 
