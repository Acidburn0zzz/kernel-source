# This is a BitKeeper generated patch for the following project:
# Project Name: Linux kernel tree
# This patch format is intended for GNU patch command version 2.5 or higher.
# This patch includes the following deltas:
#	           ChangeSet	1.1722.114.6 -> 1.1722.114.7
#	arch/ppc64/kernel/traps.c	1.33    -> 1.34   
#
# The following is the BitKeeper ChangeSet Log
# --------------------------------------------
# 04/06/08	davej@delerium.codemonkey.org.uk	1.1722.88.48
# Merge delerium.codemonkey.org.uk:/mnt/data/src/bk/bk-linus
# into delerium.codemonkey.org.uk:/mnt/data/src/bk/agpgart
# --------------------------------------------
# 04/06/08	paulus@samba.org[torvalds]	1.1722.114.7
# [PATCH] Single-stepping emulated instructions
# 
# Occasionally the ppc64 kernel emulates a usermode instruction, for
# example in the alignment exception handler.  Kumar Gala pointed out
# (in the context of the ppc32 kernel) that if the instruction was being
# single-stepped, and we end up emulating the instruction, we should
# then send the process a SIGTRAP as if it had not been emulated and the
# process had then taken a single-step exception.  This patch implements
# this for ppc64.
# 
# Signed-off-by: Paul Mackerras <paulus@samba.org>
# Signed-off-by: Linus Torvalds <torvalds@osdl.org>
# --------------------------------------------
#
diff -Nru a/arch/ppc64/kernel/traps.c b/arch/ppc64/kernel/traps.c
--- a/arch/ppc64/kernel/traps.c	Wed Jul  7 21:09:29 2004
+++ b/arch/ppc64/kernel/traps.c	Wed Jul  7 21:09:29 2004
@@ -466,6 +466,18 @@
 	_exception(SIGTRAP, &info, regs);	
 }
 
+/*
+ * After we have successfully emulated an instruction, we have to
+ * check if the instruction was being single-stepped, and if so,
+ * pretend we got a single-step exception.  This was pointed out
+ * by Kumar Gala.  -- paulus
+ */
+static inline void emulate_single_step(struct pt_regs *regs)
+{
+	if (regs->msr & MSR_SE)
+		SingleStepException(regs);
+}
+
 static void dummy_perf(struct pt_regs *regs)
 {
 }
@@ -487,10 +499,8 @@
 	fixed = fix_alignment(regs);
 
 	if (fixed == 1) {
-		if (!user_mode(regs))
-			PPCDBG(PPCDBG_ALIGNFIXUP, "fix alignment at %lx\n",
-			       regs->nip);
 		regs->nip += 4;	/* skip over emulated instruction */
+		emulate_single_step(regs);
 		return;
 	}
 
