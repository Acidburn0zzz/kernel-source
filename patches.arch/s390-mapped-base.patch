diff -urN linux-2.6/arch/s390/kernel/binfmt_elf32.c linux-2.6-s390/arch/s390/kernel/binfmt_elf32.c
--- linux-2.6/arch/s390/kernel/binfmt_elf32.c	Wed May 12 19:24:05 2004
+++ linux-2.6-s390/arch/s390/kernel/binfmt_elf32.c	Wed May 12 19:24:41 2004
@@ -32,8 +32,6 @@
 #define NUM_FPRS      16
 #define NUM_ACRS      16    
 
-#define TASK31_SIZE		(0x80000000UL)
-
 /* For SVR4/S390 the function pointer to be registered with `atexit` is
    passed in R14. */
 #define ELF_PLAT_INIT(_r, load_addr) \
@@ -51,7 +47,7 @@
    the loader.  We need to make sure that it is out of the way of the program
    that it will "exec", and that there is sufficient room for the brk.  */
 
-#define ELF_ET_DYN_BASE         (TASK31_SIZE / 3 * 2)
+#define ELF_ET_DYN_BASE         (TASK_SIZE / 3 * 2)
 
 /* Wow, the "main" arch needs arch dependent functions too.. :) */
 
@@ -169,7 +165,6 @@
 #undef start_thread
 #define start_thread                    start_thread31 
 #define setup_arg_pages(bprm)           setup_arg_pages32(bprm)
-#define elf_map				elf_map32
 
 MODULE_DESCRIPTION("Binary format loader for compatibility with 32bit Linux for S390 binaries,"
                    " Copyright 2000 IBM Corporation"); 
@@ -188,19 +183,3 @@
 
 #include "../../../fs/binfmt_elf.c"
 
-static unsigned long
-elf_map32 (struct file *filep, unsigned long addr, struct elf_phdr *eppnt, int prot, int type)
-{
-	unsigned long map_addr;
-
-	if (!addr) 
-		addr = TASK_UNMAPPED_BASE;
-
-	down_write(&current->mm->mmap_sem);
-	map_addr = do_mmap(filep, ELF_PAGESTART(addr),
-			   eppnt->p_filesz + ELF_PAGEOFFSET(eppnt->p_vaddr),
-			   prot, type,
-			   eppnt->p_offset - ELF_PAGEOFFSET(eppnt->p_vaddr));
-	up_write(&current->mm->mmap_sem);
-	return(map_addr);
-}
diff -urN linux-2.6/arch/s390/kernel/compat_exec.c linux-2.6-s390/arch/s390/kernel/compat_exec.c
--- linux-2.6/arch/s390/kernel/compat_exec.c	Wed May 12 19:24:05 2004
+++ linux-2.6-s390/arch/s390/kernel/compat_exec.c	Wed May 12 19:24:41 2004
@@ -34,9 +34,6 @@
 #endif
 
 
-#undef STACK_TOP
-#define STACK_TOP TASK31_SIZE
-
 int setup_arg_pages32(struct linux_binprm *bprm)
 {
 	unsigned long stack_base;
diff -urN linux-2.6/arch/s390/kernel/sys_s390.c linux-2.6-s390/arch/s390/kernel/sys_s390.c
--- linux-2.6/arch/s390/kernel/sys_s390.c	Wed May 12 19:24:05 2004
+++ linux-2.6-s390/arch/s390/kernel/sys_s390.c	Wed May 12 19:24:41 2004
@@ -138,38 +138,6 @@
 	return sys_select(a.n, a.inp, a.outp, a.exp, a.tvp);
 
 }
-#else /* CONFIG_ARCH_S390X */
-unsigned long
-arch_get_unmapped_area(struct file *filp, unsigned long addr,
-		       unsigned long len, unsigned long pgoff,
-		       unsigned long flags)
-{
-	struct vm_area_struct *vma;
-	unsigned long end;
-
-	if (test_thread_flag(TIF_31BIT)) { 
-		if (!addr) 
-			addr = 0x40000000; 
-		end = 0x80000000;		
-	} else { 
-		if (!addr) 
-			addr = TASK_SIZE / 2;
-		end = TASK_SIZE; 
-	}
-
-	if (len > end)
-		return -ENOMEM;
-	addr = PAGE_ALIGN(addr);
-
-	for (vma = find_vma(current->mm, addr); ; vma = vma->vm_next) {
-		/* At this point:  (!vma || addr < vma->vm_end). */
-		if (end - len < addr)
-			return -ENOMEM;
-		if (!vma || addr + len <= vma->vm_start)
-			return addr;
-		addr = vma->vm_end;
-	}
-}
 #endif /* CONFIG_ARCH_S390X */
 
 /*
diff -urN linux-2.6/include/asm-s390/pgtable.h linux-2.6-s390/include/asm-s390/pgtable.h
--- linux-2.6/include/asm-s390/pgtable.h	Wed May 12 19:24:05 2004
+++ linux-2.6-s390/include/asm-s390/pgtable.h	Wed May 12 19:24:41 2004
@@ -784,10 +784,6 @@
  */
 #define pgtable_cache_init()	do { } while (0)
 
-#ifdef __s390x__
-# define HAVE_ARCH_UNMAPPED_AREA
-#endif /* __s390x__ */
-
 #define __HAVE_ARCH_PTEP_ESTABLISH
 #define __HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG
 #define __HAVE_ARCH_PTEP_CLEAR_YOUNG_FLUSH
diff -urN linux-2.6/include/asm-s390/processor.h linux-2.6-s390/include/asm-s390/processor.h
--- linux-2.6/include/asm-s390/processor.h	Wed May 12 19:24:05 2004
+++ linux-2.6-s390/include/asm-s390/processor.h	Wed May 12 19:24:41 2004
@@ -64,17 +64,23 @@
 # define TASK_SIZE		(0x80000000UL)
 # define TASK_UNMAPPED_BASE (current->map_base)
 # define __TASK_UNMAPPED_BASE	(TASK_SIZE / 2)
-
+# define DEFAULT_TASK_SIZE	(0x80000000UL)
 
 #else /* __s390x__ */
 
-# define TASK_SIZE		(0x40000000000UL)
+# define TASK64_SIZE		(0x40000000000UL)
 # define TASK31_SIZE		(0x80000000UL)
+# define TASK_SIZE		(test_thread_flag(TIF_31BIT) ? \
+					TASK31_SIZE : TASK64_SIZE)
 # define TASK_UNMAPPED_BASE	(test_thread_flag(TIF_31BIT) ? \
-					(TASK31_SIZE / 2) : (TASK_SIZE / 2))
+					(current->map_base) : (TASK64_SIZE / 2))
+# define __TASK_UNMAPPED_BASE	(TASK31_SIZE / 2)
+# define DEFAULT_TASK_SIZE	TASK64_SIZE
 
 #endif /* __s390x__ */
 
+#define MM_VM_SIZE(mm)		DEFAULT_TASK_SIZE
+
 typedef struct {
         __u32 ar4;
 } mm_segment_t;
