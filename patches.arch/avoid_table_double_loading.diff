Subject: dont load acpi tables twice
From: Thomas Renninger (trenn@suse.de)

The OEM id of new tables is compared with already loaded once. Loading is
denied if the table already exists in the kernel's AML namespace.

Bugzilla: http://bugzilla.kernel.org/show_bug.cgi?id=4749

--- x/drivers/acpi/namespace/nsload.c.orig	2005-07-14 03:01:24.000000000 -0600
+++ y/drivers/acpi/namespace/nsload.c	2005-07-14 03:00:57.000000000 -0600
@@ -45,7 +45,7 @@
 #include <acpi/acpi.h>
 #include <acpi/acnamesp.h>
 #include <acpi/acdispat.h>
-
+#include <acpi/actables.h>
 
 #define _COMPONENT          ACPI_NAMESPACE
 	 ACPI_MODULE_NAME    ("nsload")
@@ -72,7 +72,8 @@
 	struct acpi_namespace_node      *node)
 {
 	acpi_status                     status;
-
+	struct acpi_table_desc          *table_desc_loaded;
+	int                             count;
 
 	ACPI_FUNCTION_TRACE ("ns_load_table");
 
@@ -104,6 +105,25 @@
 	}
 
 	/*
+	 * Check whether the table already exists -> then deny loading it again
+	 * Use OEM id and revision id of the table to identify uniqueness.
+	 */
+
+	for (count = 0;count < acpi_gbl_table_lists[table_desc->type].count; count++){
+		table_desc_loaded = acpi_gbl_table_lists[table_desc->type].next;
+		if (table_desc_loaded->loaded_into_namespace
+		    && table_desc_loaded->pointer->revision ==
+			       table_desc->pointer->revision
+		    && !memcmp(table_desc_loaded->pointer->oem_table_id, 
+			       table_desc->pointer->oem_table_id, 8)
+			){
+			ACPI_REPORT_WARNING (("Table %s has already been loaded (not bad)\n", 
+					      table_desc->pointer->oem_table_id));
+			return (AE_ALREADY_EXISTS);
+		}
+	}
+
+	/*
 	 * Parse the table and load the namespace with all named
 	 * objects found within.  Control methods are NOT parsed
 	 * at this time.  In fact, the control methods cannot be
