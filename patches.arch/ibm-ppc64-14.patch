ChangeSet
  1.1541 04/03/31 13:27:11 dgibson@wocket.ozlabs.ibm.com +1 -0
  Removed verbose error when iseries_veth receives a packet for a vlan we're
  not on.  Earlier versions of the driver on other lpars can spuriously
  trigger the message, because they send broadcast packets to every other
  lpar they have a connection to (on any vlan), even when the packet is on
  a particular vlan which only connects to some of the lpars.

  drivers/net/iseries_veth.c
    1.16 04/03/31 13:26:46 dgibson@wocket.ozlabs.ibm.com +7 -11
    Removed verbose error when iseries_veth receives a packet for a vlan we're
    not on.  Earlier versions of the driver on other lpars can spuriously
    trigger the message, because they send broadcast packets to every other
    lpar they have a connection to (on any vlan), even when the packet is on
    a particular vlan which only connects to some of the lpars.

diff -Nru a/drivers/net/iseries_veth.c b/drivers/net/iseries_veth.c
--- a/drivers/net/iseries_veth.c	Wed Mar 31 06:29:40 2004
+++ b/drivers/net/iseries_veth.c	Wed Mar 31 06:29:40 2004
@@ -1212,18 +1212,14 @@
 		
 		vlan = skb->data[9];
 		dev = mFabricMgr->netdev[vlan];
-		if (! dev) {
-			veth_error("NULL device for vlan %d in veth_receive. "
-				   "DST=%02x:%02x:%02x:%02x:%02x:%02x "
-				   "SRC=%02x:%02x:%02x:%02x:%02x:%02x\n",
-				   vlan, skb->data[0], skb->data[1],
-				   skb->data[2], skb->data[3], skb->data[4],
-				   skb->data[5], skb->data[6], skb->data[7],
-				   skb->data[9], skb->data[9], skb->data[10],
-				   skb->data[11]);
-			dev_kfree_skb_irq(skb);
+		if (! dev)
+			/* Some earlier versions of the driver sent
+			   broadcasts down all connections, even to
+			   lpars that weren't on the relevant vlan.
+			   So ignore packets belonging to a vlan we're
+			   not on. */
 			continue;
-		}
+
 		port = (struct veth_port *)dev->priv;
 		dest = *((u64 *) skb->data) & 0xFFFFFFFFFFFF0000;
 
.........................................................................
# vim: syntax=diff

