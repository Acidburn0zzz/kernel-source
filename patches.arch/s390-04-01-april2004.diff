- Description: dasd: dasd module load->unload->load leads to corrupt pointers.
  Symptom:     Load the dasd_mod and dasd_eckd_mod modules. Set at least one eckd
               device online and offline. Unload dasd_mod and dasd_eck_mod and load
               them again. From that point on errors may happen when the modules are
               unloaded and loaded again, but there might be other triggers as well.
               Typical errors would be
               'Unable to handle kernel pointer dereference at virtual kernel address'
               or an 'addressing exception'. One routine that is known to be effected
               by this error is dasd_device_from_cdev.
  Problem:     The first time a dasd device is set online, a struct dasd_devmap is
               allocated. A pointer to this struct is stored in the matching struct
               ccw_device (in ccw_device.dev.driver_data). When the dasd module is
               unloaded, all dasd_devmap structures are freed, but since the
               ccw_device structures belong to the common I/O layer these remain
               and contain a now invalid pointer. When the dasd modules are loaded
               again, these pointers and the invalid data areas are used.
  Solution:    When the connection between the common I/O layer data structures and
               the dasd data structures is broken (in dasd_delete_device) the
               driver_data pointer is set to Null.
  Problem-ID:  --
  Archs:       s390-31, s390-64

--- linux-2.5/drivers/s390/block/dasd_devmap.c	26 Mar 2004 17:10:58 -0000	1.27
+++ linux-2.5/drivers/s390/block/dasd_devmap.c	25 May 2004 08:23:26 -0000	1.27.2.1
@@ -11,7 +11,7 @@
  * functions may not be called from interrupt context. In particular
  * dasd_get_device is a no-no from interrupt context.
  *
- * $Revision: 1.27 $
+ * $Revision: 1.27.2.1 $
  */
 
 #include <linux/config.h>
@@ -525,6 +525,9 @@
 	/* Disconnect dasd_device structure from ccw_device structure. */
 	cdev = device->cdev;
 	device->cdev = NULL;
+
+	/* Disconnect dasd_devmap structure from ccw_device structure. */
+	cdev->dev.driver_data = NULL;
 
 	/* Put ccw_device structure. */
 	put_device(&cdev->dev);

