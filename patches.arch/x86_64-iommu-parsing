diff -u linux/arch/x86_64/kernel/pci-gart.c-o linux/arch/x86_64/kernel/pci-gart.c
--- linux/arch/x86_64/kernel/pci-gart.c-o	2004-06-23 00:42:57.000000000 +0200
+++ linux/arch/x86_64/kernel/pci-gart.c	2004-06-24 16:40:45.000000000 +0200
@@ -834,7 +834,7 @@
 fs_initcall(pci_iommu_init);
 
 /* iommu=[size][,noagp][,off][,force][,noforce][,leak][,memaper[=order]][,merge]
-         [,forcesac][,fullflush][,nomerge]
+         [,forcesac][,fullflush][,nomerge][,noaperture]
    size  set size of iommu (in bytes) 
    noagp don't initialize the AGP driver and use full aperture.
    off   don't use the IOMMU
@@ -849,6 +849,7 @@
    nofullflush Don't use IOMMU fullflush
    allowed  overwrite iommu off workarounds for specific chipsets.
    soft	 Use software bounce buffering (default for Intel machines)
+   noaperture Don't touch the aperture for AGP.
 */
 __init int iommu_setup(char *opt) 
 { 
@@ -873,7 +874,7 @@
 	    if (!memcmp(p, "memaper", 7)) { 
 		    fallback_aper_force = 1; 
 		    p += 7; 
-		    if (*p == '=' && get_option(&p, &arg))
+		    if (*p == '=' && (p++, get_option(&p, &arg)))
 			    fallback_aper_order = arg;
 	    } 
 	    if (!memcmp(p, "panic", 5))
@@ -894,6 +895,10 @@
 		    iommu_fullflush = 0;
 	    if (!memcmp(p, "soft", 4))
 		    swiotlb = 1;
+	    if (!memcmp(p, "noaperture", 10)) { 
+		    extern int fix_agp_aperture;
+		    fix_agp_aperture = 0;
+	    }
 #ifdef CONFIG_IOMMU_LEAK
 	    if (!memcmp(p,"leak", 4)) { 
 		    leak_trace = 1;
diff -u linux/arch/x86_64/kernel/aperture.c-o linux/arch/x86_64/kernel/aperture.c
--- linux/arch/x86_64/kernel/aperture.c-o	2004-06-23 00:41:51.000000000 +0200
+++ linux/arch/x86_64/kernel/aperture.c	2004-06-24 16:38:12.000000000 +0200
@@ -27,6 +27,7 @@
 int iommu_aperture;
 int iommu_aperture_disabled __initdata = 0;
 int iommu_aperture_allowed __initdata = 0;
+int fix_agp_aperture __initdata = 1;
 
 int fallback_aper_order __initdata = 1; /* 64MB */
 int fallback_aper_force __initdata = 0; 
@@ -241,13 +242,8 @@
 		/* Got the aperture from the AGP bridge */
 	} else if ((!no_iommu && end_pfn >= 0xffffffff>>PAGE_SHIFT) ||
 		   force_iommu ||
-		   valid_agp || 
+		   (valid_agp && fix_agp_aperture) || 
 		   fallback_aper_force) { 
-		/* When there is a AGP bridge in the system assume the
-		   user wants to use the AGP driver too and needs an
-		   aperture.  However this case (AGP but no good
-		   aperture) should only happen with a more broken than
-		   usual BIOS, because it would even break Windows. */
 
 	printk("Your BIOS doesn't leave a aperture memory hole\n");
 	printk("Please enable the IOMMU option in the BIOS setup\n"); 
diff -u linux/Documentation/x86_64/boot-options.txt-o linux/Documentation/x86_64/boot-options.txt
--- linux/Documentation/x86_64/boot-options.txt-o	2004-04-06 13:11:57.000000000 +0200
+++ linux/Documentation/x86_64/boot-options.txt	2004-06-24 22:51:38.000000000 +0200
@@ -145,7 +145,8 @@
    noforce don't force IOMMU usage. Default.
    force  Force IOMMU
    soft   Use software bounce buffering for non 32bit IO. Default on Intel
-          machines. 
+          machines
+   noaperture Don't try to fix the aperture as set up by the BIOS.
 
   swiotlb=pages
 
