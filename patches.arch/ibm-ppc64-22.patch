ChangeSet
  1.1320.69.377 04/03/30 10:51:56 benh@kernel.crashing.org[torvalds] +1 -0
  [PATCH] ppc64: Add a sync in context switch on SMP
  
  For the same reason as ppc32, we need to ensure that all stores
  done on a CPU has reached the coherency domain and are visible
  to loads done by another CPU when context switching as the same
  thread may be rescheduled almost right away there.

  arch/ppc64/kernel/entry.S
    1.27.1.7 04/03/29 20:55:47 benh@kernel.crashing.org[torvalds] +8 -0
    ppc64: Add a sync in context switch on SMP

diff -Nru a/arch/ppc64/kernel/entry.S b/arch/ppc64/kernel/entry.S
--- a/arch/ppc64/kernel/entry.S	Fri Apr  2 01:58:38 2004
+++ b/arch/ppc64/kernel/entry.S	Fri Apr  2 01:58:38 2004
@@ -289,6 +289,14 @@
 	std	r23,_CCR(r1)
 	std	r1,KSP(r3)	/* Set old stack pointer */
 
+#ifdef CONFIG_SMP
+	/* We need a sync somewhere here to make sure that if the
+	 * previous task gets rescheduled on another CPU, it sees all
+	 * stores it has performed on this one.
+	 */
+	sync
+#endif /* CONFIG_SMP */
+
 	addi	r6,r4,-THREAD	/* Convert THREAD to 'current' */
 	std	r6,PACACURRENT(r13)	/* Set new 'current' */
 
.........................................................................
# vim: syntax=diff

