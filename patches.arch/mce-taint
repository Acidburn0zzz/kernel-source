diff -u linux/include/linux/kernel.h-TAINT linux/include/linux/kernel.h
--- linux/include/linux/kernel.h-TAINT	2004-09-24 12:14:12.000000000 +0200
+++ linux/include/linux/kernel.h	2004-09-24 12:14:18.000000000 +0200
@@ -144,6 +144,7 @@
 	SYSTEM_RESTART,
 } system_state;
 
+#define TAINT_MACHINE_CHECK		(1<<10)
 #define TAINT_PROPRIETARY_MODULE	(1<<0)
 #define TAINT_FORCED_MODULE		(1<<1)
 #define TAINT_UNSAFE_SMP		(1<<2)
diff -u linux/arch/i386/kernel/cpu/mcheck/k7.c-TAINT linux/arch/i386/kernel/cpu/mcheck/k7.c
--- linux/arch/i386/kernel/cpu/mcheck/k7.c-TAINT	2004-09-24 12:14:12.000000000 +0200
+++ linux/arch/i386/kernel/cpu/mcheck/k7.c	2004-09-24 12:15:36.000000000 +0200
@@ -54,6 +54,7 @@
 			wrmsr (MSR_IA32_MC0_STATUS+i*4, 0UL, 0UL);
 			/* Serialize */
 			wmb();
+			tainted |= TAINT_MACHINE_CHECK;
 		}
 	}
 
diff -u linux/arch/i386/kernel/cpu/mcheck/p6.c-TAINT linux/arch/i386/kernel/cpu/mcheck/p6.c
--- linux/arch/i386/kernel/cpu/mcheck/p6.c-TAINT	2004-09-24 12:14:12.000000000 +0200
+++ linux/arch/i386/kernel/cpu/mcheck/p6.c	2004-09-24 12:16:23.000000000 +0200
@@ -72,6 +72,7 @@
 			wrmsr (msr, 0UL, 0UL);
 			/* Serialize */
 			wmb();
+			tainted |= TAINT_MACHINE_CHECK;
 		}
 	}
 	mcgstl &= ~(1<<2);
diff -u linux/arch/i386/kernel/cpu/mcheck/p4.c-TAINT linux/arch/i386/kernel/cpu/mcheck/p4.c
--- linux/arch/i386/kernel/cpu/mcheck/p4.c-TAINT	2004-09-24 12:14:12.000000000 +0200
+++ linux/arch/i386/kernel/cpu/mcheck/p4.c	2004-09-24 12:16:57.000000000 +0200
@@ -40,6 +40,7 @@
 {	
 	printk(KERN_ERR "CPU%d: Unexpected LVT TMR interrupt!\n",
 			smp_processor_id());
+	tainted |= TAINT_MACHINE_CHECK;
 }
 
 /* P4/Xeon Thermal transition interrupt handler */
@@ -60,6 +61,7 @@
 		printk(KERN_EMERG "CPU%d: Temperature above threshold\n", cpu);
 		printk(KERN_EMERG "CPU%d: Running in modulated clock mode\n",
 				cpu);
+		tainted |= TAINT_MACHINE_CHECK;
 	} else {
 		printk(KERN_INFO "CPU%d: Temperature/speed normal\n", cpu);
 	}
@@ -222,6 +224,7 @@
 			wrmsr(msr, 0UL, 0UL);
 			/* Serialize */
 			wmb();
+			tainted |= TAINT_MACHINE_CHECK;
 		}
 	}
 	mcgstl &= ~(1<<2);
diff -u linux/arch/i386/kernel/cpu/mcheck/p5.c-TAINT linux/arch/i386/kernel/cpu/mcheck/p5.c
--- linux/arch/i386/kernel/cpu/mcheck/p5.c-TAINT	2004-09-24 12:14:12.000000000 +0200
+++ linux/arch/i386/kernel/cpu/mcheck/p5.c	2004-09-24 12:17:33.000000000 +0200
@@ -25,6 +25,7 @@
 	printk(KERN_EMERG "CPU#%d: Machine Check Exception:  0x%8X (type 0x%8X).\n", smp_processor_id(), loaddr, lotype);
 	if(lotype&(1<<5))
 		printk(KERN_EMERG "CPU#%d: Possible thermal failure (CPU on fire ?).\n", smp_processor_id());
+	tainted |= TAINT_MACHINE_CHECK;
 }
 
 /* Set up machine check reporting for processors with Intel style MCE */
diff -u linux/arch/i386/kernel/cpu/mcheck/winchip.c-TAINT linux/arch/i386/kernel/cpu/mcheck/winchip.c
--- linux/arch/i386/kernel/cpu/mcheck/winchip.c-TAINT	2004-09-24 12:14:12.000000000 +0200
+++ linux/arch/i386/kernel/cpu/mcheck/winchip.c	2004-09-24 12:14:18.000000000 +0200
@@ -19,6 +19,7 @@
 static asmlinkage void winchip_machine_check(struct pt_regs * regs, long error_code)
 {
 	printk(KERN_EMERG "CPU0: Machine Check Exception.\n");
+	tainted |= TAINT_MACHINE_CHECK;
 }
 
 /* Set up machine check reporting on the Winchip C6 series */
diff -u linux/arch/i386/kernel/cpu/mcheck/non-fatal.c-TAINT linux/arch/i386/kernel/cpu/mcheck/non-fatal.c
--- linux/arch/i386/kernel/cpu/mcheck/non-fatal.c-TAINT	2004-05-10 09:43:22.000000000 +0200
+++ linux/arch/i386/kernel/cpu/mcheck/non-fatal.c	2004-09-24 12:18:05.000000000 +0200
@@ -48,6 +48,7 @@
 
 			/* Serialize */
 			wmb();
+			tainted |= TAINT_MACHINE_CHECK;
 		}
 	}
 }
diff -u linux/arch/x86_64/kernel/mce.c-TAINT linux/arch/x86_64/kernel/mce.c
--- linux/arch/x86_64/kernel/mce.c-TAINT	2004-09-24 12:14:12.000000000 +0200
+++ linux/arch/x86_64/kernel/mce.c	2004-09-24 12:16:06.000000000 +0200
@@ -190,6 +190,8 @@
 			panicm = m;
 			panicm_found = 1;
 		}
+
+		tainted |= TAINT_MACHINE_CHECK;
 	}
 
 	/* Never do anything final in the polling timer */
diff -u linux/kernel/panic.c-TAINT linux/kernel/panic.c
--- linux/kernel/panic.c-TAINT	2004-09-24 12:14:12.000000000 +0200
+++ linux/kernel/panic.c	2004-09-24 12:14:18.000000000 +0200
@@ -133,7 +133,8 @@
 {
 	static char buf[20];
 	if (tainted) {
-		snprintf(buf, sizeof(buf), "Tainted: %c%c%c%c",
+		snprintf(buf, sizeof(buf), "Tainted: %c%c%c%c%c",
+			tainted & TAINT_MACHINE_CHECK ? 'M' : ' ',
 			tainted & TAINT_PROPRIETARY_MODULE ? 'P' : 'G',
 			tainted & TAINT_FORCED_MODULE ? 'F' : ' ',
 			tainted & TAINT_UNSAFE_SMP ? 'S' : ' ',
