--- linux-2.6.8-5/arch/x86_64/kernel/mce.c-o	2004-09-01 18:25:46.000000000 +0200
+++ linux-2.6.8-5/arch/x86_64/kernel/mce.c	2004-09-01 18:32:27.000000000 +0200
@@ -228,6 +231,7 @@
 	}
 
  out:
+	tainted |= TAINT_MACHINE_CHECK;
 	/* Last thing done in the machine check exception to clear state. */
 	wrmsrl(MSR_IA32_MCG_STATUS, 0);
 }
--- linux-2.6.8-5/kernel/panic.c-o	2004-09-01 18:31:32.000000000 +0200
+++ linux-2.6.8-5/kernel/panic.c	2004-09-01 18:32:10.000000000 +0200
@@ -154,7 +154,8 @@
 {
 	static char buf[20];
 	if (tainted) {
-		snprintf(buf, sizeof(buf), "Tainted: %c%c%c%c",
+		snprintf(buf, sizeof(buf), "Tainted: %c%c%c%c%c",
+			tainted & TAINT_MACHINE_CHECK ? 'M' : ' ',
 			tainted & TAINT_PROPRIETARY_MODULE ? 'P' : 'G',
 			tainted & TAINT_FORCED_MODULE ? 'F' : ' ',
 			tainted & TAINT_UNSAFE_SMP ? 'S' : ' ',
--- linux-2.6.8-5/include/linux/kernel.h-o	2004-09-01 18:30:14.000000000 +0200
+++ linux-2.6.8-5/include/linux/kernel.h	2004-09-01 18:34:38.000000000 +0200
@@ -143,6 +143,7 @@
 	SYSTEM_RESTART,
 } system_state;
 
+#define TAINT_MACHINE_CHECK		(1<<10)
 #define TAINT_PROPRIETARY_MODULE	(1<<0)
 #define TAINT_FORCED_MODULE		(1<<1)
 #define TAINT_UNSAFE_SMP		(1<<2)
diff -u linux/arch/i386/kernel/cpu/mcheck/k7.c-o linux/arch/i386/kernel/cpu/mcheck/k7.c
--- linux/arch/i386/kernel/cpu/mcheck/k7.c-o	2004-03-21 21:12:03.000000000 +0100
+++ linux/arch/i386/kernel/cpu/mcheck/k7.c	2004-09-20 21:42:33.000000000 +0200
@@ -64,6 +64,8 @@
 	printk (KERN_EMERG "Attempting to continue.\n");
 	mcgstl &= ~(1<<2);
 	wrmsr (MSR_IA32_MCG_STATUS,mcgstl, mcgsth);
+
+	tainted |= TAINT_MACHINE_CHECK;
 }
 
 
diff -u linux/arch/i386/kernel/cpu/mcheck/p6.c-o linux/arch/i386/kernel/cpu/mcheck/p6.c
--- linux/arch/i386/kernel/cpu/mcheck/p6.c-o	2004-03-21 21:12:03.000000000 +0100
+++ linux/arch/i386/kernel/cpu/mcheck/p6.c	2004-09-20 21:42:12.000000000 +0200
@@ -76,6 +76,8 @@
 	}
 	mcgstl &= ~(1<<2);
 	wrmsr (MSR_IA32_MCG_STATUS,mcgstl, mcgsth);
+
+	tainted |= TAINT_MACHINE_CHECK;
 }
 
 /* Set up machine check reporting for processors with Intel style MCE */
diff -u linux/arch/i386/kernel/cpu/mcheck/p4.c-o linux/arch/i386/kernel/cpu/mcheck/p4.c
--- linux/arch/i386/kernel/cpu/mcheck/p4.c-o	2004-06-16 12:22:43.000000000 +0200
+++ linux/arch/i386/kernel/cpu/mcheck/p4.c	2004-09-20 21:42:50.000000000 +0200
@@ -226,6 +226,8 @@
 	}
 	mcgstl &= ~(1<<2);
 	wrmsr (MSR_IA32_MCG_STATUS,mcgstl, mcgsth);
+
+	tainted |= TAINT_MACHINE_CHECK;
 }
 
 
diff -u linux/arch/i386/kernel/cpu/mcheck/p5.c-o linux/arch/i386/kernel/cpu/mcheck/p5.c
--- linux/arch/i386/kernel/cpu/mcheck/p5.c-o	2004-03-21 21:12:03.000000000 +0100
+++ linux/arch/i386/kernel/cpu/mcheck/p5.c	2004-09-20 21:43:03.000000000 +0200
@@ -25,6 +25,8 @@
 	printk(KERN_EMERG "CPU#%d: Machine Check Exception:  0x%8X (type 0x%8X).\n", smp_processor_id(), loaddr, lotype);
 	if(lotype&(1<<5))
 		printk(KERN_EMERG "CPU#%d: Possible thermal failure (CPU on fire ?).\n", smp_processor_id());
+
+	tainted |= TAINT_MACHINE_CHECK;
 }
 
 /* Set up machine check reporting for processors with Intel style MCE */
diff -u linux/arch/i386/kernel/cpu/mcheck/winchip.c-o linux/arch/i386/kernel/cpu/mcheck/winchip.c
--- linux/arch/i386/kernel/cpu/mcheck/winchip.c-o	2004-03-21 21:12:03.000000000 +0100
+++ linux/arch/i386/kernel/cpu/mcheck/winchip.c	2004-09-20 21:43:14.000000000 +0200
@@ -19,6 +19,7 @@
 static asmlinkage void winchip_machine_check(struct pt_regs * regs, long error_code)
 {
 	printk(KERN_EMERG "CPU0: Machine Check Exception.\n");
+	tainted |= TAINT_MACHINE_CHECK;
 }
 
 /* Set up machine check reporting on the Winchip C6 series */
