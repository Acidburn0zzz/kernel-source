From: Kristen Carlson Accardi <kristen.c.accardi@intel.com>
Subject: ACPI: bay: send envp with uevent
Patch-mainline: yes
References: none

git commit 3f8698d4d3f72252980575fb8d7b4cafeb5dd0a2

Signed-off-by: Thomas Renninger <trenn@suse.de>
Signed-off-by: Holger Macht <hmacht@suse.de>

    Make the bay driver send env information on bay events.
    
    Upon any bay event, we will send the string "BAY_EVENT=%d" along with the
    KOBJ_CHANGE, and report the event number.  What the event number means will
    be platform specific.  Event 3 is always an eject request, but an insert
    may be either event 1, or it may be event 0.  Event 1 may also be a
    remove request.  It would be best if you check the number of your event
    with udevmonitor before writing any udev scripts for inserting and
    removing drive bays.
    
    Signed-off-by: Kristen Carlson Accardi <kristen.c.accardi@intel.com>
    Cc: Stephan Berberig <s.berberig@arcor.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Len Brown <len.brown@intel.com>

---
 drivers/acpi/bay.c |   14 ++++----------
 1 file changed, 4 insertions(+), 10 deletions(-)

--- a/drivers/acpi/bay.c	2007-07-08 19:32:17.000000000 -0400
+++ b/drivers/acpi/bay.c	2007-08-27 14:01:21.000000000 -0400
@@ -328,18 +328,12 @@ static void bay_notify(acpi_handle handl
 {
 	struct bay *bay_dev = (struct bay *)data;
 	struct device *dev = &bay_dev->pdev->dev;
+	char event_string[12];
+	char *envp[] = { event_string, NULL };
 
 	bay_dprintk(handle, "Bay event");
-
-	switch(event) {
-	case ACPI_NOTIFY_BUS_CHECK:
-	case ACPI_NOTIFY_DEVICE_CHECK:
-	case ACPI_NOTIFY_EJECT_REQUEST:
-		kobject_uevent(&dev->kobj, KOBJ_CHANGE);
-		break;
-	default:
-		printk(KERN_ERR PREFIX "Bay: unknown event %d\n", event);
-	}
+	sprintf(event_string, "BAY_EVENT=%d\n", event);
+	kobject_uevent_env(&dev->kobj, KOBJ_CHANGE, envp);
 }
 
 static acpi_status
