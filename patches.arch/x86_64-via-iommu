diff -u linux-2.6.5rc2-amd64/include/asm-x86_64/proto.h-o linux-2.6.5rc2-amd64/include/asm-x86_64/proto.h
--- linux-2.6.5rc2-amd64/include/asm-x86_64/proto.h-o	2004-03-21 21:11:54.000000000 +0100
+++ linux-2.6.5rc2-amd64/include/asm-x86_64/proto.h	2004-03-26 04:39:39.000000000 +0100
@@ -101,6 +101,8 @@
 extern int fallback_aper_order;
 extern int fallback_aper_force;
 extern int iommu_aperture;
+extern int iommu_aperture_disabled;
+extern int iommu_aperture_allowed;
 
 extern void smp_local_timer_interrupt(struct pt_regs * regs);
 
diff -u linux-2.6.5rc2-amd64/arch/x86_64/kernel/pci-gart.c-o linux-2.6.5rc2-amd64/arch/x86_64/kernel/pci-gart.c
--- linux-2.6.5rc2-amd64/arch/x86_64/kernel/pci-gart.c-o	2004-03-21 21:12:09.000000000 +0100
+++ linux-2.6.5rc2-amd64/arch/x86_64/kernel/pci-gart.c	2004-03-26 04:38:03.000000000 +0100
@@ -849,6 +849,7 @@
    forcesac For SAC mode for masks <40bits  (experimental)
    fullflush Flush IOMMU on each allocation (default) 
    nofullflush Don't use IOMMU fullflush
+   allowed  overwrite iommu off workarounds for specific chipsets.
    soft	 Use software bounce buffering (default for Intel machines)
 */
 __init int iommu_setup(char *opt) 
@@ -861,8 +862,12 @@
 		    no_agp = 1;
 	    if (!memcmp(p,"off", 3))
 		    no_iommu = 1;
-	    if (!memcmp(p,"force", 5))
+	    if (!memcmp(p,"force", 5)) {
 		    force_iommu = 1;
+		    iommu_aperture_allowed = 1;
+	    } 
+	    if (!memcmp(p,"allowed",7))
+		    iommu_aperture_allowed = 1;
 	    if (!memcmp(p,"noforce", 7)) { 
 		    iommu_merge = 0;
 		    force_iommu = 0;
diff -u linux-2.6.5rc2-amd64/arch/x86_64/kernel/aperture.c-o linux-2.6.5rc2-amd64/arch/x86_64/kernel/aperture.c
--- linux-2.6.5rc2-amd64/arch/x86_64/kernel/aperture.c-o	2004-03-21 21:12:09.000000000 +0100
+++ linux-2.6.5rc2-amd64/arch/x86_64/kernel/aperture.c	2004-03-26 04:39:36.000000000 +0100
@@ -25,6 +25,8 @@
 #include <asm/pci-direct.h>
 
 int iommu_aperture;
+int iommu_aperture_disabled __initdata = 0;
+int iommu_aperture_allowed __initdata = 0;
 
 int fallback_aper_order __initdata = 1; /* 64MB */
 int fallback_aper_force __initdata = 0; 
@@ -200,6 +202,9 @@
 	u64 aper_base; 
 	int valid_agp = 0;
 
+	if (iommu_aperture_disabled)
+		return;
+
 	printk("Checking aperture...\n"); 
 
 	fix = 0;
diff -u linux-2.6.5rc2-amd64/arch/x86_64/kernel/io_apic.c-o linux-2.6.5rc2-amd64/arch/x86_64/kernel/io_apic.c
--- linux-2.6.5rc2-amd64/arch/x86_64/kernel/io_apic.c-o	2004-03-26 05:54:49.000000000 +0100
+++ linux-2.6.5rc2-amd64/arch/x86_64/kernel/io_apic.c	2004-03-26 05:54:07.000000000 +0100
@@ -34,6 +34,7 @@
 #include <asm/io.h>
 #include <asm/smp.h>
 #include <asm/desc.h>
+#include <asm/proto.h>
 
 int sis_apic_bug; /* not actually supported, dummy for compile */
 
@@ -220,7 +221,11 @@
    off. Check for an Nvidia or VIA PCI bridge and turn it off.
    Use pci direct infrastructure because this runs before the PCI subsystem. 
 
-   Can be overwritten with "apic" */
+   Can be overwritten with "apic" 
+   
+   And another hack to disable the IOMMU on VIA chipsets.
+
+   Kludge-O-Rama. */
 void __init check_ioapic(void) 
 { 
 	int num,slot,func; 
@@ -245,12 +250,21 @@
 							 PCI_VENDOR_ID);
 				vendor &= 0xffff;
 				switch (vendor) { 
-				case PCI_VENDOR_ID_NVIDIA: 
 				case PCI_VENDOR_ID_VIA:
+					if (end_pfn >= (0xffffffff>>PAGE_SHIFT) &&
+					    !iommu_aperture_allowed) { 
+						printk(KERN_INFO
+    "Looks like a VIA chipset. Disabling IOMMU. Overwrite with \"iommu=allowed\"\n"); 
+						iommu_aperture_disabled = 1; 
+					} 
+					/* FALL THROUGH */
+				case PCI_VENDOR_ID_NVIDIA:
+#ifndef CONFIG_SMP
 					printk(KERN_INFO 
      "PCI bridge %02x:%02x from %x found. Setting \"noapic\". Overwrite with \"apic\"\n",
 					       num,slot,vendor); 
 					skip_ioapic_setup = 1;
+#endif
 					return;
 				} 
 
diff -u linux/arch/x86_64/kernel/setup.c-o linux/arch/x86_64/kernel/setup.c
--- linux/arch/x86_64/kernel/setup.c-o	2004-03-26 06:07:38.000000000 +0100
+++ linux/arch/x86_64/kernel/setup.c	2004-03-26 06:08:09.000000000 +0100
@@ -475,10 +475,7 @@
 #endif
 	paging_init();
 
-#ifndef CONFIG_SMP
-	/* Temporary hack: disable the IO-APIC for UP Nvidia and VIA. */
-		check_ioapic();
-#endif
+	check_ioapic();
 #ifdef CONFIG_ACPI_BOOT
        /*
         * Initialize the ACPI boot-time table parser (gets the RSDP and SDT).
