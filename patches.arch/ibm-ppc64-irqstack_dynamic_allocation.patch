
---

 linux-2.6.5-anton/arch/ppc64/kernel/irq.c |   19 +++++++++++--------
 1 files changed, 11 insertions(+), 8 deletions(-)

diff -puN arch/ppc64/kernel/irq.c~irqstack_dynamic_allocation arch/ppc64/kernel/irq.c
--- linux-2.6.5/arch/ppc64/kernel/irq.c~irqstack_dynamic_allocation	2004-05-04 05:03:26.062988034 +1000
+++ linux-2.6.5-anton/arch/ppc64/kernel/irq.c	2004-05-04 05:56:43.214441183 +1000
@@ -41,6 +41,7 @@
 #include <linux/proc_fs.h>
 #include <linux/random.h>
 #include <linux/kallsyms.h>
+#include <linux/bootmem.h>
 
 #include <asm/uaccess.h>
 #include <asm/bitops.h>
@@ -995,11 +996,6 @@ unsigned int real_irq_to_virt_slowpath(u
 #endif /* CONFIG_PPC_ISERIES */
 
 #ifdef CONFIG_IRQSTACKS
-static unsigned char softirq_stacks[NR_CPUS][THREAD_SIZE]
-	__attribute__((__aligned__(THREAD_SIZE)));
-static unsigned char hardirq_stacks[NR_CPUS][THREAD_SIZE] 
-	__attribute__((__aligned__(THREAD_SIZE)));
-
 struct thread_info *softirq_ctx[NR_CPUS];
 struct thread_info *hardirq_ctx[NR_CPUS];
 
@@ -1007,14 +1003,21 @@ void irq_ctx_init(void)
 {
 	struct thread_info *tp;
 	int i;
+	void *stack;
 
-	for (i = 0; i < NR_CPUS; ++i) {
-		tp = (struct thread_info *) softirq_stacks[i];
+	for_each_cpu(i) {
+		stack = __alloc_bootmem(THREAD_SIZE, THREAD_SIZE, 0);
+		BUG_ON(!stack);
+		memset(stack, 0, THREAD_SIZE);
+		tp = (struct thread_info *) stack;
 		softirq_ctx[i] = tp;
 		tp->cpu = i;
 		tp->preempt_count = SOFTIRQ_OFFSET;
 
-		tp = (struct thread_info *) hardirq_stacks[i];
+		stack = __alloc_bootmem(THREAD_SIZE, THREAD_SIZE, 0);
+		BUG_ON(!stack);
+		memset(stack, 0, THREAD_SIZE);
+		tp = (struct thread_info *) stack;
 		hardirq_ctx[i] = tp;
 		tp->cpu = i;
 		tp->preempt_count = HARDIRQ_OFFSET;

_
