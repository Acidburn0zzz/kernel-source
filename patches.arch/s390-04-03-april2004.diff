- Description: iucv: Connection lost if peers use different interface names
  Symptom:     Data sent via an iucv connection whose peers use different
               interface names is not received.
  Problem:     When connecting to a peer via IUCV, it is possible to
               specify up to 16 bytes of user data. Originally always the
               same default string was used, but in the last patch the
               interface name was stored within these 16 bytes. This has
               caused now problems in the interrupt handler of iucv.c,
               which could no longer determine its matching handler,
               if interface names are different on both sides.
  Solution:    Switch back to the original "iucvMagic" string specified
               as user data for iucv connect.
  Problem-ID:  SUSE Bugzilla 41252
  Archs:       s390-31, s390-64

--- linux-2.5/drivers/s390/net/netiucv.c	13 May 2004 12:01:39 -0000	1.48.2.2
+++ linux-2.5/drivers/s390/net/netiucv.c	28 May 2004 08:31:07 -0000	1.48.2.3
@@ -1,5 +1,5 @@
 /*
- * $Id: netiucv.c,v 1.48.2.2 2004/05/13 12:01:39 braunu Exp $
+ * $Id: netiucv.c,v 1.48.2.3 2004/05/28 08:31:07 braunu Exp $
  *
  * IUCV network driver
  *
@@ -30,7 +30,7 @@
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
  *
- * RELEASE-TAG: IUCV network driver $Revision: 1.48.2.2 $
+ * RELEASE-TAG: IUCV network driver $Revision: 1.48.2.3 $
  *
  */
 
@@ -60,7 +60,6 @@
 #include <asm/io.h>
 #include <asm/bitops.h>
 #include <asm/uaccess.h>
-#include <asm/ebcdic.h>
 
 #include "iucv.h"
 #include "fsm.h"
@@ -167,10 +166,10 @@
 }
 
 static __u8 iucv_host[8] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
-//static __u8 iucvMagic[16] = {
-//	0xF0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
-//	0xF0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40
-//};
+static __u8 iucvMagic[16] = {
+	0xF0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
+	0xF0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40
+};
 
 /**
  * This mask means the 16-byte IUCV "magic" and the origin userid must
@@ -769,18 +768,10 @@
 	struct iucv_event *ev = (struct iucv_event *)arg;
 	struct iucv_connection *conn = ev->conn;
 	__u16 msglimit;
-	int rc, len;
-	__u8 iucvMagic[16] = {
-	0xF0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
-        0xF0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40
-	};
+	int rc;
 
 	pr_debug("%s() called\n", __FUNCTION__);
 
-	len = (IFNAMSIZ < sizeof(conn->netdev->name)) ?
-		IFNAMSIZ : sizeof(conn->netdev->name);
-	memcpy(iucvMagic, conn->netdev->name, len);
-	ASCEBC (iucvMagic, len);
 	if (conn->handle == 0) {
 		conn->handle =
 			iucv_register_program(iucvMagic, conn->userid, mask,
@@ -1958,7 +1949,7 @@
 static void
 netiucv_banner(void)
 {
-	char vbuf[] = "$Revision: 1.48.2.2 $";
+	char vbuf[] = "$Revision: 1.48.2.3 $";
 	char *version = vbuf;
 
 	if ((version = strchr(version, ':'))) {

