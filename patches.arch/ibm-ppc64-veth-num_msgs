ChangeSet
  1.1522.1.1 04/03/17 17:00:12 dgibson@wocket.ozlabs.ibm.com +2 -0
  Remove num_msgs variable from iSeries virtual ethernet driver.  It always had the
  same value, so was pointless and just increased confusion.

  drivers/net/iseries_veth.h
    1.5 04/03/17 16:59:42 dgibson@wocket.ozlabs.ibm.com +0 -1
    Remove num_msgs variable from iSeries virtual ethernet driver.  It always had the
    same value, so was pointless and just increased confusion.

  drivers/net/iseries_veth.c
    1.10 04/03/17 16:59:42 dgibson@wocket.ozlabs.ibm.com +16 -17
    Remove num_msgs variable from iSeries virtual ethernet driver.  It always had the
    same value, so was pointless and just increased confusion.

diff -Nru a/drivers/net/iseries_veth.c b/drivers/net/iseries_veth.c
--- a/drivers/net/iseries_veth.c	Wed Mar 17 12:38:02 2004
+++ b/drivers/net/iseries_veth.c	Wed Mar 17 12:38:02 2004
@@ -90,6 +90,16 @@
 
 #define VETH_NUMBUFFERS		120
 
+#if VETH_NUMBUFFERS < 10
+#define ACK_THRESHOLD 1
+#elif VETH_NUMBUFFERS < 20
+#define ACK_THRESHOLD 4
+#elif VETH_NUMBUFFERS < 40
+#define ACK_THRESHOLD 10
+#else
+#define ACK_THRESHOLD 20
+#endif
+
 static int veth_open(struct net_device *dev);
 static int veth_close(struct net_device *dev);
 static int veth_start_xmit(struct sk_buff *skb, struct net_device *dev);
@@ -694,7 +704,7 @@
 		for (i = 0; i < VETH_MAX_ACKS_PER_MSG; ++i) {
 			u16 msgnum = event->u.frames_ack_data.token[i];
 
-			if (msgnum < cnx->num_msgs)
+			if (msgnum < VETH_NUMBUFFERS)
 				veth_recycle_msg(cnx, cnx->msgs + msgnum);
 		}
 		break;
@@ -752,8 +762,6 @@
 		VETHSTACKPUSH(&cnx->msg_stack, msgs + i);
 	}
 
-	cnx->num_msgs = VETH_NUMBUFFERS;
-
 	cnx->mNumberAllocated = veth_allocate_events(rlp, 2);
 
 	if (cnx->mNumberAllocated < 2) {
@@ -765,6 +773,10 @@
 
 	cnx->mNumberRcvMsgs = veth_allocate_events(cnx->remote_lp,
 						   VETH_NUMBUFFERS);
+
+	cnx->local_caps.num_buffers = VETH_NUMBUFFERS;
+	cnx->local_caps.ack_threshold = ACK_THRESHOLD;
+	cnx->local_caps.ack_timeout = VETH_ACKTIMEOUT;
 }
 
 static void veth_open_connection(u8 rlp)
@@ -797,19 +809,6 @@
 
 	spin_unlock_irq(&cnx->ack_gate);
 
-	cnx->local_caps.num_buffers = cnx->num_msgs;
-
-	if (cnx->num_msgs < 10)
-		cnx->local_caps.ack_threshold = 1;
-	else if (cnx->num_msgs < 20)
-		cnx->local_caps.ack_threshold = 4;
-	else if (cnx->num_msgs < 40)
-		cnx->local_caps.ack_threshold = 10;
-	else
-		cnx->local_caps.ack_threshold = 20;
-
-	cnx->local_caps.ack_timeout = VETH_ACKTIMEOUT;
-
 	rc = veth_signalevent(cnx, VethEventTypeCap,
 			      HvLpEvent_AckInd_DoAck,
 			      HvLpEvent_AckType_ImmediateAck,
@@ -955,7 +954,7 @@
 		spin_unlock_irqrestore(&cnx->ack_gate, flags);
 
 		/* Clean up any leftover messages */
-		for (i = 0; i < cnx->num_msgs; ++i)
+		for (i = 0; i < VETH_NUMBUFFERS; ++i)
 			veth_recycle_msg(cnx, cnx->msgs + i);
 	}
 
diff -Nru a/drivers/net/iseries_veth.h b/drivers/net/iseries_veth.h
--- a/drivers/net/iseries_veth.h	Wed Mar 17 12:38:02 2004
+++ b/drivers/net/iseries_veth.h	Wed Mar 17 12:38:02 2004
@@ -85,7 +85,6 @@
 	struct work_struct finish_open_wq;
 	struct work_struct monitor_ack_wq;
 	struct timer_list ack_timer;
-	u32 num_msgs;
 	struct veth_msg *msgs;
 
 	HvLpInstanceId src_inst;
.........................................................................
# vim: syntax=diff

