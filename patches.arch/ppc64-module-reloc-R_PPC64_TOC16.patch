From: Peter Bergner <bergner@vnet.ibm.com>
Subject: R_PPC64_TOC16 in rtas_flash.ko and scanlog.ko                                                                                                           

handle relocation types for 32-bit memory access,
gcc4 generates them.

Signed-off-by: Olaf Hering <olh@suse.de>

Index: linux-2.6.13-15/arch/ppc64/kernel/module.c
===================================================================
--- linux-2.6.13-15.orig/arch/ppc64/kernel/module.c
+++ linux-2.6.13-15/arch/ppc64/kernel/module.c
@@ -354,6 +354,19 @@ int apply_relocate_add(Elf64_Shdr *sechd
 				| (value & 0xfffc);
 			break;
 
+		case R_PPC64_TOC16:
+			/* Subtact TOC pointer */
+			value -= my_r2(sechdrs, me);
+			if (value + 0x8000 > 0xffff) {
+				printk("%s: bad TOC16 relocation (%lu)\n",
+					me->name, value);
+				return -ENOEXEC;
+			}
+			*((uint16_t *) location)
+				= (*((uint16_t *) location) & ~0xffff)
+				| (value & 0xffff);
+			break;
+
 		case R_PPC_REL24:
 			/* FIXME: Handle weak symbols here --RR */
 			if (sym->st_shndx == SHN_UNDEF) {
