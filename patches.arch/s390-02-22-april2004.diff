- Description: lcs: null-pointer dereference failure after unsuccessful
               set_online.
  Symptom:     If setting an LCS card online fails, the next try to set
               the card online results in a null-pointer dereference.
  Problem:     Card's IO buffers are freed if lcs_detect returns an error.
  Solution:    Do not call lcs_cleanup_card in case of errors in lcs_new_device.
               This allows for trying to set an LCS card online multiple times.
               lcs_cleanup_card is called in lcs_remove_device which is
               sufficient for freeing allocated memory.
  Problem-ID:  --
  Archs:       s390-31, s390-64

--- linux-2.5/drivers/s390/net/lcs.c	14 May 2004 07:30:37 -0000	1.74.2.2
+++ linux-2.5/drivers/s390/net/lcs.c	14 May 2004 14:00:16 -0000	1.74.2.3
@@ -11,7 +11,7 @@
  *			  Frank Pavlic (pavlic@de.ibm.com) and
  *		 	  Martin Schwidefsky <schwidefsky@de.ibm.com>
  *
- *    $Revision: 1.74.2.2 $	 $Date: 2004/05/14 07:30:37 $
+ *    $Revision: 1.74.2.3 $	 $Date: 2004/05/14 14:00:16 $
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -58,7 +58,7 @@
 /**
  * initialization string for output
  */
-#define VERSION_LCS_C  "$Revision: 1.74.2.2 $"
+#define VERSION_LCS_C  "$Revision: 1.74.2.3 $"
 
 static char version[] __initdata = "LCS driver ("VERSION_LCS_C "/" VERSION_LCS_H ")";
 static char debug_buffer[255];
@@ -1898,8 +1898,10 @@
 	lcs_setup_card(card);
 	rc = lcs_detect(card);
 	if (rc) {
+		LCS_DBF_TEXT(2, setup, "dtctfail");
+		PRINT_WARN("Detection of LCS card failed with return code "
+			   "%d (0x%x)\n", rc, rc);
 		lcs_stopcard(card);
-		lcs_cleanup_card(card);
 		goto out;
 	}
 	if (card->dev) {
@@ -1962,7 +1964,6 @@
 
 	ccw_device_set_offline(card->read.ccwdev);
 	ccw_device_set_offline(card->write.ccwdev);
-	lcs_cleanup_card(card);
 	return -ENODEV;
 }
 

