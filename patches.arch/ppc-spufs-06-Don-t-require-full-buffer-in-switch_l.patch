Subject: Don't require full buffer in switch_log read
From: Jeremy Kerr <jk@ozlabs.org>
References: 447133 - LTC50070

Currently, read() on the sputrace log will block until the read buffer
is full. This makes it difficult to retrieve the end of the buffer, as
the user will need to read with the right-sized buffer.

In a similar method as 91553a1b5e0df006a3573a88d98ee7cd48a3818a, this
change makes the switch_log return if there has already been data
read.

Signed-off-by: Jeremy Kerr <jk@ozlabs.org>
Signed-off-by: Olaf Hering <olh@suse.de>
---
 arch/powerpc/platforms/cell/spufs/file.c |   46 ++++++++++++++++++-------------
 1 file changed, 27 insertions(+), 19 deletions(-)

--- a/arch/powerpc/platforms/cell/spufs/file.c
+++ b/arch/powerpc/platforms/cell/spufs/file.c
@@ -2506,30 +2506,38 @@ static ssize_t spufs_switch_log_read(str
 		char tbuf[128];
 		int width;
 
-		if (file->f_flags & O_NONBLOCK) {
-			if (spufs_switch_log_used(ctx) == 0) {
+		if (spufs_switch_log_used(ctx) == 0) {
+			if (cnt > 0) {
+				/* If there's data ready to go, we can
+				 * just return straight away */
+				break;
+
+			} else if (file->f_flags & O_NONBLOCK) {
 				error = -EAGAIN;
 				break;
+
+			} else {
+				/* spufs_wait will drop the mutex and
+				 * re-acquire, but since we're in read(), the
+				 * file cannot be _released (and so
+				 * ctx->switch_log is stable).
+				 */
+				error = spufs_wait(ctx->switch_log->wait,
+						spufs_switch_log_used(ctx) > 0);
+
+				/* On error, spufs_wait returns without the
+				 * state mutex held */
+				if (error)
+					return error;
+
+				/* We may have had entries read from underneath
+				 * us while we dropped the mutex in spufs_wait,
+				 * so re-check */
+				if (spufs_switch_log_used(ctx) == 0)
+					continue;
 			}
-		} else {
-			/* spufs_wait will drop the mutex and re-acquire,
-			 * but since we're in read(), the file cannot be
-			 * _released (and so ctx->switch_log is stable).
-			 */
-			error = spufs_wait(ctx->switch_log->wait,
-					spufs_switch_log_used(ctx) > 0);
-
-			/* On error, spufs_wait returns without the
-			 * state mutex held */
-			if (error)
-				return error;
 		}
 
-		/* We may have had entries read from underneath us while we
-		 * dropped the mutex in spufs_wait, so re-check */
-		if (ctx->switch_log->head == ctx->switch_log->tail)
-			continue;
-
 		width = switch_log_sprint(ctx, tbuf, sizeof(tbuf));
 		if (width < len)
 			ctx->switch_log->tail =
