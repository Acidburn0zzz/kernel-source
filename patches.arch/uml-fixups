--- linux-2.6.0-test2/arch/x86_64/ia32/sys_ia32.c.uml	2003-08-04 14:51:44.000000000 +0200
+++ linux-2.6.0-test2/arch/x86_64/ia32/sys_ia32.c	2003-08-04 14:52:06.000000000 +0200
@@ -238,7 +238,7 @@
 
 	mm = current->mm; 
 	down_write(&mm->mmap_sem); 
-	retval = do_mmap_pgoff(file, a.addr, a.len, a.prot, a.flags, a.offset>>PAGE_SHIFT);
+	retval = do_mmap_pgoff(mm, file, a.addr, a.len, a.prot, a.flags, a.offset>>PAGE_SHIFT);
 	if (file)
 		fput(file);
 
@@ -1451,7 +1451,7 @@
 		prot |= vm_force_exec32;
 
 	down_write(&mm->mmap_sem);
-	error = do_mmap_pgoff(file, addr, len, prot, flags, pgoff);
+	error = do_mmap_pgoff(mm, file, addr, len, prot, flags, pgoff);
 	up_write(&mm->mmap_sem);
 
 	if (file)
--- linux-2.6.0-test2/arch/ppc/kernel/syscalls.c.EXT	2003-08-04 15:24:22.000000000 +0200
+++ linux-2.6.0-test2/arch/ppc/kernel/syscalls.c	2003-08-04 15:24:45.000000000 +0200
@@ -171,7 +171,7 @@
 	}
 	
 	down_write(&current->mm->mmap_sem);
-	ret = do_mmap_pgoff(file, addr, len, prot, flags, pgoff);
+	ret = do_mmap_pgoff(current->mm, file, addr, len, prot, flags, pgoff);
 	up_write(&current->mm->mmap_sem);
 	if (file)
 		fput(file);
--- linux-2.6.0-test2/arch/i386/kernel/sys_i386.c.EXT	2003-08-04 15:24:50.000000000 +0200
+++ linux-2.6.0-test2/arch/i386/kernel/sys_i386.c	2003-08-04 15:25:18.000000000 +0200
@@ -56,7 +56,7 @@
 	}
 
 	down_write(&current->mm->mmap_sem);
-	error = do_mmap_pgoff(file, addr, len, prot, flags, pgoff);
+	error = do_mmap_pgoff(current->mm, file, addr, len, prot, flags, pgoff);
 	up_write(&current->mm->mmap_sem);
 
 	if (file)
--- linux-2.6.0-test2/arch/ia64/ia32/sys_ia32.c.EXT	2003-08-04 15:25:18.000000000 +0200
+++ linux-2.6.0-test2/arch/ia64/ia32/sys_ia32.c	2003-08-04 15:25:41.000000000 +0200
@@ -2204,7 +2204,7 @@
 	}
 
 	down_write(&current->mm->mmap_sem);
-	addr = do_mmap_pgoff(file, IA32_IOBASE,
+	addr = do_mmap_pgoff(current->mm, file, IA32_IOBASE,
 			     IOLEN, PROT_READ|PROT_WRITE, MAP_SHARED,
 			     (ia64_iobase & ~PAGE_OFFSET) >> PAGE_SHIFT);
 	up_write(&current->mm->mmap_sem);
--- linux-2.6.0-test2/arch/ia64/kernel/sys_ia64.c.EXT	2003-08-04 15:25:45.000000000 +0200
+++ linux-2.6.0-test2/arch/ia64/kernel/sys_ia64.c	2003-08-04 15:26:15.000000000 +0200
@@ -217,7 +217,7 @@
 	}
 
 	down_write(&current->mm->mmap_sem);
-	addr = do_mmap_pgoff(file, addr, len, prot, flags, pgoff);
+	addr = do_mmap_pgoff(current->mm, file, addr, len, prot, flags, pgoff);
 	up_write(&current->mm->mmap_sem);
 
 out:	if (file)
--- linux-2.6.0-test2/arch/x86_64/kernel/sys_x86_64.c.EXT	2003-08-04 15:26:23.000000000 +0200
+++ linux-2.6.0-test2/arch/x86_64/kernel/sys_x86_64.c	2003-08-04 15:26:37.000000000 +0200
@@ -56,7 +56,7 @@
 			goto out;
 	}
 	down_write(&current->mm->mmap_sem);
-	error = do_mmap_pgoff(file, addr, len, prot, flags, off >> PAGE_SHIFT);
+	error = do_mmap_pgoff(current->mm, file, addr, len, prot, flags, off >> PAGE_SHIFT);
 	up_write(&current->mm->mmap_sem);
 
 	if (file)
--- linux-2.6.0-test2/mm/memory.c.uml	2003-08-04 16:18:13.000000000 +0200
+++ linux-2.6.0-test2/mm/memory.c	2003-08-04 16:18:25.000000000 +0200
@@ -683,8 +683,10 @@
 
 static int init_fixmap_vma(void)
 {
+#ifdef FIXADDR_START
 	fixmap_vma.vm_start = FIXADDR_START;
 	fixmap_vma.vm_end = FIXADDR_TOP;
+#endif
 	return(0);
 }
 
--- linux-2.6.0-test2/arch/um/kernel/um_arch.c.uml	2003-08-05 11:56:01.000000000 +0200
+++ linux-2.6.0-test2/arch/um/kernel/um_arch.c	2003-08-05 11:56:11.000000000 +0200
@@ -48,7 +48,7 @@
 /* Placeholder to make UML link until the vsyscall stuff is actually 
  * implemented
  */
-void __kernel_vsyscall;
+void *__kernel_vsyscall[0];
 
 unsigned long thread_saved_pc(struct task_struct *task)
 {
--- linux-2.6.0-test2/arch/i386/kernel/module.c.uml	2003-08-05 12:01:36.000000000 +0200
+++ linux-2.6.0-test2/arch/i386/kernel/module.c	2003-08-05 12:03:58.000000000 +0200
@@ -53,6 +53,10 @@
 	return 0;
 }
 
+/* from asm-i386/elf.h */
+#define R_386_32        1
+#define R_386_PC32      2
+
 int apply_relocate(Elf32_Shdr *sechdrs,
 		   const char *strtab,
 		   unsigned int symindex,
--- linux-2.6.0-test2/include/asm-um/archparam-i386.h.uml	2003-08-05 11:56:38.000000000 +0200
+++ linux-2.6.0-test2/include/asm-um/archparam-i386.h	2003-08-05 11:56:48.000000000 +0200
@@ -59,7 +59,7 @@
 #define VSYSCALL_BASE	(__fix_to_virt(FIX_VSYSCALL))
 #define VSYSCALL_EHDR	((const struct elfhdr *) VSYSCALL_BASE)
 #define VSYSCALL_ENTRY	((unsigned long) &__kernel_vsyscall)
-extern void __kernel_vsyscall;
+extern void *__kernel_vsyscall[0];
 
 /*
  * Architecture-neutral AT_ values in 0-17, leave some room
--- linux-2.6.0-test2/arch/um/sys-i386/ptrace_user.c.uml	2003-08-07 09:50:02.000000000 +0200
+++ linux-2.6.0-test2/arch/um/sys-i386/ptrace_user.c	2003-08-07 09:50:17.000000000 +0200
@@ -7,8 +7,9 @@
 #include <errno.h>
 #include <unistd.h>
 #include <linux/stddef.h>
-#include <sys/ptrace.h>
-#include <asm/ptrace.h>
+#include <linux/ptrace.h>
+//#include <sys/ptrace.h>
+//#include <asm/ptrace.h>
 #include <asm/user.h>
 #include "kern_util.h"
 #include "sysdep/thread.h"
--- linux-2.6.0-test3/arch/i386/kernel/module.c.uml	2003-08-11 15:11:02.000000000 +0200
+++ linux-2.6.0-test3/arch/i386/kernel/module.c	2003-08-11 15:11:46.000000000 +0200
@@ -114,6 +114,7 @@
 		    const Elf_Shdr *sechdrs,
 		    struct module *me)
 {
+#ifndef __arch_um__
 	const Elf_Shdr *s;
 	char *secstrings = (void *)hdr + sechdrs[hdr->e_shstrndx].sh_offset;
 
@@ -124,7 +125,8 @@
 			continue;
 		seg = (void *)s->sh_addr; 
 		apply_alternatives(seg, seg + s->sh_size); 
-	} 	
+	}
+#endif
 	return 0;
 }
 
