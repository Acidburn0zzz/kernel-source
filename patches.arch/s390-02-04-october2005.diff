From: Gerald Schaefer <geraldsc@de.ibm.com>
Subject: IBM Codestream linux-2.6.16 october2005, patch 02-04
Patch-Mainline: 2.6.17-rc4

  Description: dasd: fix kernel panic with fail-fast requests on quiesced devices
  Symptom:     Kernel panic caused by oops in dasd_int_handler when using
               fail-fast flag in I/O request on a dasd disk which has been
               quiesced.
  Problem:     Incorrect check in the dasd request start function causes requests
               with pending interruptions to be freed. Once the interruption
               occurs, arbitrary memory regions are accessed.
  Solution:    Modify request start function to only work on requests in valid
               state.
  Problem-ID:  22871
  Archs:       s390-31, s390-64

Acked-by: Hannes Reinecke <hare@suse.de>

--- linux-2.5/drivers/s390/block/dasd.c	21 Mar 2006 19:16:27 -0000	1.181.2.1
+++ linux-2.5/drivers/s390/block/dasd.c	3 Apr 2006 10:20:33 -0000	1.181.2.2
@@ -1246,24 +1246,27 @@
 	if (list_empty(&device->ccw_queue))
 		return;
 	cqr = list_entry(device->ccw_queue.next, struct dasd_ccw_req, list);
-        /* check FAILFAST */
+	if (cqr->status != DASD_CQR_QUEUED)
+		return;
+	/* Non-temporary stop condition will trigger fail fast */
 	if (device->stopped & ~DASD_STOPPED_PENDING &&
 	    test_bit(DASD_CQR_FLAGS_FAILFAST, &cqr->flags)) {
 		cqr->status = DASD_CQR_FAILED;
 		dasd_schedule_bh(device);
+		return;
 	}
-	if ((cqr->status == DASD_CQR_QUEUED) &&
-	    (!device->stopped)) {
-		/* try to start the first I/O that can be started */
-		rc = device->discipline->start_IO(cqr);
-		if (rc == 0)
-			dasd_set_timer(device, cqr->expires);
-		else if (rc == -EACCES) {
-			dasd_schedule_bh(device);
-		} else
-			/* Hmpf, try again in 1/2 sec */
-			dasd_set_timer(device, 50);
-	}
+	/* Don't try to start requests if device is stopped */
+	if (device->stopped)
+		return;
+
+	rc = device->discipline->start_IO(cqr);
+	if (rc == 0)
+		dasd_set_timer(device, cqr->expires);
+	else if (rc == -EACCES) {
+		dasd_schedule_bh(device);
+	} else
+		/* Hmpf, try again in 1/2 sec */
+		dasd_set_timer(device, 50);
 }
 
 /*

