From: Hannes Reinecke <hare@suse.de>
Subject: qeth compilation fixes

Converts qeth_proc to use klists.
Compilation fix only; I've no idea whether it actually works.


--- linux-2.6.12/drivers/s390/net/qeth_main.c.orig	2005-06-29 13:46:55.086508427 +0200
+++ linux-2.6.12/drivers/s390/net/qeth_main.c	2005-06-29 15:19:36.746508427 +0200
@@ -8120,20 +8120,21 @@ static struct notifier_block qeth_ip6_no
 #endif
 
 static int
-qeth_reboot_event(struct notifier_block *this, unsigned long event, void *ptr)
+__qeth_reboot_card(struct device *dev, void *data)
 {
+	struct qeth_card *card = (struct qeth_card *) dev->driver_data;
+
+	qeth_clear_ip_list(card, 0, 0);
+	qeth_qdio_clear_card(card, 0);
 
-	struct device *entry;
-	struct qeth_card *card;
+	return 0;
+}
 
-	down_read(&qeth_ccwgroup_driver.driver.bus->subsys.rwsem);
-	       list_for_each_entry(entry, &qeth_ccwgroup_driver.driver.devices,
-			           driver_list) {
-	               card = (struct qeth_card *) entry->driver_data;
-		       qeth_clear_ip_list(card, 0, 0);
-		       qeth_qdio_clear_card(card, 0);
-	       }
-	up_read(&qeth_ccwgroup_driver.driver.bus->subsys.rwsem);
+static int
+qeth_reboot_event(struct notifier_block *this, unsigned long event, void *ptr)
+{
+	driver_for_each_device(&qeth_ccwgroup_driver.driver, NULL, NULL, 
+			       __qeth_reboot_card);
 	return NOTIFY_DONE;
 }
 
--- linux-2.6.12/drivers/s390/net/qeth_proc.c.orig	2005-06-17 21:48:29.000000000 +0200
+++ linux-2.6.12/drivers/s390/net/qeth_proc.c	2005-06-29 16:57:16.166508427 +0200
@@ -27,51 +27,66 @@ const char *VERSION_QETH_PROC_C = "$Revi
 #define QETH_PROCFILE_NAME "qeth"
 static struct proc_dir_entry *qeth_procfile;
 
+static struct device *qeth_procfile_next_device(struct klist_iter *i)
+{
+	struct klist_node * n = klist_next(i);
+	return n ? container_of(n, struct device, knode_driver) : NULL;
+}
+
 static void *
 qeth_procfile_seq_start(struct seq_file *s, loff_t *offset)
 {
-	struct list_head *next_card = NULL;
+	struct device *next_dev = NULL;
+	struct klist_iter iter;
 	int i = 0;
 
-	down_read(&qeth_ccwgroup_driver.driver.bus->subsys.rwsem);
-
 	if (*offset == 0)
 		return SEQ_START_TOKEN;
 
-	/* get card at pos *offset */
-	list_for_each(next_card, &qeth_ccwgroup_driver.driver.devices)
-		if (++i == *offset)
-			return next_card;
+	klist_iter_init(&qeth_ccwgroup_driver.driver.klist_devices, &iter);
 
-	return NULL;
+	while ((next_dev = qeth_procfile_next_device(&iter)))
+	       if (++i == *offset)
+		       goto found;
+	next_dev = NULL;
+
+ found:
+	klist_iter_exit(&iter);
+
+	return next_dev;
 }
 
 static void
 qeth_procfile_seq_stop(struct seq_file *s, void* it)
 {
-	up_read(&qeth_ccwgroup_driver.driver.bus->subsys.rwsem);
+	return;
 }
 
 static void *
 qeth_procfile_seq_next(struct seq_file *s, void *it, loff_t *offset)
 {
-	struct list_head *next_card = NULL;
-	struct list_head *current_card;
+	struct klist_iter iter;
+	struct device *current_dev = it;
+	struct device *next_dev;
 
-	if (it == SEQ_START_TOKEN) {
-		next_card = qeth_ccwgroup_driver.driver.devices.next;
-		if (next_card->next == next_card) /* list empty */
-			return NULL;
-		(*offset)++;
-	} else {
-		current_card = (struct list_head *)it;
-		if (current_card->next == &qeth_ccwgroup_driver.driver.devices)
-			return NULL; /* end of list reached */
-		next_card = current_card->next;
-		(*offset)++;
-	}
+	if (!it)
+		return NULL;
+
+	if (it == SEQ_START_TOKEN)
+		current_dev = NULL;
+
+	klist_iter_init_node(&qeth_ccwgroup_driver.driver.klist_devices, 
+			     &iter, current_dev == SEQ_START_TOKEN? 
+			     &current_dev->knode_driver : NULL );
+
+	next_dev = qeth_procfile_next_device(&iter);
+
+	if (!next_dev)
+		return NULL;
 
-	return next_card;
+	(*offset)++;
+
+	return next_dev;
 }
 
 static inline const char *
@@ -114,7 +129,7 @@ qeth_get_router_str(struct qeth_card *ca
 static int
 qeth_procfile_seq_show(struct seq_file *s, void *it)
 {
-	struct device *device;
+	struct device *device = it;
 	struct qeth_card *card;
 	char tmp[12]; /* for qeth_get_prioq_str */
 
@@ -126,7 +141,6 @@ qeth_procfile_seq_show(struct seq_file *
 			      "-------------- ---- ------ ---------- ---- "
 			      "---- ----- -----\n");
 	} else {
-		device = list_entry(it, struct device, driver_list);
 		card = device->driver_data;
 		seq_printf(s, "%s/%s/%s x%02X   %-10s %-14s %-4i ",
 				CARD_RDEV_ID(card),
@@ -177,46 +191,12 @@ static struct proc_dir_entry *qeth_perf_
 
 #ifdef CONFIG_QETH_PERF_STATS
 
-static void *
-qeth_perf_procfile_seq_start(struct seq_file *s, loff_t *offset)
-{
-	struct list_head *next_card = NULL;
-	int i = 0;
-
-	down_read(&qeth_ccwgroup_driver.driver.bus->subsys.rwsem);
-	/* get card at pos *offset */
-	list_for_each(next_card, &qeth_ccwgroup_driver.driver.devices){
-		if (i == *offset)
-			return next_card;
-		i++;
-	}
-	return NULL;
-}
-
-static void
-qeth_perf_procfile_seq_stop(struct seq_file *s, void* it)
-{
-	up_read(&qeth_ccwgroup_driver.driver.bus->subsys.rwsem);
-}
-
-static void *
-qeth_perf_procfile_seq_next(struct seq_file *s, void *it, loff_t *offset)
-{
-	struct list_head *current_card = (struct list_head *)it;
-
-	if (current_card->next == &qeth_ccwgroup_driver.driver.devices)
-		return NULL; /* end of list reached */
-	(*offset)++;
-	return current_card->next;
-}
-
 static int
 qeth_perf_procfile_seq_show(struct seq_file *s, void *it)
 {
-	struct device *device;
+	struct device *device = it;
 	struct qeth_card *card;
 
-	device = list_entry(it, struct device, driver_list);
 	card = device->driver_data;
 	seq_printf(s, "For card with devnos %s/%s/%s (%s):\n",
 			CARD_RDEV_ID(card),
@@ -286,9 +266,9 @@ qeth_perf_procfile_seq_show(struct seq_f
 }
 
 static struct seq_operations qeth_perf_procfile_seq_ops = {
-	.start = qeth_perf_procfile_seq_start,
-	.stop  = qeth_perf_procfile_seq_stop,
-	.next  = qeth_perf_procfile_seq_next,
+	.start = qeth_procfile_seq_start,
+	.stop  = qeth_procfile_seq_stop,
+	.next  = qeth_procfile_seq_next,
 	.show  = qeth_perf_procfile_seq_show,
 };
 
@@ -315,55 +295,10 @@ static struct file_operations qeth_perf_
 #define QETH_IPATO_PROCFILE_NAME "qeth_ipa_takeover"
 static struct proc_dir_entry *qeth_ipato_procfile;
 
-static void *
-qeth_ipato_procfile_seq_start(struct seq_file *s, loff_t *offset)
-{
-	struct list_head *next_card = NULL;
-	int i = 0;
-
-	down_read(&qeth_ccwgroup_driver.driver.bus->subsys.rwsem);
-	/* TODO: finish this */
-	/*
-	 * maybe SEQ_SATRT_TOKEN can be returned for offset 0
-	 * output driver settings then;
-	 * else output setting for respective card
-	 */
-	/* get card at pos *offset */
-	list_for_each(next_card, &qeth_ccwgroup_driver.driver.devices){
-		if (i == *offset)
-			return next_card;
-		i++;
-	}
-	return NULL;
-}
-
-static void
-qeth_ipato_procfile_seq_stop(struct seq_file *s, void* it)
-{
-	up_read(&qeth_ccwgroup_driver.driver.bus->subsys.rwsem);
-}
-
-static void *
-qeth_ipato_procfile_seq_next(struct seq_file *s, void *it, loff_t *offset)
-{
-	struct list_head *current_card = (struct list_head *)it;
-
-	/* TODO: finish this */
-	/*
-	 * maybe SEQ_SATRT_TOKEN can be returned for offset 0
-	 * output driver settings then;
-	 * else output setting for respective card
-	 */
-	if (current_card->next == &qeth_ccwgroup_driver.driver.devices)
-		return NULL; /* end of list reached */
-	(*offset)++;
-	return current_card->next;
-}
-
 static int
 qeth_ipato_procfile_seq_show(struct seq_file *s, void *it)
 {
-	struct device *device;
+	struct device *device = it;
 	struct qeth_card *card;
 
 	/* TODO: finish this */
@@ -372,16 +307,15 @@ qeth_ipato_procfile_seq_show(struct seq_
 	 * output driver settings then;
 	 * else output setting for respective card
 	 */
-	device = list_entry(it, struct device, driver_list);
 	card = device->driver_data;
 
 	return 0;
 }
 
 static struct seq_operations qeth_ipato_procfile_seq_ops = {
-	.start = qeth_ipato_procfile_seq_start,
-	.stop  = qeth_ipato_procfile_seq_stop,
-	.next  = qeth_ipato_procfile_seq_next,
+	.start = qeth_procfile_seq_start,
+	.stop  = qeth_procfile_seq_stop,
+	.next  = qeth_procfile_seq_next,
 	.show  = qeth_ipato_procfile_seq_show,
 };
 
