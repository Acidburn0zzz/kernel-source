From: Raymund Will <rw@suse.de>
Subject: sgi-xpc: need to pass the physical address, not virtual.
References: bnc#458811

This version differs significantly from the community patch,
that breaks kABI after RC2, which is considered worse than
deviating from upstream (at least in this area).

Instead of actually _passing_ the physical address to
uv_bios_mq_watchlist_alloc() it's converted locally.

Signed-off-by: Raymund Will <rw@suse.de>

---
 arch/x86/kernel/bios_uv.c    |    4 +++-
 drivers/misc/sgi-xp/xpc_uv.c |    4 ++--
 include/asm-x86/uv/bios.h    |    2 +-
 3 files changed, 6 insertions(+), 4 deletions(-)

--- a/arch/x86/kernel/bios_uv.c
+++ b/arch/x86/kernel/bios_uv.c
@@ -101,13 +101,15 @@ s64 uv_bios_get_sn_info(int fc, int *uvt
 }
 
 int
-uv_bios_mq_watchlist_alloc(int blade, unsigned long addr, unsigned int mq_size,
+uv_bios_mq_watchlist_alloc(int blade, void *mq, unsigned int mq_size,
 			   unsigned long *intr_mmr_offset)
 {
 	union uv_watchlist_u size_blade;
+	unsigned long addr;
 	u64 watchlist;
 	s64 ret;
 
+	addr = uv_gpa(mq);
 	size_blade.size = mq_size;
 	size_blade.blade = blade;
 
--- a/drivers/misc/sgi-xp/xpc_uv.c
+++ b/drivers/misc/sgi-xp/xpc_uv.c
@@ -119,7 +119,7 @@ xpc_gru_mq_watchlist_alloc_uv(struct xpc
 	int ret;
 
 #if defined CONFIG_X86_64
-	ret = uv_bios_mq_watchlist_alloc(mq->mmr_blade, uv_gpa(mq->address),
+	ret = uv_bios_mq_watchlist_alloc(mq->mmr_blade, mq->address,
 					 mq->order, &mq->mmr_offset);
 	if (ret < 0) {
 		dev_err(xpc_part, "uv_bios_mq_watchlist_alloc() failed, "
@@ -127,7 +127,7 @@ xpc_gru_mq_watchlist_alloc_uv(struct xpc
 		return ret;
 	}
 #elif defined CONFIG_IA64_GENERIC || defined CONFIG_IA64_SGI_UV
-	ret = sn_mq_watchlist_alloc(mq->mmr_blade, uv_gpa(mq->address),
+	ret = sn_mq_watchlist_alloc(mq->mmr_blade, mq->address,
 				    mq->order, &mq->mmr_offset);
 	if (ret < 0) {
 		dev_err(xpc_part, "sn_mq_watchlist_alloc() failed, ret=%d\n",
--- a/include/asm-x86/uv/bios.h
+++ b/include/asm-x86/uv/bios.h
@@ -100,7 +100,7 @@ extern s64 uv_bios_call_reentrant(enum u
 
 extern s64 uv_bios_get_sn_info(int, int *, long *, long *, long *);
 extern s64 uv_bios_freq_base(u64, u64 *);
-extern int uv_bios_mq_watchlist_alloc(int, unsigned long, unsigned int,
+extern int uv_bios_mq_watchlist_alloc(int, void *, unsigned int,
 					unsigned long *);
 extern int uv_bios_mq_watchlist_free(int, int);
 extern s64 uv_bios_change_memprotect(u64, u64, enum uv_memprotect);
