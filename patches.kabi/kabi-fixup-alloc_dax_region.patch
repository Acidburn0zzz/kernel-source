From: Johannes Thumshirn <jthumshirn@suse.de>
Date: Mon  2 Dec 11:36:12 CET 2019
Subject: kABI fixup alloc_dax_region
Patch-mainline: Never, KABI fixup
References: bsc#1158071

KABI fixup for alloc_dax_region() due to added target_node parameter.

Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/dax/dax-private.h |    8 ++++++--
 drivers/dax/device-dax.h  |    5 ++++-
 drivers/dax/device.c      |   11 ++++++++++-
 drivers/dax/pmem.c        |    2 +-
 drivers/nvdimm/nd.h       |    5 ++++-
 include/linux/libnvdimm.h |    4 +++-
 6 files changed, 28 insertions(+), 7 deletions(-)

--- a/drivers/dax/dax-private.h
+++ b/drivers/dax/dax-private.h
@@ -35,8 +35,10 @@ struct dax_region {
 	struct device *dev;
 	unsigned int align;
 	struct resource res;
-	int target_node;
 	unsigned long pfn_flags;
+#ifndef __GENKSYMS__
+	int target_node;
+#endif
 };
 
 /**
@@ -52,10 +54,12 @@ struct dax_region {
 struct dev_dax {
 	struct dax_region *region;
 	struct dax_device *dax_dev;
-	int target_node;
 	struct device dev;
 	int id;
 	int num_resources;
 	struct resource res[0];
+#ifndef __GENKSYMS__
+	int target_node;
+#endif
 };
 #endif
--- a/drivers/dax/device-dax.h
+++ b/drivers/dax/device-dax.h
@@ -17,9 +17,12 @@ struct dev_dax;
 struct resource;
 struct dax_region;
 void dax_region_put(struct dax_region *dax_region);
-struct dax_region *alloc_dax_region(struct device *parent,
+struct dax_region *__alloc_dax_region(struct device *parent,
 		int region_id, struct resource *res, int target_node, unsigned int align,
 		void *addr, unsigned long flags);
+struct dax_region *alloc_dax_region(struct device *parent,
+		int region_id, struct resource *res, unsigned int align,
+		void *addr, unsigned long flags);
 struct dev_dax *devm_create_dev_dax(struct dax_region *dax_region,
 		int id, struct resource *res, int count);
 #endif /* __DEVICE_DAX_H__ */
--- a/drivers/dax/device.c
+++ b/drivers/dax/device.c
@@ -99,7 +99,7 @@ static void dax_region_unregister(void *
 	dax_region_put(dax_region);
 }
 
-struct dax_region *alloc_dax_region(struct device *parent, int region_id,
+struct dax_region *__alloc_dax_region(struct device *parent, int region_id,
 		struct resource *res, int target_node, unsigned int align, void *addr,
 		unsigned long pfn_flags)
 {
@@ -142,6 +142,15 @@ struct dax_region *alloc_dax_region(stru
 		return NULL;
 	return dax_region;
 }
+EXPORT_SYMBOL_GPL(__alloc_dax_region);
+
+struct dax_region *alloc_dax_region(struct device *parent, int region_id,
+		struct resource *res, unsigned int align, void *addr,
+		unsigned long pfn_flags)
+{
+	return __alloc_dax_region(parent, region_id, res, NUMA_NO_NODE,
+				  align, addr, pfn_flags);
+}
 EXPORT_SYMBOL_GPL(alloc_dax_region);
 
 static struct dev_dax *to_dev_dax(struct device *dev)
--- a/drivers/dax/pmem.c
+++ b/drivers/dax/pmem.c
@@ -133,7 +133,7 @@ static int dax_pmem_probe(struct device
 	if (rc != 2)
 		return -EINVAL;
 
-	dax_region = alloc_dax_region(dev, region_id, &res, nd_region->target_node,
+	dax_region = __alloc_dax_region(dev, region_id, &res, nd_region->target_node,
 			le32_to_cpu(pfn_sb->align), addr, PFN_DEV|PFN_MAP);
 	if (!dax_region)
 		return -ENOMEM;
--- a/drivers/nvdimm/nd.h
+++ b/drivers/nvdimm/nd.h
@@ -157,13 +157,16 @@ struct nd_region {
 	u16 ndr_mappings;
 	u64 ndr_size;
 	u64 ndr_start;
-	int id, num_lanes, ro, numa_node, target_node;
+	int id, num_lanes, ro, numa_node;
 	void *provider_data;
 	struct kernfs_node *bb_state;
 	struct badblocks bb;
 	struct nd_interleave_set *nd_set;
 	struct nd_percpu_lane __percpu *lane;
 	struct nd_mapping mapping[0];
+#ifndef __GENKSYMS__
+	int target_node;
+#endif
 };
 
 struct nd_blk_region {
--- a/include/linux/libnvdimm.h
+++ b/include/linux/libnvdimm.h
@@ -128,9 +128,11 @@ struct nd_region_desc {
 	void *provider_data;
 	int num_lanes;
 	int numa_node;
-	int target_node;
 	unsigned long flags;
 	struct device_node *of_node;
+#ifndef __GENKSYMS__
+	int target_node;
+#endif
 };
 
 struct device;
