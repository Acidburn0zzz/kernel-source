From: Linus Torvalds <torvalds@linux-foundation.org>
Date: Tue, 3 Jul 2018 09:53:43 -0700
Subject: net/smc: fix up merge error with poll changes
Git-commit: 410da1e12ffed61129d61df5b7adce4d08c7f17c
Patch-mainline: v4.18-rc4
References: bsc#1106287, LTC#170892

My networking merge (commit 4e33d7d47943: "Pull networking fixes from
David Miller") got the poll() handling conflict wrong for af_smc.

The conflict between my a11e1d432b51 ("Revert changes to convert to
->poll_mask() and aio IOCB_CMD_POLL") and Ursula Braun's 24ac3a08e658
("net/smc: rebuild nonblocking connect") should have left the call to
sock_poll_wait() in place, just without the socket lock release/retake.

And I really should have realized that.  But happily, I at least asked
Ursula to double-check the merge, and she set me right.

This also fixes an incidental whitespace issue nearby that annoyed me
while looking at this.

Pointed-out-by: Ursula Braun <ubraun@linux.ibm.com>
Cc: David Miller <davem@davemloft.net>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 net/smc/af_smc.c |    6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

--- a/net/smc/af_smc.c
+++ b/net/smc/af_smc.c
@@ -1345,11 +1345,8 @@ static unsigned int smc_poll(struct file
 		if (sk->sk_err)
 			mask |= POLLERR;
 	} else {
-		if (sk->sk_state != SMC_CLOSED) {
-			release_sock(sk);
+		if (sk->sk_state != SMC_CLOSED)
 			sock_poll_wait(file, sk_sleep(sk), wait);
-			lock_sock(sk);
-		}
 		if (sk->sk_err)
 			mask |= POLLERR;
 		if ((sk->sk_shutdown == SHUTDOWN_MASK) ||
@@ -1375,7 +1372,6 @@ static unsigned int smc_poll(struct file
 		}
 		if (smc->conn.urg_state == SMC_URG_VALID)
 			mask |= POLLPRI;
-
 	}
 
 	return mask;
