diff -urNp linux-2.6.5/drivers/char/ecc.c linux-2.6.5.SUSE/drivers/char/ecc.c
--- linux-2.6.5/drivers/char/ecc.c	2004-04-27 17:57:20.000000000 +0200
+++ linux-2.6.5.SUSE/drivers/char/ecc.c	2004-04-27 17:57:38.000000000 +0200
@@ -8,9 +8,6 @@
  *      Ishikawa <ishikawa at yk dot rim dot or dot jp>
  *	Jaakko Hyvti <jaakko dot hyvatti at iki dot fi>
  */
-
-#define __KERNEL__
-#define MODULE
 #define DEBUG	0
 
 #include <linux/config.h>
@@ -67,8 +64,8 @@ static struct ChipsetInfo
 {
 	int ecc_cap;		/* chipset ECC capabilities */
 	int ecc_mode;		/* current ECC mode */
-	void (*check)();	/* pointer to ecc checking routine */
-	void (*clear_err)();	/* pointer to error clear routine */
+	void (*check)(void);	/* pointer to ecc checking routine */
+	void (*clear_err)(void);	/* pointer to error clear routine */
 #if 0
 /*
  * I dont think we care about SERR at the moment.
@@ -161,7 +158,7 @@ int find_row(unsigned long err_addr)
  *	separate locations.  The status byte is read only once for the packed
  *	case in case the status value should be altered by being read.
  */
-void generic_check()
+void generic_check(void)
 {
 	int status = pci_byte(cs.MBE_flag_address);
 	if ((status >> cs.MBE_flag_shift) & cs.MBE_flag_mask)
@@ -201,7 +198,7 @@ void generic_check()
 }
 
 /* VIA specific error clearing */
-void clear_via_err()
+void clear_via_err(void)
 {
 	pci_write_bits8(0x6f,0xff,0xff);
 	/* as scrubbing is unimplemented, we reset it here */
@@ -209,7 +206,7 @@ void clear_via_err()
 }
 
 /* unified VIA probe */
-void probe_via()
+void probe_via(void)
 {
 	int loop, ecc_ctrl, dimmslots = 3, bankshift = 23;
 	int m_mem[] = { BANK_FPM, BANK_EDO, BANK_DDR, BANK_SDR };
@@ -279,7 +276,7 @@ void probe_via()
 	}
 }
 
-void check_serverworks()
+void check_serverworks(void)
 {
 	unsigned long mesr;
 	int row;
@@ -335,7 +332,7 @@ void check_serverworks()
         }
 }
 
-void probe_serverworks()
+void probe_serverworks(void)
 {
 	int loop, efcr, mccr;
 	switch (device) {
@@ -364,7 +361,7 @@ void probe_serverworks()
 /*
  * 450gx probing is buggered at the moment. help me obi-wan.
  */
-void probe_450gx()
+void probe_450gx(void)
 {
 	int loop, dramc, merrcmd;
 	u32 nbxcfg;
@@ -410,7 +407,7 @@ void probe_450gx()
 }
 
 /* there seems to be NO WAY to distinguish 440zx from 440bx!! >B( */
-void probe_440bx()
+void probe_440bx(void)
 {
 	int loop, dramc, errcmd;
 	u32 nbxcfg;
@@ -457,7 +454,7 @@ void probe_440bx()
 }
 
 /* no way to tell 440ex from 440lx!? grr. */
-void probe_440lx()
+void probe_440lx(void)
 {
 	int loop, drt, paccfg, errcmd;
 	int m_mem[] = { BANK_EDO, BANK_RESERVED, BANK_SDR, BANK_EMPTY };
@@ -489,7 +486,7 @@ void probe_440lx()
 	}
 }
 
-void probe_440fx()
+void probe_440fx(void)
 {
 	int loop, drt, pmccfg, errcmd;
 	int m_mem[] = { BANK_FPM, BANK_EDO, BANK_BEDO, BANK_EMPTY };
@@ -518,7 +515,7 @@ void probe_440fx()
 	cs.SBE_row_mask = 7;
 }
 
-void probe_430hx()
+void probe_430hx(void)
 {
 	int pcicmd, pcon, errcmd, drt, loop;
 	pcicmd = pci_word(0x4);
@@ -548,7 +545,7 @@ void probe_430hx()
 	}
 }
 
-void check_840()
+void check_840(void)
 {
 	int errsts = pci_word(0xE2);
 	if ((errsts>>9) & 1)
@@ -571,7 +568,7 @@ void check_840()
 	}
 }
 
-void probe_840()
+void probe_840(void)
 {
 	int loop, mchcfg;
 	int ddim[] = { ECC_NONE, ECC_RESERVED, ECC_CORRECT, ECC_AUTO };
@@ -589,7 +586,7 @@ void probe_840()
 	}
 }
 
-void check_845()
+void check_845(void)
 {
 	int errsts = pci_word(0xC8);
 	if ((errsts>>1) & 1)
@@ -614,7 +611,7 @@ void check_845()
 	}
 }
 
-void probe_845()
+void probe_845(void)
 {
 	int loop;
 	u32 drc;
@@ -633,7 +630,7 @@ void probe_845()
 	}
 }
 
-void check_850()
+void check_850(void)
 {
 	int errsts = pci_word(0xC8);
 	if ((errsts>>1) & 1)
@@ -658,7 +655,7 @@ void check_850()
 	}
 }
 
-void probe_850()
+void probe_850(void)
 {
 	int loop;
 	int mchcfg;
@@ -677,7 +674,7 @@ void probe_850()
 	}
 }
 
-void check_860()
+void check_860(void)
 {
 	int errsts = pci_word(0xC8);
 	if ((errsts>>1) & 1)
@@ -702,7 +699,7 @@ void check_860()
 	}
 }
 
-void probe_860()
+void probe_860(void)
 {
 	int loop;
 	u32 drc;
@@ -721,7 +718,7 @@ void probe_860()
 	}
 }
 
-void check_amd751()
+void check_amd751(void)
 {
 	int eccstat = pci_word(0x58);
 	int csbits = eccstat & 0x3F;
@@ -766,7 +763,7 @@ void check_amd751()
         }
 }
 
-void probe_amd751()
+void probe_amd751(void)
 {
 	int loop;
 	cs.ecc_cap = ECC_CORRECT;
@@ -790,7 +787,7 @@ void probe_amd751()
 	}
 }
 
-void check_amd76x()
+void check_amd76x(void)
 {
 	unsigned long eccstat = pci_dword(0x48);
 	if(eccstat & 0x10)
@@ -825,7 +822,7 @@ void check_amd76x()
 	}
 }
 
-void probe_amd76x()
+void probe_amd76x(void)
 {
 	static const int modetab[] = {ECC_NONE, ECC_DETECT, ECC_CORRECT, ECC_AUTO};
 	int loop;
@@ -849,7 +846,7 @@ void probe_amd76x()
 }
 
 /* SiS */
-void probe_sis()
+void probe_sis(void)
 {
 	int loop;
 	u32 endaddr;
@@ -930,7 +927,7 @@ void probe_sis()
 }
 
 /* ALi */
-void probe_aladdin4()
+void probe_aladdin4(void)
 {
 	int loop;
 	int m_mem[] = { BANK_FPM, BANK_EDO, BANK_RESERVED, BANK_SDR };
@@ -963,7 +960,7 @@ void probe_aladdin4()
 	}
 }
 
-void probe_aladdin5()
+void probe_aladdin5(void)
 {
 	int loop;
 	int m_mem[] = { BANK_FPM, BANK_EDO, BANK_RDR, BANK_SDR };
@@ -1142,7 +1139,7 @@ int procfile_read(char *page, char **sta
 struct pci_probe_matrix {
 	int vendor;		/* pci vendor id */
 	int device;		/* pci device id */
-	void (*check)();	/* pointer to chipset probing routine */
+	void (*check)(void);	/* pointer to chipset probing routine */
 };
 
 static struct pci_probe_matrix probe_matrix[] = {
@@ -1199,11 +1196,6 @@ static struct pci_probe_matrix probe_mat
 
 int find_chipset(void) {
 
-	if (!pci_present()) {
-		printk("<1>ECC: No PCI bus.\n");
-		return 0;
-	}
-
 	while ((bridge = pci_find_class(PCI_CLASS_BRIDGE_HOST << 8, bridge)))
 	{
 		int loop = 0;
