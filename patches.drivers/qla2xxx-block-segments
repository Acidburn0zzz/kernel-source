From: Jens Axboe <axboe@suse.de>
Subject: Fix bad segment count for SG_IO requests
Patch-mainline: 
References: SUSE46763

See subj

Acked-by: 
Signed-off-by: 

--- linux-2.6.5/drivers/scsi/qla2xxx/qla_iocb.c~	2004-10-21 12:03:39.170749885 +0200
+++ linux-2.6.5/drivers/scsi/qla2xxx/qla_iocb.c	2004-10-21 12:04:44.808608220 +0200
@@ -368,19 +368,6 @@
 	if (index == MAX_OUTSTANDING_COMMANDS)
 		goto queuing_error;
 
-	/* Calculate the number of request entries needed. */
-	req_cnt = (ha->calc_request_entries)(cmd->request->nr_hw_segments);
-	if (ha->req_q_cnt < (req_cnt + 2)) {
-		cnt = RD_REG_WORD_RELAXED(ISP_REQ_Q_OUT(ha, reg));
-		if (ha->req_ring_index < cnt)
-			ha->req_q_cnt = cnt - ha->req_ring_index;
-		else
-			ha->req_q_cnt = ha->request_q_length -
-			    (ha->req_ring_index - cnt);
-	}
-	if (ha->req_q_cnt < (req_cnt + 2))
-		goto queuing_error;
-
 	/* Finally, we have enough space, now perform mappings. */
 	tot_dsds = 0;
 	if (cmd->use_sg) {
@@ -394,6 +381,22 @@
 	}
 	req_cnt = (ha->calc_request_entries)(tot_dsds);
 
+	if (ha->req_q_cnt < (req_cnt + 2)) {
+		cnt = RD_REG_WORD_RELAXED(ISP_REQ_Q_OUT(ha, reg));
+		if (ha->req_ring_index < cnt)
+			ha->req_q_cnt = cnt - ha->req_ring_index;
+		else
+			ha->req_q_cnt = ha->request_q_length -
+				(ha->req_ring_index - cnt);
+	}
+	
+	if (ha->req_q_cnt < (req_cnt + 2)) {
+		if  (cmd->use_sg)
+			pci_unmap_sg(ha->pdev, sg, cmd->use_sg,
+					cmd->sc_data_direction);
+		goto queuing_error;
+	}
+
 	/* Build command packet */
 	ha->current_outstanding_cmd = handle;
 	ha->outstanding_cmds[handle] = sp;

