From: Duane Grigsby <duane.grigsby@qlogic.com>
Subject: make qla4xxx driver actually compile with recent kernel
Patch-mainline: no
References: none

make qla4xxx driver actually compile with recent kernel

Acked-by: mantel@suse.de

diff -urNp linux-2.6.12/drivers/scsi/qla4xxx/ql4_glbl.h linux-2.6.12.SUSE/drivers/scsi/qla4xxx/ql4_glbl.h
--- linux-2.6.12/drivers/scsi/qla4xxx/ql4_glbl.h	2005-08-05 14:04:02.629161792 +0200
+++ linux-2.6.12.SUSE/drivers/scsi/qla4xxx/ql4_glbl.h	2005-08-05 14:05:13.765347448 +0200
@@ -31,7 +31,7 @@ extern void qla4xxx_start_io(scsi_qla_ho
 extern srb_t *del_from_active_array(scsi_qla_host_t *ha, uint32_t index);
 extern uint8_t qla4xxx_complete_request(scsi_qla_host_t *ha, srb_t *srb);
 extern uint8_t qla4xxx_reset_lun(scsi_qla_host_t *ha, ddb_entry_t *ddb_entry, lun_entry_t *lun_entry);
-extern inline uint8_t qla4xxx_soft_reset(scsi_qla_host_t *);
+uint8_t qla4xxx_soft_reset(scsi_qla_host_t *);
 extern const char *host_sts_msg[];
 extern void qla4xxx_delete_timer_from_cmd(srb_t *srb);
 extern scsi_qla_host_t *qla4xxx_get_adapter_handle(uint16_t instance);
diff -urNp linux-2.6.12/drivers/scsi/qla4xxx/ql4_os.c linux-2.6.12.SUSE/drivers/scsi/qla4xxx/ql4_os.c
--- linux-2.6.12/drivers/scsi/qla4xxx/ql4_os.c	2005-08-05 14:04:02.647159056 +0200
+++ linux-2.6.12.SUSE/drivers/scsi/qla4xxx/ql4_os.c	2005-08-05 14:05:25.846510832 +0200
@@ -4264,7 +4264,7 @@ qla4xxx_topcat_reset(scsi_qla_host_t *ha
  * Context:
  *      Kernel context.
  **************************************************************************/
-inline uint8_t
+uint8_t
 qla4xxx_soft_reset(scsi_qla_host_t *ha){
 
 	QL4PRINT(QLP2, printk(KERN_WARNING "scsi%d: %s: chip reset!\n",
diff -urNp linux-2.6.12/drivers/scsi/qla4xxx/ql4_xioct.c linux-2.6.12.SUSE/drivers/scsi/qla4xxx/ql4_xioct.c
--- linux-2.6.12/drivers/scsi/qla4xxx/ql4_xioct.c	2005-08-05 14:04:02.652158296 +0200
+++ linux-2.6.12.SUSE/drivers/scsi/qla4xxx/ql4_xioct.c	2005-08-05 14:04:14.899296448 +0200
@@ -85,7 +85,8 @@ qla4xxx_ioctl(struct scsi_device *, int,
 /*
  * ioctl initialization
  */
-static struct class_simple *apidev_class;
+static struct class *apidev_class;
+
 static int apidev_major;
 
 static int
@@ -343,7 +344,7 @@ qla4xxx_ioctl_init(void)
 	    printk("scsi: %s: entered.\n",
 	    __func__));
 
-	apidev_class = class_simple_create(THIS_MODULE, "qla4xxx");
+	apidev_class = class_create(THIS_MODULE, "qla4xxx");
 	if (IS_ERR(apidev_class)) {
 		QL4PRINT(QLP2|QLP4,
 		    printk("%s(): Unable to sysfs class for qla4xxx.\n",
@@ -362,7 +363,7 @@ qla4xxx_ioctl_init(void)
 		    printk("%s(): Unable to register CHAR device (%d)\n",
 		    __func__, apidev_major));
 
-		class_simple_destroy(apidev_class);
+		class_destroy(apidev_class);
 		apidev_class = NULL;
 
 		return apidev_major;
@@ -371,7 +372,7 @@ qla4xxx_ioctl_init(void)
 	    printk("scsi: %s: apidev_major=%d.\n",
 	    __func__, apidev_major));
 
-	tmp = class_simple_device_add(apidev_class, MKDEV(apidev_major, 0),
+	tmp = class_device_create(apidev_class, MKDEV(apidev_major, 0),
 	    NULL, "qla4xxx");
 	QL4PRINT(QLP4,
 	    printk("scsi: %s: tmp=%p.\n",
@@ -401,11 +402,11 @@ qla4xxx_ioctl_exit(void)
 	ql4_apidev_cleanup_32ioctl();
 #endif
 
-	class_simple_device_remove(MKDEV(apidev_major, 0));
+	class_device_destroy(apidev_class,MKDEV(apidev_major, 0));
 
 	unregister_chrdev(apidev_major, "qla4xxx");
 
-	class_simple_destroy(apidev_class);
+	class_destroy(apidev_class);
 
 	apidev_class = NULL;
 
