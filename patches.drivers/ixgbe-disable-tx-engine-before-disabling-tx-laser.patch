From 9f756f018a6d9f83556f972ce7fcd6870274efae Mon Sep 17 00:00:00 2001
From: John Fastabend <john.r.fastabend@intel.com>
Date: Tue, 29 Jun 2010 18:28:36 +0000
Subject: [PATCH] ixgbe: disable tx engine before disabling tx laser
Patch-mainline: v2.6.35, accepted into net-2.6
Git-commit: 9f756f018a6d9f83556f972ce7fcd6870274efae 

Disabling the tx laser while receiving DMA requests
can hang the device.  After this occurs the device
is in a bad state. The GPIO bit never clears when
PCI master access is disabled and a reboot is required
to get the device in a good state again.

Signed-off-by: John Fastabend <john.r.fastabend@intel.com>
Acked-by: Peter P Waskiewicz Jr <peter.p.waskiewicz.jr@intel.com>
Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Brandon Philips <bphilips@suse.de>

---
 drivers/net/ixgbe/ixgbe_main.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

Index: linux-2.6.34-openSUSE-11.3/drivers/net/ixgbe/ixgbe_main.c
===================================================================
--- linux-2.6.34-openSUSE-11.3.orig/drivers/net/ixgbe/ixgbe_main.c
+++ linux-2.6.34-openSUSE-11.3/drivers/net/ixgbe/ixgbe_main.c
@@ -3262,10 +3262,6 @@ void ixgbe_down(struct ixgbe_adapter *ad
 	/* signal that we are down to the interrupt handler */
 	set_bit(__IXGBE_DOWN, &adapter->state);
 
-	/* power down the optics */
-	if (hw->phy.multispeed_fiber)
-		hw->mac.ops.disable_tx_laser(hw);
-
 	/* disable receive for all VFs and wait one second */
 	if (adapter->num_vfs) {
 		/* ping all the active vfs to let them know we are going down */
@@ -3318,6 +3314,10 @@ void ixgbe_down(struct ixgbe_adapter *ad
	cancel_work_sync(&adapter->watchdog_task);
 
 	netif_carrier_off(netdev);
+	/* power down the optics */
+	if (hw->phy.multispeed_fiber)
+		hw->mac.ops.disable_tx_laser(hw);
+
	netif_tx_disable(netdev);

	ixgbe_irq_disable(adapter);
