From: Takashi Iwai <tiwai@suse.de>
Subject: [ALSA] ac97 - Allow drivers to set static volume resolution table
Patch-mainline: 
References: 116387

[ALSA] ac97 - Allow drivers to set static volume resolution table

Add the pointer to a static volume resolution table to ac97 template,
so that the drivers can define the volume resolution, too.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
commit d1ffd5d9c280672987426d8f746afb6fcace43e0
tree 5e3b00d73898b1165854ce4d3d0bfe4d933e1b45
parent efe35efd8d888b94a2c5c3997d7786b90f35e3e6
author Takashi Iwai <tiwai@suse.de> Wed, 15 Mar 2006 14:52:54 +0100
committer Takashi Iwai <tiwai@suse.de> Wed, 15 Mar 2006 16:47:11 +0100

 include/sound/ac97_codec.h  |   13 +++++++------
 sound/pci/ac97/ac97_codec.c |    1 +
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/include/sound/ac97_codec.h b/include/sound/ac97_codec.h
index 9036d25..dee766c 100644
--- a/include/sound/ac97_codec.h
+++ b/include/sound/ac97_codec.h
@@ -433,6 +433,12 @@ struct snd_ac97_bus {
 	struct snd_info_entry *proc;
 };
 
+/* static resolution table */
+struct snd_ac97_res_table {
+	unsigned short reg;	/* register */
+	unsigned short bits;	/* resolution bitmask */
+};
+
 struct snd_ac97_template {
 	void *private_data;
 	void (*private_free) (struct snd_ac97 *ac97);
@@ -442,12 +448,7 @@ struct snd_ac97_template {
 	unsigned int scaps;	/* driver capabilities */
 	unsigned int limited_regs; /* allow limited registers only */
 	DECLARE_BITMAP(reg_accessed, 0x80); /* bit flags */
-};
-
-/* static resolution table */
-struct snd_ac97_res_table {
-	unsigned short reg;	/* register */
-	unsigned short bits;	/* resolution bitmask */
+	const struct snd_ac97_res_table *res_table;	/* static resolution */
 };
 
 struct snd_ac97 {
diff --git a/sound/pci/ac97/ac97_codec.c b/sound/pci/ac97/ac97_codec.c
index 38b6c65..c5bbdcb 100644
--- a/sound/pci/ac97/ac97_codec.c
+++ b/sound/pci/ac97/ac97_codec.c
@@ -1868,6 +1868,7 @@ int snd_ac97_mixer(struct snd_ac97_bus *
 	ac97->scaps = template->scaps;
 	ac97->limited_regs = template->limited_regs;
 	memcpy(ac97->reg_accessed, template->reg_accessed, sizeof(ac97->reg_accessed));
+	ac97->res_table = template->res_table;
 	bus->codec[ac97->num] = ac97;
 	mutex_init(&ac97->reg_mutex);
 	mutex_init(&ac97->page_mutex);
