diff -purN /tmp/linux-2.6.4/drivers/net/iseries_veth.c ./drivers/net/iseries_veth.c
--- /tmp/linux-2.6.4/drivers/net/iseries_veth.c	2004-03-26 16:28:22.000000000 +0000
+++ ./drivers/net/iseries_veth.c	2004-03-26 16:46:26.000000000 +0000
@@ -455,7 +455,7 @@ static int veth_transmit_to_one(struct s
 	
 	/* Is it really necessary to check the length and address
 	 * fields of the first entry here? */
-	if (!pci_dma_error(dma_address)) {
+	if (!pci_dma_mapping_error(dma_address)) {
 		msg->skb = skb;
 		msg->data.addr[0] = dma_address;
 		msg->data.len[0] = dma_length;
diff -purN /tmp/linux-2.6.4/drivers/scsi/ibmvscsi/ibmvscsis.c ./drivers/scsi/ibmvscsi/ibmvscsis.c
--- /tmp/linux-2.6.4/drivers/scsi/ibmvscsi/ibmvscsis.c	2004-03-26 16:28:22.000000000 +0000
+++ ./drivers/scsi/ibmvscsi/ibmvscsis.c	2004-03-26 16:46:22.000000000 +0000
@@ -1863,7 +1863,7 @@ static int initialize_crq_queue(struct c
 					  queue->size * sizeof(*queue->msgs),
 					  PCI_DMA_BIDIRECTIONAL);
 
-	if (pci_dma_error(queue->msg_token))
+	if (pci_dma_mapping_error(queue->msg_token))
 		goto map_failed;
 
 	rc = plpar_hcall_norets(H_REG_CRQ, adapter->dma_dev->unit_address, queue->msg_token, PAGE_SIZE);
diff -purN /tmp/linux-2.6.4/drivers/scsi/ibmvscsi/rpa_vscsi.c ./drivers/scsi/ibmvscsi/rpa_vscsi.c
--- /tmp/linux-2.6.4/drivers/scsi/ibmvscsi/rpa_vscsi.c	2004-03-26 16:28:22.000000000 +0000
+++ ./drivers/scsi/ibmvscsi/rpa_vscsi.c	2004-03-26 16:47:44.000000000 +0000
@@ -169,7 +169,7 @@ int ibmvscsi_init_crq_queue(struct crq_q
 					  queue->size * sizeof(*queue->msgs),
 					  PCI_DMA_BIDIRECTIONAL);
 
-	if (pci_dma_error(queue->msg_token))
+	if (pci_dma_mapping_error(queue->msg_token))
 		goto map_failed;
 
 	rc = plpar_hcall_norets(H_REG_CRQ,
diff -purN /tmp/linux-2.6.4/drivers/scsi/libata-core.c ./drivers/scsi/libata-core.c
--- /tmp/linux-2.6.4/drivers/scsi/libata-core.c	2004-03-26 16:28:28.000000000 +0000
+++ ./drivers/scsi/libata-core.c	2004-03-26 17:25:27.000000000 +0000
@@ -1740,7 +1740,7 @@ static int ata_sg_setup_one(struct ata_q
 
 	dma_address = pci_map_single(ap->host_set->pdev, cmd->request_buffer,
 				     cmd->request_bufflen, dir);
-	if (pci_dma_error(dma_address))
+	if (pci_dma_mapping_error(dma_address))
 		return -1;
 
 	sg_dma_address(sg) = dma_address;
diff -purN /tmp/linux-2.6.4/include/asm-ppc/pci.h ./include/asm-ppc/pci.h
--- /tmp/linux-2.6.4/include/asm-ppc/pci.h	2004-03-26 16:28:20.000000000 +0000
+++ ./include/asm-ppc/pci.h	2004-03-26 17:40:01.000000000 +0000
@@ -313,6 +313,11 @@ pcibios_resource_to_bus(struct pci_dev *
 
 extern void pcibios_add_platform_entries(struct pci_dev *dev);
 
+#define PCI_DMA_ERROR_CODE      (~(dma_addr_t)0x0)
+static inline int pci_dma_mapping_error(dma_addr_t dma_addr)
+{
+	return (dma_addr == PCI_DMA_ERROR_CODE);
+}
 #endif	/* __KERNEL__ */
 
 #endif /* __PPC_PCI_H */
