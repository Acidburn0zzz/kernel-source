From: Nigel Cunningham <ncunningham@cyclades.com>
Subject: Don't powerdown drives on PM_EVENT_FREEZE
Patch-mainline: 
References: 

This causes multiple spin down/up cycles on STD, not very nice. Slows
things down and causes extra wear on the drive.

Acked-by: Jens Axboe <axboe@suse.de>
Signed-off-by: 

--- linux-2.6.16/drivers/scsi/libata-core.c~	2006-03-23 14:04:44.000000000 +0100
+++ linux-2.6.16/drivers/scsi/libata-core.c	2006-03-23 14:05:21.000000000 +0100
@@ -4328,7 +4328,8 @@
  *	standbynow command.
  *
  */
-int ata_device_suspend(struct ata_port *ap, struct ata_device *dev)
+int ata_device_suspend(struct ata_port *ap, struct ata_device *dev,
+		       pm_message_t state)
 {
 	printk(KERN_DEBUG "ata%d: suspend device\n", ap->id);
 	if (!ata_dev_present(dev))
@@ -4336,7 +4337,8 @@
 	if (dev->class == ATA_DEV_ATA)
 		ata_flush_cache(ap, dev);
 
-	ata_standby_drive(ap, dev);
+	if (state.event != PM_EVENT_FREEZE)
+		ata_standby_drive(ap, dev);
 	ap->flags |= ATA_FLAG_SUSPENDED;
 	return 0;
 }
--- linux-2.6.16/drivers/scsi/libata-scsi.c~	2006-03-23 14:04:48.000000000 +0100
+++ linux-2.6.16/drivers/scsi/libata-scsi.c	2006-03-23 14:06:41.000000000 +0100
@@ -404,12 +404,12 @@
 	return ata_device_resume(ap, dev);
 }
 
-int ata_scsi_device_suspend(struct scsi_device *sdev)
+int ata_scsi_device_suspend(struct scsi_device *sdev, pm_message_t state)
 {
 	struct ata_port *ap = (struct ata_port *) &sdev->host->hostdata[0];
 	struct ata_device *dev = &ap->device[sdev->id];
 
-	return ata_device_suspend(ap, dev);
+	return ata_device_suspend(ap, dev, state);
 }
 
 /* LKCD ops */
--- linux-2.6.16/drivers/scsi/scsi_sysfs.c~	2006-03-23 14:04:51.000000000 +0100
+++ linux-2.6.16/drivers/scsi/scsi_sysfs.c	2006-03-23 14:06:55.000000000 +0100
@@ -284,7 +284,7 @@
 		return err;
 
 	if (sht->suspend)
-		err = sht->suspend(sdev);
+		err = sht->suspend(sdev, state);
 
 	return err;
 }
--- linux-2.6.16/include/linux/libata.h~	2006-03-23 14:04:54.000000000 +0100
+++ linux-2.6.16/include/linux/libata.h	2006-03-23 14:07:19.000000000 +0100
@@ -502,10 +502,10 @@
 extern int ata_scsi_release(struct Scsi_Host *host);
 extern unsigned int ata_host_intr(struct ata_port *ap, struct ata_queued_cmd *qc);
 extern int ata_scsi_device_resume(struct scsi_device *);
-extern int ata_scsi_device_suspend(struct scsi_device *);
+extern int ata_scsi_device_suspend(struct scsi_device *, pm_message_t);
 extern int ata_scsi_device_shutdown(struct scsi_device *);
 extern int ata_device_resume(struct ata_port *, struct ata_device *);
-extern int ata_device_suspend(struct ata_port *, struct ata_device *);
+extern int ata_device_suspend(struct ata_port *, struct ata_device *, pm_message_t);
 extern int ata_device_shutdown(struct ata_port *, struct ata_device *);
 extern int ata_ratelimit(void);
 
--- linux-2.6.16/include/scsi/scsi_host.h~	2006-03-23 14:04:57.000000000 +0100
+++ linux-2.6.16/include/scsi/scsi_host.h	2006-03-23 14:23:16.000000000 +0100
@@ -286,7 +286,7 @@
 	 * suspend support
 	 */
 	int (*resume)(struct scsi_device *);
-	int (*suspend)(struct scsi_device *);
+	int (*suspend)(struct scsi_device *, pm_message_t);
 	int (*shutdown)(struct scsi_device *);
 
 	/*
--- linux-2.6.16/drivers/scsi/ahci.c~	2006-03-23 14:32:57.000000000 +0100
+++ linux-2.6.16/drivers/scsi/ahci.c	2006-03-23 14:33:26.000000000 +0100
@@ -200,7 +200,7 @@
 static void ahci_qc_prep(struct ata_queued_cmd *qc);
 static u8 ahci_check_status(struct ata_port *ap);
 static inline int ahci_host_intr(struct ata_port *ap, struct ata_queued_cmd *qc);
-static int ahci_scsi_device_suspend(struct scsi_device *sdev);
+static int ahci_scsi_device_suspend(struct scsi_device *sdev, pm_message_t state);
 static int ahci_scsi_device_resume(struct scsi_device *sdev);
 static void ahci_remove_one (struct pci_dev *pdev);
 
@@ -874,13 +874,13 @@
 	return 0;
 }
 
-int ahci_scsi_device_suspend(struct scsi_device *sdev)
+int ahci_scsi_device_suspend(struct scsi_device *sdev, pm_message_t state)
 {
 	struct ata_port *ap = (struct ata_port *) &sdev->host->hostdata[0];
 	struct ata_device *dev = &ap->device[sdev->id];
 	int rc;
 
-	rc = ata_device_suspend(ap, dev);
+	rc = ata_device_suspend(ap, dev, state);
 
 	if (!rc)
 		ahci_port_suspend(ap);
