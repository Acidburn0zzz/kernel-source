From: albertcc@tw.ibm.com
Subject:  Prevent interrupt handler from completing a command twice
Patch-mainline: 
References: 80454

Use the ATA_QCFLAG_ACTIVE flag to prevent the interrupt handler from completing
the command twice.

Acked-by: Jens Axboe <axboe@suse.de>
Signed-off-by: 

--- linux-2.6.5-SLES9_SP2_BRANCH_20050421122932/drivers/scsi/libata-core.c	2005-04-21 21:26:05.000000000 +0800
+++ linux-2.6.5-SLES9_SP2_BRANCH_20050421122932-twe/drivers/scsi/libata-core.c	2005-04-25 16:16:12.000000000 +0800
@@ -2573,7 +2573,7 @@
 	ata_sg_init_one(qc, cmd->sense_buffer, sizeof(cmd->sense_buffer));
 	qc->dma_dir = DMA_FROM_DEVICE;
 
-	memset(&qc->cdb, 0, sizeof(ap->cdb_len));
+	memset(&qc->cdb, 0, ap->cdb_len);
 	qc->cdb[0] = REQUEST_SENSE;
 	qc->cdb[4] = SCSI_SENSE_BUFFERSIZE;
 
@@ -2855,6 +2855,7 @@
 
 	/* call completion callback */
 	rc = qc->complete_fn(qc, drv_stat);
+	qc->flags &= ~ATA_QCFLAG_ACTIVE;
 
 	/* if callback indicates not to complete command (non-zero),
 	 * return immediately
@@ -3273,7 +3274,8 @@
 			struct ata_queued_cmd *qc;
 
 			qc = ata_qc_from_tag(ap, ap->active_tag);
-			if (qc && (!(qc->tf.ctl & ATA_NIEN)))
+			if (qc && (!(qc->tf.ctl & ATA_NIEN)) &&
+			    (qc->flags & ATA_QCFLAG_ACTIVE))
 				handled |= ata_host_intr(ap, qc);
 		}
 	}
