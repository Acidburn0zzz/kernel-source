===== Documentation/ide.txt 1.17 vs edited =====
--- 1.17/Documentation/ide.txt	2004-06-04 21:02:09 +02:00
+++ edited/Documentation/ide.txt	2004-09-22 15:53:43 +02:00
@@ -248,13 +248,6 @@
  			  allowing ide-floppy, ide-tape, and ide-cdrom|writers
  			  to use ide-scsi emulation on a device specific option.
 
- "hdx=stroke"		: Should you have a system w/ an AWARD Bios and your
-			  drives are larger than 32GB and it will not boot,
-			  one is required to perform a few OEM operations first.
-			  The option is called "stroke" because it allows one
-			  to "soft clip" the drive to work around a barrier
-			  limit.
-
  "idebus=xx"		: inform IDE driver of VESA/PCI bus speed in MHz,
 			  where "xx" is between 20 and 66 inclusive,
 			  used when tuning chipset PIO modes.
===== drivers/block/cfq-iosched.c 1.8 vs edited =====
--- 1.8/drivers/block/cfq-iosched.c	2004-07-14 11:47:10 +02:00
+++ edited/drivers/block/cfq-iosched.c	2004-08-26 16:39:33 +02:00
@@ -596,6 +596,7 @@
 
 static int cfq_may_queue(request_queue_t *q, int rw)
 {
+#if 0
 	struct cfq_data *cfqd = q->elevator.elevator_data;
 	struct cfq_queue *cfqq;
 	int ret = 1;
@@ -617,6 +618,9 @@
 	}
 out:
 	return ret;
+#else
+	return 1;
+#endif
 }
 
 static void cfq_put_request(request_queue_t *q, struct request *rq)
@@ -728,7 +732,7 @@
 	 * some requests. fairness is handled differently
 	 */
 	cfqd->max_queued = q->nr_requests;
-	q->nr_requests = 8192;
+	//q->nr_requests = 8192;
 
 	cfqd->cfq_queued = cfq_queued;
 	cfqd->cfq_quantum = cfq_quantum;
===== drivers/ide/ide-disk.c 1.96 vs edited =====
--- 1.96/drivers/ide/ide-disk.c	2004-09-10 17:31:30 +02:00
+++ edited/drivers/ide/ide-disk.c	2004-09-22 15:53:22 +02:00
@@ -1006,9 +1006,6 @@
 			 capacity, sectors_to_MB(capacity),
 			 set_max, sectors_to_MB(set_max));
 
-	if (!drive->stroke)
-		return;
-
 	if (lba48)
 		set_max = idedisk_set_max_address_ext(drive, set_max);
 	else
===== drivers/ide/ide.c 1.158 vs edited =====
--- 1.158/drivers/ide/ide.c	2004-09-10 13:52:02 +02:00
+++ edited/drivers/ide/ide.c	2004-09-22 16:34:00 +02:00
@@ -1856,7 +1856,7 @@
 	if (s[0] == 'h' && s[1] == 'd' && s[2] >= 'a' && s[2] <= max_drive) {
 		const char *hd_words[] = {
 			"none", "noprobe", "nowerr", "cdrom", "serialize",
-			"autotune", "noautotune", "stroke", "swapdata", "bswap",
+			"autotune", "noautotune", "minus8", "swapdata", "bswap",
 			"minus11", "remap", "remap63", "scsi", NULL };
 		unit = s[2] - 'a';
 		hw   = unit / MAX_DRIVES;
@@ -1889,9 +1889,6 @@
 				goto done;
 			case -7: /* "noautotune" */
 				drive->autotune = IDE_TUNE_NOAUTO;
-				goto done;
-			case -8: /* stroke */
-				drive->stroke = 1;
 				goto done;
 			case -9: /* "swapdata" */
 			case -10: /* "bswap" */
===== include/linux/ide.h 1.135 vs edited =====
--- 1.135/include/linux/ide.h	2004-09-10 17:31:30 +02:00
+++ edited/include/linux/ide.h	2004-09-22 15:52:27 +02:00
@@ -746,7 +746,6 @@
 	unsigned remap_0_to_1	: 1;	/* 0=noremap, 1=remap 0->1 (for EZDrive) */
 	unsigned blocked        : 1;	/* 1=powermanagment told us not to do anything, so sleep nicely */
 	unsigned vdma		: 1;	/* 1=doing PIO over DMA 0=doing normal DMA */
-	unsigned stroke		: 1;	/* from:  hdx=stroke */
 	unsigned addressing;		/*      : 3;
 					 *  0=28-bit
 					 *  1=48-bit
