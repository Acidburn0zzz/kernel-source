From: Tejun Heo <teheo@suse.de>
Subject: [PATCH] libata: fix n_sectors handling during revalidation
References: 308493
Mainline: 2.6.23

n_sectors handling was wrong during revalidation, fix it.  This patch
is combined patch of the following two commits.

  commit 8270bec40075eec9df8778c1d5da36ef0e535176
  Author: Tejun Heo <htejun@gmail.com>
  Date:   Thu Aug 16 03:02:22 2007 +0900

      libata: fix n_sectors failure handling during revalidation

      If revalidation fails because device has different n_sectors after
      configuration the original n_sectors should be restored before failing
      revalidation.  Without this fix, n_sectors difference will incorrectly
      and silently pass revalidation when revalidation is retried.

  commit b54eebd673861136291b97e409a0f248b96e74ae
  Author: Tejun Heo <htejun@gmail.com>
  Date:   Fri Aug 17 18:46:51 2007 +0900

      libata: don't check n_sectors during revalidation if zero

      If the initial configuration fails early, n_sectors is left at zero.
      Checking against it during revalidation makes retried configuration
      fail due to n_sectors mismatch.  Ignore zero n_sectors during
      revalidation.

Signed-off-by: Tejun Heo <teheo@suse.de>
---
 drivers/ata/libata-core.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

Index: linux-2.6.22/drivers/ata/libata-core.c
===================================================================
--- linux-2.6.22.orig/drivers/ata/libata-core.c
+++ linux-2.6.22/drivers/ata/libata-core.c
@@ -3777,12 +3777,17 @@ int ata_dev_revalidate(struct ata_device
 		goto fail;
 
 	/* verify n_sectors hasn't changed */
-	if (dev->class == ATA_DEV_ATA && dev->n_sectors != n_sectors) {
+	if (dev->class == ATA_DEV_ATA && n_sectors &&
+	    dev->n_sectors != n_sectors) {
 		ata_dev_printk(dev, KERN_INFO, "n_sectors mismatch "
 			       "%llu != %llu\n",
 			       (unsigned long long)n_sectors,
 			       (unsigned long long)dev->n_sectors);
 		rc = -ENODEV;
+
+		/* restore original n_sectors */
+		dev->n_sectors = n_sectors;
+
 		goto fail;
 	}
 
