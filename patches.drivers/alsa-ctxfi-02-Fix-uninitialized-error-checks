From 68110661e86868cd107955ec7c077e1f34519f78 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Wed, 22 Jul 2009 17:05:15 +0200
Subject: [PATCH 2/3] ALSA: ctxfi - Fix uninitialized error checks
Patch-mainline: 2.6.31-rc5
References: FATE#306935

Fix a few uninitialized error checks that were introduced recently
mistakenlly during the clean-up:
  sound/pci/ctxfi/ctamixer.c: In function 'get_amixer_rsc':
  sound/pci/ctxfi/ctamixer.c:261: warning: 'err' may be used uninitialized in this function
  sound/pci/ctxfi/ctamixer.c: In function 'get_sum_rsc':
  sound/pci/ctxfi/ctamixer.c:415: warning: 'err' may be used uninitialized in this function
  sound/pci/ctxfi/ctsrc.c: In function 'get_srcimp_rsc':
  sound/pci/ctxfi/ctsrc.c:742: warning: 'err' may be used uninitialized in this function

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/pci/ctxfi/ctamixer.c |   14 ++++++--------
 sound/pci/ctxfi/ctsrc.c    |    7 +++----
 2 files changed, 9 insertions(+), 12 deletions(-)

--- a/sound/pci/ctxfi/ctamixer.c
+++ b/sound/pci/ctxfi/ctamixer.c
@@ -242,13 +242,12 @@
 
 	/* Allocate mem for amixer resource */
 	amixer = kzalloc(sizeof(*amixer), GFP_KERNEL);
-	if (NULL == amixer) {
-		err = -ENOMEM;
-		return err;
-	}
+	if (!amixer)
+		return -ENOMEM;
 
 	/* Check whether there are sufficient
 	 * amixer resources to meet request. */
+	err = 0;
 	spin_lock_irqsave(&mgr->mgr_lock, flags);
 	for (i = 0; i < desc->msr; i++) {
 		err = mgr_get_resource(&mgr->mgr, 1, &idx);
@@ -397,12 +396,11 @@
 
 	/* Allocate mem for sum resource */
 	sum = kzalloc(sizeof(*sum), GFP_KERNEL);
-	if (NULL == sum) {
-		err = -ENOMEM;
-		return err;
-	}
+	if (!sum)
+		return -ENOMEM;
 
 	/* Check whether there are sufficient sum resources to meet request. */
+	err = 0;
 	spin_lock_irqsave(&mgr->mgr_lock, flags);
 	for (i = 0; i < desc->msr; i++) {
 		err = mgr_get_resource(&mgr->mgr, 1, &idx);
--- a/sound/pci/ctxfi/ctsrc.c
+++ b/sound/pci/ctxfi/ctsrc.c
@@ -724,12 +724,11 @@
 
 	/* Allocate mem for SRCIMP resource */
 	srcimp = kzalloc(sizeof(*srcimp), GFP_KERNEL);
-	if (NULL == srcimp) {
-		err = -ENOMEM;
-		return err;
-	}
+	if (!srcimp)
+		return -ENOMEM;
 
 	/* Check whether there are sufficient SRCIMP resources. */
+	err = 0;
 	spin_lock_irqsave(&mgr->mgr_lock, flags);
 	for (i = 0; i < desc->msr; i++) {
 		err = mgr_get_resource(&mgr->mgr, 1, &idx);
