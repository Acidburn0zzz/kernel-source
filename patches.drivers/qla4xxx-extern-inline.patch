From: olh@suse.de
Subject: gcc4 can not inline functions from other files


turn extern inline into extern

Signed-off-by: Olaf Hering <olh@suse.de>

 drivers/scsi/qla4xxx/ql4_32ioctl.c |    8 ++++----
 drivers/scsi/qla4xxx/ql4_32ioctl.h |    4 ++--
 drivers/scsi/qla4xxx/ql4_dbg.c     |    4 ++--
 drivers/scsi/qla4xxx/ql4_dbg.h     |    4 ++--
 drivers/scsi/qla4xxx/ql4_glbl.h    |    2 +-
 drivers/scsi/qla4xxx/ql4_ioctl.h   |    2 +-
 drivers/scsi/qla4xxx/ql4_os.c      |   16 ++++++++--------
 drivers/scsi/qla4xxx/ql4_xioct.c   |    2 +-
 8 files changed, 21 insertions(+), 21 deletions(-)

Index: linux-2.6.12/drivers/scsi/qla4xxx/ql4_32ioctl.c
===================================================================
--- linux-2.6.12.orig/drivers/scsi/qla4xxx/ql4_32ioctl.c
+++ linux-2.6.12/drivers/scsi/qla4xxx/ql4_32ioctl.c
@@ -39,7 +39,7 @@ qla4xxx_ioctl32(unsigned int fd, unsigne
 	return (sys_ioctl(fd, cmd, (void *)arg));
 }
 
-inline int
+int
 apidev_reg_increasing_idx(uint16_t low_idx, uint16_t high_idx)
 {
 	int	err = 0;
@@ -64,7 +64,7 @@ apidev_reg_increasing_idx(uint16_t low_i
 	return (err);
 }
 
-inline int
+int
 apidev_unreg_increasing_idx(uint16_t low_idx, uint16_t high_idx)
 {
 	int	err = 0;
@@ -88,7 +88,7 @@ apidev_unreg_increasing_idx(uint16_t low
 	return (err);
 }
 
-inline void
+void
 ql4_apidev_init_32ioctl(void)
 {
 	int	err;
@@ -126,7 +126,7 @@ ql4_apidev_init_32ioctl(void)
 	LEAVE(__func__);
 }
 
-inline void
+void
 ql4_apidev_cleanup_32ioctl(void)
 {
 	int	err;
Index: linux-2.6.12/drivers/scsi/qla4xxx/ql4_32ioctl.h
===================================================================
--- linux-2.6.12.orig/drivers/scsi/qla4xxx/ql4_32ioctl.h
+++ linux-2.6.12/drivers/scsi/qla4xxx/ql4_32ioctl.h
@@ -19,10 +19,10 @@
 #ifndef _QL4_32IOCTL_H_
 #define _QL4_32IOCTL_H_
 
-extern inline void
+extern void
 ql4_apidev_init_32ioctl(void);
 
-extern inline void
+extern void
 ql4_apidev_cleanup_32ioctl(void);
 
 #endif /* _QL4_32IOCTL_H_ */
Index: linux-2.6.12/drivers/scsi/qla4xxx/ql4_dbg.c
===================================================================
--- linux-2.6.12.orig/drivers/scsi/qla4xxx/ql4_dbg.c
+++ linux-2.6.12/drivers/scsi/qla4xxx/ql4_dbg.c
@@ -76,7 +76,7 @@ uint32_t ql_dbg_level = 0;
  * Returns:
  *	QLA_SUCCESS - always
  **************************************************************************/
-inline uint8_t
+uint8_t
 qla4xxx_get_debug_level(uint32_t *dbg_level)
 {
 	*dbg_level = ql_dbg_level;
@@ -97,7 +97,7 @@ qla4xxx_get_debug_level(uint32_t *dbg_le
  * Returns:
  *	QLA_SUCCESS - always
  **************************************************************************/
-inline uint8_t
+uint8_t
 qla4xxx_set_debug_level(uint32_t dbg_level)
 {
 	ql_dbg_level = dbg_level;
Index: linux-2.6.12/drivers/scsi/qla4xxx/ql4_dbg.h
===================================================================
--- linux-2.6.12.orig/drivers/scsi/qla4xxx/ql4_dbg.h
+++ linux-2.6.12/drivers/scsi/qla4xxx/ql4_dbg.h
@@ -57,8 +57,8 @@ extern uint32_t ql_dbg_level;
 #define ENTER(x) do {QL4PRINT(QLP12, printk("qla4xxx: Entering %s()\n", x));} while(0);
 #define LEAVE(x) do {QL4PRINT(QLP12, printk("qla4xxx: Leaving  %s()\n", x));} while(0);
 
-inline uint8_t qla4xxx_get_debug_level(uint32_t *dbg_level);
-inline uint8_t qla4xxx_set_debug_level(uint32_t dbg_level);
+uint8_t qla4xxx_get_debug_level(uint32_t *dbg_level);
+uint8_t qla4xxx_set_debug_level(uint32_t dbg_level);
 
 void     qla4xxx_dump_bytes(uint32_t, void *, uint32_t);
 void     qla4xxx_dump_words(uint32_t, void *, uint32_t);
Index: linux-2.6.12/drivers/scsi/qla4xxx/ql4_glbl.h
===================================================================
--- linux-2.6.12.orig/drivers/scsi/qla4xxx/ql4_glbl.h
+++ linux-2.6.12/drivers/scsi/qla4xxx/ql4_glbl.h
@@ -35,7 +35,7 @@ uint8_t qla4xxx_soft_reset(scsi_qla_host
 extern const char *host_sts_msg[];
 extern void qla4xxx_delete_timer_from_cmd(srb_t *srb);
 extern scsi_qla_host_t *qla4xxx_get_adapter_handle(uint16_t instance);
-extern inline uint32_t qla4xxx_get_hba_count(void);
+extern uint32_t qla4xxx_get_hba_count(void);
 extern void qla4xxx_free_ddb_list(scsi_qla_host_t *ha);
 
 extern void qla4xxx_tgt_free(scsi_qla_host_t *ha, uint16_t t);
Index: linux-2.6.12/drivers/scsi/qla4xxx/ql4_ioctl.h
===================================================================
--- linux-2.6.12.orig/drivers/scsi/qla4xxx/ql4_ioctl.h
+++ linux-2.6.12/drivers/scsi/qla4xxx/ql4_ioctl.h
@@ -42,7 +42,7 @@ typedef struct {
 extern void *
 Q64BIT_TO_PTR(uint64_t);
 
-extern inline void *
+extern void *
 ql4_kzmalloc(int, int);
 
 extern char *
Index: linux-2.6.12/drivers/scsi/qla4xxx/ql4_os.c
===================================================================
--- linux-2.6.12.orig/drivers/scsi/qla4xxx/ql4_os.c
+++ linux-2.6.12/drivers/scsi/qla4xxx/ql4_os.c
@@ -192,7 +192,7 @@ void qla4xxx_add_timer_to_cmd(srb_t *srb
 static void qla4xxx_flush_active_srbs(scsi_qla_host_t *ha);
 uint8_t qla4xxx_reset_target(scsi_qla_host_t *ha, ddb_entry_t *ddb_entry);
 uint8_t qla4xxx_recover_adapter(scsi_qla_host_t *ha, uint8_t renew_ddb_list);
-inline void qla4xxx_config_dma_addressing(scsi_qla_host_t *ha);
+void qla4xxx_config_dma_addressing(scsi_qla_host_t *ha);
 
 CONTINUE_ENTRY *qla4xxx_alloc_cont_entry(scsi_qla_host_t *ha);
 
@@ -839,7 +839,7 @@ qla4xxx_display_config(void)
  * Context:
  *      Kernel context.
  **************************************************************************/
-inline uint32_t
+uint32_t
 qla4xxx_get_hba_count(void)
 {
 	return(qla4xxx_hba_count);
@@ -858,7 +858,7 @@ qla4xxx_get_hba_count(void)
  * At exit, the @ha's flags.enable_64bit_addressing set to indicated
  * supported addressing method.
  */
-inline void
+void
 qla4xxx_config_dma_addressing(scsi_qla_host_t *ha)
 {
 	/* Assume 32bit DMA address. */
@@ -1312,7 +1312,7 @@ copy_info(struct info_str *info, char *f
  * Context:
  *      Kernel context.
  **************************************************************************/
-inline void
+void
 qla4xxx_proc_dump_srb_info(scsi_qla_host_t *ha, struct info_str *info, srb_t *srb)
 {
 	ddb_entry_t *ddb_entry;
@@ -1362,7 +1362,7 @@ qla4xxx_proc_dump_srb_info(scsi_qla_host
  * Context:
  *      Kernel context.
  **************************************************************************/
-inline void
+void
 qla4xxx_proc_dump_discovered_devices(scsi_qla_host_t *ha, struct info_str *info)
 {
 	int i,j;
@@ -1415,7 +1415,7 @@ qla4xxx_proc_dump_discovered_devices(scs
  * Context:
  *      Kernel context.
  **************************************************************************/
-inline void
+void
 qla4xxx_proc_dump_scanned_devices(scsi_qla_host_t *ha, struct info_str *info)
 {
 	os_lun_t        *up;
@@ -3903,7 +3903,7 @@ qla4xxx_eh_wait_on_command(scsi_qla_host
  * Context:
  *      Kernel context.  Assume io_request_lock LOCKED upon entry
  **************************************************************************/
-inline uint8_t
+uint8_t
 qla4xxx_wait_for_hba_online(scsi_qla_host_t *ha)
 {
 	unsigned long wait_online;
@@ -4299,7 +4299,7 @@ qla4xxx_soft_reset(scsi_qla_host_t *ha){
  * Context:
  *      Kernel context.
  **************************************************************************/
-inline uint8_t
+uint8_t
 qla4xxx_hard_reset(scsi_qla_host_t *ha){
 	/* The QLA4010 really doesn't have an equivalent to a hard reset */
 	qla4xxx_flush_active_srbs(ha);
Index: linux-2.6.12/drivers/scsi/qla4xxx/ql4_xioct.c
===================================================================
--- linux-2.6.12.orig/drivers/scsi/qla4xxx/ql4_xioct.c
+++ linux-2.6.12/drivers/scsi/qla4xxx/ql4_xioct.c
@@ -101,7 +101,7 @@ static struct file_operations apidev_fop
 	.ioctl = apidev_ioctl,
 };
 
-inline void *
+void *
 ql4_kzmalloc(int siz, int code)
 {
 	void *		bp;
