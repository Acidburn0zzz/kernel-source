From: Jeff Garzik <jgarzik@pobox.com>
Subject: fix EH locking
Patch-mainline: 
References: 

Wrap ata_qc_complete() calls in EH context in spinlocks, to prevent
races (mainly in ATAPI code paths).

Acked-by: Jens Axboe <axboe@suse.de>
Signed-off-by: 

diff -urp /opt/kernel/linux-2.6.13/drivers/scsi/ahci.c linux-2.6.13/drivers/scsi/ahci.c
--- /opt/kernel/linux-2.6.13/drivers/scsi/ahci.c	2005-09-06 11:52:05.000000000 +0200
+++ linux-2.6.13/drivers/scsi/ahci.c	2005-09-06 11:53:16.000000000 +0200
@@ -600,12 +600,16 @@ static void ahci_intr_error(struct ata_p
 
 static void ahci_eng_timeout(struct ata_port *ap)
 {
-	void *mmio = ap->host_set->mmio_base;
+	struct ata_host_set *host_set = ap->host_set;
+	void *mmio = host_set->mmio_base;
 	void *port_mmio = ahci_port_base(mmio, ap->port_no);
 	struct ata_queued_cmd *qc;
+	unsigned long flags;
 
 	DPRINTK("ENTER\n");
 
+	spin_lock_irqsave(&host_set->lock, flags);
+
 	ahci_intr_error(ap, readl(port_mmio + PORT_IRQ_STAT));
 
 	qc = ata_qc_from_tag(ap, ap->active_tag);
@@ -623,6 +627,7 @@ static void ahci_eng_timeout(struct ata_
 		ata_qc_complete(qc, ATA_ERR);
 	}
 
+	spin_unlock_irqrestore(&host_set->lock, flags);
 }
 
 static inline int ahci_host_intr(struct ata_port *ap, struct ata_queued_cmd *qc)
Only in linux-2.6.13/drivers/scsi: ahci.c.orig
diff -urp /opt/kernel/linux-2.6.13/drivers/scsi/libata-core.c linux-2.6.13/drivers/scsi/libata-core.c
--- /opt/kernel/linux-2.6.13/drivers/scsi/libata-core.c	2005-09-06 11:52:05.000000000 +0200
+++ linux-2.6.13/drivers/scsi/libata-core.c	2005-09-06 11:53:16.000000000 +0200
@@ -2476,12 +2476,13 @@ static int ata_sg_setup(struct ata_queue
 void ata_poll_qc_complete(struct ata_queued_cmd *qc, u8 drv_stat)
 {
 	struct ata_port *ap = qc->ap;
+	unsigned long flags;
 
-	spin_lock_irq(&ap->host_set->lock);
+	spin_lock_irqsave(&ap->host_set->lock, flags);
 	ap->flags &= ~ATA_FLAG_NOINTR;
 	ata_irq_on(ap);
 	ata_qc_complete(qc, drv_stat);
-	spin_unlock_irq(&ap->host_set->lock);
+	spin_unlock_irqrestore(&ap->host_set->lock, flags);
 }
 
 /**
@@ -3061,8 +3062,10 @@ static void atapi_request_sense(struct a
 static void ata_qc_timeout(struct ata_queued_cmd *qc)
 {
 	struct ata_port *ap = qc->ap;
+	struct ata_host_set *host_set = ap->host_set;
 	struct ata_device *dev = qc->dev;
 	u8 host_stat = 0, drv_stat;
+	unsigned long flags;
 
 	DPRINTK("ENTER\n");
 
@@ -3071,7 +3074,9 @@ static void ata_qc_timeout(struct ata_qu
 		struct scsi_cmnd *cmd = qc->scsicmd;
 
 		/* finish completing original command */
+		spin_lock_irqsave(&host_set->lock, flags);
 		__ata_qc_complete(qc);
+		spin_unlock_irqrestore(&host_set->lock, flags);
 
 		if (SCSI_SENSE_VALID(cmd)) {
 			atapi_request_sense(ap, dev, cmd);
@@ -3083,6 +3088,8 @@ static void ata_qc_timeout(struct ata_qu
 		goto out;
 	}
 
+	spin_lock_irqsave(&host_set->lock, flags);
+
 	/* hack alert!  We cannot use the supplied completion
 	 * function from inside the ->eh_strategy_handler() thread.
 	 * libata is the only user of ->eh_strategy_handler() in
@@ -3116,6 +3123,9 @@ static void ata_qc_timeout(struct ata_qu
 		ata_qc_complete(qc, drv_stat);
 		break;
 	}
+
+	spin_unlock_irqrestore(&host_set->lock, flags);
+
 out:
 	DPRINTK("EXIT\n");
 }
Only in linux-2.6.13/drivers/scsi: libata-core.c.orig
diff -urp /opt/kernel/linux-2.6.13/drivers/scsi/sata_promise.c linux-2.6.13/drivers/scsi/sata_promise.c
--- /opt/kernel/linux-2.6.13/drivers/scsi/sata_promise.c	2005-09-06 11:52:05.000000000 +0200
+++ linux-2.6.13/drivers/scsi/sata_promise.c	2005-09-06 11:53:16.000000000 +0200
@@ -325,11 +325,15 @@ static void pdc_qc_prep(struct ata_queue
 
 static void pdc_eng_timeout(struct ata_port *ap)
 {
+	struct ata_host_set *host_set = ap->host_set;
 	u8 drv_stat;
 	struct ata_queued_cmd *qc;
+	unsigned long flags;
 
 	DPRINTK("ENTER\n");
 
+	spin_lock_irqsave(&host_set->lock, flags);
+
 	qc = ata_qc_from_tag(ap, ap->active_tag);
 	if (!qc) {
 		printk(KERN_ERR "ata%u: BUG: timeout without command\n",
@@ -363,6 +367,7 @@ static void pdc_eng_timeout(struct ata_p
 	}
 
 out:
+	spin_unlock_irqrestore(&host_set->lock, flags);
 	DPRINTK("EXIT\n");
 }
 
diff -urp /opt/kernel/linux-2.6.13/drivers/scsi/sata_sx4.c linux-2.6.13/drivers/scsi/sata_sx4.c
--- /opt/kernel/linux-2.6.13/drivers/scsi/sata_sx4.c	2005-09-06 11:52:05.000000000 +0200
+++ linux-2.6.13/drivers/scsi/sata_sx4.c	2005-09-06 11:53:16.000000000 +0200
@@ -851,10 +851,14 @@ static irqreturn_t pdc20621_interrupt (i
 static void pdc_eng_timeout(struct ata_port *ap)
 {
 	u8 drv_stat;
+	struct ata_host_set *host_set = ap->host_set;
 	struct ata_queued_cmd *qc;
+	unsigned long flags;
 
 	DPRINTK("ENTER\n");
 
+	spin_lock_irqsave(&host_set->lock, flags);
+
 	qc = ata_qc_from_tag(ap, ap->active_tag);
 	if (!qc) {
 		printk(KERN_ERR "ata%u: BUG: timeout without command\n",
@@ -888,6 +892,7 @@ static void pdc_eng_timeout(struct ata_p
 	}
 
 out:
+	spin_unlock_irqrestore(&host_set->lock, flags);
 	DPRINTK("EXIT\n");
 }
 
Only in linux-2.6.13/drivers/scsi: sata_sx4.c.orig
