From: Takashi Iwai <tiwai@suse.de>
Subject: Misc ALSA fixes for 2.6.22
Patch-mainline: 
References: 

Missing fixes for ALSA drivers in 2.6.22 kernel, mainly section mismatch
and wrong use of schedule_timeout_interruptible().

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 Documentation/sound/alsa/OSS-Emulation.txt |   15 +++++++++++++++
 include/sound/wavefront_fx.h               |    9 ---------
 sound/core/pcm_native.c                    |    2 +-
 sound/core/seq/seq_instr.c                 |    6 +++---
 sound/drivers/dummy.c                      |    2 +-
 sound/drivers/mpu401/mpu401.c              |    2 +-
 sound/drivers/portman2x4.c                 |    2 +-
 sound/drivers/serial-u16550.c              |    2 +-
 sound/drivers/virmidi.c                    |    2 +-
 sound/isa/ad1848/ad1848_lib.c              |    4 ++--
 sound/isa/opl3sa2.c                        |    2 ++
 sound/isa/sscape.c                         |    4 ++--
 sound/isa/wavefront/wavefront_synth.c      |    2 +-
 sound/pci/ali5451/ali5451.c                |    7 +++----
 sound/pci/als300.c                         |    7 ++++---
 sound/pci/ens1370.c                        |    4 ++--
 sound/pci/nm256/nm256.c                    |    3 ++-
 sound/pci/rme9652/rme9652.c                |    2 +-
 sound/pci/via82xx.c                        |    4 ++--
 sound/pci/via82xx_modem.c                  |    4 ++--
 20 files changed, 47 insertions(+), 38 deletions(-)

--- a/Documentation/sound/alsa/OSS-Emulation.txt	2007-07-08 19:32:17.000000000 -0400
+++ b/Documentation/sound/alsa/OSS-Emulation.txt	2007-08-27 14:01:23.000000000 -0400
@@ -278,6 +278,21 @@ current mixer configuration by reading a
 image.
 
 
+Duplex Streams
+==============
+
+Note that when attempting to use a single device file for playback and
+capture, the OSS API provides no way to set the format, sample rate or
+number of channels different in each direction.  Thus
+	io_handle = open("device", O_RDWR)
+will only function correctly if the values are the same in each direction.
+
+To use different values in the two directions, use both
+	input_handle = open("device", O_RDONLY)
+	output_handle = open("device", O_WRONLY)
+and set the values for the corresponding handle.
+
+
 Unsupported Features
 ====================
 
--- a/include/sound/wavefront_fx.h	2007-07-08 19:32:17.000000000 -0400
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,9 +0,0 @@
-#ifndef __SOUND_WAVEFRONT_FX_H
-#define __SOUND_WAVEFRONT_FX_H
-
-extern int  snd_wavefront_fx_detect (snd_wavefront_t *);
-extern void snd_wavefront_fx_ioctl  (snd_synth_t *sdev, 
-				     unsigned int cmd, 
-				     unsigned long arg);
-
-#endif  __SOUND_WAVEFRONT_FX_H
--- a/sound/core/pcm_native.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/core/pcm_native.c	2007-08-27 14:01:23.000000000 -0400
@@ -1487,7 +1487,7 @@ static int snd_pcm_drain(struct snd_pcm_
 
 	snd_pcm_stream_lock_irq(substream);
 	/* resume pause */
-	if (runtime->status->state == SNDRV_PCM_STATE_PAUSED)
+	if (substream->runtime->status->state == SNDRV_PCM_STATE_PAUSED)
 		snd_pcm_pause(substream, 0);
 
 	/* pre-start/stop - all running streams are changed to DRAINING state */
--- a/sound/core/seq/seq_instr.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/core/seq/seq_instr.c	2007-08-27 14:01:23.000000000 -0400
@@ -109,7 +109,7 @@ void snd_seq_instr_list_free(struct snd_
 			spin_lock_irqsave(&list->lock, flags);
 			while (instr->use) {
 				spin_unlock_irqrestore(&list->lock, flags);
-				schedule_timeout_interruptible(1);
+				schedule_timeout(1);
 				spin_lock_irqsave(&list->lock, flags);
 			}				
 			spin_unlock_irqrestore(&list->lock, flags);
@@ -199,7 +199,7 @@ int snd_seq_instr_list_free_cond(struct 
 			instr = flist;
 			flist = instr->next;
 			while (instr->use)
-				schedule_timeout_interruptible(1);
+				schedule_timeout(1);
 			if (snd_seq_instr_free(instr, atomic)<0)
 				snd_printk(KERN_WARNING "instrument free problem\n");
 			instr = next;
@@ -555,7 +555,7 @@ static int instr_free(struct snd_seq_kin
 					   SNDRV_SEQ_INSTR_NOTIFY_REMOVE);
 		while (instr->use) {
 			spin_unlock_irqrestore(&list->lock, flags);
-			schedule_timeout_interruptible(1);
+			schedule_timeout(1);
 			spin_lock_irqsave(&list->lock, flags);
 		}				
 		spin_unlock_irqrestore(&list->lock, flags);
--- a/sound/drivers/dummy.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/drivers/dummy.c	2007-08-27 14:01:23.000000000 -0400
@@ -659,7 +659,7 @@ static struct platform_driver snd_dummy_
 	},
 };
 
-static void __init_or_module snd_dummy_unregister_all(void)
+static void snd_dummy_unregister_all(void)
 {
 	int i;
 
--- a/sound/drivers/mpu401/mpu401.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/drivers/mpu401/mpu401.c	2007-08-27 14:01:23.000000000 -0400
@@ -228,7 +228,7 @@ static struct pnp_driver snd_mpu401_pnp_
 static struct pnp_driver snd_mpu401_pnp_driver;
 #endif
 
-static void __init_or_module snd_mpu401_unregister_all(void)
+static void snd_mpu401_unregister_all(void)
 {
 	int i;
 
--- a/sound/drivers/portman2x4.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/drivers/portman2x4.c	2007-08-27 14:01:23.000000000 -0400
@@ -833,7 +833,7 @@ static struct platform_driver snd_portma
 /*********************************************************************
  * module init stuff
  *********************************************************************/
-static void __init_or_module snd_portman_unregister_all(void)
+static void snd_portman_unregister_all(void)
 {
 	int i;
 
--- a/sound/drivers/serial-u16550.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/drivers/serial-u16550.c	2007-08-27 14:01:23.000000000 -0400
@@ -998,7 +998,7 @@ static struct platform_driver snd_serial
 	},
 };
 
-static void __init_or_module snd_serial_unregister_all(void)
+static void snd_serial_unregister_all(void)
 {
 	int i;
 
--- a/sound/drivers/virmidi.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/drivers/virmidi.c	2007-08-27 14:01:23.000000000 -0400
@@ -145,7 +145,7 @@ static struct platform_driver snd_virmid
 	},
 };
 
-static void __init_or_module snd_virmidi_unregister_all(void)
+static void snd_virmidi_unregister_all(void)
 {
 	int i;
 
--- a/sound/isa/ad1848/ad1848_lib.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/isa/ad1848/ad1848_lib.c	2007-08-27 14:01:23.000000000 -0400
@@ -245,7 +245,7 @@ static void snd_ad1848_mce_down(struct s
 			snd_printk(KERN_ERR "mce_down - auto calibration time out (2)\n");
 			return;
 		}
-		time = schedule_timeout_interruptible(time);
+		time = schedule_timeout(time);
 		spin_lock_irqsave(&chip->reg_lock, flags);
 	}
 #if 0
@@ -258,7 +258,7 @@ static void snd_ad1848_mce_down(struct s
 			snd_printk(KERN_ERR "mce_down - auto calibration time out (3)\n");
 			return;
 		}
-		time = schedule_timeout_interruptible(time);
+		time = schedule_timeout(time);
 		spin_lock_irqsave(&chip->reg_lock, flags);
 	}
 	spin_unlock_irqrestore(&chip->reg_lock, flags);
--- a/sound/isa/opl3sa2.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/isa/opl3sa2.c	2007-08-27 14:01:23.000000000 -0400
@@ -164,6 +164,8 @@ static struct pnp_card_device_id snd_opl
 	{ .id = "YMH0801", .devs = { { "YMH0021" } } },
 	/* NeoMagic MagicWave 3DX */
 	{ .id = "NMX2200", .devs = { { "YMH2210" } } },
+	/* NeoMagic MagicWave 3D */
+	{ .id = "NMX2200", .devs = { { "NMX2210" } } },
 	/* --- */
 	{ .id = "" }	/* end */
 };
--- a/sound/isa/sscape.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/isa/sscape.c	2007-08-27 14:01:23.000000000 -0400
@@ -382,7 +382,7 @@ static int obp_startup_ack(struct sounds
 		unsigned long flags;
 		unsigned char x;
 
-		schedule_timeout_interruptible(1);
+		schedule_timeout(1);
 
 		spin_lock_irqsave(&s->lock, flags);
 		x = inb(HOST_DATA_IO(s->io_base));
@@ -409,7 +409,7 @@ static int host_startup_ack(struct sound
 		unsigned long flags;
 		unsigned char x;
 
-		schedule_timeout_interruptible(1);
+		schedule_timeout(1);
 
 		spin_lock_irqsave(&s->lock, flags);
 		x = inb(HOST_DATA_IO(s->io_base));
--- a/sound/isa/wavefront/wavefront_synth.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/isa/wavefront/wavefront_synth.c	2007-08-27 14:01:23.000000000 -0400
@@ -1780,7 +1780,7 @@ wavefront_should_cause_interrupt (snd_wa
 	outb (val,port);
 	spin_unlock_irq(&dev->irq_lock);
 	while (1) {
-		if ((timeout = schedule_timeout_interruptible(timeout)) == 0)
+		if ((timeout = schedule_timeout(timeout)) == 0)
 			return;
 		if (dev->irq_ok)
 			return;
--- a/sound/pci/ali5451/ali5451.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/pci/ali5451/ali5451.c	2007-08-27 14:01:23.000000000 -0400
@@ -239,7 +239,7 @@ struct snd_ali_image {
 
 
 struct snd_ali {
-	unsigned long	irq;
+	int		irq;
 	unsigned long	port;
 	unsigned char	revision;
 
@@ -731,8 +731,7 @@ static void snd_ali_detect_spdif_rate(st
 		return;
 	}
 
-	count = 0;
-	while (count++ <= 50000) {
+	for (count = 0; count <= 50000; count++) {
 		snd_ali_delay(codec, 6);
 		bval = inb(ALI_REG(codec,ALI_SPDIF_CTRL + 1));
 		R2 = bval & 0x1F;
@@ -2343,7 +2342,7 @@ static int __devinit snd_ali_probe(struc
 	strcpy(card->driver, "ALI5451");
 	strcpy(card->shortname, "ALI 5451");
 	
-	sprintf(card->longname, "%s at 0x%lx, irq %li",
+	sprintf(card->longname, "%s at 0x%lx, irq %i",
 		card->shortname, codec->port, codec->irq);
 
 	snd_ali_printk("register card.\n");
--- a/sound/pci/als300.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/pci/als300.c	2007-08-27 14:01:23.000000000 -0400
@@ -88,8 +88,8 @@
 #define PLAYBACK_BLOCK_COUNTER	0x9A
 #define RECORD_BLOCK_COUNTER	0x9B
 
-#define DEBUG_CALLS	1
-#define DEBUG_PLAY_REC	1
+#define DEBUG_CALLS	0
+#define DEBUG_PLAY_REC	0
 
 #if DEBUG_CALLS
 #define snd_als300_dbgcalls(format, args...) printk(format, ##args)
@@ -733,7 +733,8 @@ static int __devinit snd_als300_create(s
 
 	snd_als300_init(chip);
 
-	if (snd_als300_ac97(chip) < 0) {
+	err = snd_als300_ac97(chip);
+	if (err < 0) {
 		snd_printk(KERN_WARNING "Could not create ac97\n");
 		snd_als300_free(chip);
 		return err;
--- a/sound/pci/ens1370.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/pci/ens1370.c	2007-08-27 14:01:23.000000000 -0400
@@ -1607,8 +1607,8 @@ struct es1371_quirk {
 	unsigned char rev;		/* revision */
 };
 
-static int __devinit es1371_quirk_lookup(struct ensoniq *ensoniq,
-					 struct es1371_quirk *list)
+static int es1371_quirk_lookup(struct ensoniq *ensoniq,
+				struct es1371_quirk *list)
 {
 	while (list->vid != (unsigned short)PCI_ANY_ID) {
 		if (ensoniq->pci->vendor == list->vid &&
--- a/sound/pci/nm256/nm256.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/pci/nm256/nm256.c	2007-08-27 14:01:23.000000000 -0400
@@ -1533,7 +1533,8 @@ snd_nm256_create(struct snd_card *card, 
 				printk(KERN_ERR "  force the driver to load by "
 				       "passing in the module parameter\n");
 				printk(KERN_ERR "    force_ac97=1\n");
-				printk(KERN_ERR "  or try sb16 or cs423x drivers instead.\n");
+				printk(KERN_ERR "  or try sb16, opl3sa2, or "
+				       "cs423x drivers instead.\n");
 				err = -ENXIO;
 				goto __error;
 			}
--- a/sound/pci/rme9652/rme9652.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/pci/rme9652/rme9652.c	2007-08-27 14:01:23.000000000 -0400
@@ -406,7 +406,7 @@ static snd_pcm_uframes_t rme9652_hw_poin
 		} else if (!frag)
 			return 0;
 		offset -= rme9652->max_jitter;
-		if (offset < 0)
+		if ((int)offset < 0)
 			offset += period_size * 2;
 	} else {
 		if (offset > period_size + rme9652->max_jitter) {
--- a/sound/pci/via82xx.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/pci/via82xx.c	2007-08-27 14:01:23.000000000 -0400
@@ -2098,7 +2098,7 @@ static int snd_via82xx_chip_init(struct 
 		pci_read_config_byte(chip->pci, VIA_ACLINK_STAT, &pval);
 		if (pval & VIA_ACLINK_C00_READY) /* primary codec ready */
 			break;
-		schedule_timeout_uninterruptible(1);
+		schedule_timeout(1);
 	} while (time_before(jiffies, end_time));
 
 	if ((val = snd_via82xx_codec_xread(chip)) & VIA_REG_AC97_BUSY)
@@ -2117,7 +2117,7 @@ static int snd_via82xx_chip_init(struct 
 			chip->ac97_secondary = 1;
 			goto __ac97_ok2;
 		}
-		schedule_timeout_interruptible(1);
+		schedule_timeout(1);
 	} while (time_before(jiffies, end_time));
 	/* This is ok, the most of motherboards have only one codec */
 
--- a/sound/pci/via82xx_modem.c	2007-07-08 19:32:17.000000000 -0400
+++ b/sound/pci/via82xx_modem.c	2007-08-27 14:01:23.000000000 -0400
@@ -983,7 +983,7 @@ static int snd_via82xx_chip_init(struct 
 		pci_read_config_byte(chip->pci, VIA_ACLINK_STAT, &pval);
 		if (pval & VIA_ACLINK_C00_READY) /* primary codec ready */
 			break;
-		schedule_timeout_uninterruptible(1);
+		schedule_timeout(1);
 	} while (time_before(jiffies, end_time));
 
 	if ((val = snd_via82xx_codec_xread(chip)) & VIA_REG_AC97_BUSY)
@@ -1001,7 +1001,7 @@ static int snd_via82xx_chip_init(struct 
 			chip->ac97_secondary = 1;
 			goto __ac97_ok2;
 		}
-		schedule_timeout_interruptible(1);
+		schedule_timeout(1);
 	} while (time_before(jiffies, end_time));
 	/* This is ok, the most of motherboards have only one codec */
 
