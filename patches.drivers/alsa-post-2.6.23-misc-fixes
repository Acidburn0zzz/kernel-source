From: Takashi Iwai <tiwai@suse.de>
Subject: [ALSA] Misc fixes 
Patch-mainline: 2.6.24-rc1
References: 

- Kconfig cleanups
- Clean up of es1968 with list_for_each_entry
- Add missing es18xx PnP id
- Support of newer HDSP firmware
- Fix Opti9xx resource handling
- Vortex driver clean up / fix

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/drivers/opl3/Makefile         |    8 +++-----
 sound/i2c/Makefile                  |    6 ++----
 sound/i2c/cs8427.c                  |    6 ++++++
 sound/isa/es18xx.c                  |    1 +
 sound/isa/opti9xx/opti92x-ad1848.c  |   14 ++++++++++++--
 sound/isa/sb/sb_common.c            |    4 +++-
 sound/pci/au88x0/au88x0.c           |    1 +
 sound/pci/au88x0/au88x0_synth.c     |    4 ++--
 sound/pci/cs46xx/Makefile           |    8 +++-----
 sound/pci/cs46xx/dsp_spos_scb_lib.c |    2 +-
 sound/pci/es1968.c                  |   28 +++++++++++-----------------
 sound/pci/pcxhr/pcxhr_mixer.c       |    6 +++---
 sound/pci/rme9652/hdsp.c            |   24 ++++++++++++------------
 sound/pci/via82xx.c                 |    1 +
 sound/synth/util_mem.c              |    2 +-
 15 files changed, 62 insertions(+), 53 deletions(-)

--- a/sound/drivers/opl3/Makefile	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/drivers/opl3/Makefile	2007-10-31 17:45:08.000000000 -0400
@@ -1,13 +1,11 @@
 #
 # Makefile for ALSA
-# Copyright (c) 2001 by Jaroslav Kysela <perex@suse.cz>
+# Copyright (c) 2001 by Jaroslav Kysela <perex@perex.cz>
 #
 
 snd-opl3-lib-objs := opl3_lib.o opl3_synth.o
-snd-opl3-synth-objs := opl3_seq.o opl3_midi.o opl3_drums.o
-ifeq ($(CONFIG_SND_SEQUENCER_OSS),y)
-snd-opl3-synth-objs += opl3_oss.o
-endif
+snd-opl3-synth-y := opl3_seq.o opl3_midi.o opl3_drums.o
+snd-opl3-synth-$(CONFIG_SND_SEQUENCER_OSS) += opl3_oss.o
 
 #
 # this function returns:
--- a/sound/i2c/Makefile	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/i2c/Makefile	2007-10-31 17:45:08.000000000 -0400
@@ -1,15 +1,13 @@
 #
 # Makefile for ALSA
-# Copyright (c) 2001 by Jaroslav Kysela <perex@suse.cz>
+# Copyright (c) 2001 by Jaroslav Kysela <perex@perex.cz>
 #
 
 snd-i2c-objs := i2c.o
 snd-cs8427-objs := cs8427.o
 snd-tea6330t-objs := tea6330t.o
 
-ifeq ($(subst m,y,$(CONFIG_L3)),y)
-  obj-$(CONFIG_L3) += l3/
-endif
+obj-$(CONFIG_L3) += l3/
 
 obj-$(CONFIG_SND) += other/
 
--- a/sound/i2c/cs8427.c	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/i2c/cs8427.c	2007-10-31 17:45:08.000000000 -0400
@@ -229,6 +229,12 @@ int snd_cs8427_create(struct snd_i2c_bus
 	snd_i2c_lock(bus);
 	err = snd_cs8427_reg_read(device, CS8427_REG_ID_AND_VER);
 	if (err != CS8427_VER8427A) {
+		/* give second chance */
+		snd_printk(KERN_WARNING "invalid CS8427 signature 0x%x: "
+			   "let me try again...\n", err);
+		err = snd_cs8427_reg_read(device, CS8427_REG_ID_AND_VER);
+	}
+	if (err != CS8427_VER8427A) {
 		snd_i2c_unlock(bus);
 		snd_printk(KERN_ERR "unable to find CS8427 signature "
 			   "(expected 0x%x, read 0x%x),\n",
--- a/sound/isa/es18xx.c	2007-10-31 17:44:59.000000000 -0400
+++ b/sound/isa/es18xx.c	2007-10-31 17:45:08.000000000 -0400
@@ -2028,6 +2028,7 @@ static int pnpc_registered;
 
 static struct pnp_device_id snd_audiodrive_pnpbiosids[] = {
 	{ .id = "ESS1869" },
+	{ .id = "ESS1879" },
 	{ .id = "" }		/* end */
 };
 
--- a/sound/isa/opti9xx/opti92x-ad1848.c	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/isa/opti9xx/opti92x-ad1848.c	2007-10-31 17:45:08.000000000 -0400
@@ -501,6 +501,16 @@ static int __devinit snd_opti9xx_configu
 			(chip->hardware == OPTi9XX_HW_82C930 ? 0x00 : 0x04),
 			0x34);
 		snd_opti9xx_write_mask(chip, OPTi9XX_MC_REG(5), 0x20, 0xbf);
+		/*
+		 * The BTC 1817DW has QS1000 wavetable which is connected
+		 * to the serial digital input of the OPTI931.
+		 */
+		snd_opti9xx_write_mask(chip, OPTi9XX_MC_REG(21), 0x82, 0xff);
+		/*
+		 * This bit sets OPTI931 to automaticaly select FM
+		 * or digital input signal.
+		 */
+		snd_opti9xx_write_mask(chip, OPTi9XX_MC_REG(26), 0x01, 0x01);
 		break;
 #endif	/* OPTi93X */
 
@@ -1732,11 +1742,11 @@ static int __devinit snd_card_opti9xx_pn
 
 #ifdef OPTi93X
 	port = pnp_port_start(pdev, 0) - 4;
-	fm_port = pnp_port_start(pdev, 1);
+	fm_port = pnp_port_start(pdev, 1) + 8;
 #else
 	if (pid->driver_data != 0x0924)
 		port = pnp_port_start(pdev, 1);
-	fm_port = pnp_port_start(pdev, 2);
+	fm_port = pnp_port_start(pdev, 2) + 8;
 #endif	/* OPTi93X */
 	irq = pnp_irq(pdev, 0);
 	dma1 = pnp_dma(pdev, 0);
--- a/sound/isa/sb/sb_common.c	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/isa/sb/sb_common.c	2007-10-31 17:45:08.000000000 -0400
@@ -234,7 +234,9 @@ int snd_sbdsp_create(struct snd_card *ca
 	chip->dma16 = -1;
 	chip->port = port;
 	
-	if (request_irq(irq, irq_handler, hardware == SB_HW_ALS4000 ?
+	if (request_irq(irq, irq_handler,
+			(hardware == SB_HW_ALS4000 ||
+			 hardware == SB_HW_CS5530) ?
 			IRQF_SHARED : IRQF_DISABLED,
 			"SoundBlaster", (void *) chip)) {
 		snd_printk(KERN_ERR "sb: can't grab irq %d\n", irq);
--- a/sound/pci/au88x0/au88x0.c	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/pci/au88x0/au88x0.c	2007-10-31 17:45:08.000000000 -0400
@@ -232,6 +232,7 @@ snd_vortex_create(struct snd_card *card,
 	pci_disable_device(chip->pci_dev);
 	//FIXME: this not the right place to unregister the gameport
 	vortex_gameport_unregister(chip);
+	kfree(chip);
 	return err;
 }
 
--- a/sound/pci/au88x0/au88x0_synth.c	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/pci/au88x0/au88x0_synth.c	2007-10-31 17:45:08.000000000 -0400
@@ -370,8 +370,8 @@ static void vortex_wt_SetFrequency(vorte
 			while ((edx & 0x80000000) == 0) {
 				edx <<= 1;
 				eax--;
-				if (eax == 0) ;
-				break;
+				if (eax == 0)
+					break;
 			}
 			if (eax)
 				edx <<= 1;
--- a/sound/pci/cs46xx/Makefile	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/pci/cs46xx/Makefile	2007-10-31 17:45:08.000000000 -0400
@@ -1,12 +1,10 @@
 #
 # Makefile for ALSA
-# Copyright (c) 2001 by Jaroslav Kysela <perex@suse.cz>
+# Copyright (c) 2001 by Jaroslav Kysela <perex@perex.cz>
 #
 
-snd-cs46xx-objs := cs46xx.o cs46xx_lib.o
-ifeq ($(CONFIG_SND_CS46XX_NEW_DSP),y)
-  snd-cs46xx-objs += dsp_spos.o dsp_spos_scb_lib.o
-endif
+snd-cs46xx-y := cs46xx.o cs46xx_lib.o
+snd-cs46xx-$(CONFIG_SND_CS46XX_NEW_DSP) += dsp_spos.o dsp_spos_scb_lib.o
 
 # Toplevel Module Dependency
 obj-$(CONFIG_SND_CS46XX) += snd-cs46xx.o
--- a/sound/pci/cs46xx/dsp_spos_scb_lib.c	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/pci/cs46xx/dsp_spos_scb_lib.c	2007-10-31 17:45:08.000000000 -0400
@@ -1480,7 +1480,7 @@ void cs46xx_dsp_destroy_pcm_channel (str
 	if (!pcm_channel->src_scb->ref_count) {
 		cs46xx_dsp_remove_scb(chip,pcm_channel->src_scb);
 
-		snd_assert (pcm_channel->src_slot >= 0 && pcm_channel->src_slot <= DSP_MAX_SRC_NR,
+		snd_assert (pcm_channel->src_slot >= 0 && pcm_channel->src_slot < DSP_MAX_SRC_NR,
 			    return );
 
 		ins->src_scb_slots[pcm_channel->src_slot] = 0;
--- a/sound/pci/es1968.c	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/pci/es1968.c	2007-10-31 17:45:08.000000000 -0400
@@ -843,10 +843,9 @@ static void snd_es1968_bob_dec(struct es
 		snd_es1968_bob_stop(chip);
 	else if (chip->bob_freq > ESM_BOB_FREQ) {
 		/* check reduction of timer frequency */
-		struct list_head *p;
 		int max_freq = ESM_BOB_FREQ;
-		list_for_each(p, &chip->substream_list) {
-			struct esschan *es = list_entry(p, struct esschan, list);
+		struct esschan *es;
+		list_for_each_entry(es, &chip->substream_list, list) {
 			if (max_freq < es->bob_freq)
 				max_freq = es->bob_freq;
 		}
@@ -1316,12 +1315,11 @@ static struct snd_pcm_hardware snd_es196
 
 static int calc_available_memory_size(struct es1968 *chip)
 {
-	struct list_head *p;
 	int max_size = 0;
-	
+	struct esm_memory *buf;
+
 	mutex_lock(&chip->memory_mutex);
-	list_for_each(p, &chip->buf_list) {
-		struct esm_memory *buf = list_entry(p, struct esm_memory, list);
+	list_for_each_entry(buf, &chip->buf_list, list) {
 		if (buf->empty && buf->buf.bytes > max_size)
 			max_size = buf->buf.bytes;
 	}
@@ -1335,12 +1333,10 @@ static int calc_available_memory_size(st
 static struct esm_memory *snd_es1968_new_memory(struct es1968 *chip, int size)
 {
 	struct esm_memory *buf;
-	struct list_head *p;
-	
+
 	size = ALIGN(size, ESM_MEM_ALIGN);
 	mutex_lock(&chip->memory_mutex);
-	list_for_each(p, &chip->buf_list) {
-		buf = list_entry(p, struct esm_memory, list);
+	list_for_each_entry(buf, &chip->buf_list, list) {
 		if (buf->empty && buf->buf.bytes >= size)
 			goto __found;
 	}
@@ -1938,10 +1934,9 @@ static irqreturn_t snd_es1968_interrupt(
 	}
 
 	if (event & ESM_SOUND_IRQ) {
-		struct list_head *p;
+		struct esschan *es;
 		spin_lock(&chip->substream_lock);
-		list_for_each(p, &chip->substream_list) {
-			struct esschan *es = list_entry(p, struct esschan, list);
+		list_for_each_entry(es, &chip->substream_list, list) {
 			if (es->running)
 				snd_es1968_update_pcm(chip, es);
 		}
@@ -2345,7 +2340,7 @@ static int es1968_resume(struct pci_dev 
 {
 	struct snd_card *card = pci_get_drvdata(pci);
 	struct es1968 *chip = card->private_data;
-	struct list_head *p;
+	struct esschan *es;
 
 	if (! chip->do_pm)
 		return 0;
@@ -2374,8 +2369,7 @@ static int es1968_resume(struct pci_dev 
 	/* restore ac97 state */
 	snd_ac97_resume(chip->ac97);
 
-	list_for_each(p, &chip->substream_list) {
-		struct esschan *es = list_entry(p, struct esschan, list);
+	list_for_each_entry(es, &chip->substream_list, list) {
 		switch (es->mode) {
 		case ESM_MODE_PLAY:
 			snd_es1968_playback_setup(chip, es, es->substream->runtime);
--- a/sound/pci/pcxhr/pcxhr_mixer.c	2007-10-31 17:44:59.000000000 -0400
+++ b/sound/pci/pcxhr/pcxhr_mixer.c	2007-10-31 17:45:08.000000000 -0400
@@ -44,8 +44,8 @@
 #define PCXHR_ANALOG_PLAYBACK_LEVEL_MAX  128	/*    0.0 dB */
 #define PCXHR_ANALOG_PLAYBACK_ZERO_LEVEL 104	/*  -24.0 dB ( 0.0 dB - fix level +24.0 dB ) */
 
-static const DECLARE_TLV_DB_SCALE(db_scale_analog_capture, -9600, 50, 0);
-static const DECLARE_TLV_DB_SCALE(db_scale_analog_playback, -12800, 100, 0);
+static const DECLARE_TLV_DB_SCALE(db_scale_analog_capture, -9600, 50, 3150);
+static const DECLARE_TLV_DB_SCALE(db_scale_analog_playback, -10400, 100, 2400);
 
 static int pcxhr_update_analog_audio_level(struct snd_pcxhr *chip, int is_capture, int channel)
 {
@@ -188,7 +188,7 @@ static struct snd_kcontrol_new pcxhr_con
 #define PCXHR_DIGITAL_LEVEL_MAX		0x1ff	/* +18 dB */
 #define PCXHR_DIGITAL_ZERO_LEVEL	0x1b7	/*  0 dB */
 
-static const DECLARE_TLV_DB_SCALE(db_scale_digital, -10950, 50, 0);
+static const DECLARE_TLV_DB_SCALE(db_scale_digital, -10975, 25, 1800);
 
 #define MORE_THAN_ONE_STREAM_LEVEL	0x000001
 #define VALID_STREAM_PAN_LEVEL_MASK	0x800000
--- a/sound/pci/rme9652/hdsp.c	2007-10-31 17:44:59.000000000 -0400
+++ b/sound/pci/rme9652/hdsp.c	2007-10-31 17:45:08.000000000 -0400
@@ -606,28 +606,28 @@ static void snd_hdsp_9652_enable_mixer (
 
 static int hdsp_playback_to_output_key (struct hdsp *hdsp, int in, int out)
 {
-	switch (hdsp->firmware_rev) {
-	case 0xa:
+	switch (hdsp->io_type) {
+	case Multiface:
+	case Digiface:
+	default:
 		return (64 * out) + (32 + (in));
-	case 0x96:
-	case 0x97:
-	case 0x98:
+	case H9632:
 		return (32 * out) + (16 + (in));
-	default:
+	case H9652:
 		return (52 * out) + (26 + (in));
 	}
 }
 
 static int hdsp_input_to_output_key (struct hdsp *hdsp, int in, int out)
 {
-	switch (hdsp->firmware_rev) {
-	case 0xa:
+	switch (hdsp->io_type) {
+	case Multiface:
+	case Digiface:
+	default:
 		return (64 * out) + in;
-	case 0x96:
-	case 0x97:
-	case 0x98:
+	case H9632:
 		return (32 * out) + in;
-	default:
+	case H9652:
 		return (52 * out) + in;
 	}
 }
--- a/sound/pci/via82xx.c	2007-10-31 17:45:01.000000000 -0400
+++ b/sound/pci/via82xx.c	2007-10-31 17:45:08.000000000 -0400
@@ -2363,6 +2363,7 @@ static struct snd_pci_quirk dxs_whitelis
 	SND_PCI_QUIRK(0x1071, 0, "Diverse Notebook", VIA_DXS_NO_VRA),
 	SND_PCI_QUIRK(0x10cf, 0x118e, "FSC Laptop", VIA_DXS_ENABLE),
 	SND_PCI_QUIRK(0x1106, 0, "ASRock", VIA_DXS_SRC),
+	SND_PCI_QUIRK(0x1297, 0xa231, "Shuttle AK31v2", VIA_DXS_SRC),
 	SND_PCI_QUIRK(0x1297, 0xa232, "Shuttle", VIA_DXS_ENABLE),
 	SND_PCI_QUIRK(0x1297, 0xc160, "Shuttle Sk41G", VIA_DXS_ENABLE),
 	SND_PCI_QUIRK(0x1458, 0xa002, "Gigabyte GA-7VAXP", VIA_DXS_ENABLE),
--- a/sound/synth/util_mem.c	2007-10-31 17:43:09.000000000 -0400
+++ b/sound/synth/util_mem.c	2007-10-31 17:45:08.000000000 -0400
@@ -116,7 +116,7 @@ __snd_util_memblk_new(struct snd_util_me
 	if (blk == NULL)
 		return NULL;
 
-	if (! prev || prev == &hdr->block)
+	if (prev == &hdr->block)
 		blk->offset = 0;
 	else {
 		struct snd_util_memblk *p = get_memblk(prev);
