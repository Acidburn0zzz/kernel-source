From: wenxiong@us.ibm.com
Subject: Bug 187047 - Neterion driver - NIC report Rx error on dmesg when running tcpdump
References: 187047 - LTC24803

I think I can see what is happening, in [data 14]
I can see the SNAP header (aa aa 03) followed by the OUI field (00 00 0c).  

The Xframe receive protocol logic interprets an OUI field that is anything 
other than 00-00-00 as "unparseable".  It tags the packet with 0x5 and
passes it up the stack for analysis.  Note that this is not an IP packet, it is likely 
a proprietary packet (like the Cisco spanning tree protocol).


To trigger this error: tcpdump in promiscuous mode through Cisco swith since 
the adapter detected a Cisco spanning tree packet.

The adapter receives a Cisco spanning tree packet, doesnâ€™t know what to do
with it, and so it forwards it up to the stack for further processing.

Signed-off-by: Olaf Hering <olh@suse.de>
---
 drivers/net/s2io.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

Index: linux-2.6.16/drivers/net/s2io.c
===================================================================
--- linux-2.6.16.orig/drivers/net/s2io.c
+++ linux-2.6.16/drivers/net/s2io.c
@@ -5606,10 +5606,10 @@ static int rx_osm_handler(ring_info_t *r
 		((unsigned long) rxdp->Host_Control);
 	int ring_no = ring_data->ring_no;
 	u16 l3_csum, l4_csum;
+	unsigned long long err = rxdp->Control_1 & RXD_T_CODE;
 
 	skb->dev = dev;
-	if (rxdp->Control_1 & RXD_T_CODE) {
-		unsigned long long err = rxdp->Control_1 & RXD_T_CODE;
+	if (err && ((err >> 48) != 0x5)) {
 		DBG_PRINT(ERR_DBG, "%s: Rx error Value: 0x%llx\n",
 			  dev->name, err);
 		dev_kfree_skb(skb);
