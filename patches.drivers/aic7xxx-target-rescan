From: Hannes Reinecke <hare@suse.de>
Subject: aic7xxx crashes when re-adding SCSI devices through sysfs
References: 149198 - LTC21496

The aic7xxx driver crashes with a BUG_ON() statement when re-adding
devices via sysfs.
There is some weird logic going on here, but it seems to boil down to
the fact that the target is allocated during scan, but not freed
during device removal. So we can just avoid this crash if we allow an
already existing target in ahc_linux_target_alloc().

Signed-off-by: Hannes Reinecke <hare@suse.de>

diff --git a/drivers/scsi/aic7xxx/aic79xx_osm.c b/drivers/scsi/aic7xxx/aic79xx_osm.c
index 7254ea5..0ad885e 100644
--- a/drivers/scsi/aic7xxx/aic79xx_osm.c
+++ b/drivers/scsi/aic7xxx/aic79xx_osm.c
@@ -495,9 +495,11 @@ ahd_linux_target_alloc(struct scsi_targe
 	struct ahd_tmode_tstate *tstate;
 	char channel = starget->channel + 'A';
 
-	ahd_lock(ahd, &flags);
+	/* target might already be allocated when doing a rescan */
+	if (*ahd_targp)
+		return 0;
 
-	BUG_ON(*ahd_targp != NULL);
+	ahd_lock(ahd, &flags);
 
 	*ahd_targp = starget;
 	memset(targ, 0, sizeof(*targ));
diff --git a/drivers/scsi/aic7xxx/aic7xxx_osm.c b/drivers/scsi/aic7xxx/aic7xxx_osm.c
index 2c80167..93d48fe 100644
--- a/drivers/scsi/aic7xxx/aic7xxx_osm.c
+++ b/drivers/scsi/aic7xxx/aic7xxx_osm.c
@@ -522,6 +522,10 @@ ahc_linux_target_alloc(struct scsi_targe
 	unsigned int our_id = ahc->our_id;
 	unsigned int target_offset;
 
+	/* target might already be allocated when doing a rescan */
+	if (*ahc_targp)
+		return 0;
+
 	target_offset = starget->id;
 	if (starget->channel != 0)
 		target_offset += 8;
@@ -531,8 +535,6 @@ ahc_linux_target_alloc(struct scsi_targe
 
 	ahc_lock(ahc, &flags);
 
-	BUG_ON(*ahc_targp != NULL);
-
 	*ahc_targp = starget;
 	memset(targ, 0, sizeof(*targ));
 
