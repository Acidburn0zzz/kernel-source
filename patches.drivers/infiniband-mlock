diff -u linux/drivers/infiniband/hw/mellanox-hca/mosal/mosal_mlock.c-o linux/drivers/infiniband/hw/mellanox-hca/mosal/mosal_mlock.c
--- linux/drivers/infiniband/hw/mellanox-hca/mosal/mosal_mlock.c-o	2004-10-01 16:43:08.000000000 +0200
+++ linux/drivers/infiniband/hw/mellanox-hca/mosal/mosal_mlock.c	2004-10-01 16:49:17.000000000 +0200
@@ -294,6 +294,13 @@
 #ifdef __ia64__
   return 0;
 #elif LINUX_KERNEL_2_6
+  /* Original programmer of this should have his or her programming license
+     revoked. -AK */
+#if 1
+  extern void sys_mlock(void), sys_munlock(void);
+  *lock_p = sys_mlock; 
+  *lock_p = sys_munlock;  return 0;
+#else
   char *modname;
   const char *name;
   unsigned long offset, size, n;
@@ -318,7 +325,7 @@
     return 0;
   }
   else return -1;
-
+#endif
 #elif defined(sys_call_table) || defined(USE_SYS_CALL_TABLE) || ( defined(__x86_64__) && !defined(RH_AS_3_0) )
   *lock_p = (sys_lock_ptr_t)sys_call_table[__NR_mlock]; 
   *unlock_p = (sys_lock_ptr_t)sys_call_table[__NR_munlock]; 
diff -u linux/mm/mlock.c-o linux/mm/mlock.c
--- linux/mm/mlock.c-o	2004-10-01 16:43:14.000000000 +0200
+++ linux/mm/mlock.c	2004-10-01 16:50:00.000000000 +0200
@@ -7,6 +7,7 @@
 
 #include <linux/mman.h>
 #include <linux/mm.h>
+#include <linux/module.h>
 
 
 static int mlock_fixup(struct vm_area_struct * vma, 
@@ -130,6 +131,7 @@
 	up_write(&current->mm->mmap_sem);
 	return error;
 }
+EXPORT_SYMBOL(sys_mlock);
 
 asmlinkage long sys_munlock(unsigned long start, size_t len)
 {
@@ -142,6 +144,7 @@
 	up_write(&current->mm->mmap_sem);
 	return ret;
 }
+EXPORT_SYMBOL(sys_munlock);
 
 static int do_mlockall(int flags)
 {
