Summary: fix ipr SATA SAS
From: bjking1@us.ibm.com
References: 215625

http://www.spinics.net/lists/linux-ide/msg06796.html
[PATCH] libata: initialize qc->dma_dir to DMA_NONE

http://www.spinics.net/lists/linux-ide/msg06811.html
[PATCH 1/3] libata: Fixup n_elem initialization

http://www.spinics.net/lists/linux-ide/msg06810.html
[PATCH 2/3] libata: Initialize nbytes for internal sg commands

http://www.spinics.net/lists/linux-ide/msg06812.html
[PATCH 3/3] libata: Initialize qc->pad_len

Signed-off-by: Olaf Hering <olh@suse.de>

---
 drivers/ata/libata-core.c |    1 +
 drivers/ata/libata-scsi.c |    2 +-
 include/linux/libata.h    |    3 +++
 3 files changed, 5 insertions(+), 1 deletion(-)

Index: linux-2.6.19/drivers/ata/libata-core.c
===================================================================
--- linux-2.6.19.orig/drivers/ata/libata-core.c
+++ linux-2.6.19/drivers/ata/libata-core.c
@@ -1250,6 +1250,7 @@ unsigned ata_exec_internal_sg(struct ata
 
 		ata_sg_init(qc, sg, n_elem);
 		qc->nsect = buflen / ATA_SECT_SIZE;
+		qc->nbytes = buflen;
 	}
 
 	qc->private_data = &wait;
Index: linux-2.6.19/drivers/ata/libata-scsi.c
===================================================================
--- linux-2.6.19.orig/drivers/ata/libata-scsi.c
+++ linux-2.6.19/drivers/ata/libata-scsi.c
@@ -372,7 +372,7 @@ struct ata_queued_cmd *ata_scsi_qc_new(s
 		if (cmd->use_sg) {
 			qc->__sg = (struct scatterlist *) cmd->request_buffer;
 			qc->n_elem = cmd->use_sg;
-		} else {
+		} else if (cmd->request_bufflen) {
 			qc->__sg = &qc->sgent;
 			qc->n_elem = 1;
 		}
Index: linux-2.6.19/include/linux/libata.h
===================================================================
--- linux-2.6.19.orig/include/linux/libata.h
+++ linux-2.6.19/include/linux/libata.h
@@ -1143,12 +1143,15 @@ static inline void ata_tf_init(struct at
 
 static inline void ata_qc_reinit(struct ata_queued_cmd *qc)
 {
+	qc->dma_dir = DMA_NONE;
 	qc->__sg = NULL;
 	qc->flags = 0;
 	qc->cursect = qc->cursg = qc->cursg_ofs = 0;
 	qc->nsect = 0;
 	qc->nbytes = qc->curbytes = 0;
+	qc->n_elem = 0;
 	qc->err_mask = 0;
+	qc->pad_len = 0;
 
 	ata_tf_init(qc->dev, &qc->tf);
 
