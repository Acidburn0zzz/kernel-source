From: jbeulich@novell.com
Subject: eliminate static variables from assign_irq_vector()

Avoiding potential serialization issues upon their use.

Index: head-2006-04-20/arch/i386/kernel/io_apic-xen.c
===================================================================
--- head-2006-04-20.orig/arch/i386/kernel/io_apic-xen.c	2006-04-20 14:23:04.000000000 +0200
+++ head-2006-04-20/arch/i386/kernel/io_apic-xen.c	2006-04-20 14:24:12.000000000 +0200
@@ -1205,7 +1205,6 @@ u8 irq_vector[NR_IRQ_VECTORS] __read_mos
 
 int assign_irq_vector(int irq)
 {
-	static int current_vector = FIRST_DEVICE_VECTOR;
 	physdev_op_t op;
 
 	BUG_ON(irq >= NR_IRQ_VECTORS);
@@ -1216,13 +1215,12 @@ int assign_irq_vector(int irq)
 	op.u.irq_op.irq = irq;
 	if (HYPERVISOR_physdev_op(&op))
 		return -ENOSPC;
-	current_vector = op.u.irq_op.vector;
 
-	vector_irq[current_vector] = irq;
+	vector_irq[op.u.irq_op.vector] = irq;
 	if (irq != AUTO_ASSIGN)
-		IO_APIC_VECTOR(irq) = current_vector;
+		IO_APIC_VECTOR(irq) = op.u.irq_op.vector;
 
-	return current_vector;
+	return op.u.irq_op.vector;
 }
 
 #ifndef CONFIG_XEN
Index: head-2006-04-20/arch/x86_64/kernel/io_apic-xen.c
===================================================================
--- head-2006-04-20.orig/arch/x86_64/kernel/io_apic-xen.c	2006-04-20 14:18:14.000000000 +0200
+++ head-2006-04-20/arch/x86_64/kernel/io_apic-xen.c	2006-04-13 15:57:17.000000000 +0200
@@ -869,7 +869,6 @@ u8 irq_vector[NR_IRQ_VECTORS] __read_mos
 
 int assign_irq_vector(int irq)
 {
-	static int current_vector = FIRST_DEVICE_VECTOR;
 	physdev_op_t op;
   
   	BUG_ON(irq != AUTO_ASSIGN && (unsigned)irq >= NR_IRQ_VECTORS);
@@ -880,13 +879,12 @@ int assign_irq_vector(int irq)
 	op.u.irq_op.irq = irq;
 	if (HYPERVISOR_physdev_op(&op))
 		return -ENOSPC;
-	current_vector = op.u.irq_op.vector;
 
-	vector_irq[current_vector] = irq;
+	vector_irq[op.u.irq_op.vector] = irq;
 	if (irq != AUTO_ASSIGN)
-		IO_APIC_VECTOR(irq) = current_vector;
+		IO_APIC_VECTOR(irq) = op.u.irq_op.vector;
 
-	return current_vector;
+	return op.u.irq_op.vector;
 }
 
 extern void (*interrupt[NR_IRQS])(void);
