From: jbeulich@novell.com
Subject: make i386 and x86 NMI code consistent, disable all APIC-related stuff
Patch-mainline: obsolete
References: 191115

--- head-2009-03-06.orig/arch/x86/include/asm/irq.h	2009-03-05 18:00:24.000000000 +0100
+++ head-2009-03-06/arch/x86/include/asm/irq.h	2009-03-06 10:23:57.000000000 +0100
@@ -15,7 +15,7 @@ static inline int irq_canonicalize(int i
 	return ((irq == 2) ? 9 : irq);
 }
 
-#ifdef CONFIG_X86_LOCAL_APIC
+#if defined(CONFIG_X86_LOCAL_APIC) && !defined(CONFIG_XEN)
 # define ARCH_HAS_NMI_WATCHDOG
 #endif
 
--- head-2009-03-06.orig/arch/x86/include/asm/nmi.h	2008-12-25 00:26:37.000000000 +0100
+++ head-2009-03-06/arch/x86/include/asm/nmi.h	2009-03-06 10:23:57.000000000 +0100
@@ -5,8 +5,6 @@
 #include <asm/irq.h>
 #include <asm/io.h>
 
-#ifdef ARCH_HAS_NMI_WATCHDOG
-
 /**
  * do_nmi_callback
  *
@@ -16,6 +14,11 @@
 int do_nmi_callback(struct pt_regs *regs, int cpu);
 
 extern void die_nmi(char *str, struct pt_regs *regs, int do_panic);
+
+extern int unknown_nmi_panic;
+
+#ifdef ARCH_HAS_NMI_WATCHDOG
+
 extern int check_nmi_watchdog(void);
 extern int nmi_watchdog_enabled;
 extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);
@@ -43,7 +46,6 @@ struct ctl_table;
 struct file;
 extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,
 			void __user *, size_t *, loff_t *);
-extern int unknown_nmi_panic;
 
 void __trigger_all_cpu_backtrace(void);
 #define trigger_all_cpu_backtrace() __trigger_all_cpu_backtrace()
@@ -66,7 +68,6 @@ static inline int nmi_watchdog_active(vo
 	 */
 	return nmi_watchdog & 0x3;
 }
-#endif
 
 void lapic_watchdog_stop(void);
 int lapic_watchdog_init(unsigned nmi_hz);
@@ -75,6 +76,9 @@ unsigned lapic_adjust_nmi_hz(unsigned hz
 int lapic_watchdog_ok(void);
 void disable_lapic_nmi_watchdog(void);
 void enable_lapic_nmi_watchdog(void);
+
+#endif
+
 void stop_nmi(void);
 void restart_nmi(void);
 
--- head-2009-03-06.orig/arch/x86/kernel/Makefile	2009-02-18 14:18:16.000000000 +0100
+++ head-2009-03-06/arch/x86/kernel/Makefile	2009-03-06 10:23:57.000000000 +0100
@@ -130,7 +130,6 @@ ifeq ($(CONFIG_X86_64),y)
 
         obj-$(CONFIG_PCI_MMCONFIG)	+= mmconf-fam10h_64.o
 
-	obj-$(CONFIG_XEN)		+= nmi.o
 	time_64-$(CONFIG_XEN)		+= time_32.o
 endif
 
--- head-2009-03-06.orig/arch/x86/kernel/cpu/Makefile	2009-03-04 16:16:19.000000000 +0100
+++ head-2009-03-06/arch/x86/kernel/cpu/Makefile	2009-03-06 10:23:57.000000000 +0100
@@ -28,7 +28,7 @@ obj-$(CONFIG_CPU_FREQ)	+= cpufreq/
 
 obj-$(CONFIG_X86_LOCAL_APIC) += perfctr-watchdog.o
 
-disabled-obj-$(CONFIG_XEN) := hypervisor.o vmware.o
+disabled-obj-$(CONFIG_XEN) := hypervisor.o perfctr-watchdog.o vmware.o
 
 quiet_cmd_mkcapflags = MKCAP   $@
       cmd_mkcapflags = $(PERL) $(srctree)/$(src)/mkcapflags.pl $< $@
--- head-2009-03-06.orig/arch/x86/kernel/nmi.c	2009-02-18 14:11:12.000000000 +0100
+++ head-2009-03-06/arch/x86/kernel/nmi.c	2009-03-06 10:23:57.000000000 +0100
@@ -27,8 +27,10 @@
 #include <linux/kdebug.h>
 #include <linux/smp.h>
 
-#ifndef CONFIG_XEN
+#ifdef ARCH_HAS_NMI_WATCHDOG
 #include <asm/i8259.h>
+#else
+#include <asm/nmi.h>
 #endif
 #include <asm/io_apic.h>
 #include <asm/proto.h>
@@ -39,6 +41,9 @@
 #include <mach_traps.h>
 
 int unknown_nmi_panic;
+
+#ifdef ARCH_HAS_NMI_WATCHDOG
+
 int nmi_watchdog_enabled;
 
 static cpumask_t backtrace_mask = CPU_MASK_NONE;
@@ -184,13 +189,11 @@ int __init check_nmi_watchdog(void)
 	kfree(prev_nmi_count);
 	return 0;
 error:
-#ifndef CONFIG_XEN
 	if (nmi_watchdog == NMI_IO_APIC) {
 		if (!timer_through_8259)
 			disable_8259A_irq(0);
 		on_each_cpu(__acpi_nmi_disable, NULL, 1);
 	}
-#endif
 
 #ifdef CONFIG_X86_32
 	timer_ack = 0;
@@ -476,8 +479,11 @@ nmi_watchdog_tick(struct pt_regs *regs, 
 	return rc;
 }
 
+#endif /* ARCH_HAS_NMI_WATCHDOG */
+
 #ifdef CONFIG_SYSCTL
 
+#ifdef ARCH_HAS_NMI_WATCHDOG
 static void enable_ioapic_nmi_watchdog_single(void *unused)
 {
 	__get_cpu_var(wd_enabled) = 1;
@@ -495,6 +501,7 @@ static void disable_ioapic_nmi_watchdog(
 {
 	on_each_cpu(stop_apic_nmi_watchdog, NULL, 1);
 }
+#endif
 
 static int __init setup_unknown_nmi_panic(char *str)
 {
@@ -513,6 +520,7 @@ static int unknown_nmi_panic_callback(st
 	return 0;
 }
 
+#ifdef ARCH_HAS_NMI_WATCHDOG
 /*
  * proc handler for /proc/sys/kernel/nmi
  */
@@ -550,6 +558,7 @@ int proc_nmi_enabled(struct ctl_table *t
 	}
 	return 0;
 }
+#endif
 
 #endif /* CONFIG_SYSCTL */
 
@@ -562,6 +571,7 @@ int do_nmi_callback(struct pt_regs *regs
 	return 0;
 }
 
+#ifdef ARCH_HAS_NMI_WATCHDOG
 void __trigger_all_cpu_backtrace(void)
 {
 	int i;
@@ -574,3 +584,4 @@ void __trigger_all_cpu_backtrace(void)
 		mdelay(1);
 	}
 }
+#endif
--- head-2009-03-06.orig/arch/x86/kernel/traps-xen.c	2009-03-06 10:23:26.000000000 +0100
+++ head-2009-03-06/arch/x86/kernel/traps-xen.c	2009-03-06 10:23:57.000000000 +0100
@@ -51,6 +51,7 @@
 #include <asm/atomic.h>
 #include <asm/system.h>
 #include <asm/traps.h>
+#include <asm/nmi.h>
 #include <asm/desc.h>
 #include <asm/i387.h>
 
@@ -446,12 +447,14 @@ static notrace __kprobes void default_do
 								== NOTIFY_STOP)
 			return;
 #ifdef CONFIG_X86_LOCAL_APIC
+#ifdef ARCH_HAS_NMI_WATCHDOG
 		/*
 		 * Ok, so this is none of the documented NMI sources,
 		 * so it must be the NMI watchdog.
 		 */
 		if (nmi_watchdog_tick(regs, reason))
 			return;
+#endif
 		if (!do_nmi_callback(regs, cpu))
 			unknown_nmi_error(reason, regs);
 #else
--- head-2009-03-06.orig/arch/x86/mach-xen/setup.c	2009-02-18 14:11:12.000000000 +0100
+++ head-2009-03-06/arch/x86/mach-xen/setup.c	2009-03-06 10:23:57.000000000 +0100
@@ -108,12 +108,10 @@ void __init machine_specific_arch_setup(
 		.address = CALLBACK_ADDR(system_call)
 	};
 #endif
-#if defined(CONFIG_X86_LOCAL_APIC) || defined(CONFIG_X86_32)
 	static struct callback_register __initdata nmi_cb = {
 		.type = CALLBACKTYPE_nmi,
 		.address = CALLBACK_ADDR(nmi)
 	};
-#endif
 
 	ret = HYPERVISOR_callback_op(CALLBACKOP_register, &event);
 	if (ret == 0)
@@ -137,7 +135,6 @@ void __init machine_specific_arch_setup(
 #endif
 	BUG_ON(ret);
 
-#if defined(CONFIG_X86_LOCAL_APIC) || defined(CONFIG_X86_32)
 	ret = HYPERVISOR_callback_op(CALLBACKOP_register, &nmi_cb);
 #if CONFIG_XEN_COMPAT <= 0x030002
 	if (ret == -ENOSYS) {
@@ -148,7 +145,6 @@ void __init machine_specific_arch_setup(
 		HYPERVISOR_nmi_op(XENNMI_register_callback, &cb);
 	}
 #endif
-#endif
 
 #ifdef CONFIG_X86_32
 	/* Do an early initialization of the fixmap area */
--- head-2009-03-06.orig/kernel/sysctl.c	2009-02-18 13:39:41.000000000 +0100
+++ head-2009-03-06/kernel/sysctl.c	2009-03-06 10:23:57.000000000 +0100
@@ -715,6 +715,7 @@ static struct ctl_table kern_table[] = {
 		.mode           = 0644,
 		.proc_handler   = &proc_dointvec,
 	},
+#ifdef ARCH_HAS_NMI_WATCHDOG
 	{
 		.procname       = "nmi_watchdog",
 		.data           = &nmi_watchdog_enabled,
@@ -723,6 +724,7 @@ static struct ctl_table kern_table[] = {
 		.proc_handler   = &proc_nmi_enabled,
 	},
 #endif
+#endif
 #if defined(CONFIG_X86)
 	{
 		.ctl_name	= KERN_PANIC_ON_NMI,
