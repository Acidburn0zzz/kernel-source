From: Charles Coffing <ccoffing@novell.com>
Subject: Fix missing bits in Xen tree.

--- a/include/asm-xen/asm-i386/io.h	2005-08-18 17:08:11.862927839 -0600
+++ b/include/asm-xen/asm-i386/io.h	2005-08-18 17:40:37.762815727 -0600
@@ -362,7 +362,7 @@
 #endif
 
 
-#if __UNSAFE_IO__
+#ifdef __UNSAFE_IO__
 #define ____BUILDIO(bwl,bw,type) \
 static inline void out##bwl##_local(unsigned type value, int port) { \
 	__asm__ __volatile__("out" #bwl " %" #bw "0, %w1" : : "a"(value), "Nd"(port)); \
--- a/arch/xen/i386/mm/fault.c	2005-08-18 17:54:59.734812687 -0600
+++ b/arch/xen/i386/mm/fault.c~	2005-08-18 18:44:32.962040075 -0600
@@ -276,7 +276,7 @@ fastcall void do_page_fault(struct pt_re
 {
 	struct task_struct *tsk;
 	struct mm_struct *mm;
-	struct vm_area_struct * vma;
+	struct vm_area_struct * vma, * prev_vma;
 	int write;
 	siginfo_t info;
 
@@ -370,8 +370,9 @@ fastcall void do_page_fault(struct pt_re
 		if (address + 32 < regs->esp)
 			goto bad_area;
 	}
-	if (expand_stack(vma, address))
-		goto bad_area;
+        find_vma_prev(current->mm, address, &prev_vma);
+        if (expand_stack(vma, address, prev_vma))
+                goto bad_area;
 /*
  * Ok, we have a good vm_area for this memory access, so
  * we can handle it..
--- a/arch/xen/i386/kernel/time.c	2005-08-18 17:54:59.777807050 -0600
+++ b/arch/xen/i386/kernel/time.c~	2005-08-18 19:20:25.900820275 -0600
@@ -920,6 +920,11 @@ static int __init xen_sysctl_init(void)
 }
 __initcall(xen_sysctl_init);
 
+int read_current_timer(unsigned long *timer_val)
+{
+	return -1;
+}
+
 /*
  * Local variables:
  *  c-file-style: "linux"
--- a/arch/xen/kernel/reboot.c	2005-08-18 19:26:07.199080116 -0600
+++ b/arch/xen/kernel/reboot.c~	2005-08-18 19:25:18.952404746 -0600
@@ -30,6 +30,11 @@ void machine_restart(char * __unused)
 	HYPERVISOR_reboot();
 }
 
+void machine_emergency_restart(void)
+{
+	machine_restart(NULL);
+}
+
 void machine_halt(void)
 {
 	machine_power_off();
--- a/include/asm-xen/asm-i386/mmu_context.h	2005-08-18 19:39:52.463893846 -0600
+++ b/include/asm-xen/asm-i386/mmu_context.h~	2005-08-18 19:40:11.065456425 -0600
@@ -23,9 +23,7 @@ static inline void enter_lazy_tlb(struct
 #endif
 }
 
-#define prepare_arch_switch(rq,next)	__prepare_arch_switch()
-#define finish_arch_switch(rq, next)	spin_unlock_irq(&(rq)->lock)
-#define task_running(rq, p)		((rq)->curr == (p))
+#define prepare_arch_switch(next)	__prepare_arch_switch()
 
 static inline void __prepare_arch_switch(void)
 {
--- a/arch/xen/i386/pci/irq.c	2005-08-18 19:36:27.331785557 -0600
+++ b/arch/xen/i386/pci/irq.c~	2005-08-18 19:52:20.717862113 -0600
@@ -56,6 +56,7 @@ struct irq_router_handler {
 };
 
 int (*pcibios_enable_irq)(struct pci_dev *dev) = NULL;
+void (*pcibios_disable_irq)(struct pci_dev *dev) = NULL;
 
 #ifdef CONFIG_XEN_PRIVILEGED_GUEST
 /*
