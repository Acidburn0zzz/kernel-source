From: Charles Coffing <ccoffing@novell.com>
Subject: Fix missing bits in Xen tree.

Index: linux-2.6.12/include/asm-xen/asm-i386/io.h
===================================================================
--- linux-2.6.12.orig/include/asm-xen/asm-i386/io.h
+++ linux-2.6.12/include/asm-xen/asm-i386/io.h
@@ -361,9 +361,9 @@ static inline unsigned type in##bwl(int 
 }
 #endif
 
 
-#if __UNSAFE_IO__
+#ifdef __UNSAFE_IO__
 #define ____BUILDIO(bwl,bw,type) \
 static inline void out##bwl##_local(unsigned type value, int port) { \
 	__asm__ __volatile__("out" #bwl " %" #bw "0, %w1" : : "a"(value), "Nd"(port)); \
 } \
Index: linux-2.6.12/arch/xen/i386/mm/fault.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/mm/fault.c
+++ linux-2.6.12/arch/xen/i386/mm/fault.c
@@ -275,9 +275,9 @@ fastcall void do_page_fault(struct pt_re
 			      unsigned long address)
 {
 	struct task_struct *tsk;
 	struct mm_struct *mm;
-	struct vm_area_struct * vma;
+	struct vm_area_struct * vma, * prev_vma;
 	int write;
 	siginfo_t info;
 
 	/* Set the "privileged fault" bit to something sane. */
@@ -369,10 +369,11 @@ fastcall void do_page_fault(struct pt_re
 		 */
 		if (address + 32 < regs->esp)
 			goto bad_area;
 	}
-	if (expand_stack(vma, address))
-		goto bad_area;
+        find_vma_prev(current->mm, address, &prev_vma);
+        if (expand_stack(vma, address, prev_vma))
+                goto bad_area;
 /*
  * Ok, we have a good vm_area for this memory access, so
  * we can handle it..
  */
Index: linux-2.6.12/arch/xen/i386/kernel/time.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/kernel/time.c
+++ linux-2.6.12/arch/xen/i386/kernel/time.c
@@ -919,8 +919,13 @@ static int __init xen_sysctl_init(void)
 	return 0;
 }
 __initcall(xen_sysctl_init);
 
+int read_current_timer(unsigned long *timer_val)
+{
+	return -1;
+}
+
 /*
  * Local variables:
  *  c-file-style: "linux"
  *  indent-tabs-mode: t
Index: linux-2.6.12/arch/xen/kernel/reboot.c
===================================================================
--- linux-2.6.12.orig/arch/xen/kernel/reboot.c
+++ linux-2.6.12/arch/xen/kernel/reboot.c
@@ -29,8 +29,13 @@ void machine_restart(char * __unused)
 	xencons_force_flush();
 	HYPERVISOR_reboot();
 }
 
+void machine_emergency_restart(void)
+{
+	machine_restart(NULL);
+}
+
 void machine_halt(void)
 {
 	machine_power_off();
 }
Index: linux-2.6.12/include/asm-xen/asm-i386/mmu_context.h
===================================================================
--- linux-2.6.12.orig/include/asm-xen/asm-i386/mmu_context.h
+++ linux-2.6.12/include/asm-xen/asm-i386/mmu_context.h
@@ -22,11 +22,9 @@ static inline void enter_lazy_tlb(struct
 		per_cpu(cpu_tlbstate, cpu).state = TLBSTATE_LAZY;
 #endif
 }
 
-#define prepare_arch_switch(rq,next)	__prepare_arch_switch()
-#define finish_arch_switch(rq, next)	spin_unlock_irq(&(rq)->lock)
-#define task_running(rq, p)		((rq)->curr == (p))
+#define prepare_arch_switch(next)	__prepare_arch_switch()
 
 static inline void __prepare_arch_switch(void)
 {
 	/*
