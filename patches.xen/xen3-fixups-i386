Subject: xen3: 2.6.13 adaptions (i386).
From: kraxel

$subject says all.

Signed-off-by: Gerd Knorr <kraxel@suse.de>
Index: linux-2.6.12/include/asm-xen/asm-i386/pci.h
===================================================================
--- linux-2.6.12.orig/include/asm-xen/asm-i386/pci.h	2005-08-12 12:35:42.000000000 +0200
+++ linux-2.6.12/include/asm-xen/asm-i386/pci.h	2005-08-12 15:09:05.509140020 +0200
@@ -27,7 +27,7 @@ void pcibios_config_init(void);
 struct pci_bus * pcibios_scan_root(int bus);
 
 void pcibios_set_master(struct pci_dev *dev);
-void pcibios_penalize_isa_irq(int irq);
+void pcibios_penalize_isa_irq(int irq, int active);
 struct irq_routing_table *pcibios_get_irq_routing_table(void);
 int pcibios_set_irq_routing(struct pci_dev *dev, int pin, int irq);
 
Index: linux-2.6.12/include/asm-xen/asm-i386/page.h
===================================================================
--- linux-2.6.12.orig/include/asm-xen/asm-i386/page.h	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/include/asm-xen/asm-i386/page.h	2005-08-12 14:34:47.508814062 +0200
@@ -148,6 +148,7 @@ static inline unsigned long pgd_val(pgd_
 #define HPAGE_MASK	(~(HPAGE_SIZE - 1))
 #define HUGETLB_PAGE_ORDER	(HPAGE_SHIFT - PAGE_SHIFT)
 #define HAVE_ARCH_HUGETLB_UNMAPPED_AREA
+#define ARCH_HAS_HUGETLB_CLEAN_STALE_PGTABLE
 #endif
 
 #define pgprot_val(x)	((x).pgprot)
Index: linux-2.6.12/arch/xen/i386/pci/irq.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/pci/irq.c	2005-08-12 15:08:41.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/pci/irq.c	2005-08-12 15:41:44.402610314 +0200
@@ -1019,7 +1019,7 @@ static void pirq_penalize_isa_irq(int ir
 		pirq_penalty[irq] += 100;
 }
 
-void pcibios_penalize_isa_irq(int irq)
+void pcibios_penalize_isa_irq(int irq, int active)
 {
 #ifdef CONFIG_ACPI_PCI
 	if (!acpi_noirq)
Index: linux-2.6.12/arch/xen/i386/kernel/process.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/kernel/process.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/kernel/process.c	2005-08-12 14:34:47.000000000 +0200
@@ -145,7 +145,7 @@ static inline void play_dead(void)
  */
 void cpu_idle (void)
 {
-	int cpu = _smp_processor_id();
+	int cpu = raw_smp_processor_id();
 
 	/* endless idle loop with no priority at all */
 	while (1) {
Index: linux-2.6.12/arch/xen/kernel/reboot.c
===================================================================
--- linux-2.6.12.orig/arch/xen/kernel/reboot.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/kernel/reboot.c	2005-08-12 14:34:47.000000000 +0200
@@ -15,6 +15,7 @@
 #include <asm-xen/linux-public/suspend.h>
 #include <asm-xen/queues.h>
 #include <asm-xen/xenbus.h>
+#include <asm-xen/ctrl_if.h>
 
 #define SHUTDOWN_INVALID  -1
 #define SHUTDOWN_POWEROFF  0
Index: linux-2.6.12/include/asm-xen/asm-i386/io.h
===================================================================
--- linux-2.6.12.orig/include/asm-xen/asm-i386/io.h	2005-08-12 12:02:54.000000000 +0200
+++ linux-2.6.12/include/asm-xen/asm-i386/io.h	2005-08-12 14:45:16.084338742 +0200
@@ -362,7 +362,7 @@ static inline unsigned type in##bwl(int 
 #endif
 
 
-#if __UNSAFE_IO__
+#ifdef __UNSAFE_IO__
 #define ____BUILDIO(bwl,bw,type) \
 static inline void out##bwl##_local(unsigned type value, int port) { \
 	__asm__ __volatile__("out" #bwl " %" #bw "0, %w1" : : "a"(value), "Nd"(port)); \
Index: linux-2.6.12/include/asm-xen/asm-i386/pgtable.h
===================================================================
--- linux-2.6.12.orig/include/asm-xen/asm-i386/pgtable.h	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/include/asm-xen/asm-i386/pgtable.h	2005-08-12 14:34:47.510813685 +0200
@@ -239,6 +239,7 @@ static inline pte_t pte_mkexec(pte_t pte
 static inline pte_t pte_mkdirty(pte_t pte)	{ (pte).pte_low |= _PAGE_DIRTY; return pte; }
 static inline pte_t pte_mkyoung(pte_t pte)	{ (pte).pte_low |= _PAGE_ACCESSED; return pte; }
 static inline pte_t pte_mkwrite(pte_t pte)	{ (pte).pte_low |= _PAGE_RW; return pte; }
+static inline pte_t pte_mkhuge(pte_t pte)      { (pte).pte_low |= _PAGE_PRESENT | _PAGE_PSE; return pte; }
 
 #ifdef CONFIG_X86_PAE
 # include <asm/pgtable-3level.h>
@@ -279,7 +280,7 @@ static inline void ptep_set_wrprotect(st
  */
 
 #define mk_pte(page, pgprot)	pfn_pte(page_to_pfn(page), (pgprot))
-#define mk_pte_huge(entry) ((entry).pte_low |= _PAGE_PRESENT | _PAGE_PSE)
+//#define mk_pte_huge(entry) ((entry).pte_low |= _PAGE_PRESENT | _PAGE_PSE)
 
 static inline pte_t pte_modify(pte_t pte, pgprot_t newprot)
 {
Index: linux-2.6.12/arch/xen/i386/kernel/time.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/kernel/time.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/kernel/time.c	2005-08-12 14:34:47.000000000 +0200
@@ -88,11 +88,7 @@ struct timespec __xtime __section_xtime;
 struct timezone __sys_tz __section_sys_tz;
 #endif
 
-#if defined(__x86_64__)
 unsigned int cpu_khz;	/* Detected as we calibrate the TSC */
-#else
-unsigned long cpu_khz;	/* Detected as we calibrate the TSC */
-#endif
 
 extern unsigned long wall_jiffies;
 
Index: linux-2.6.12/arch/xen/i386/mm/init.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/mm/init.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/mm/init.c	2005-08-12 14:34:47.000000000 +0200
@@ -298,7 +298,7 @@ void __init one_highpage_init(struct pag
 {
 	if (page_is_ram(pfn) && !(bad_ppro && page_kills_ppro(pfn))) {
 		ClearPageReserved(page);
-		set_bit(PG_highmem, &page->flags);
+//		set_bit(PG_highmem, &page->flags);
 		set_page_count(page, 1);
 		if (pfn < xen_start_info.nr_pages)
 			__free_page(page);
Index: linux-2.6.12/include/asm-xen/asm-i386/mmu_context.h
===================================================================
--- linux-2.6.12.orig/include/asm-xen/asm-i386/mmu_context.h	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/include/asm-xen/asm-i386/mmu_context.h	2005-08-12 14:34:47.509813874 +0200
@@ -23,9 +23,9 @@ static inline void enter_lazy_tlb(struct
 #endif
 }
 
-#define prepare_arch_switch(rq,next)	__prepare_arch_switch()
-#define finish_arch_switch(rq, next)	spin_unlock_irq(&(rq)->lock)
-#define task_running(rq, p)		((rq)->curr == (p))
+#define prepare_arch_switch(next)	__prepare_arch_switch()
+//#define finish_arch_switch(rq, next)	spin_unlock_irq(&(rq)->lock)
+//#define task_running(rq, p)		((rq)->curr == (p))
 
 static inline void __prepare_arch_switch(void)
 {
Index: linux-2.6.12/arch/xen/i386/kernel/traps.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/kernel/traps.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/kernel/traps.c	2005-08-12 14:34:47.000000000 +0200
@@ -303,7 +303,7 @@ void die(const char * str, struct pt_reg
 	};
 	static int die_counter;
 
-	if (die.lock_owner != _smp_processor_id()) {
+	if (die.lock_owner != raw_smp_processor_id()) {
 		console_verbose();
 		spin_lock_irq(&die.lock);
 		die.lock_owner = smp_processor_id();
Index: linux-2.6.12/arch/xen/i386/kernel/i386_ksyms.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/kernel/i386_ksyms.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/kernel/i386_ksyms.c	2005-08-12 14:34:47.507814250 +0200
@@ -56,7 +56,7 @@ extern struct drive_info_struct drive_in
 EXPORT_SYMBOL(drive_info);
 #endif
 
-extern unsigned long cpu_khz;
+extern unsigned int cpu_khz;
 extern unsigned long get_cmos_time(void);
 
 /* platform dependent support */
@@ -69,7 +69,7 @@ EXPORT_SYMBOL(physnode_map);
 EXPORT_SYMBOL(xquad_portio);
 #endif
 EXPORT_SYMBOL(dump_thread);
-EXPORT_SYMBOL(dump_fpu);
+//EXPORT_SYMBOL(dump_fpu);
 EXPORT_SYMBOL_GPL(kernel_fpu_begin);
 EXPORT_SYMBOL(__ioremap);
 EXPORT_SYMBOL(ioremap_nocache);
Index: linux-2.6.12/arch/xen/i386/mm/pgtable.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/mm/pgtable.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/mm/pgtable.c	2005-08-12 14:34:47.000000000 +0200
@@ -41,7 +41,7 @@ void show_mem(void)
 	printk("Free swap:       %6ldkB\n", nr_swap_pages<<(PAGE_SHIFT-10));
 	for_each_pgdat(pgdat) {
 		for (i = 0; i < pgdat->node_spanned_pages; ++i) {
-			page = pgdat->node_mem_map + i;
+			page = pgdat_page_nr(pgdat, i);
 			total++;
 			if (PageHighMem(page))
 				highmem++;
Index: linux-2.6.12/arch/xen/i386/mm/fault.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/mm/fault.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/mm/fault.c	2005-08-12 14:34:47.000000000 +0200
@@ -276,7 +276,7 @@ fastcall void do_page_fault(struct pt_re
 {
 	struct task_struct *tsk;
 	struct mm_struct *mm;
-	struct vm_area_struct * vma;
+	struct vm_area_struct * vma, * prev_vma;
 	int write;
 	siginfo_t info;
 
@@ -370,7 +370,8 @@ fastcall void do_page_fault(struct pt_re
 		if (address + 32 < regs->esp)
 			goto bad_area;
 	}
-	if (expand_stack(vma, address))
+	find_vma_prev(current->mm, address, &prev_vma);
+	if (expand_stack(vma, address, prev_vma))
 		goto bad_area;
 /*
  * Ok, we have a good vm_area for this memory access, so
Index: linux-2.6.12/include/asm-xen/asm-i386/ptrace.h
===================================================================
--- linux-2.6.12.orig/include/asm-xen/asm-i386/ptrace.h	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/include/asm-xen/asm-i386/ptrace.h	2005-08-12 14:34:47.508814062 +0200
@@ -57,7 +57,8 @@ struct pt_regs {
 #ifdef __KERNEL__
 struct task_struct;
 extern void send_sigtrap(struct task_struct *tsk, struct pt_regs *regs, int error_code);
-#define user_mode(regs) ((VM_MASK & (regs)->eflags) || (2 & (regs)->xcs))
+#define user_mode(regs) (3 & (regs)->xcs)
+#define user_mode_vm(regs) ((VM_MASK & (regs)->eflags) || (2 & (regs)->xcs))
 #define instruction_pointer(regs) ((regs)->eip)
 #if defined(CONFIG_SMP) && defined(CONFIG_FRAME_POINTER)
 extern unsigned long profile_pc(struct pt_regs *regs);
Index: linux-2.6.12/arch/xen/i386/kernel/signal.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/kernel/signal.c	2005-08-12 14:34:18.000000000 +0200
+++ linux-2.6.12/arch/xen/i386/kernel/signal.c	2005-08-12 14:34:47.000000000 +0200
@@ -602,10 +602,8 @@ int fastcall do_signal(struct pt_regs *r
 	if ((regs->xcs & 2) != 2)
 		return 1;
 
-	if (current->flags & PF_FREEZE) {
-		refrigerator(0);
+	if (try_to_freeze())
 		goto no_signal;
-	}
 
 	if (!oldset)
 		oldset = &current->blocked;
Index: linux-2.6.12/drivers/xen/blktap/blktap_controlmsg.c
===================================================================
--- linux-2.6.12.orig/drivers/xen/blktap/blktap_controlmsg.c	2005-08-12 12:02:54.000000000 +0200
+++ linux-2.6.12/drivers/xen/blktap/blktap_controlmsg.c	2005-08-12 15:34:14.072396591 +0200
@@ -8,6 +8,7 @@
  *
  */
  
+#include <asm-xen/evtchn.h>
 #include "blktap.h"
 
 static char *blkif_state_name[] = {
