# HG changeset 9716 patch
From: kaf24@firebug.cl.cam.ac.uk
# Node ID e1a85211281f7f2097a3d400b0b3db90e5da2ff6
# Parent  e8a45450a48dd588b8c0ba06a85dd3f5f5157f8e
Subject: netback: fix synchronisation of access to deallocation buffer ring.
References: 179217

Must ensure ring is written to before producer index is incremented.
Bug diagnosed by Ky Srinivasan <ksrinivasan@novell.com>
Signed-off-by: Keir Fraser <keir@xensource.com>
xen-unstable changeset:   10268:9f50b8c2de0ad641d7795613edc35d78240dab8c
xen-unstable date:        Mon Jun  5 15:14:58 2006 +0100

Acked-by: Kirk Allan <kallan@novell.com>

Index: head-2006-06-06/drivers/xen/netback/netback.c
===================================================================
--- head-2006-06-06.orig/drivers/xen/netback/netback.c	2006-06-06 12:52:09.000000000 +0200
+++ head-2006-06-06/drivers/xen/netback/netback.c	2006-06-06 12:52:38.000000000 +0200
@@ -452,6 +452,9 @@ inline static void net_tx_action_dealloc
 	dc = dealloc_cons;
 	dp = dealloc_prod;
 
+	/* Ensure we see all indexes enqueued by netif_idx_release(). */
+	smp_rmb();
+
 	/*
 	 * Free up any grants we have finished using
 	 */
@@ -689,7 +692,10 @@ static void netif_idx_release(u16 pendin
 	unsigned long flags;
 
 	spin_lock_irqsave(&_lock, flags);
-	dealloc_ring[MASK_PEND_IDX(dealloc_prod++)] = pending_idx;
+	dealloc_ring[MASK_PEND_IDX(dealloc_prod)] = pending_idx;
+	/* Sync with net_tx_action_dealloc: insert idx /then/ incr producer. */
+	smp_wmb();
+	dealloc_prod++;
 	spin_unlock_irqrestore(&_lock, flags);
 
 	tasklet_schedule(&net_tx_tasklet);
