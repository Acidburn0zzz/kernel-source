Subject: Fix xen build.
From: jbeulich@novell.com

$subject says all.

Index: head-2006-10-16/drivers/ide/ide-lib.c
===================================================================
--- head-2006-10-16.orig/drivers/ide/ide-lib.c	2006-10-16 10:08:00.000000000 +0200
+++ head-2006-10-16/drivers/ide/ide-lib.c	2006-10-16 10:14:37.000000000 +0200
@@ -408,12 +408,21 @@ void ide_toggle_bounce(ide_drive_t *driv
 {
 	u64 addr = BLK_BOUNCE_HIGH;	/* dma64_addr_t */
 
+#ifndef CONFIG_XEN
+	if (!PCI_DMA_BUS_IS_PHYS) {
+		addr = BLK_BOUNCE_ANY;
+	} else if (on && drive->media == ide_disk) {
+		if (HWIF(drive)->pci_dev)
+			addr = HWIF(drive)->pci_dev->dma_mask;
+	}
+#else
 	if (on && drive->media == ide_disk) {
 		if (!PCI_DMA_BUS_IS_PHYS)
 			addr = BLK_BOUNCE_ANY;
 		else if (HWIF(drive)->pci_dev)
 			addr = HWIF(drive)->pci_dev->dma_mask;
 	}
+#endif
 
 	if (drive->queue)
 		blk_queue_bounce_limit(drive->queue, addr);
Index: head-2006-10-16/drivers/oprofile/oprof.c
===================================================================
--- head-2006-10-16.orig/drivers/oprofile/oprof.c	2006-10-16 10:08:00.000000000 +0200
+++ head-2006-10-16/drivers/oprofile/oprof.c	2006-10-16 10:14:37.000000000 +0200
@@ -37,6 +37,7 @@ static DEFINE_MUTEX(start_mutex);
  */
 static int timer = 0;
 
+#ifdef CONFIG_XEN
 int oprofile_set_active(int active_domains[], unsigned int adomains)
 {
 	int err;
@@ -62,6 +63,7 @@ int oprofile_set_passive(int passive_dom
 	up(&start_sem);
 	return err;
 }
+#endif
 
 int oprofile_setup(void)
 {
Index: head-2006-10-16/drivers/oprofile/oprofile_files.c
===================================================================
--- head-2006-10-16.orig/drivers/oprofile/oprofile_files.c	2006-10-16 10:08:00.000000000 +0200
+++ head-2006-10-16/drivers/oprofile/oprofile_files.c	2006-10-16 10:14:37.000000000 +0200
@@ -124,6 +124,8 @@ static struct file_operations dump_fops 
 	.write		= dump_write,
 };
 
+#ifdef CONFIG_XEN
+
 #define TMPBUFSIZE 512
 
 static unsigned int adomains = 0;
@@ -313,12 +315,16 @@ static struct file_operations passive_do
 	.write		= pdomain_write,
 };
 
+#endif /* CONFIG_XEN */
+
 void oprofile_create_files(struct super_block * sb, struct dentry * root)
 {
 	oprofilefs_create_file(sb, root, "enable", &enable_fops);
 	oprofilefs_create_file_perm(sb, root, "dump", &dump_fops, 0666);
+#ifdef CONFIG_XEN
 	oprofilefs_create_file(sb, root, "active_domains", &active_domain_ops);
 	oprofilefs_create_file(sb, root, "passive_domains", &passive_domain_ops);
+#endif
 	oprofilefs_create_file(sb, root, "buffer", &event_buffer_fops);
 	oprofilefs_create_ulong(sb, root, "buffer_size", &fs_buffer_size);
 	oprofilefs_create_ulong(sb, root, "buffer_watershed", &fs_buffer_watershed);
Index: head-2006-10-16/include/linux/oprofile.h
===================================================================
--- head-2006-10-16.orig/include/linux/oprofile.h	2006-10-16 10:08:00.000000000 +0200
+++ head-2006-10-16/include/linux/oprofile.h	2006-10-16 10:14:37.000000000 +0200
@@ -16,8 +16,9 @@
 #include <linux/types.h>
 #include <linux/spinlock.h>
 #include <asm/atomic.h>
-
+#ifdef CONFIG_XEN
 #include <xen/interface/xenoprof.h>
+#endif
  
 struct super_block;
 struct dentry;
@@ -29,11 +30,12 @@ struct oprofile_operations {
 	/* create any necessary configuration files in the oprofile fs.
 	 * Optional. */
 	int (*create_files)(struct super_block * sb, struct dentry * root);
+#ifdef CONFIG_XEN
 	/* setup active domains with Xen */
 	int (*set_active)(int *active_domains, unsigned int adomains);
         /* setup passive domains with Xen */
         int (*set_passive)(int *passive_domains, unsigned int pdomains);
-	
+#endif
 	/* Do any necessary interrupt setup. Optional. */
 	int (*setup)(void);
 	/* Do any necessary interrupt shutdown. Optional. */
Index: head-2006-10-16/mm/memory.c
===================================================================
--- head-2006-10-16.orig/mm/memory.c	2006-10-16 10:14:34.000000000 +0200
+++ head-2006-10-16/mm/memory.c	2006-10-16 10:14:37.000000000 +0200
@@ -403,7 +403,9 @@ struct page *vm_normal_page(struct vm_ar
 	 * and that the resulting page looks ok.
 	 */
 	if (unlikely(!pfn_valid(pfn))) {
+#ifdef CONFIG_XEN
 		if (!(vma->vm_flags & VM_RESERVED))
+#endif
 			print_bad_pte(vma, pte, addr);
 		return NULL;
 	}
