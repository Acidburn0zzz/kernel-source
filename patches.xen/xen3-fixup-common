Subject: Fix xen build.
From: kraxel@suse.de

$subject says all.

Index: head-2006-02-13/kernel/irq/manage.c
===================================================================
--- head-2006-02-13.orig/kernel/irq/manage.c	2006-02-13 12:20:05.000000000 +0100
+++ head-2006-02-13/kernel/irq/manage.c	2006-02-13 14:42:15.000000000 +0100
@@ -259,7 +259,7 @@ int setup_irq(unsigned int irq, struct i
 #ifndef CONFIG_XEN
 static
 #endif
-int teardown_irq(unsigned int irq, struct irqaction * old)
+int teardown_irq(unsigned int irq, struct irqaction * old, void *dev_id)
 {
 	struct irq_desc *desc;
 	struct irqaction **p;
@@ -341,7 +341,7 @@ void free_irq(unsigned int irq, void *de
 
 		spin_unlock_irqrestore(&desc->lock,flags);
 
-		if (teardown_irq(irq, action) == 0)
+		if (teardown_irq(irq, action, dev_id) == 0)
 			kfree(action);
 		return;
 	}
Index: head-2006-02-13/include/linux/irq.h
===================================================================
--- head-2006-02-13.orig/include/linux/irq.h	2006-02-13 12:20:05.000000000 +0100
+++ head-2006-02-13/include/linux/irq.h	2006-02-13 14:42:15.000000000 +0100
@@ -95,7 +95,7 @@ irq_descp (int irq)
 
 extern int setup_irq(unsigned int irq, struct irqaction * new);
 #ifdef CONFIG_XEN
-extern int teardown_irq(unsigned int irq, struct irqaction * old);
+extern int teardown_irq(unsigned int irq, struct irqaction * old, void *dev_id);
 #endif
 
 #ifdef CONFIG_GENERIC_HARDIRQS
Index: head-2006-02-13/arch/x86_64/kernel/setup64-xen.c
===================================================================
--- head-2006-02-13.orig/arch/x86_64/kernel/setup64-xen.c	2006-02-13 16:46:42.000000000 +0100
+++ head-2006-02-13/arch/x86_64/kernel/setup64-xen.c	2006-02-13 17:10:32.000000000 +0100
@@ -95,7 +95,7 @@ void __init setup_per_cpu_areas(void)
 	int i;
 	unsigned long size;
 
-#ifdef CONFIG_HOTPLUG_CPU
+#if defined(CONFIG_HOTPLUG_CPU) || (defined(CONFIG_XEN) && defined(CONFIG_SMP))
 	prefill_possible_map();
 #endif
 
Index: head-2006-02-13/arch/x86_64/kernel/setup-xen.c
===================================================================
--- head-2006-02-13.orig/arch/x86_64/kernel/setup-xen.c	2006-02-13 14:37:42.000000000 +0100
+++ head-2006-02-13/arch/x86_64/kernel/setup-xen.c	2006-02-13 17:08:07.000000000 +0100
@@ -908,9 +908,6 @@ void __init setup_arch(char **cmdline_p)
 	init_apic_mappings();
 #endif
 #endif
-#if defined(CONFIG_XEN) && defined(CONFIG_SMP) && !defined(CONFIG_HOTPLUG_CPU)
-	prefill_possible_map();
-#endif
 
 #if defined(CONFIG_XEN_PRIVILEGED_GUEST) || !defined(CONFIG_XEN)
 	/*
Index: head-2006-02-13/net/ipv4/netfilter/ip_nat_proto_tcp.c
===================================================================
--- head-2006-02-13.orig/net/ipv4/netfilter/ip_nat_proto_tcp.c	2006-02-13 12:20:05.000000000 +0100
+++ head-2006-02-13/net/ipv4/netfilter/ip_nat_proto_tcp.c	2006-02-13 16:49:18.000000000 +0100
@@ -129,14 +129,15 @@ tcp_manip_pkt(struct sk_buff **pskb,
 	if (hdrsize < sizeof(*hdr))
 		return 1;
 
-	if ((*pskb)->proto_csum_blank) {
+#ifdef CONFIG_XEN
+	if ((*pskb)->proto_csum_blank)
 		hdr->check = ip_nat_cheat_check(oldip, ~newip, hdr->check);
-	} else {
+	else
+#endif
 		hdr->check = ip_nat_cheat_check(~oldip, newip,
 					ip_nat_cheat_check(oldport ^ 0xFFFF,
 							   newport,
 							   hdr->check));
-	}
 	return 1;
 }
 
Index: head-2006-02-13/net/ipv4/netfilter/ip_nat_proto_udp.c
===================================================================
--- head-2006-02-13.orig/net/ipv4/netfilter/ip_nat_proto_udp.c	2006-02-13 12:20:05.000000000 +0100
+++ head-2006-02-13/net/ipv4/netfilter/ip_nat_proto_udp.c	2006-02-13 16:50:30.000000000 +0100
@@ -114,14 +114,15 @@ udp_manip_pkt(struct sk_buff **pskb,
 		portptr = &hdr->dest;
 	}
 	if (hdr->check) { /* 0 is a special case meaning no checksum */
-		if ((*pskb)->proto_csum_blank) {
+#ifdef CONFIG_XEN
+		if ((*pskb)->proto_csum_blank)
 			hdr->check = ip_nat_cheat_check(oldip, ~newip, hdr->check);
-		} else {
+		else
+#endif
 			hdr->check = ip_nat_cheat_check(~oldip, newip,
 					ip_nat_cheat_check(*portptr ^ 0xFFFF,
 							   newport,
 							   hdr->check));
-		}
 	}
 	*portptr = newport;
 	return 1;
