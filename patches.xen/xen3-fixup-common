Subject: Fix xen build.
From: kraxel@suse.de

$subject says all.

Index: head-2006-02-09/kernel/irq/manage.c
===================================================================
--- head-2006-02-09.orig/kernel/irq/manage.c	2006-02-09 13:40:26.000000000 +0100
+++ head-2006-02-09/kernel/irq/manage.c	2006-01-13 11:45:53.000000000 +0100
@@ -259,7 +259,7 @@ int setup_irq(unsigned int irq, struct i
 #ifndef CONFIG_XEN
 static
 #endif
-int teardown_irq(unsigned int irq, struct irqaction * old)
+int teardown_irq(unsigned int irq, struct irqaction * old, void *dev_id)
 {
 	struct irq_desc *desc;
 	struct irqaction **p;
@@ -341,7 +341,7 @@ void free_irq(unsigned int irq, void *de
 
 		spin_unlock_irqrestore(&desc->lock,flags);
 
-		if (teardown_irq(irq, action) == 0)
+		if (teardown_irq(irq, action, dev_id) == 0)
 			kfree(action);
 		return;
 	}
Index: head-2006-02-09/include/linux/irq.h
===================================================================
--- head-2006-02-09.orig/include/linux/irq.h	2006-02-09 13:40:26.000000000 +0100
+++ head-2006-02-09/include/linux/irq.h	2006-01-13 11:45:53.000000000 +0100
@@ -95,7 +95,7 @@ irq_descp (int irq)
 
 extern int setup_irq(unsigned int irq, struct irqaction * new);
 #ifdef CONFIG_XEN
-extern int teardown_irq(unsigned int irq, struct irqaction * old);
+extern int teardown_irq(unsigned int irq, struct irqaction * old, void *dev_id);
 #endif
 
 #ifdef CONFIG_GENERIC_HARDIRQS
Index: head-2006-02-09/arch/x86_64/xen/kernel/setup64.c
===================================================================
--- head-2006-02-09.orig/arch/x86_64/xen/kernel/setup64.c	2006-02-09 13:40:07.000000000 +0100
+++ head-2006-02-09/arch/x86_64/xen/kernel/setup64.c	2006-02-09 13:47:22.000000000 +0100
@@ -95,7 +95,7 @@ void __init setup_per_cpu_areas(void)
 	int i;
 	unsigned long size;
 
-#ifdef CONFIG_HOTPLUG_CPU
+#if defined(CONFIG_HOTPLUG_CPU) || defined(CONFIG_XEN)
 	prefill_possible_map();
 #endif
 
Index: head-2006-02-09/drivers/xen/core/smpboot.c
===================================================================
--- head-2006-02-09.orig/drivers/xen/core/smpboot.c	2006-02-09 13:40:14.000000000 +0100
+++ head-2006-02-09/drivers/xen/core/smpboot.c	2006-02-09 13:46:10.000000000 +0100
@@ -81,6 +81,20 @@ EXPORT_SYMBOL(x86_cpu_to_apicid);
 unsigned int maxcpus = NR_CPUS;
 #endif
 
+void __init prefill_possible_map(void)
+{
+	unsigned i;
+
+	if (!cpus_empty(cpu_possible_map))
+		return;
+
+	for (i = 0; i < NR_CPUS; i++) {
+		if (HYPERVISOR_vcpu_op(VCPUOP_is_up, i, NULL) == -ENOENT)
+			break;
+		cpu_set(i, cpu_possible_map);
+	}
+}
+
 void __init smp_alloc_memory(void)
 {
 }
@@ -196,7 +210,7 @@ void vcpu_prepare(int vcpu)
 
 void __init smp_prepare_cpus(unsigned int max_cpus)
 {
-	int cpu, rc;
+	unsigned cpu;
 	struct task_struct *idle;
 
 	cpu_data[0] = boot_cpu_data;
@@ -211,11 +225,9 @@ void __init smp_prepare_cpus(unsigned in
 	if (max_cpus != 0)
 		xen_smp_intr_init(0);
 
-	for (cpu = 1; cpu < max_cpus; cpu++) {
-		rc = HYPERVISOR_vcpu_op(VCPUOP_is_up, cpu, NULL);
-		if (rc == -ENOENT)
-			break;
-		BUG_ON(rc != 0);
+	for_each_cpu_mask (cpu, cpu_possible_map) {
+		if (cpu == 0)
+			continue;
 
 		cpu_data[cpu] = boot_cpu_data;
 		cpu_2_logical_apicid[cpu] = cpu;
@@ -243,7 +255,6 @@ void __init smp_prepare_cpus(unsigned in
 		       cpu_gdt_descr[0].size);
 		make_page_readonly((void *)cpu_gdt_descr[cpu].address);
 
-		cpu_set(cpu, cpu_possible_map);
 #ifdef CONFIG_HOTPLUG_CPU
 		if (xen_start_info->flags & SIF_INITDOMAIN)
 			cpu_set(cpu, cpu_present_map);
@@ -272,9 +283,10 @@ void __init smp_prepare_cpus(unsigned in
 
 void __devinit smp_prepare_boot_cpu(void)
 {
-	cpu_possible_map = cpumask_of_cpu(0);
-	cpu_present_map  = cpumask_of_cpu(0);
-	cpu_online_map   = cpumask_of_cpu(0);
+	prefill_possible_map();
+	cpu_set(0, cpu_possible_map);
+	cpu_set(0, cpu_present_map);
+	cpu_set(0, cpu_online_map);
 }
 
 #ifdef CONFIG_HOTPLUG_CPU
