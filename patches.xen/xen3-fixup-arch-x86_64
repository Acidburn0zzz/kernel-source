Subject: Fix x86_64 xen build.
From: kraxel@suse.de

$subject says all.

Index: head-2006-02-16/arch/x86_64/kernel/apic-xen.c
===================================================================
--- head-2006-02-16.orig/arch/x86_64/kernel/apic-xen.c	2006-02-17 10:17:08.000000000 +0100
+++ head-2006-02-16/arch/x86_64/kernel/apic-xen.c	2006-02-16 17:52:35.000000000 +0100
@@ -182,13 +182,6 @@ asmlinkage void smp_error_interrupt(void
 }
 
 
-#ifdef CONFIG_XEN
-void switch_APIC_timer_to_ipi(void *cpumask) { }
-EXPORT_SYMBOL(switch_APIC_timer_to_ipi);
-void switch_ipi_to_APIC_timer(void *cpumask) { }
-EXPORT_SYMBOL(switch_ipi_to_APIC_timer);
-#endif
-
 /*
  * This initializes the IO-APIC and APIC hardware if this is
  * a UP kernel.
Index: head-2006-02-16/arch/x86_64/kernel/pci-swiotlb-xen.c
===================================================================
--- head-2006-02-16.orig/arch/x86_64/kernel/pci-swiotlb-xen.c	2006-02-17 10:17:08.000000000 +0100
+++ head-2006-02-16/arch/x86_64/kernel/pci-swiotlb-xen.c	2006-02-14 11:04:55.000000000 +0100
@@ -13,6 +13,8 @@ int swiotlb __read_mostly;
 EXPORT_SYMBOL(swiotlb);
 #endif
 
+void swiotlb_init(void);
+
 struct dma_mapping_ops swiotlb_dma_ops = {
 #if 0
 	.mapping_error = swiotlb_dma_mapping_error,
Index: head-2006-02-16/arch/x86_64/kernel/process-xen.c
===================================================================
--- head-2006-02-16.orig/arch/x86_64/kernel/process-xen.c	2006-02-17 10:17:08.000000000 +0100
+++ head-2006-02-16/arch/x86_64/kernel/process-xen.c	2006-02-17 10:17:21.000000000 +0100
@@ -441,13 +441,6 @@ out:
 	return err;
 }
 
-static inline void __save_init_fpu( struct task_struct *tsk )
-{
-	asm volatile( "rex64 ; fxsave %0 ; fnclex"
-		      : "=m" (tsk->thread.i387.fxsave));
-	tsk->thread_info->status &= ~TS_USEDFPU;
-}
-
 /*
  *	switch_to(x,y) should switch tasks from x to y.
  *
Index: head-2006-02-16/arch/x86_64/kernel/x8664_ksyms-xen.c
===================================================================
--- head-2006-02-16.orig/arch/x86_64/kernel/x8664_ksyms-xen.c	2006-02-17 10:17:08.000000000 +0100
+++ head-2006-02-16/arch/x86_64/kernel/x8664_ksyms-xen.c	2006-02-14 11:04:55.000000000 +0100
@@ -47,7 +47,6 @@ EXPORT_SYMBOL(ioremap_nocache);
 EXPORT_SYMBOL(iounmap);
 EXPORT_SYMBOL(kernel_thread);
 EXPORT_SYMBOL(pm_idle);
-EXPORT_SYMBOL(pm_power_off);
 
 EXPORT_SYMBOL(__down_failed);
 EXPORT_SYMBOL(__down_failed_interruptible);
Index: head-2006-02-16/arch/x86_64/mm/init-xen.c
===================================================================
--- head-2006-02-16.orig/arch/x86_64/mm/init-xen.c	2006-02-17 10:17:08.000000000 +0100
+++ head-2006-02-16/arch/x86_64/mm/init-xen.c	2006-02-14 11:04:55.000000000 +0100
@@ -59,7 +59,7 @@ EXPORT_SYMBOL(dma_ops);
 extern unsigned long *contiguous_bitmap;
 
 #if defined(CONFIG_SWIOTLB)
-extern void swiotlb_init(void);
+extern void pci_swiotlb_init(void);
 #endif
 
 static unsigned long dma_reserve __initdata;
Index: head-2006-02-16/include/asm-x86_64/i387.h
===================================================================
--- head-2006-02-16.orig/include/asm-x86_64/i387.h	2006-02-17 10:17:08.000000000 +0100
+++ head-2006-02-16/include/asm-x86_64/i387.h	2006-02-14 14:19:41.000000000 +0100
@@ -170,10 +170,15 @@ static inline void kernel_fpu_end(void)
 	preempt_enable();
 }
 
-static inline void save_init_fpu(struct task_struct *tsk)
+static inline void __save_init_fpu(struct task_struct *tsk)
 {
  	__fxsave_clear(tsk);
 	task_thread_info(tsk)->status &= ~TS_USEDFPU;
+}
+
+static inline void save_init_fpu(struct task_struct *tsk)
+{
+	__save_init_fpu(tsk);
 	stts();
 }
 
Index: head-2006-02-16/include/asm-x86_64/swiotlb.h
===================================================================
--- head-2006-02-16.orig/include/asm-x86_64/swiotlb.h	2006-02-17 10:17:08.000000000 +0100
+++ head-2006-02-16/include/asm-x86_64/swiotlb.h	2006-02-14 11:38:15.000000000 +0100
@@ -43,6 +43,14 @@ extern void swiotlb_free_coherent (struc
 extern int swiotlb_dma_supported(struct device *hwdev, u64 mask);
 extern void swiotlb_init(void);
 
+#ifdef CONFIG_XEN
+extern dma_addr_t swiotlb_map_page(struct device *hwdev, struct page *page,
+                                   unsigned long offset, size_t size,
+                                   enum dma_data_direction direction);
+extern void swiotlb_unmap_page(struct device *hwdev, dma_addr_t dma_address,
+                               size_t size, enum dma_data_direction direction);
+#endif
+
 #ifdef CONFIG_SWIOTLB
 extern int swiotlb;
 #else
Index: head-2006-02-16/include/asm-i386/mach-xen/asm/dma-mapping.h
===================================================================
--- head-2006-02-16.orig/include/asm-i386/mach-xen/asm/dma-mapping.h	2006-02-17 10:17:08.000000000 +0100
+++ head-2006-02-16/include/asm-i386/mach-xen/asm/dma-mapping.h	2006-02-14 14:21:03.000000000 +0100
@@ -120,17 +120,18 @@ dma_set_mask(struct device *dev, u64 mas
 	return 0;
 }
 
-#ifdef __i386__
 static inline int
 dma_get_cache_alignment(void)
 {
+#ifdef __i386__
 	/* no easy way to get cache size on all x86, so return the
 	 * maximum possible, to be safe */
 	return (1 << INTERNODE_CACHE_SHIFT);
-}
 #else
-extern int dma_get_cache_alignment(void);
+	/* same for gart, swiotlb, and nommu */
+	return boot_cpu_data.x86_clflush_size;
 #endif
+}
 
 #define dma_is_consistent(d)	(1)
 
