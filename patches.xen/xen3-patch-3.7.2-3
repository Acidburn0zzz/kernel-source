From: Jiri Slaby <jslaby@suse.cz>
Subject: Linux 3.7.3
Patch-mainline: 3.7.3

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Automatically created from "patches.kernel.org/patch-3.7.2-3" by xen-port-patches.py

--- 12.3.orig/drivers/xen/netfront/netfront.c	2013-01-25 14:16:59.000000000 +0100
+++ 12.3/drivers/xen/netfront/netfront.c	2013-01-25 10:59:57.000000000 +0100
@@ -1419,26 +1419,10 @@ err:	
 		i = xennet_fill_frags(np, skb, &tmpq);
 
 		/*
-		 * Truesize must approximates the size of true data plus
-		 * any supervisor overheads. Adding hypervisor overheads
-		 * has been shown to significantly reduce achievable
-		 * bandwidth with the default receive buffer size. It is
-		 * therefore not wise to account for it here.
-		 *
-		 * After alloc_skb(RX_COPY_THRESHOLD), truesize is set to
-		 * RX_COPY_THRESHOLD + the supervisor overheads. Here, we
-		 * add the size of the data pulled in xennet_fill_frags().
-		 *
-		 * We also adjust for any unused space in the main data
-		 * area by subtracting (RX_COPY_THRESHOLD - len). This is
-		 * especially important with drivers which split incoming
-		 * packets into header and data, using only 66 bytes of
-		 * the main data area (see the e1000 driver for example.)
-		 * On such systems, without this last adjustement, our
-		 * achievable receive throughout using the standard receive
-		 * buffer size was cut by 25%(!!!).
-		 */
-		skb->truesize += skb->data_len - RX_COPY_THRESHOLD;
+                 * Truesize is the actual allocation size, even if the
+                 * allocation is only partially used.
+                 */
+		skb->truesize += PAGE_SIZE * skb_shinfo(skb)->nr_frags;
 		skb->len += skb->data_len;
 
 		if (rx->flags & XEN_NETRXF_csum_blank)
