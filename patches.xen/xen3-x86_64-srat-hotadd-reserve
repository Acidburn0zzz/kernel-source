Subject: Reserve SRAT hotadd memory on x86-64 
References: 142035 148522 149117 160861
Patch-mainline: 2.6.17
From: Keith Mannthey, Andi Kleen 
Acked-by: ak@suse.de

Implement memory hotadd without sparsemem. The memory in the SRAT
hotadd area is just preserved instead and can be activated later.

There are a few restrictions:
- Only one continuous hotadd area allowed per node

The main problem is dealing with the many buggy SRAT tables
that are out there. The strategy here is to reject anything
suspicious.

Originally from Keith Mannthey, with several hacks and changes by AK
and also contributions from Andrew Morton

Signed-off-by: Andi Kleen <ak@suse.de>

Automatically created from "patches.arch/x86_64-srat-hotadd-reserve" by xen-port-patches.py

Index: head-2006-06-06/arch/x86_64/mm/init-xen.c
===================================================================
--- head-2006-06-06.orig/arch/x86_64/mm/init-xen.c	2006-06-06 12:53:39.000000000 +0200
+++ head-2006-06-06/arch/x86_64/mm/init-xen.c	2006-06-06 12:53:50.000000000 +0200
@@ -835,8 +835,7 @@ int __add_pages(struct zone *z, unsigned
 	unsigned long pfn;
 	unsigned long total = 0, mem = 0;
 	for (pfn = start_pfn; pfn < start_pfn + nr_pages; pfn++) {
-		unsigned long addr = pfn << PAGE_SHIFT;
-		if (pfn_valid(pfn) && e820_mapped(addr, addr+1, E820_RAM)) {
+		if (pfn_valid(pfn)) {
 			online_page(pfn_to_page(pfn));
 			err = 0;
 			mem++;
