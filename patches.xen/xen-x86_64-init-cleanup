From: jbeulich@novell.com
Subject: miscellaneous initialization code cleanup
Patch-mainline: obsolete

Index: head-2007-04-27/arch/x86_64/kernel/setup-xen.c
===================================================================
--- head-2007-04-27.orig/arch/x86_64/kernel/setup-xen.c	2007-04-27 16:08:16.000000000 +0200
+++ head-2007-04-27/arch/x86_64/kernel/setup-xen.c	2007-04-27 16:08:18.000000000 +0200
@@ -450,28 +450,18 @@ void __init setup_arch(char **cmdline_p)
         */
        acpi_reserve_bootmem();
 #endif
-#ifdef CONFIG_XEN
 #ifdef CONFIG_BLK_DEV_INITRD
+#ifndef CONFIG_XEN
+	if (LOADER_TYPE && INITRD_START) {
+#else
 	if (xen_start_info->mod_start) {
-		if (INITRD_START + INITRD_SIZE <= (end_pfn << PAGE_SHIFT)) {
-			/*reserve_bootmem_generic(INITRD_START, INITRD_SIZE);*/
-			initrd_start = INITRD_START + PAGE_OFFSET;
-			initrd_end = initrd_start+INITRD_SIZE;
-			initrd_below_start_ok = 1;
-		} else {
-			printk(KERN_ERR "initrd extends beyond end of memory "
-				"(0x%08lx > 0x%08lx)\ndisabling initrd\n",
-				(unsigned long)(INITRD_START + INITRD_SIZE),
-				(unsigned long)(end_pfn << PAGE_SHIFT));
-			initrd_start = 0;
-		}
-	}
 #endif
-#else	/* CONFIG_XEN */
-#ifdef CONFIG_BLK_DEV_INITRD
-	if (LOADER_TYPE && INITRD_START) {
 		if (INITRD_START + INITRD_SIZE <= (end_pfn << PAGE_SHIFT)) {
+#ifndef CONFIG_XEN
 			reserve_bootmem_generic(INITRD_START, INITRD_SIZE);
+#else
+			initrd_below_start_ok = 1;
+#endif
 			initrd_start = INITRD_START + PAGE_OFFSET;
 			initrd_end = initrd_start+INITRD_SIZE;
 		}
@@ -484,7 +474,6 @@ void __init setup_arch(char **cmdline_p)
 		}
 	}
 #endif
-#endif	/* !CONFIG_XEN */
 #ifdef CONFIG_KEXEC
 #ifdef CONFIG_XEN
 	xen_machine_kexec_setup_resources();
Index: head-2007-04-27/arch/x86_64/mm/init-xen.c
===================================================================
--- head-2007-04-27.orig/arch/x86_64/mm/init-xen.c	2007-04-27 16:08:16.000000000 +0200
+++ head-2007-04-27/arch/x86_64/mm/init-xen.c	2007-04-27 16:08:18.000000000 +0200
@@ -59,6 +59,8 @@ unsigned int __kernel_page_user;
 EXPORT_SYMBOL(__kernel_page_user);
 #endif
 
+int after_bootmem;
+
 extern unsigned long *contiguous_bitmap;
 
 DEFINE_PER_CPU(struct mmu_gather, mmu_gathers);
@@ -84,6 +86,11 @@ static void __meminit early_make_page_re
 	if (xen_feature(feature))
 		return;
 
+	if (after_bootmem) {
+		make_page_readonly(va, feature);
+		return;
+	}
+
 	addr = (unsigned long) page[pgd_index(_va)];
 	addr_to_page(addr, page);
 
@@ -205,8 +212,6 @@ void show_mem(void)
 	printk(KERN_INFO "%lu pages swap cached\n",cached);
 }
 
-int after_bootmem;
-
 static __init void *spp_getpage(void)
 { 
 	void *ptr;
@@ -225,7 +230,7 @@ static __init void *spp_getpage(void)
 	return ptr;
 } 
 
-#define pgd_offset_u(address) (pgd_t *)(init_level4_user_pgt + pgd_index(address))
+#define pgd_offset_u(address) (init_level4_user_pgt + pgd_index(address))
 
 static inline pud_t *pud_offset_u(unsigned long address)
 {
@@ -482,9 +487,9 @@ phys_pmd_init(pmd_t *pmd_page, unsigned 
 		pte = alloc_static_page(&pte_phys);
 		pte_save = pte;
 		for (k = 0; k < PTRS_PER_PTE; pte++, k++, address += PTE_SIZE) {
-			if ((address >= end) ||
-			    ((address >> PAGE_SHIFT) >=
-			     xen_start_info->nr_pages)) { 
+			if (address >= (after_bootmem
+			                ? end
+			                : xen_start_info->nr_pages << PAGE_SHIFT)) {
 				__set_pte(pte, __pte(0)); 
 				continue;
 			}
@@ -600,7 +605,7 @@ void __init xen_init_pt(void)
 		xen_pgd_pin(__pa_symbol(init_level4_user_pgt));
 	}
 
-	set_pgd((pgd_t *)(init_level4_user_pgt + 511), 
+	set_pgd(init_level4_user_pgt + 511,
 		mk_kernel_pgd(__pa_symbol(level3_user_pgt)));
 }
 
Index: head-2007-04-27/include/asm-x86_64/mach-xen/asm/pgtable.h
===================================================================
--- head-2007-04-27.orig/include/asm-x86_64/mach-xen/asm/pgtable.h	2007-04-27 16:08:16.000000000 +0200
+++ head-2007-04-27/include/asm-x86_64/mach-xen/asm/pgtable.h	2007-04-27 16:08:18.000000000 +0200
@@ -15,7 +15,7 @@
 #include <asm/hypervisor.h>
 
 extern pud_t level3_user_pgt[512];
-extern pud_t init_level4_user_pgt[];
+extern pgd_t init_level4_user_pgt[];
 
 extern void xen_init_pt(void);
 
@@ -370,7 +370,7 @@ static inline int pmd_large(pmd_t pte) {
 #define pgd_page(pgd)		(pfn_to_page(pgd_val(pgd) >> PAGE_SHIFT))
 #define pgd_index(address) (((address) >> PGDIR_SHIFT) & (PTRS_PER_PGD-1))
 #define pgd_offset(mm, addr) ((mm)->pgd + pgd_index(addr))
-#define pgd_offset_k(address) (pgd_t *)(init_level4_pgt + pgd_index(address))
+#define pgd_offset_k(address) (init_level4_pgt + pgd_index(address))
 #define pgd_present(pgd) (pgd_val(pgd) & _PAGE_PRESENT)
 #define mk_kernel_pgd(address) __pgd((address) | _KERNPG_TABLE)
 
