# HG changeset 42+74 patch
# User kfraser@localhost.localdomain
# Date 1181573766 -3600
# Node ID c09686d2bbffa5ec2152f685df0eaa090ddddd83
# Parent  07a5f92187ac57ffbd107571b2019be2f53bda98
Subject: Kernel threads need to be aware of freeze request,
by checking in their main loop.

xenbus/xenwatch threads are special with PF_NOFREEZE, since we're sure
that they do nothing to block other native device drivers.

Signed-off-by Ke Yu <ke.yu@intel.com>
Signed-off-by Kevin Tian <kevin.tian@intel.com>

blktap: blktap kthread must respond to freeze requests.
Signed-off-by: Keir Fraser <keir@xensource.com>

Acked-by: jbeulich@novell.com

Index: head-2007-06-21/drivers/xen/blkback/blkback.c
===================================================================
--- head-2007-06-21.orig/drivers/xen/blkback/blkback.c	2007-06-22 09:15:05.000000000 +0200
+++ head-2007-06-21/drivers/xen/blkback/blkback.c	2007-06-22 09:16:26.000000000 +0200
@@ -208,6 +208,9 @@ int blkif_schedule(void *arg)
 		printk(KERN_DEBUG "%s: started\n", current->comm);
 
 	while (!kthread_should_stop()) {
+		if (try_to_freeze())
+			continue;
+
 		wait_event_interruptible(
 			blkif->wq,
 			blkif->waiting_reqs || kthread_should_stop());
Index: head-2007-06-21/drivers/xen/blktap/blktap.c
===================================================================
--- head-2007-06-21.orig/drivers/xen/blktap/blktap.c	2007-06-22 09:13:58.000000000 +0200
+++ head-2007-06-21/drivers/xen/blktap/blktap.c	2007-06-22 09:16:26.000000000 +0200
@@ -942,6 +942,9 @@ int tap_blkif_schedule(void *arg)
 		printk(KERN_DEBUG "%s: started\n", current->comm);
 
 	while (!kthread_should_stop()) {
+		if (try_to_freeze())
+			continue;
+
 		wait_event_interruptible(
 			blkif->wq,
 			blkif->waiting_reqs || kthread_should_stop());
Index: head-2007-06-21/drivers/xen/xenbus/xenbus_xs.c
===================================================================
--- head-2007-06-21.orig/drivers/xen/xenbus/xenbus_xs.c	2007-06-22 09:15:05.000000000 +0200
+++ head-2007-06-21/drivers/xen/xenbus/xenbus_xs.c	2007-06-21 09:07:34.000000000 +0200
@@ -718,6 +718,7 @@ static int xenwatch_thread(void *unused)
 	struct list_head *ent;
 	struct xs_stored_msg *msg;
 
+	current->flags |= PF_NOFREEZE;
 	for (;;) {
 		wait_event_interruptible(watch_events_waitq,
 					 !list_empty(&watch_events));
@@ -836,6 +837,7 @@ static int xenbus_thread(void *unused)
 {
 	int err;
 
+	current->flags |= PF_NOFREEZE;
 	for (;;) {
 		err = process_msg();
 		if (err)
