From: sles8
Subject: change the start of mmap
Patch-mainline: no

x

Signed-off-by: Andrea Arcangeli <andrea@suse.de>

 fs/proc/base.c                     |   59 +++++++++++++++++++++++++++++++++++++
 include/asm-i386/processor.h       |    3 +
 include/asm-powerpc/processor.h    |    5 ++-
 include/asm-um/processor-generic.h |    3 +
 include/asm-x86_64/processor.h     |   11 ++++++
 include/linux/init_task.h          |    1
 include/linux/sched.h              |    9 +++++
 7 files changed, 87 insertions(+), 4 deletions(-)

Automatically created from "patches.suse/mapped-base" by xen-port-patches.py

Index: head-2006-04-05/include/asm-i386/mach-xen/asm/processor.h
===================================================================
--- head-2006-04-05.orig/include/asm-i386/mach-xen/asm/processor.h	2006-04-06 11:49:12.000000000 +0200
+++ head-2006-04-05/include/asm-i386/mach-xen/asm/processor.h	2006-04-06 12:05:14.000000000 +0200
@@ -326,7 +326,8 @@ extern int bootloader_type;
 /* This decides where the kernel will search for a free chunk of vm
  * space during mmap's.
  */
-#define TASK_UNMAPPED_BASE	(PAGE_ALIGN(TASK_SIZE / 3))
+#define TASK_UNMAPPED_BASE	(current->map_base)
+#define __TASK_UNMAPPED_BASE PAGE_ALIGN(TASK_SIZE/3)
 
 #define HAVE_ARCH_PICK_MMAP_LAYOUT
 
Index: head-2006-04-05/include/asm-x86_64/mach-xen/asm/processor.h
===================================================================
--- head-2006-04-05.orig/include/asm-x86_64/mach-xen/asm/processor.h	2006-04-06 11:49:12.000000000 +0200
+++ head-2006-04-05/include/asm-x86_64/mach-xen/asm/processor.h	2006-04-06 12:05:14.000000000 +0200
@@ -172,13 +172,22 @@ static inline void clear_in_cr4 (unsigne
 
 /* This decides where the kernel will search for a free chunk of vm
  * space during mmap's.
+ *
+ * /proc/pid/unmap_base is only supported for 32bit processes without
+ * 3GB personality for now.
  */
 #define IA32_PAGE_OFFSET ((current->personality & ADDR_LIMIT_3GB) ? 0xc0000000 : 0xFFFFe000)
 
 #define TASK_SIZE 		(test_thread_flag(TIF_IA32) ? IA32_PAGE_OFFSET : TASK_SIZE64)
 #define TASK_SIZE_OF(child) 	((test_tsk_thread_flag(child, TIF_IA32)) ? IA32_PAGE_OFFSET : TASK_SIZE64)
 
-#define TASK_UNMAPPED_BASE	PAGE_ALIGN(TASK_SIZE/3)
+/* FIXME: Used in initializer, do we need to check for 64bit here? */
+#define __TASK_UNMAPPED_BASE (PAGE_ALIGN(0xffffe000 / 3))
+#define TASK_UNMAPPED_32 ((current->personality & ADDR_LIMIT_3GB) ? \
+ 	PAGE_ALIGN(0xc0000000 / 3) : PAGE_ALIGN(current->map_base))
+#define TASK_UNMAPPED_64 PAGE_ALIGN(TASK_SIZE64/3)
+#define TASK_UNMAPPED_BASE	\
+	(test_thread_flag(TIF_IA32) ? TASK_UNMAPPED_32 : TASK_UNMAPPED_64)
 
 /*
  * Size of io_bitmap.
