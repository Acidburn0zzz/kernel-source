From: Kurt Garloff <garloff@suse.de>
Subject: Compile fix for sg.dma_lentgth removal 

.

Index: linux-2.6.12/arch/xen/i386/kernel/pci-dma.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/kernel/pci-dma.c
+++ linux-2.6.12/arch/xen/i386/kernel/pci-dma.c
@@ -46,9 +46,9 @@ dma_map_sg(struct device *hwdev, struct 
 	} else {
 		for (i = 0; i < nents; i++ ) {
 			sg[i].dma_address =
 				page_to_phys(sg[i].page) + sg[i].offset;
-			sg[i].dma_length  = sg[i].length;
+			//sg[i].dma_length  = sg[i].length;
 			BUG_ON(!sg[i].page);
 			IOMMU_BUG_ON(address_needs_mapping(
 				hwdev, sg[i].dma_address));
 		}
Index: linux-2.6.12/arch/xen/x86_64/kernel/pci-dma.c
===================================================================
--- linux-2.6.12.orig/arch/xen/x86_64/kernel/pci-dma.c
+++ linux-2.6.12/arch/xen/x86_64/kernel/pci-dma.c
@@ -34,9 +34,9 @@ int dma_map_sg(struct device *hwdev, str
  	for (i = 0; i < nents; i++ ) {
 		struct scatterlist *s = &sg[i];
 		BUG_ON(!s->page); 
 		s->dma_address = virt_to_bus(page_address(s->page) +s->offset);
-		s->dma_length = s->length;
+		//s->dma_length = s->length;
 	}
 	return nents;
 }
 
Index: linux-2.6.12/arch/xen/i386/kernel/swiotlb.c
===================================================================
--- linux-2.6.12.orig/arch/xen/i386/kernel/swiotlb.c
+++ linux-2.6.12/arch/xen/i386/kernel/swiotlb.c
@@ -507,15 +507,15 @@ swiotlb_map_sg(struct device *hwdev, str
 				/* Don't panic here, we expect map_sg users
 				   to do proper error handling. */
 				swiotlb_full(hwdev, sg->length, dir, 0);
 				swiotlb_unmap_sg(hwdev, sg - i, i, dir);
-				sg[0].dma_length = 0;
+				sg[0]./*dma_*/length = 0;
 				return 0;
 			}
 			sg->dma_address = (dma_addr_t)virt_to_bus(map);
 		} else
 			sg->dma_address = dev_addr;
-		sg->dma_length = sg->length;
+		//sg->dma_length = sg->length;
 	}
 	return nelems;
 }
 
@@ -534,9 +534,9 @@ swiotlb_unmap_sg(struct device *hwdev, s
 	for (i = 0; i < nelems; i++, sg++)
 		if (sg->dma_address != SG_ENT_PHYS_ADDRESS(sg))
 			unmap_single(hwdev, 
 				     (void *)bus_to_virt(sg->dma_address),
-				     sg->dma_length, dir);
+				     sg->/*dma_*/length, dir);
 }
 
 /*
  * Make physical memory consistent for a set of streaming mode DMA translations
@@ -556,9 +556,9 @@ swiotlb_sync_sg_for_cpu(struct device *h
 	for (i = 0; i < nelems; i++, sg++)
 		if (sg->dma_address != SG_ENT_PHYS_ADDRESS(sg))
 			sync_single(hwdev,
 				    (void *)bus_to_virt(sg->dma_address),
-				    sg->dma_length, dir);
+				    sg->/*dma_*/length, dir);
 }
 
 void
 swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,
@@ -571,9 +571,9 @@ swiotlb_sync_sg_for_device(struct device
 	for (i = 0; i < nelems; i++, sg++)
 		if (sg->dma_address != SG_ENT_PHYS_ADDRESS(sg))
 			sync_single(hwdev,
 				    (void *)bus_to_virt(sg->dma_address),
-				    sg->dma_length, dir);
+				    sg->/*dma_*/length, dir);
 }
 
 dma_addr_t
 swiotlb_map_page(struct device *hwdev, struct page *page,
