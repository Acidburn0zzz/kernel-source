Subject: Fix xen configuration.
From: jbeulich@novell.com
Patch-mainline: obsolete

--- head-2009-05-04.orig/arch/x86/Kconfig	2009-05-04 10:39:15.000000000 +0200
+++ head-2009-05-04/arch/x86/Kconfig	2009-05-04 11:04:33.000000000 +0200
@@ -150,6 +150,7 @@ config HAVE_CPUMASK_OF_CPU_MAP
 
 config ARCH_HIBERNATION_POSSIBLE
 	def_bool y
+	depends on !XEN
 
 config ARCH_SUSPEND_POSSIBLE
 	def_bool y
@@ -1097,7 +1098,7 @@ config HIGHMEM
 
 config X86_PAE
 	bool "PAE (Physical Address Extension) Support"
-	depends on X86_32 && !HIGHMEM4G
+	depends on X86_32 && (!HIGHMEM4G || X86_XEN)
 	---help---
 	  PAE is required for NX support, and furthermore enables
 	  larger swapspace support for non-overcommit purposes. It
--- head-2009-05-04.orig/arch/x86/Kconfig.debug	2009-05-04 10:39:15.000000000 +0200
+++ head-2009-05-04/arch/x86/Kconfig.debug	2009-05-04 11:04:33.000000000 +0200
@@ -273,7 +273,7 @@ config OPTIMIZE_INLINING
 
 config KDB
 	bool "Built-in Kernel Debugger support"
-	depends on DEBUG_KERNEL
+	depends on DEBUG_KERNEL && !XEN
 	select KALLSYMS
 	select KALLSYMS_ALL
 	help
--- head-2009-05-04.orig/drivers/xen/Kconfig	2009-05-04 10:39:15.000000000 +0200
+++ head-2009-05-04/drivers/xen/Kconfig	2009-05-04 11:04:33.000000000 +0200
@@ -16,12 +16,14 @@ menu "XEN"
 
 config XEN_PRIVILEGED_GUEST
 	bool "Privileged Guest (domain 0)"
-	select PCI_REASSIGN if PCI
 	help
 	  Support for privileged operation (domain 0)
 
 config XEN_UNPRIVILEGED_GUEST
 	def_bool !XEN_PRIVILEGED_GUEST
+	select PM
+	select PM_SLEEP
+	select PM_SLEEP_SMP if SMP
 
 config XEN_PRIVCMD
 	def_bool y
@@ -99,8 +101,9 @@ config XEN_NETDEV_LOOPBACK
 
 config XEN_PCIDEV_BACKEND
 	tristate "PCI-device backend driver"
-	depends on PCI && XEN_BACKEND
+	depends on PCI && XEN_PRIVILEGED_GUEST && XEN_BACKEND
 	default XEN_BACKEND
+	select PCI_REASSIGN
 	help
 	  The PCI device backend driver allows the kernel to export arbitrary
 	  PCI devices to other guests. If you select this to be a module, you
@@ -110,8 +113,8 @@ config XEN_PCIDEV_BACKEND
 choice
 	prompt "PCI Backend Mode"
 	depends on XEN_PCIDEV_BACKEND
-	default XEN_PCIDEV_BACKEND_VPCI if !IA64
 	default XEN_PCIDEV_BACKEND_CONTROLLER if IA64
+	default XEN_PCIDEV_BACKEND_VPCI
 
 config XEN_PCIDEV_BACKEND_VPCI
 	bool "Virtual PCI"
