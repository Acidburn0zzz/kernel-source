# HG changeset 9709 patch
From: kaf24@firebug.cl.cam.ac.uk
# Node ID 33263455b079d7a1a5c68a9b519029925d427c2a
# Parent  6255f38623b3270ab5a8e57003e485737328e1a4
Subject: PAE cr3 interface change
[PAE] Change interface for accessing %cr3 so that extra bits (>4GB) for PAE pgdirs
are placed in low-order bits of %cr3. Guests who understand this interface change
publish the fact by setting the option 'PAE=yes[extended-cr3]' in their __xen_guest
section.
Signed-off-by: Keir Fraser <keir@xensource.com>
xen-unstable changeset:   10257:b198bbfeec10579b539455eeb41b4daaed53c546
xen-unstable date:        Fri Jun  2 11:46:24 2006 +0100

Acked-by: Jan Beulich <jbeulich@novell.com>

Index: head-2006-06-07/arch/i386/kernel/head-xen.S
===================================================================
--- head-2006-06-07.orig/arch/i386/kernel/head-xen.S	2006-06-07 09:17:34.000000000 +0200
+++ head-2006-06-07/arch/i386/kernel/head-xen.S	2006-06-07 09:31:05.000000000 +0200
@@ -163,7 +163,7 @@ ENTRY(cpu_gdt_table)
 	.ascii	         "|pae_pgdir_above_4gb"
 	.ascii	         "|supervisor_mode_kernel"
 #ifdef CONFIG_X86_PAE
-	.ascii	",PAE=yes"
+	.ascii	",PAE=yes[extended-cr3]"
 #else
 	.ascii	",PAE=no"
 #endif
Index: head-2006-06-07/drivers/xen/core/smpboot.c
===================================================================
--- head-2006-06-07.orig/drivers/xen/core/smpboot.c	2006-06-07 09:31:04.000000000 +0200
+++ head-2006-06-07/drivers/xen/core/smpboot.c	2006-06-07 09:31:05.000000000 +0200
@@ -211,7 +211,7 @@ static void vcpu_prepare(int vcpu)
 	ctxt.failsafe_callback_cs  = __KERNEL_CS;
 	ctxt.failsafe_callback_eip = (unsigned long)failsafe_callback;
 
-	ctxt.ctrlreg[3] = virt_to_mfn(swapper_pg_dir) << PAGE_SHIFT;
+	ctxt.ctrlreg[3] = xen_pfn_to_cr3(virt_to_mfn(swapper_pg_dir));
 #else /* __x86_64__ */
 	ctxt.user_regs.cs = __KERNEL_CS;
 	ctxt.user_regs.esp = idle->thread.rsp0 - sizeof(struct pt_regs);
@@ -223,7 +223,7 @@ static void vcpu_prepare(int vcpu)
 	ctxt.failsafe_callback_eip = (unsigned long)failsafe_callback;
 	ctxt.syscall_callback_eip  = (unsigned long)system_call;
 
-	ctxt.ctrlreg[3] = virt_to_mfn(init_level4_pgt) << PAGE_SHIFT;
+	ctxt.ctrlreg[3] = xen_pfn_to_cr3(virt_to_mfn(init_level4_pgt));
 
 	ctxt.gs_base_kernel = (unsigned long)(cpu_pda(vcpu));
 #endif
Index: head-2006-06-07/include/asm-i386/mach-xen/asm/system.h
===================================================================
--- head-2006-06-07.orig/include/asm-i386/mach-xen/asm/system.h	2006-06-07 09:26:02.000000000 +0200
+++ head-2006-06-07/include/asm-i386/mach-xen/asm/system.h	2006-06-07 09:31:05.000000000 +0200
@@ -116,10 +116,12 @@ __asm__ __volatile__ ("movw %%dx,%1\n\t"
 	__asm__ ( \
 		"movl %%cr3,%0\n\t" \
 		:"=r" (__dummy)); \
-	machine_to_phys(__dummy); \
+	__dummy = xen_cr3_to_pfn(__dummy); \
+	mfn_to_pfn(__dummy) << PAGE_SHIFT; \
 })
 #define write_cr3(x) ({						\
-	maddr_t __dummy = phys_to_machine(x);			\
+	unsigned int __dummy = pfn_to_mfn((x) >> PAGE_SHIFT);	\
+	__dummy = xen_pfn_to_cr3(__dummy);			\
 	__asm__ __volatile__("movl %0,%%cr3": :"r" (__dummy));	\
 })
 
Index: head-2006-06-07/include/xen/interface/arch-x86_32.h
===================================================================
--- head-2006-06-07.orig/include/xen/interface/arch-x86_32.h	2006-06-07 09:17:35.000000000 +0200
+++ head-2006-06-07/include/xen/interface/arch-x86_32.h	2006-06-07 09:31:05.000000000 +0200
@@ -156,6 +156,14 @@ typedef struct vcpu_guest_context {
 } vcpu_guest_context_t;
 DEFINE_GUEST_HANDLE(vcpu_guest_context_t);
 
+/*
+ * Page-directory addresses above 4GB do not fit into architectural %cr3.
+ * When accessing %cr3, or equivalent field in vcpu_guest_context, guests
+ * must use the following accessor macros to pack/unpack valid MFNs.
+ */
+#define xen_pfn_to_cr3(pfn) (((unsigned)(pfn) << 12) | ((unsigned)(pfn) >> 20))
+#define xen_cr3_to_pfn(cr3) (((unsigned)(cr3) >> 12) | ((unsigned)(cr3) << 20))
+
 typedef struct arch_shared_info {
     unsigned long max_pfn;                  /* max pfn that appears in table */
     /* Frame containing list of mfns containing list of mfns containing p2m. */
Index: head-2006-06-07/include/xen/interface/arch-x86_64.h
===================================================================
--- head-2006-06-07.orig/include/xen/interface/arch-x86_64.h	2006-06-07 09:17:35.000000000 +0200
+++ head-2006-06-07/include/xen/interface/arch-x86_64.h	2006-06-07 09:31:05.000000000 +0200
@@ -232,6 +232,9 @@ typedef struct vcpu_guest_context {
 } vcpu_guest_context_t;
 DEFINE_GUEST_HANDLE(vcpu_guest_context_t);
 
+#define xen_pfn_to_cr3(pfn) ((unsigned long)(pfn) << 12)
+#define xen_cr3_to_pfn(cr3) ((unsigned long)(cr3) >> 12)
+
 typedef struct arch_shared_info {
     unsigned long max_pfn;                  /* max pfn that appears in table */
     /* Frame containing list of mfns containing list of mfns containing p2m. */
