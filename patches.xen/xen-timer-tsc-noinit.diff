From: Todd Jones <stjones@cs.wisc.edu>
Subject: save/restore problem

I reported that I was having a problem restoring a saved domain.  I have
found a fix that appears to solve my issue.

During restore, time_resume is called which tries to call init_tsc as
timer_tsc_init.init.  Both init_tsc and timer_tsc_init are declared
_init or __initdata and are therefore no longer available when the
domain is restored.  Removing the __init and __initdata specifiers from
declarations in
linux-2.6.10-xen-sparse/arch/xen/i386/kernel/timers/timer_tsc.c appears
to solve the problem.

Signed-off-by: Kurt Garloff <garloff@suse.de>

--- linux-2.6.10/arch/xen/i386/kernel/timers/timer_tsc.c.orig	2005-01-20 05:08:38.000000000 +0100
+++ linux-2.6.10/arch/xen/i386/kernel/timers/timer_tsc.c	2005-01-20 21:47:44.942395724 +0100
@@ -326,7 +326,7 @@ static inline void cpufreq_delayed_get(v
 #endif 
 
 
-static int __init init_tsc(char* override)
+static int init_tsc(char* override)
 {
 	u64 __cpu_khz;
 
@@ -373,7 +373,7 @@ struct timer_opts timer_tsc = {
 	.delay = delay_tsc,
 };
 
-struct init_timer_opts __initdata timer_tsc_init = {
+struct init_timer_opts timer_tsc_init = {
 	.init = init_tsc,
 	.opts = &timer_tsc,
 };
--- linux-2.6.10-xen-sparse/arch/xen/i386/kernel/time.c~	2005-01-20 17:59:30 -08:00
+++ linux-2.6.10-xen-sparse/arch/xen/i386/kernel/time.c	2005-01-20 17:59:30 -08:00
@@ -84,7 +84,7 @@
 spinlock_t i8253_lock = SPIN_LOCK_UNLOCKED;
 EXPORT_SYMBOL(i8253_lock);
 
-extern struct init_timer_opts __initdata timer_tsc_init;
+extern struct init_timer_opts timer_tsc_init;
 extern struct timer_opts timer_tsc;
 struct timer_opts *cur_timer = &timer_tsc;
 
