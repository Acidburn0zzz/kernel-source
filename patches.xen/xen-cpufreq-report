From: jbeulich@novell.com
Subject: make /proc/cpuinfo track CPU speed
Patch-mainline: obsolete

--- head.orig/arch/x86/kernel/acpi/processor_extcntl_xen.c	2015-01-14 14:46:25.000000000 +0100
+++ head/arch/x86/kernel/acpi/processor_extcntl_xen.c	2013-12-11 11:10:44.000000000 +0100
@@ -27,7 +27,7 @@
 #include <linux/acpi.h>
 #include <linux/pm.h>
 #include <linux/cpu.h>
-
+#include <linux/export.h>
 #include <linux/cpufreq.h>
 #include <acpi/processor.h>
 #include <asm/hypercall.h>
@@ -305,3 +305,22 @@ static int __init init_extcntl(void)
 	return 0;
 }
 arch_initcall(init_extcntl);
+
+unsigned int cpufreq_quick_get(unsigned int cpu)
+{
+	xen_platform_op_t op;
+
+	op.cmd = XENPF_get_cpu_freq;
+	op.u.get_cpu_freq.vcpu = cpu;
+	return HYPERVISOR_platform_op(&op) == 0 ? op.u.get_cpu_freq.freq : 0;
+}
+
+unsigned int cpufreq_quick_get_max(unsigned int cpu)
+{
+	xen_platform_op_t op;
+
+	op.cmd = XENPF_get_cpu_freq_max;
+	op.u.get_cpu_freq.vcpu = cpu;
+	return HYPERVISOR_platform_op(&op) == 0 ? op.u.get_cpu_freq.freq : 0;
+}
+EXPORT_SYMBOL(cpufreq_quick_get_max);
--- head.orig/include/linux/cpufreq.h	2015-01-08 17:41:23.000000000 +0100
+++ head/include/linux/cpufreq.h	2013-12-11 11:10:38.000000000 +0100
@@ -146,7 +146,7 @@ void cpufreq_put_global_kobject(void);
 int cpufreq_sysfs_create_file(const struct attribute *attr);
 void cpufreq_sysfs_remove_file(const struct attribute *attr);
 
-#ifdef CONFIG_CPU_FREQ
+#if defined(CONFIG_CPU_FREQ) || defined(CONFIG_PROCESSOR_EXTERNAL_CONTROL)
 unsigned int cpufreq_get(unsigned int cpu);
 unsigned int cpufreq_quick_get(unsigned int cpu);
 unsigned int cpufreq_quick_get_max(unsigned int cpu);
--- head.orig/include/xen/interface/platform.h	2014-12-11 09:27:58.000000000 +0100
+++ head/include/xen/interface/platform.h	2015-01-21 14:46:08.000000000 +0100
@@ -571,6 +571,16 @@ struct xenpf_resource_op {
 typedef struct xenpf_resource_op xenpf_resource_op_t;
 DEFINE_XEN_GUEST_HANDLE(xenpf_resource_op_t);
 
+#define XENPF_get_cpu_freq        ('N' << 24)
+#define XENPF_get_cpu_freq_min    (XENPF_get_cpu_freq + 1)
+#define XENPF_get_cpu_freq_max    (XENPF_get_cpu_freq_min + 1)
+struct xenpf_get_cpu_freq {
+    /* IN variables */
+    uint32_t vcpu;
+    /* OUT variables */
+    uint32_t freq; /* in kHz */
+};
+
 /*
  * ` enum neg_errnoval
  * ` HYPERVISOR_platform_op(const struct xen_platform_op*);
@@ -598,6 +608,7 @@ struct xen_platform_op {
 		struct xenpf_mem_hotadd        mem_add;
 		struct xenpf_core_parking      core_parking;
 		struct xenpf_resource_op       resource_op;
+		struct xenpf_get_cpu_freq      get_cpu_freq;
 		uint8_t                        pad[128];
 	} u;
 };
