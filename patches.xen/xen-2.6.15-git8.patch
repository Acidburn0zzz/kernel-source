Subject: Update Xen-specific files for 2.6.15-git8
From: jbeulich@novell.com

Index: head-2006-02-14/arch/i386/Makefile
===================================================================
--- head-2006-02-14.orig/arch/i386/Makefile	2006-02-14 11:02:29.000000000 +0100
+++ head-2006-02-14/arch/i386/Makefile	2006-02-14 11:02:35.000000000 +0100
@@ -117,7 +117,7 @@ all: vmlinuz
 vmlinuz: vmlinux
 	$(Q)$(MAKE) $(build)=$(boot) $@
 
-install: vmlinux
+install:
 	$(Q)$(MAKE) $(build)=$(boot) XENGUEST=$(XENGUEST) $@
 else
 all: bzImage
Index: head-2006-02-14/arch/i386/boot-xen/Makefile
===================================================================
--- head-2006-02-14.orig/arch/i386/boot-xen/Makefile	2006-02-14 11:01:36.000000000 +0100
+++ head-2006-02-14/arch/i386/boot-xen/Makefile	2006-02-14 11:02:35.000000000 +0100
@@ -10,7 +10,7 @@ vmlinux-stripped: vmlinux FORCE
 INSTALL_ROOT := $(patsubst %/boot,%,$(INSTALL_PATH))
 
 XINSTALL_NAME ?= $(KERNELRELEASE)
-install: vmlinuz
+install:
 	mkdir -p $(INSTALL_ROOT)/boot
 	ln -f -s vmlinuz-$(XINSTALL_NAME)$(INSTALL_SUFFIX) $(INSTALL_ROOT)/boot/vmlinuz-$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(XENGUEST)$(INSTALL_SUFFIX)
 	rm -f $(INSTALL_ROOT)/boot/vmlinuz-$(XINSTALL_NAME)$(INSTALL_SUFFIX)
Index: head-2006-02-14/arch/i386/kernel/traps-xen.c
===================================================================
--- head-2006-02-14.orig/arch/i386/kernel/traps-xen.c	2006-02-14 11:01:36.000000000 +0100
+++ head-2006-02-14/arch/i386/kernel/traps-xen.c	2006-02-14 11:02:35.000000000 +0100
@@ -479,7 +479,6 @@ DO_VM86_ERROR( 3, SIGTRAP, "int3", int3)
 DO_VM86_ERROR( 4, SIGSEGV, "overflow", overflow)
 DO_VM86_ERROR( 5, SIGSEGV, "bounds", bounds)
 DO_ERROR_INFO( 6, SIGILL,  "invalid opcode", invalid_op, ILL_ILLOPN, regs->eip)
-DO_VM86_ERROR( 7, SIGSEGV, "device not available", device_not_available)
 DO_ERROR( 9, SIGFPE,  "coprocessor segment overrun", coprocessor_segment_overrun)
 DO_ERROR(10, SIGSEGV, "invalid TSS", invalid_TSS)
 DO_ERROR(11, SIGBUS,  "segment not present", segment_not_present)
Index: head-2006-02-14/arch/x86_64/Makefile
===================================================================
--- head-2006-02-14.orig/arch/x86_64/Makefile	2006-02-14 11:02:34.000000000 +0100
+++ head-2006-02-14/arch/x86_64/Makefile	2006-02-14 11:03:19.000000000 +0100
@@ -87,7 +87,7 @@ all: vmlinuz
 vmlinuz: vmlinux
 	$(Q)$(MAKE) $(build)=$(boot) $@
 
-install: vmlinux
+install:
 	$(Q)$(MAKE) $(build)=$(boot) XENGUEST=$(XENGUEST) $@
 else
 #Default target when executing "make"
Index: head-2006-02-14/arch/x86_64/kernel/process-xen.c
===================================================================
--- head-2006-02-14.orig/arch/x86_64/kernel/process-xen.c	2006-02-14 11:01:36.000000000 +0100
+++ head-2006-02-14/arch/x86_64/kernel/process-xen.c	2006-02-14 11:02:35.000000000 +0100
@@ -494,7 +494,7 @@ __switch_to(struct task_struct *prev_p, 
 	if (unlikely(next->tls_array[i] != prev->tls_array[i])) {	\
 		mcl->op      = __HYPERVISOR_update_descriptor;		\
 		mcl->args[0] = virt_to_machine(				\
-			&get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i]);\
+			&cpu_gdt(cpu)[GDT_ENTRY_TLS_MIN + i]);		\
 		mcl->args[1] = next->tls_array[i];			\
 		mcl++;							\
 	}								\
Index: head-2006-02-14/arch/x86_64/mm/fault-xen.c
===================================================================
--- head-2006-02-14.orig/arch/x86_64/mm/fault-xen.c	2006-02-14 11:01:36.000000000 +0100
+++ head-2006-02-14/arch/x86_64/mm/fault-xen.c	2006-02-14 11:02:35.000000000 +0100
@@ -331,7 +331,7 @@ asmlinkage void __kprobes do_page_fault(
 	siginfo_t info;
 
 	if (!user_mode(regs))
-		error_code &= ~4; /* means kernel */
+		error_code &= ~PF_USER; /* means kernel */
 
 	/* get the address */
 	address = HYPERVISOR_shared_info->vcpu_info[
@@ -367,12 +367,12 @@ asmlinkage void __kprobes do_page_fault(
 	 */
 	if (unlikely(address >= TASK_SIZE64)) {
 		/*
-		 * Don't check for the module range here: its PML4
-		 * is always initialized because it's shared with the main
-		 * kernel text. Only vmalloc may need PML4 syncups.
+		 * Must check for the entire kernel range here: with writable
+		 * page tables the hypervisor may temporarily clear PMD
+		 * entries.
 		 */
 		if (!(error_code & (PF_RSVD|PF_USER|PF_PROT)) &&
-		      ((address >= VMALLOC_START && address < VMALLOC_END))) {
+		    address >= HYPERVISOR_VIRT_END) {
 			if (vmalloc_fault(address) < 0)
 				goto bad_area_nosemaphore;
 			return;
Index: head-2006-02-14/include/asm-i386/mach-xen/asm/desc.h
===================================================================
--- head-2006-02-14.orig/include/asm-i386/mach-xen/asm/desc.h	2006-02-14 11:01:36.000000000 +0100
+++ head-2006-02-14/include/asm-i386/mach-xen/asm/desc.h	2006-02-14 11:02:35.000000000 +0100
@@ -13,7 +13,7 @@
 
 #include <asm/mmu.h>
 
-extern struct desc_struct cpu_gdt_table[NR_CPUS][GDT_ENTRIES];
+extern struct desc_struct cpu_gdt_table[GDT_ENTRIES];
 
 DECLARE_PER_CPU(unsigned char, cpu_16bit_stack[CPU_16BIT_STACK_SIZE]);
 
Index: head-2006-02-14/include/asm-i386/apic.h
===================================================================
--- head-2006-02-14.orig/include/asm-i386/apic.h	2006-02-14 11:01:36.000000000 +0100
+++ head-2006-02-14/include/asm-i386/apic.h	2006-02-14 11:02:35.000000000 +0100
@@ -132,10 +132,12 @@ extern unsigned int nmi_watchdog;
 
 extern int disable_timer_pin_1;
 
+#ifndef CONFIG_XEN
 void smp_send_timer_broadcast_ipi(struct pt_regs *regs);
 void switch_APIC_timer_to_ipi(void *cpumask);
 void switch_ipi_to_APIC_timer(void *cpumask);
 #define ARCH_APICTIMER_STOPS_ON_C3	1
+#endif
 
 #else /* !CONFIG_X86_LOCAL_APIC */
 static inline void lapic_shutdown(void) { }
Index: head-2006-02-14/include/asm-x86_64/mach-xen/asm/desc.h
===================================================================
--- head-2006-02-14.orig/include/asm-x86_64/mach-xen/asm/desc.h	2006-02-14 11:01:36.000000000 +0100
+++ head-2006-02-14/include/asm-x86_64/mach-xen/asm/desc.h	2006-02-14 11:02:35.000000000 +0100
@@ -69,8 +69,6 @@ extern struct desc_ptr idt_descr, cpu_gd
 
 extern struct desc_struct cpu_gdt_table[GDT_ENTRIES];
 
-#define get_cpu_gdt_table(_cpu) ((struct desc_struct *)(cpu_gdt_descr[(_cpu)].address))
-
 #define load_TR_desc() asm volatile("ltr %w0"::"r" (GDT_ENTRY_TSS*8))
 #define load_LDT_desc() asm volatile("lldt %w0"::"r" (GDT_ENTRY_LDT*8))
 
@@ -225,7 +223,7 @@ static inline void load_TLS(struct threa
 	gdt[2] = t->tls_array[2];
 #endif
 #define C(i) \
-	HYPERVISOR_update_descriptor(virt_to_machine(&get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i]), t->tls_array[i])
+	HYPERVISOR_update_descriptor(virt_to_machine(&cpu_gdt(cpu)[GDT_ENTRY_TLS_MIN + i]), t->tls_array[i])
 
 	C(0); C(1); C(2);
 #undef C
Index: head-2006-02-14/include/asm-x86_64/apic.h
===================================================================
--- head-2006-02-14.orig/include/asm-x86_64/apic.h	2006-02-14 11:01:36.000000000 +0100
+++ head-2006-02-14/include/asm-x86_64/apic.h	2006-02-14 11:02:35.000000000 +0100
@@ -105,11 +105,13 @@ extern int disable_timer_pin_1;
 
 extern void setup_threshold_lvt(unsigned long lvt_off);
 
+#ifndef CONFIG_XEN
 void smp_send_timer_broadcast_ipi(void);
 void switch_APIC_timer_to_ipi(void *cpumask);
 void switch_ipi_to_APIC_timer(void *cpumask);
 
 #define ARCH_APICTIMER_STOPS_ON_C3	1
+#endif
 
 #endif /* CONFIG_X86_LOCAL_APIC */
 
