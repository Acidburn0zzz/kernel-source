Subject: patch-2.6.13-rc3
From: torvalds@osdl.org


Signed-off-by: Olaf Hering <olh@suse.de>

Automatically created from "patches.fixes/patch-2.6.13-rc2-rc3" by xen-port-patches.py
Further porting to arch/xen by kys and ccoffing

Index: xen-2005-08-20/arch/xen/i386/kernel/cpu/common.c
===================================================================
--- xen-2005-08-20.orig/arch/xen/i386/kernel/cpu/common.c
+++ xen-2005-08-20/arch/xen/i386/kernel/cpu/common.c
@@ -439,8 +439,13 @@ void __devinit identify_cpu(struct cpuin
 #endif
 	if (c == &boot_cpu_data)
 		sysenter_setup();
 	enable_sep_cpu();
+
+	if (c == &boot_cpu_data)
+		mtrr_bp_init();
+	else
+		mtrr_ap_init();
 }
 
 #ifdef CONFIG_X86_HT
 void __devinit detect_ht(struct cpuinfo_x86 *c)
Index: xen-2005-08-20/arch/xen/i386/kernel/smpboot.c
===================================================================
--- xen-2005-08-20.orig/arch/xen/i386/kernel/smpboot.c
+++ xen-2005-08-20/arch/xen/i386/kernel/smpboot.c
@@ -73,23 +73,23 @@ int smp_num_siblings = 1;
 EXPORT_SYMBOL(smp_num_siblings);
 #endif
 
 /* Package ID of each logical CPU */
-int phys_proc_id[NR_CPUS] = {[0 ... NR_CPUS-1] = BAD_APICID};
+int phys_proc_id[NR_CPUS] __read_mostly = {[0 ... NR_CPUS-1] = BAD_APICID};
 EXPORT_SYMBOL(phys_proc_id);
 
 /* Core ID of each logical CPU */
-int cpu_core_id[NR_CPUS] = {[0 ... NR_CPUS-1] = BAD_APICID};
+int cpu_core_id[NR_CPUS] __read_mostly = {[0 ... NR_CPUS-1] = BAD_APICID};
 EXPORT_SYMBOL(cpu_core_id);
 
-cpumask_t cpu_sibling_map[NR_CPUS];
+cpumask_t cpu_sibling_map[NR_CPUS] __read_mostly;
 EXPORT_SYMBOL(cpu_sibling_map);
 
-cpumask_t cpu_core_map[NR_CPUS];
+cpumask_t cpu_core_map[NR_CPUS] __read_mostly;
 EXPORT_SYMBOL(cpu_core_map);
 
 /* bitmap of online cpus */
-cpumask_t cpu_online_map;
+cpumask_t cpu_online_map __read_mostly;
 EXPORT_SYMBOL(cpu_online_map);
 
 cpumask_t cpu_callin_map;
 cpumask_t cpu_callout_map;
@@ -105,9 +105,9 @@ static int __devinitdata tsc_sync_disabl
 /* Per CPU bogomips and other parameters */
 struct cpuinfo_x86 cpu_data[NR_CPUS] __cacheline_aligned;
 EXPORT_SYMBOL(cpu_data);
 
-u8 x86_cpu_to_apicid[NR_CPUS] =
+u8 x86_cpu_to_apicid[NR_CPUS] __read_mostly =
 			{ [0 ... NR_CPUS-1] = 0xff };
 EXPORT_SYMBOL(x86_cpu_to_apicid);
 
 #if 0
@@ -603,12 +603,12 @@ extern struct {
 
 #ifdef CONFIG_NUMA
 
 /* which logical CPUs are on which nodes */
-cpumask_t node_2_cpu_mask[MAX_NUMNODES] =
+cpumask_t node_2_cpu_mask[MAX_NUMNODES] __read_mostly =
 				{ [0 ... MAX_NUMNODES-1] = CPU_MASK_NONE };
 /* which node each logical CPU is on */
-int cpu_2_node[NR_CPUS] = { [0 ... NR_CPUS-1] = 0 };
+int cpu_2_node[NR_CPUS] __read_mostly = { [0 ... NR_CPUS-1] = 0 };
 EXPORT_SYMBOL(cpu_2_node);
 
 /* set up a mapping between cpu and node. */
 static inline void map_cpu_to_node(int cpu, int node)
@@ -634,9 +634,9 @@ static inline void unmap_cpu_to_node(int
 #define unmap_cpu_to_node(cpu)	({})
 
 #endif /* CONFIG_NUMA */
 
-u8 cpu_2_logical_apicid[NR_CPUS] = { [0 ... NR_CPUS-1] = BAD_APICID };
+u8 cpu_2_logical_apicid[NR_CPUS] __read_mostly = { [0 ... NR_CPUS-1] = BAD_APICID };
 
 static void map_cpu_to_logical_apicid(void)
 {
 	int cpu = smp_processor_id();
Index: xen-2005-08-20/arch/xen/i386/pci/irq.c
===================================================================
--- xen-2005-08-20.orig/arch/xen/i386/pci/irq.c
+++ xen-2005-08-20/arch/xen/i386/pci/irq.c
@@ -1056,26 +1056,30 @@ static int __init pcibios_irq_init(void)
 
 subsys_initcall(pcibios_irq_init);
 
 
-static void pirq_penalize_isa_irq(int irq)
+static void pirq_penalize_isa_irq(int irq, int active)
 {
 	/*
 	 *  If any ISAPnP device reports an IRQ in its list of possible
 	 *  IRQ's, we try to avoid assigning it to PCI devices.
 	 */
-	if (irq < 16)
-		pirq_penalty[irq] += 100;
+	if (irq < 16) {
+		if (active)
+			pirq_penalty[irq] += 1000;
+		else
+			pirq_penalty[irq] += 100;
+	}
 }
 
-void pcibios_penalize_isa_irq(int irq)
+void pcibios_penalize_isa_irq(int irq, int active)
 {
 #ifdef CONFIG_ACPI_PCI
 	if (!acpi_noirq)
-		acpi_penalize_isa_irq(irq);
+		acpi_penalize_isa_irq(irq, active);
 	else
 #endif
-		pirq_penalize_isa_irq(irq);
+		pirq_penalize_isa_irq(irq, active);
 }
 
 static int pirq_enable_irq(struct pci_dev *dev)
 {
Index: xen-2005-08-20/arch/xen/x86_64/kernel/setup.c
===================================================================
--- xen-2005-08-20.orig/arch/xen/x86_64/kernel/setup.c
+++ xen-2005-08-20/arch/xen/x86_64/kernel/setup.c
@@ -1296,8 +1296,12 @@ void __cpuinit identify_cpu(struct cpuin
 
 #ifdef CONFIG_X86_MCE
 	mcheck_init(c);
 #endif
+	if (c == &boot_cpu_data)
+		mtrr_bp_init();
+	else
+		mtrr_ap_init();
 #ifdef CONFIG_NUMA
 	if (c != &boot_cpu_data)
 		numa_add_cpu(c - cpu_data);
 #endif
Index: xen-2005-08-20/arch/xen/x86_64/Makefile
===================================================================
--- xen-2005-08-20.orig/arch/xen/x86_64/Makefile
+++ xen-2005-08-20/arch/xen/x86_64/Makefile
@@ -65,9 +65,11 @@ CFLAGS += $(call cc-option,-funit-at-a-t
 
 head-y := arch/xen/x86_64/kernel/head.o arch/xen/x86_64/kernel/head64.o arch/xen/x86_64/kernel/init_task.o
 
 libs-y 					+= arch/x86_64/lib/
-core-y					+= arch/xen/x86_64/kernel/ arch/xen/x86_64/mm/
+core-y					+= arch/xen/x86_64/kernel/ \
+					arch/xen/x86_64/mm/ \
+					arch/x86_64/crypto/
 core-$(CONFIG_IA32_EMULATION)		+= arch/xen/x86_64/ia32/
 drivers-$(CONFIG_PCI)			+= arch/xen/x86_64/pci/
 drivers-$(CONFIG_OPROFILE)		+= arch/x86_64/oprofile/
 
Index: xen-2005-08-20/include/asm-xen/asm-i386/pci.h
===================================================================
--- xen-2005-08-20.orig/include/asm-xen/asm-i386/pci.h
+++ xen-2005-08-20/include/asm-xen/asm-i386/pci.h
@@ -26,9 +26,9 @@ extern unsigned long pci_mem_start;
 void pcibios_config_init(void);
 struct pci_bus * pcibios_scan_root(int bus);
 
 void pcibios_set_master(struct pci_dev *dev);
-void pcibios_penalize_isa_irq(int irq);
+void pcibios_penalize_isa_irq(int irq, int active);
 struct irq_routing_table *pcibios_get_irq_routing_table(void);
 int pcibios_set_irq_routing(struct pci_dev *dev, int pin, int irq);
 
 /* Dynamic DMA mapping stuff.
Index: xen-2005-08-20/include/asm-xen/asm-i386/processor.h
===================================================================
--- xen-2005-08-20.orig/include/asm-xen/asm-i386/processor.h
+++ xen-2005-08-20/include/asm-xen/asm-i386/processor.h
@@ -702,5 +702,16 @@ extern void select_idle_routine(const st
 extern unsigned long boot_option_idle_override;
 extern void enable_sep_cpu(void);
 extern int sysenter_setup(void);
 
+#ifdef CONFIG_MTRR
+/* For the xen port stubbed out these functions. KYS */
+//extern void mtrr_ap_init(void);
+//extern void mtrr_bp_init(void);
+#define mtrr_ap_init() do {} while (0)
+#define mtrr_bp_init() do {} while (0)
+#else
+#define mtrr_ap_init() do {} while (0)
+#define mtrr_bp_init() do {} while (0)
+#endif
+
 #endif /* __ASM_I386_PROCESSOR_H */
Index: xen-2005-08-20/include/asm-xen/asm-x86_64/pci.h
===================================================================
--- xen-2005-08-20.orig/include/asm-xen/asm-x86_64/pci.h
+++ xen-2005-08-20/include/asm-xen/asm-x86_64/pci.h
@@ -32,9 +32,9 @@ struct pci_bus * pcibios_scan_root(int b
 extern int (*pci_config_read)(int seg, int bus, int dev, int fn, int reg, int len, u32 *value);
 extern int (*pci_config_write)(int seg, int bus, int dev, int fn, int reg, int len, u32 value);
 
 void pcibios_set_master(struct pci_dev *dev);
-void pcibios_penalize_isa_irq(int irq);
+void pcibios_penalize_isa_irq(int irq, int active);
 struct irq_routing_table *pcibios_get_irq_routing_table(void);
 int pcibios_set_irq_routing(struct pci_dev *dev, int pin, int irq);
 
 #include <linux/types.h>
Index: xen-2005-08-20/arch/xen/i386/kernel/acpi/Makefile
===================================================================
--- xen-2005-08-20.orig/arch/xen/i386/kernel/acpi/Makefile
+++ xen-2005-08-20/arch/xen/i386/kernel/acpi/Makefile
@@ -1,8 +1,12 @@
 obj-$(CONFIG_ACPI_BOOT)		        := boot.o
 c-obj-$(CONFIG_X86_IO_APIC)	        += earlyquirk.o
 c-obj-$(CONFIG_ACPI_SLEEP)	        += sleep.o wakeup.o
 
+ifneq ($(CONFIG_ACPI_PROCESSOR),)
+c-obj-y				        += cstate.o
+endif
+
 c-link                                  :=
 
 $(patsubst %.o,$(obj)/%.c,$(c-obj-y) $(c-link)):
 	@ln -fsn $(srctree)/arch/i386/kernel/acpi/$(notdir $@) $@
Index: xen-2005-08-20/arch/xen/Kconfig
===================================================================
--- xen-2005-08-20.orig/arch/xen/Kconfig
+++ xen-2005-08-20/arch/xen/Kconfig
@@ -192,8 +192,10 @@ menu "Executable file formats"
 source "fs/Kconfig.binfmt"
 
 endmenu
 
+source "net/Kconfig"
+
 source "arch/xen/Kconfig.drivers"
 
 if XEN_PRIVILEGED_GUEST
 menu "Power management options"
Index: xen-2005-08-20/arch/xen/Kconfig.drivers
===================================================================
--- xen-2005-08-20.orig/arch/xen/Kconfig.drivers
+++ xen-2005-08-20/arch/xen/Kconfig.drivers
@@ -27,13 +27,9 @@ source "drivers/md/Kconfig"
 if XEN_PHYSDEV_ACCESS
 source "drivers/message/fusion/Kconfig"
 source "drivers/ieee1394/Kconfig"
 source "drivers/message/i2o/Kconfig"
-endif
-
-source "net/Kconfig"
-
-if XEN_PHYSDEV_ACCESS
+source "drivers/net/Kconfig"
 source "drivers/isdn/Kconfig"
 source "drivers/telephony/Kconfig"
 source "drivers/input/Kconfig"
 source "drivers/char/Kconfig"
