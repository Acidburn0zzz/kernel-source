Subject: patch-2.6.13-rc3
From: torvalds@osdl.org


Signed-off-by: Olaf Hering <olh@suse.de>

Automatically created from "patches.fixes/patch-2.6.13-rc2-rc3" by xen-port-patches.py
Further porting to arch/xen by kys and ccoffing

Index: xen-2005-08-19/arch/xen/i386/kernel/cpu/common.c
===================================================================
--- xen-2005-08-19.orig/arch/xen/i386/kernel/cpu/common.c	2005-08-19 14:41:00.861151232 +0200
+++ xen-2005-08-19/arch/xen/i386/kernel/cpu/common.c	2005-08-19 14:41:37.165632112 +0200
@@ -440,6 +440,11 @@
 	if (c == &boot_cpu_data)
 		sysenter_setup();
 	enable_sep_cpu();
+
+	if (c == &boot_cpu_data)
+		mtrr_bp_init();
+	else
+		mtrr_ap_init();
 }
 
 #ifdef CONFIG_X86_HT
Index: xen-2005-08-19/arch/xen/i386/kernel/smpboot.c
===================================================================
--- xen-2005-08-19.orig/arch/xen/i386/kernel/smpboot.c	2005-08-19 14:41:00.861151232 +0200
+++ xen-2005-08-19/arch/xen/i386/kernel/smpboot.c	2005-08-19 14:41:37.168631656 +0200
@@ -74,21 +74,21 @@
 #endif
 
 /* Package ID of each logical CPU */
-int phys_proc_id[NR_CPUS] = {[0 ... NR_CPUS-1] = BAD_APICID};
+int phys_proc_id[NR_CPUS] __read_mostly = {[0 ... NR_CPUS-1] = BAD_APICID};
 EXPORT_SYMBOL(phys_proc_id);
 
 /* Core ID of each logical CPU */
-int cpu_core_id[NR_CPUS] = {[0 ... NR_CPUS-1] = BAD_APICID};
+int cpu_core_id[NR_CPUS] __read_mostly = {[0 ... NR_CPUS-1] = BAD_APICID};
 EXPORT_SYMBOL(cpu_core_id);
 
-cpumask_t cpu_sibling_map[NR_CPUS];
+cpumask_t cpu_sibling_map[NR_CPUS] __read_mostly;
 EXPORT_SYMBOL(cpu_sibling_map);
 
-cpumask_t cpu_core_map[NR_CPUS];
+cpumask_t cpu_core_map[NR_CPUS] __read_mostly;
 EXPORT_SYMBOL(cpu_core_map);
 
 /* bitmap of online cpus */
-cpumask_t cpu_online_map;
+cpumask_t cpu_online_map __read_mostly;
 EXPORT_SYMBOL(cpu_online_map);
 
 cpumask_t cpu_callin_map;
@@ -106,7 +106,7 @@
 struct cpuinfo_x86 cpu_data[NR_CPUS] __cacheline_aligned;
 EXPORT_SYMBOL(cpu_data);
 
-u8 x86_cpu_to_apicid[NR_CPUS] =
+u8 x86_cpu_to_apicid[NR_CPUS] __read_mostly =
 			{ [0 ... NR_CPUS-1] = 0xff };
 EXPORT_SYMBOL(x86_cpu_to_apicid);
 
@@ -604,10 +604,10 @@
 #ifdef CONFIG_NUMA
 
 /* which logical CPUs are on which nodes */
-cpumask_t node_2_cpu_mask[MAX_NUMNODES] =
+cpumask_t node_2_cpu_mask[MAX_NUMNODES] __read_mostly =
 				{ [0 ... MAX_NUMNODES-1] = CPU_MASK_NONE };
 /* which node each logical CPU is on */
-int cpu_2_node[NR_CPUS] = { [0 ... NR_CPUS-1] = 0 };
+int cpu_2_node[NR_CPUS] __read_mostly = { [0 ... NR_CPUS-1] = 0 };
 EXPORT_SYMBOL(cpu_2_node);
 
 /* set up a mapping between cpu and node. */
@@ -635,7 +635,7 @@
 
 #endif /* CONFIG_NUMA */
 
-u8 cpu_2_logical_apicid[NR_CPUS] = { [0 ... NR_CPUS-1] = BAD_APICID };
+u8 cpu_2_logical_apicid[NR_CPUS] __read_mostly = { [0 ... NR_CPUS-1] = BAD_APICID };
 
 static void map_cpu_to_logical_apicid(void)
 {
Index: xen-2005-08-19/arch/xen/i386/pci/irq.c
===================================================================
--- xen-2005-08-19.orig/arch/xen/i386/pci/irq.c	2005-08-19 14:41:00.860151384 +0200
+++ xen-2005-08-19/arch/xen/i386/pci/irq.c	2005-08-19 15:39:24.130573328 +0200
@@ -1057,24 +1057,28 @@
 subsys_initcall(pcibios_irq_init);
 
 
-static void pirq_penalize_isa_irq(int irq)
+static void pirq_penalize_isa_irq(int irq, int active)
 {
 	/*
 	 *  If any ISAPnP device reports an IRQ in its list of possible
 	 *  IRQ's, we try to avoid assigning it to PCI devices.
 	 */
-	if (irq < 16)
-		pirq_penalty[irq] += 100;
+	if (irq < 16) {
+		if (active)
+			pirq_penalty[irq] += 1000;
+		else
+			pirq_penalty[irq] += 100;
+	}
 }
 
-void pcibios_penalize_isa_irq(int irq)
+void pcibios_penalize_isa_irq(int irq, int active)
 {
 #ifdef CONFIG_ACPI_PCI
 	if (!acpi_noirq)
-		acpi_penalize_isa_irq(irq);
+		acpi_penalize_isa_irq(irq, active);
 	else
 #endif
-		pirq_penalize_isa_irq(irq);
+		pirq_penalize_isa_irq(irq, active);
 }
 
 static int pirq_enable_irq(struct pci_dev *dev)
Index: xen-2005-08-19/arch/xen/x86_64/Kconfig
===================================================================
--- xen-2005-08-19.orig/arch/xen/x86_64/Kconfig	2005-08-19 14:41:00.863150928 +0200
+++ xen-2005-08-19/arch/xen/x86_64/Kconfig	2005-08-19 15:39:23.178718032 +0200
@@ -233,7 +233,7 @@
 	  cost of slightly increased overhead in some places. If unsure say
 	  N here.
 
-source "kernel/Kconfig.preempt"
+#source "kernel/Kconfig.preempt"
 
 config K8_NUMA
        bool "K8 NUMA support"
@@ -410,7 +410,7 @@
 	  If unsure, say Y. Only embedded should say N here.
 
 
-source kernel/Kconfig.hz
+#source kernel/Kconfig.hz
 
 endmenu
 
Index: xen-2005-08-19/arch/xen/x86_64/kernel/setup.c
===================================================================
--- xen-2005-08-19.orig/arch/xen/x86_64/kernel/setup.c	2005-08-19 14:41:00.863150928 +0200
+++ xen-2005-08-19/arch/xen/x86_64/kernel/setup.c	2005-08-19 15:39:23.180717728 +0200
@@ -1297,6 +1297,10 @@
 #ifdef CONFIG_X86_MCE
 	mcheck_init(c);
 #endif
+	if (c == &boot_cpu_data)
+		mtrr_bp_init();
+	else
+		mtrr_ap_init();
 #ifdef CONFIG_NUMA
 	if (c != &boot_cpu_data)
 		numa_add_cpu(c - cpu_data);
Index: xen-2005-08-19/arch/xen/x86_64/Makefile
===================================================================
--- xen-2005-08-19.orig/arch/xen/x86_64/Makefile	2005-08-19 14:41:00.862151080 +0200
+++ xen-2005-08-19/arch/xen/x86_64/Makefile	2005-08-19 14:41:37.178630136 +0200
@@ -66,7 +66,9 @@
 head-y := arch/xen/x86_64/kernel/head.o arch/xen/x86_64/kernel/head64.o arch/xen/x86_64/kernel/init_task.o
 
 libs-y 					+= arch/x86_64/lib/
-core-y					+= arch/xen/x86_64/kernel/ arch/xen/x86_64/mm/
+core-y					+= arch/xen/x86_64/kernel/ \
+					arch/xen/x86_64/mm/ \
+					arch/x86_64/crypto/
 core-$(CONFIG_IA32_EMULATION)		+= arch/xen/x86_64/ia32/
 drivers-$(CONFIG_PCI)			+= arch/xen/x86_64/pci/
 drivers-$(CONFIG_OPROFILE)		+= arch/x86_64/oprofile/
Index: xen-2005-08-19/include/asm-xen/asm-i386/pci.h
===================================================================
--- xen-2005-08-19.orig/include/asm-xen/asm-i386/pci.h	2005-08-19 14:41:00.865150624 +0200
+++ xen-2005-08-19/include/asm-xen/asm-i386/pci.h	2005-08-19 15:39:22.433831272 +0200
@@ -27,7 +27,7 @@
 struct pci_bus * pcibios_scan_root(int bus);
 
 void pcibios_set_master(struct pci_dev *dev);
-void pcibios_penalize_isa_irq(int irq);
+void pcibios_penalize_isa_irq(int irq, int active);
 struct irq_routing_table *pcibios_get_irq_routing_table(void);
 int pcibios_set_irq_routing(struct pci_dev *dev, int pin, int irq);
 
Index: xen-2005-08-19/include/asm-xen/asm-i386/processor.h
===================================================================
--- xen-2005-08-19.orig/include/asm-xen/asm-i386/processor.h	2005-08-19 14:41:00.865150624 +0200
+++ xen-2005-08-19/include/asm-xen/asm-i386/processor.h	2005-08-19 15:39:20.927060336 +0200
@@ -703,4 +703,15 @@
 extern void enable_sep_cpu(void);
 extern int sysenter_setup(void);
 
+#ifdef CONFIG_MTRR
+/* For the xen port stubbed out these functions. KYS */
+//extern void mtrr_ap_init(void);
+//extern void mtrr_bp_init(void);
+#define mtrr_ap_init() do {} while (0)
+#define mtrr_bp_init() do {} while (0)
+#else
+#define mtrr_ap_init() do {} while (0)
+#define mtrr_bp_init() do {} while (0)
+#endif
+
 #endif /* __ASM_I386_PROCESSOR_H */
Index: xen-2005-08-19/include/asm-xen/asm-x86_64/pci.h
===================================================================
--- xen-2005-08-19.orig/include/asm-xen/asm-x86_64/pci.h	2005-08-19 14:41:00.864150776 +0200
+++ xen-2005-08-19/include/asm-xen/asm-x86_64/pci.h	2005-08-19 15:39:22.432831424 +0200
@@ -33,7 +33,7 @@
 extern int (*pci_config_write)(int seg, int bus, int dev, int fn, int reg, int len, u32 value);
 
 void pcibios_set_master(struct pci_dev *dev);
-void pcibios_penalize_isa_irq(int irq);
+void pcibios_penalize_isa_irq(int irq, int active);
 struct irq_routing_table *pcibios_get_irq_routing_table(void);
 int pcibios_set_irq_routing(struct pci_dev *dev, int pin, int irq);
 
Index: xen-2005-08-19/arch/xen/i386/kernel/acpi/Makefile
===================================================================
--- xen-2005-08-19.orig/arch/xen/i386/kernel/acpi/Makefile	2005-08-19 08:49:22.000000000 +0200
+++ xen-2005-08-19/arch/xen/i386/kernel/acpi/Makefile	2005-08-19 15:40:57.284411792 +0200
@@ -2,6 +2,10 @@
 c-obj-$(CONFIG_X86_IO_APIC)	        += earlyquirk.o
 c-obj-$(CONFIG_ACPI_SLEEP)	        += sleep.o wakeup.o
 
+ifneq ($(CONFIG_ACPI_PROCESSOR),)
+c-obj-y				        += cstate.o
+endif
+
 c-link                                  :=
 
 $(patsubst %.o,$(obj)/%.c,$(c-obj-y) $(c-link)):
