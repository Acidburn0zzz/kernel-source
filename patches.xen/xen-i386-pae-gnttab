From: Steven Rostedt <srostedt@redhat.com>
Subject: Fix 4G i386 PAE grant table interface

It has been discovered that i386 boxes with more than 4G of RAM would
randomly crash.  It was traced to the interface of blktap using
gnttab_set_map_op.

It would pass in the 64 bit pte entry, but the gnttab_set_map_op would
only take a 32 bit (on i386) unsigned long as a parameter. So we lose
the top 32bits.

Luckily!  The kernel/HV ABI used a uint64_t as the variable to pass the
address.  So this does *NOT* break the current kernel/HV ABI.

(hypervisor portion of patch stripped)
(uint64_t changed to maddr_t)

Acked-by: jbeulich@novell.com
Patch-mainline: obsolete

Index: head-2006-10-30/include/xen/gnttab.h
===================================================================
--- head-2006-10-30.orig/include/xen/gnttab.h	2006-09-21 09:57:46.000000000 +0200
+++ head-2006-10-30/include/xen/gnttab.h	2006-11-03 09:56:58.000000000 +0100
@@ -118,7 +118,7 @@ int gnttab_suspend(void);
 int gnttab_resume(void);
 
 static inline void
-gnttab_set_map_op(struct gnttab_map_grant_ref *map, unsigned long addr,
+gnttab_set_map_op(struct gnttab_map_grant_ref *map, maddr_t addr,
 		  uint32_t flags, grant_ref_t ref, domid_t domid)
 {
 	if (flags & GNTMAP_contains_pte)
@@ -134,7 +134,7 @@ gnttab_set_map_op(struct gnttab_map_gran
 }
 
 static inline void
-gnttab_set_unmap_op(struct gnttab_unmap_grant_ref *unmap, unsigned long addr,
+gnttab_set_unmap_op(struct gnttab_unmap_grant_ref *unmap, maddr_t addr,
 		    uint32_t flags, grant_handle_t handle)
 {
 	if (flags & GNTMAP_contains_pte)
