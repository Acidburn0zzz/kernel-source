From: jbeulich@suse.com
Subject: xen-pciback: rate limit error messages from xen_pcibk_enable_msi{,x}()
References: CVE-2013-0231 XSA-43 bnc#801178
Patch-mainline: n/a

... as being guest triggerable (e.g. by invoking
XEN_PCI_OP_enable_msi{,x} on a device not being MSI/MSI-X capable).

This is CVE-2013-0231 / XSA-43.

Also make the two messages uniform in both their wording and severity.

Signed-off-by: Jan Beulich <jbeulich@suse.com>

--- head.orig/drivers/xen/xen-pciback/pciback_ops.c	2012-04-10 17:21:35.000000000 +0200
+++ head/drivers/xen/xen-pciback/pciback_ops.c	2013-01-28 16:17:29.000000000 +0100
@@ -148,7 +148,6 @@ int xen_pcibk_enable_msi(struct xen_pcib
 #ifndef CONFIG_XEN
 	struct xen_pcibk_dev_data *dev_data;
 #endif
-	int otherend = pdev->xdev->otherend_id;
 	int status;
 
 	if (unlikely(verbose_request))
@@ -157,8 +156,9 @@ int xen_pcibk_enable_msi(struct xen_pcib
 	status = pci_enable_msi(dev);
 
 	if (status) {
-		printk(KERN_ERR "error enable msi for guest %x status %x\n",
-			otherend, status);
+		pr_warn_ratelimited(DRV_NAME ": %s: error enabling MSI for guest %u: err %d\n",
+				    pci_name(dev), pdev->xdev->otherend_id,
+				    status);
 		op->value = 0;
 		return XEN_PCI_ERR_op_failed;
 	}
@@ -256,10 +256,10 @@ int xen_pcibk_enable_msix(struct xen_pci
 						pci_name(dev), i,
 						op->msix_entries[i].vector);
 		}
-	} else {
-		printk(KERN_WARNING DRV_NAME ": %s: failed to enable MSI-X: err %d!\n",
-			pci_name(dev), result);
-	}
+	} else
+		pr_warn_ratelimited(DRV_NAME ": %s: error enabling MSI-X for guest %u: err %d!\n",
+				    pci_name(dev), pdev->xdev->otherend_id,
+				    result);
 	kfree(entries);
 
 	op->value = result;
