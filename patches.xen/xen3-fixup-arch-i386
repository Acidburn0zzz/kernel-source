Subject: xen3 i386 build fixes.
From: jbeulich@novell.com
Patch-mainline: obsolete

$subject says all.

Index: head-2007-01-16/arch/i386/kernel/Makefile
===================================================================
--- head-2007-01-16.orig/arch/i386/kernel/Makefile	2007-01-17 12:26:24.000000000 +0100
+++ head-2007-01-16/arch/i386/kernel/Makefile	2007-01-17 12:27:07.000000000 +0100
@@ -58,7 +58,7 @@ endif
 # Note: kbuild does not track this dependency due to usage of .incbin
 $(obj)/vsyscall.o: $(obj)/vsyscall-int80.so $(obj)/vsyscall-sysenter.so
 targets += $(foreach F,int80 sysenter,vsyscall-$F.o vsyscall-$F.so)
-targets += vsyscall-note.o vsyscall.lds
+targets += $(vsyscall_note) vsyscall.lds
 
 # The DSO images are built using a special linker script.
 quiet_cmd_syscall = SYSCALL $@
Index: head-2007-01-16/arch/i386/kernel/crash.c
===================================================================
--- head-2007-01-16.orig/arch/i386/kernel/crash.c	2007-01-17 12:26:24.000000000 +0100
+++ head-2007-01-16/arch/i386/kernel/crash.c	2007-01-17 12:27:07.000000000 +0100
@@ -27,11 +27,10 @@
 
 #include <mach_ipi.h>
 
-
+#ifndef CONFIG_XEN
 /* This keeps a track of which one is crashing cpu. */
 static int crashing_cpu;
 
-#ifndef CONFIG_XEN
 #if defined(CONFIG_SMP) && defined(CONFIG_X86_LOCAL_APIC)
 static atomic_t waiting_for_crash_ipi;
 
@@ -128,9 +127,9 @@ void machine_crash_shutdown(struct pt_re
 	/* The kernel is broken so disable interrupts */
 	local_irq_disable();
 
+#ifndef CONFIG_XEN
 	/* Make a note of crashing cpu. Will be used in NMI callback.*/
 	crashing_cpu = safe_smp_processor_id();
-#ifndef CONFIG_XEN
 	nmi_shootdown_cpus();
 	lapic_shutdown();
 #if defined(CONFIG_X86_IO_APIC)
Index: head-2007-01-16/arch/i386/mm/pageattr.c
===================================================================
--- head-2007-01-16.orig/arch/i386/mm/pageattr.c	2007-01-17 12:26:24.000000000 +0100
+++ head-2007-01-16/arch/i386/mm/pageattr.c	2007-01-17 12:27:07.000000000 +0100
@@ -90,7 +90,11 @@ static void set_pmd_pte(pte_t *kpte, uns
 	unsigned long flags;
 
 	set_pte_atomic(kpte, pte); 	/* change init_mm */
+#ifndef HAVE_SHARED_KERNEL_PMD
+	if (PTRS_PER_PMD > 1)
+#else
 	if (HAVE_SHARED_KERNEL_PMD)
+#endif
 		return;
 
 	spin_lock_irqsave(&pgd_lock, flags);
Index: head-2007-01-16/include/asm-i386/a.out.h
===================================================================
--- head-2007-01-16.orig/include/asm-i386/a.out.h	2007-01-17 12:26:24.000000000 +0100
+++ head-2007-01-16/include/asm-i386/a.out.h	2007-01-17 12:27:07.000000000 +0100
@@ -19,7 +19,7 @@ struct exec
 
 #ifdef __KERNEL__
 
-#define STACK_TOP	(TASK_SIZE - 3*PAGE_SIZE)
+#define STACK_TOP	TASK_SIZE
 
 #endif
 
Index: head-2007-01-16/include/asm-i386/fixmap.h
===================================================================
--- head-2007-01-16.orig/include/asm-i386/fixmap.h	2007-01-17 12:26:24.000000000 +0100
+++ head-2007-01-16/include/asm-i386/fixmap.h	2007-01-17 12:27:07.000000000 +0100
@@ -19,7 +19,7 @@
  * Leave one empty page between vmalloc'ed areas and
  * the start of the fixmap.
  */
-#ifndef CONFIG_COMPAT_VDSO
+#if !defined(CONFIG_COMPAT_VDSO) || defined(CONFIG_XEN)
 extern unsigned long __FIXADDR_TOP;
 #else
 #define __FIXADDR_TOP  0xfffff000
Index: head-2007-01-16/include/asm-i386/mach-xen/asm/page.h
===================================================================
--- head-2007-01-16.orig/include/asm-i386/mach-xen/asm/page.h	2007-01-17 12:26:24.000000000 +0100
+++ head-2007-01-16/include/asm-i386/mach-xen/asm/page.h	2007-01-17 12:27:07.000000000 +0100
@@ -31,14 +31,6 @@
 #include <xen/features.h>
 #include <xen/foreign_page.h>
 
-#define arch_free_page(_page,_order)			\
-({	int foreign = PageForeign(_page);		\
-	if (foreign)					\
-		(PageForeignDestructor(_page))(_page);	\
-	foreign;					\
-})
-#define HAVE_ARCH_FREE_PAGE
-
 #ifdef CONFIG_XEN_SCRUB_PAGES
 #define scrub_pages(_p,_n) memset((void *)(_p), 0, (_n) << PAGE_SHIFT)
 #else
Index: head-2007-01-16/include/asm-i386/pgtable-2level-defs.h
===================================================================
--- head-2007-01-16.orig/include/asm-i386/pgtable-2level-defs.h	2007-01-17 12:26:24.000000000 +0100
+++ head-2007-01-16/include/asm-i386/pgtable-2level-defs.h	2007-01-17 12:27:07.000000000 +0100
@@ -1,8 +1,6 @@
 #ifndef _I386_PGTABLE_2LEVEL_DEFS_H
 #define _I386_PGTABLE_2LEVEL_DEFS_H
 
-#define HAVE_SHARED_KERNEL_PMD 0
-
 /*
  * traditional i386 two-level paging structure:
  */
Index: head-2007-01-16/include/asm-i386/pgtable-3level-defs.h
===================================================================
--- head-2007-01-16.orig/include/asm-i386/pgtable-3level-defs.h	2007-01-17 12:26:24.000000000 +0100
+++ head-2007-01-16/include/asm-i386/pgtable-3level-defs.h	2007-01-17 12:27:07.000000000 +0100
@@ -1,8 +1,6 @@
 #ifndef _I386_PGTABLE_3LEVEL_DEFS_H
 #define _I386_PGTABLE_3LEVEL_DEFS_H
 
-#define HAVE_SHARED_KERNEL_PMD 1
-
 /*
  * PGDIR_SHIFT determines what a top-level page table entry can map
  */
