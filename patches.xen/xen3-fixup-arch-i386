Subject: xen3 i386 build fixes.
From: jbeulich@novell.com

$subject says all.

Index: head-2006-08-08/arch/i386/kernel/Makefile
===================================================================
--- head-2006-08-08.orig/arch/i386/kernel/Makefile	2006-08-09 14:19:16.000000000 +0200
+++ head-2006-08-08/arch/i386/kernel/Makefile	2006-08-09 14:19:57.000000000 +0200
@@ -56,7 +56,7 @@ endif
 # Note: kbuild does not track this dependency due to usage of .incbin
 $(obj)/vsyscall.o: $(obj)/vsyscall-int80.so $(obj)/vsyscall-sysenter.so
 targets += $(foreach F,int80 sysenter,vsyscall-$F.o vsyscall-$F.so)
-targets += vsyscall-note.o vsyscall.lds
+targets += $(vsyscall_note) vsyscall.lds
 
 # The DSO images are built using a special linker script.
 quiet_cmd_syscall = SYSCALL $@
Index: head-2006-08-08/arch/i386/mm/pageattr.c
===================================================================
--- head-2006-08-08.orig/arch/i386/mm/pageattr.c	2006-08-09 14:19:17.000000000 +0200
+++ head-2006-08-08/arch/i386/mm/pageattr.c	2006-08-03 15:50:51.000000000 +0200
@@ -84,7 +84,11 @@ static void set_pmd_pte(pte_t *kpte, uns
 	unsigned long flags;
 
 	set_pte_atomic(kpte, pte); 	/* change init_mm */
+#ifndef HAVE_SHARED_KERNEL_PMD
+	if (PTRS_PER_PMD > 1)
+#else
 	if (HAVE_SHARED_KERNEL_PMD)
+#endif
 		return;
 
 	spin_lock_irqsave(&pgd_lock, flags);
Index: head-2006-08-08/arch/i386/mm/pgtable.c
===================================================================
--- head-2006-08-08.orig/arch/i386/mm/pgtable.c	2006-08-09 14:19:17.000000000 +0200
+++ head-2006-08-08/arch/i386/mm/pgtable.c	2006-08-03 15:50:51.000000000 +0200
@@ -12,7 +12,6 @@
 #include <linux/slab.h>
 #include <linux/pagemap.h>
 #include <linux/spinlock.h>
-#include <linux/module.h>
 
 #include <asm/system.h>
 #include <asm/pgtable.h>
@@ -138,10 +137,6 @@ void set_pmd_pfn(unsigned long vaddr, un
 	__flush_tlb_one(vaddr);
 }
 
-static int nr_fixmaps = 0;
-unsigned long __FIXADDR_TOP = 0xfffff000;
-EXPORT_SYMBOL(__FIXADDR_TOP);
-
 void __set_fixmap (enum fixed_addresses idx, unsigned long phys, pgprot_t flags)
 {
 	unsigned long address = __fix_to_virt(idx);
@@ -151,13 +146,6 @@ void __set_fixmap (enum fixed_addresses 
 		return;
 	}
 	set_pte_pfn(address, phys >> PAGE_SHIFT, flags);
-	nr_fixmaps++;
-}
-
-void set_fixaddr_top(unsigned long top)
-{
-	BUG_ON(nr_fixmaps > 0);
-	__FIXADDR_TOP = top - PAGE_SIZE;
 }
 
 pte_t *pte_alloc_one_kernel(struct mm_struct *mm, unsigned long address)
Index: head-2006-08-08/include/asm-i386/a.out.h
===================================================================
--- head-2006-08-08.orig/include/asm-i386/a.out.h	2006-08-09 14:19:17.000000000 +0200
+++ head-2006-08-08/include/asm-i386/a.out.h	2006-08-03 15:50:51.000000000 +0200
@@ -19,7 +19,7 @@ struct exec
 
 #ifdef __KERNEL__
 
-#define STACK_TOP	(TASK_SIZE - 3*PAGE_SIZE)
+#define STACK_TOP	TASK_SIZE
 
 #endif
 
Index: head-2006-08-08/include/asm-i386/fixmap.h
===================================================================
--- head-2006-08-08.orig/include/asm-i386/fixmap.h	2006-08-09 14:19:17.000000000 +0200
+++ head-2006-08-08/include/asm-i386/fixmap.h	2006-08-03 15:50:51.000000000 +0200
@@ -19,7 +19,7 @@
  * Leave one empty page between vmalloc'ed areas and
  * the start of the fixmap.
  */
-extern unsigned long __FIXADDR_TOP;
+#define __FIXADDR_TOP	0xfffff000
 
 #ifndef __ASSEMBLY__
 #include <linux/kernel.h>
@@ -94,8 +94,6 @@ enum fixed_addresses {
 extern void __set_fixmap (enum fixed_addresses idx,
 					unsigned long phys, pgprot_t flags);
 
-extern void set_fixaddr_top(unsigned long top);
-
 #define set_fixmap(idx, phys) \
 		__set_fixmap(idx, phys, PAGE_KERNEL)
 /*
Index: head-2006-08-08/include/asm-i386/pgtable-2level-defs.h
===================================================================
--- head-2006-08-08.orig/include/asm-i386/pgtable-2level-defs.h	2006-08-09 14:19:17.000000000 +0200
+++ head-2006-08-08/include/asm-i386/pgtable-2level-defs.h	2006-08-03 15:50:51.000000000 +0200
@@ -1,8 +1,6 @@
 #ifndef _I386_PGTABLE_2LEVEL_DEFS_H
 #define _I386_PGTABLE_2LEVEL_DEFS_H
 
-#define HAVE_SHARED_KERNEL_PMD 0
-
 /*
  * traditional i386 two-level paging structure:
  */
Index: head-2006-08-08/include/asm-i386/pgtable-3level-defs.h
===================================================================
--- head-2006-08-08.orig/include/asm-i386/pgtable-3level-defs.h	2006-08-09 14:19:17.000000000 +0200
+++ head-2006-08-08/include/asm-i386/pgtable-3level-defs.h	2006-08-03 15:50:51.000000000 +0200
@@ -1,8 +1,6 @@
 #ifndef _I386_PGTABLE_3LEVEL_DEFS_H
 #define _I386_PGTABLE_3LEVEL_DEFS_H
 
-#define HAVE_SHARED_KERNEL_PMD 1
-
 /*
  * PGDIR_SHIFT determines what a top-level page table entry can map
  */
