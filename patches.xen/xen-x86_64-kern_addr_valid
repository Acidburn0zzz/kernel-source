From: jbeulich@novell.com
Subject: x86-64: kern_addr_valid() must not walk page tables mapping hypervisor space
References: bnc#591371
Patch-mainline: n/a

--- head-2010-04-15.orig/arch/x86/mm/init_64-xen.c	2010-04-15 11:49:32.000000000 +0200
+++ head-2010-04-15/arch/x86/mm/init_64-xen.c	2010-04-15 11:50:11.000000000 +0200
@@ -1191,6 +1191,19 @@ int kern_addr_valid(unsigned long addr)
 	if (above != 0 && above != -1UL)
 		return 0;
 
+#ifdef CONFIG_XEN
+	/*
+	 * Don't walk page tables for hypervisor addresses, but allow
+	 * the M2P table to be accessed through /proc/kcore.
+	 */
+	if (addr >= (unsigned long)machine_to_phys_mapping &&
+	    addr < (unsigned long)(machine_to_phys_mapping +
+				   (1UL << machine_to_phys_order)))
+		return 1;
+	if (addr >= HYPERVISOR_VIRT_START && addr < HYPERVISOR_VIRT_END)
+		return 0;
+#endif
+
 	pgd = pgd_offset_k(addr);
 	if (pgd_none(*pgd))
 		return 0;
