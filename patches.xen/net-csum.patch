Subject: xen3 TCP/UDP checksumming
From: http://xenbits.xensource.com/xen-unstable.hg (tip 10901)
Acked-by: jbeulich@novell.com

Index: head-2006-08-03/net/ipv4/netfilter/ip_nat_proto_tcp.c
===================================================================
--- head-2006-08-03.orig/net/ipv4/netfilter/ip_nat_proto_tcp.c	2006-06-18 03:49:35.000000000 +0200
+++ head-2006-08-03/net/ipv4/netfilter/ip_nat_proto_tcp.c	2006-08-03 10:55:09.000000000 +0200
@@ -129,7 +129,12 @@ tcp_manip_pkt(struct sk_buff **pskb,
 	if (hdrsize < sizeof(*hdr))
 		return 1;
 
-	hdr->check = ip_nat_cheat_check(~oldip, newip,
+#ifdef CONFIG_XEN
+	if ((*pskb)->proto_csum_blank)
+		hdr->check = ip_nat_cheat_check(oldip, ~newip, hdr->check);
+	else
+#endif
+		hdr->check = ip_nat_cheat_check(~oldip, newip,
 					ip_nat_cheat_check(oldport ^ 0xFFFF,
 							   newport,
 							   hdr->check));
Index: head-2006-08-03/net/ipv4/netfilter/ip_nat_proto_udp.c
===================================================================
--- head-2006-08-03.orig/net/ipv4/netfilter/ip_nat_proto_udp.c	2006-06-18 03:49:35.000000000 +0200
+++ head-2006-08-03/net/ipv4/netfilter/ip_nat_proto_udp.c	2006-08-03 10:55:09.000000000 +0200
@@ -113,11 +113,17 @@ udp_manip_pkt(struct sk_buff **pskb,
 		newport = tuple->dst.u.udp.port;
 		portptr = &hdr->dest;
 	}
-	if (hdr->check) /* 0 is a special case meaning no checksum */
-		hdr->check = ip_nat_cheat_check(~oldip, newip,
+	if (hdr->check) { /* 0 is a special case meaning no checksum */
+#ifdef CONFIG_XEN
+		if ((*pskb)->proto_csum_blank)
+			hdr->check = ip_nat_cheat_check(oldip, ~newip, hdr->check);
+		else
+#endif
+			hdr->check = ip_nat_cheat_check(~oldip, newip,
 					ip_nat_cheat_check(*portptr ^ 0xFFFF,
 							   newport,
 							   hdr->check));
+	}
 	*portptr = newport;
 	return 1;
 }
Index: head-2006-08-03/net/ipv4/xfrm4_output.c
===================================================================
--- head-2006-08-03.orig/net/ipv4/xfrm4_output.c	2006-08-03 09:29:07.000000000 +0200
+++ head-2006-08-03/net/ipv4/xfrm4_output.c	2006-08-03 10:56:21.000000000 +0200
@@ -18,6 +18,8 @@
 #include <net/xfrm.h>
 #include <net/icmp.h>
 
+extern int skb_checksum_setup(struct sk_buff *skb);
+
 static int xfrm4_tunnel_check_size(struct sk_buff *skb)
 {
 	int mtu, ret = 0;
@@ -48,6 +50,10 @@ static int xfrm4_output_one(struct sk_bu
 	struct xfrm_state *x = dst->xfrm;
 	int err;
 	
+	err = skb_checksum_setup(skb);
+	if (err)
+		goto error_nolock;
+
 	if (skb->ip_summed == CHECKSUM_HW) {
 		err = skb_checksum_help(skb, 0);
 		if (err)
