From: jbeulich@novell.com
Subject: fixup time-xen.c
Patch-mainline: obsolete

Changeset 143 removed the uses of timer_suspend/timer_resume, but not
the implementations. It also introduced an incompatible pointer
assignment.

Also replace an #if checking a CONFIG_ variable by #ifdef.

Index: head-2007-10-15/arch/i386/kernel/time-xen.c
===================================================================
--- head-2007-10-15.orig/arch/i386/kernel/time-xen.c	2007-10-22 11:08:24.000000000 +0200
+++ head-2007-10-15/arch/i386/kernel/time-xen.c	2007-10-22 11:10:29.000000000 +0200
@@ -693,53 +693,15 @@ int update_persistent_clock(struct times
 	return set_rtc_mmss(now.tv_sec);
 }
 
-static long clock_cmos_diff;
-static unsigned long sleep_start;
-
-static int timer_suspend(struct sys_device *dev, pm_message_t state)
-{
-	/*
-	 * Estimate time zone so that set_time can update the clock
-	 */
-	unsigned long ctime = read_persistent_clock();
-
-	clock_cmos_diff = -ctime;
-	clock_cmos_diff += get_seconds();
-	sleep_start = ctime;
-	return 0;
-}
-
 static int timer_resume(struct sys_device *dev)
 {
-	unsigned long flags;
-	unsigned long sec;
-	unsigned long ctime = read_persistent_clock();
-	long sleep_length = (ctime - sleep_start) * HZ;
-	struct timespec ts;
-
-	if (sleep_length < 0) {
-		printk(KERN_WARNING "CMOS clock skew detected in timer resume!\n");
-		/* The time after the resume must not be earlier than the time
-		 * before the suspend or some nasty things will happen
-		 */
-		sleep_length = 0;
-		ctime = sleep_start;
-	}
-
-	sec = ctime + clock_cmos_diff;
-	ts.tv_sec = sec;
-	ts.tv_nsec = 0;
-	do_settimeofday(&ts);
-	write_seqlock_irqsave(&xtime_lock, flags);
-	jiffies_64 += sleep_length;
-	write_sequnlock_irqrestore(&xtime_lock, flags);
-	touch_softlockup_watchdog();
+	extern void time_resume(void);
+	time_resume();
 	return 0;
 }
 
-void time_resume(void);
 static struct sysdev_class timer_sysclass = {
-	.resume = time_resume,
+	.resume = timer_resume,
 	set_kset_name("timer"),
 };
 
@@ -960,7 +922,7 @@ void local_teardown_timer(unsigned int c
 }
 #endif
 
-#if CONFIG_CPU_FREQ
+#ifdef CONFIG_CPU_FREQ
 static int time_cpufreq_notifier(struct notifier_block *nb, unsigned long val, 
 				void *data)
 {
