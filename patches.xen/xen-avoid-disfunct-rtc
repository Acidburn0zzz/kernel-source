From: garloff@suse.de
Subject: Avoid disfunctional RTC drivers in unprivileged domain

When we just get 0xff back from our CMOS reads, we can assume that
there is no RTC or that we actually can't access it.

Signed-off-by: Kurt Garloff <garloff@suse.de>

Index: head-2005-09-06/drivers/char/genrtc.c
===================================================================
--- head-2005-09-06.orig/drivers/char/genrtc.c	2005-09-06 09:29:58.691867976 +0200
+++ head-2005-09-06/drivers/char/genrtc.c	2005-09-06 09:30:05.797787712 +0200
@@ -504,6 +504,10 @@ static struct miscdevice rtc_gen_dev =
 static int __init rtc_generic_init(void)
 {
 	int retval;
+#ifdef CONFIG_XEN
+	struct rtc_time tm;
+	unsigned int flags;
+#endif
 
 	printk(KERN_INFO "Generic RTC Driver v%s\n", RTC_VERSION);
 
@@ -511,6 +515,17 @@ static int __init rtc_generic_init(void)
 	if (retval < 0)
 		return retval;
 
+#ifdef CONFIG_XEN
+	/* If we just read 0xff from the ioports,
+	 * the RTC is disfunctional */
+	flags = get_rtc_time(&tm);
+	if (tm.tm_year == 165 || tm.tm_year == 255) {
+		printk(KERN_WARNING "genrtc: Got 0xff, disable\n");
+		misc_deregister(&rtc_gen_dev);
+		return -ENODEV;
+	}
+#endif
+
 	retval = gen_rtc_proc_init();
 	if (retval) {
 		misc_deregister(&rtc_gen_dev);
Index: head-2005-09-06/drivers/char/rtc.c
===================================================================
--- head-2005-09-06.orig/drivers/char/rtc.c	2005-09-06 09:29:58.690868128 +0200
+++ head-2005-09-06/drivers/char/rtc.c	2005-09-06 09:30:05.800787256 +0200
@@ -975,6 +975,18 @@ no_irq:
 
 #endif /* __sparc__ vs. others */
 
+#ifdef CONFIG_XEN
+	/* If reads just return 0xff, the RTC is disfunctional */
+	if (CMOS_READ(RTC_YEAR) == 0xff) {
+		printk(KERN_WARNING "rtc: Got 0xff, disable\n");
+#ifdef RTC_IRQ
+		free_irq(RTC_IRQ, NULL);
+#endif
+		release_region(RTC_PORT(0), RTC_IO_EXTENT);
+		return -ENODEV;
+	}
+#endif
+
 	if (misc_register(&rtc_dev)) {
 #ifdef RTC_IRQ
 		free_irq(RTC_IRQ, NULL);
