From: jbeulich@novell.com
Subject: fix placement of some routines
Patch-mainline: obsolete

Index: head-2007-12-11/arch/x86/kernel/acpi/boot-xen.c
===================================================================
--- head-2007-12-11.orig/arch/x86/kernel/acpi/boot-xen.c	2007-12-11 11:44:50.000000000 +0100
+++ head-2007-12-11/arch/x86/kernel/acpi/boot-xen.c	2007-12-11 11:44:59.000000000 +0100
@@ -106,7 +106,7 @@ enum acpi_irq_model_id acpi_irq_model = 
 #if defined(CONFIG_X86_64) && !defined(CONFIG_XEN)
 
 /* rely on all ACPI tables being in the direct mapping */
-char *__acpi_map_table(unsigned long phys_addr, unsigned long size)
+char *__init __acpi_map_table(unsigned long phys_addr, unsigned long size)
 {
 	if (!phys_addr || !size)
 		return NULL;
@@ -131,7 +131,7 @@ char *__acpi_map_table(unsigned long phy
  * from the fixed base.  That's why we start at FIX_IO_APIC_BASE_END and
  * count idx down while incrementing the phys address.
  */
-char *__acpi_map_table(unsigned long phys, unsigned long size)
+char *__init __acpi_map_table(unsigned long phys, unsigned long size)
 {
 	unsigned long base, offset, mapped_size;
 	int idx;
Index: head-2007-12-11/arch/x86/mm/init_64-xen.c
===================================================================
--- head-2007-12-11.orig/arch/x86/mm/init_64-xen.c	2007-12-11 11:44:42.000000000 +0100
+++ head-2007-12-11/arch/x86/mm/init_64-xen.c	2007-12-11 11:44:59.000000000 +0100
@@ -701,7 +701,7 @@ static void __init find_early_table_spac
 		(table_start << PAGE_SHIFT) + tables);
 }
 
-static void xen_finish_init_mapping(void)
+static void __init xen_finish_init_mapping(void)
 {
 	unsigned long i, start, end;
 
Index: head-2007-12-11/drivers/acpi/osl.c
===================================================================
--- head-2007-12-11.orig/drivers/acpi/osl.c	2007-12-11 09:06:28.000000000 +0100
+++ head-2007-12-11/drivers/acpi/osl.c	2007-12-11 11:44:59.000000000 +0100
@@ -229,7 +229,11 @@ acpi_physical_address __init acpi_os_get
 		return acpi_find_rsdp();
 }
 
-void __iomem *acpi_os_map_memory(acpi_physical_address phys, acpi_size size)
+void __iomem *
+#ifdef CONFIG_XEN
+__init_refok
+#endif
+acpi_os_map_memory(acpi_physical_address phys, acpi_size size)
 {
 	if (phys > ULONG_MAX) {
 		printk(KERN_ERR PREFIX "Cannot map memory that high\n");
Index: head-2007-12-11/drivers/xen/core/smpboot.c
===================================================================
--- head-2007-12-11.orig/drivers/xen/core/smpboot.c	2007-12-11 11:17:36.000000000 +0100
+++ head-2007-12-11/drivers/xen/core/smpboot.c	2007-12-11 11:44:59.000000000 +0100
@@ -165,7 +165,7 @@ static void xen_smp_intr_exit(unsigned i
 }
 #endif
 
-void cpu_bringup(void)
+void __cpuinit cpu_bringup(void)
 {
 	cpu_init();
 #ifdef __i386__
@@ -178,13 +178,13 @@ void cpu_bringup(void)
 	local_irq_enable();
 }
 
-static void cpu_bringup_and_idle(void)
+static void __cpuinit cpu_bringup_and_idle(void)
 {
 	cpu_bringup();
 	cpu_idle();
 }
 
-static void cpu_initialize_context(unsigned int cpu)
+static void __cpuinit cpu_initialize_context(unsigned int cpu)
 {
 	vcpu_guest_context_t ctxt;
 	struct task_struct *idle = idle_task(cpu);
@@ -417,7 +417,7 @@ void __cpu_die(unsigned int cpu)
 
 #endif /* CONFIG_HOTPLUG_CPU */
 
-int __devinit __cpu_up(unsigned int cpu)
+int __cpuinit __cpu_up(unsigned int cpu)
 {
 	int rc;
 
