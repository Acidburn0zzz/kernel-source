Automatically created from "patches.korg/patch-3.2-rc5-rc6" by xen-port-patches.py

From: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: Linux: 3.2-rc6
Patch-mainline: 3.2-rc6

 This patch contains the differences between 3.2-rc5 and 3.2-rc6.

Acked-by: jbeulich@suse.com

--- head-2011-12-21.orig/arch/x86/kernel/e820-xen.c	2011-12-21 11:56:23.000000000 +0100
+++ head-2011-12-21/arch/x86/kernel/e820-xen.c	2011-12-21 12:00:26.000000000 +0100
@@ -158,7 +158,6 @@ static void __init e820_print_type(u32 t
 		printk(KERN_CONT "(usable)");
 		break;
 	case E820_RESERVED:
-	case E820_RESERVED_EFI:
 		printk(KERN_CONT "(reserved)");
 		break;
 	case E820_ACPI:
@@ -882,7 +881,7 @@ u64 __init early_reserve_e820(u64 startt
 /*
  * Find the highest page frame number we have available
  */
-unsigned long __init e820_end_pfn(unsigned long limit_pfn, unsigned type)
+static unsigned long __init e820_end_pfn(unsigned long limit_pfn, unsigned type)
 {
 	int i;
 	unsigned long last_pfn = 0;
--- head-2011-12-21.orig/arch/x86/kernel/setup-xen.c	2011-12-21 11:56:23.000000000 +0100
+++ head-2011-12-21/arch/x86/kernel/setup-xen.c	2011-12-21 12:00:26.000000000 +0100
@@ -763,8 +763,6 @@ early_param("reservelow", parse_reservel
 
 void __init setup_arch(char **cmdline_p)
 {
-	unsigned long end_pfn;
-
 #ifdef CONFIG_XEN
 	unsigned long p2m_pages;
 	struct physdev_set_iopl set_iopl;
@@ -1061,24 +1059,7 @@ void __init setup_arch(char **cmdline_p)
 	init_gbpages();
 
 	/* max_pfn_mapped is updated here */
-	end_pfn = max_low_pfn;
-
-#if defined(CONFIG_X86_64) && !defined(CONFIG_XEN)
-	/*
-	 * There may be regions after the last E820_RAM region that we
-	 * want to include in the kernel direct mapping, such as
-	 * EFI_RUNTIME_SERVICES_DATA.
-	 */
-	if (efi_enabled) {
-		unsigned long efi_end;
-
-		efi_end = e820_end_pfn(MAXMEM>>PAGE_SHIFT, E820_RESERVED_EFI);
-		if (efi_end > max_low_pfn)
-			end_pfn = efi_end;
-	}
-#endif
-
-	max_low_pfn_mapped = init_memory_mapping(0, end_pfn << PAGE_SHIFT);
+	max_low_pfn_mapped = init_memory_mapping(0, max_low_pfn<<PAGE_SHIFT);
 	max_pfn_mapped = max_low_pfn_mapped;
 
 #ifdef CONFIG_X86_64
