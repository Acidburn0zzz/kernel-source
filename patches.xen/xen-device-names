From: jbeulich@novell.com
Subject: create devices in /dev/xen when they are expected to be used there
Patch-mainline: n/a

Recent udev warns about disagreeing kernel and rule provided names.

This follows a respective change in pv-ops, but requires a libxc from
Xen 4.0.1+ (or a backport of c/s 21507).

--- head-2010-07-07.orig/drivers/xen/evtchn.c	2010-06-28 08:57:37.000000000 +0200
+++ head-2010-07-07/drivers/xen/evtchn.c	2010-07-08 13:53:22.000000000 +0200
@@ -481,7 +481,7 @@ static const struct file_operations evtc
 
 static struct miscdevice evtchn_miscdev = {
 	.minor        = MISC_DYNAMIC_MINOR,
-	.name         = "evtchn",
+	.name         = "xen/evtchn",
 	.fops         = &evtchn_fops,
 };
 static int __init evtchn_init(void)
@@ -494,10 +494,10 @@ static int __init evtchn_init(void)
 	spin_lock_init(&port_user_lock);
 	memset(port_user, 0, sizeof(port_user));
 
-	/* Create '/dev/misc/evtchn'. */
+	/* Create '/dev/xen/evtchn'. */
 	err = misc_register(&evtchn_miscdev);
 	if (err != 0) {
-		printk(KERN_ALERT "Could not register /dev/misc/evtchn\n");
+		printk(KERN_ALERT "Could not register /dev/xen/evtchn\n");
 		return err;
 	}
 
@@ -516,4 +516,3 @@ module_exit(evtchn_cleanup);
 
 MODULE_LICENSE("GPL");
 MODULE_ALIAS("devname:xen/evtchn");
-MODULE_ALIAS("devname:evtchn");
--- head-2010-07-07.orig/drivers/xen/blktap/blktap.c	2010-06-22 12:23:05.000000000 +0200
+++ head-2010-07-07/drivers/xen/blktap/blktap.c	2010-07-08 13:53:22.000000000 +0200
@@ -59,6 +59,7 @@
 
 #define MAX_TAP_DEV 256     /*the maximum number of tapdisk ring devices    */
 #define MAX_DEV_NAME 100    /*the max tapdisk ring device name e.g. blktap0 */
+#define TAP_DEV_NAME "xen/blktap"
 
 /*
  * The maximum number of requests that can be outstanding at any time
@@ -524,7 +525,7 @@ found:
 
 		if ((class = get_xen_class()) != NULL)
 			device_create(class, NULL, MKDEV(blktap_major, minor),
-				      NULL, "blktap%d", minor);
+				      NULL, TAP_DEV_NAME "%d", minor);
 	}
 
 out:
@@ -590,18 +591,18 @@ static int blktap_open(struct inode *ino
 	if (!idx)
 		return 0;
 	if (idx < 0 || idx >= MAX_TAP_DEV) {
-		WPRINTK("No device /dev/xen/blktap%d\n", idx);
+		WPRINTK("No device /dev/" TAP_DEV_NAME "%d\n", idx);
 		return -ENODEV;
 	}
 
 	info = tapfds[idx];
 	if (!info) {
-		WPRINTK("Unable to open device /dev/xen/blktap%d\n",
+		WPRINTK("Unable to open device /dev/" TAP_DEV_NAME "%d\n",
 			idx);
 		return -ENODEV;
 	}
 
-	DPRINTK("Opening device /dev/xen/blktap%d\n",idx);
+	DPRINTK("Opening device /dev/" TAP_DEV_NAME "%d\n",idx);
 	
 	/*Only one process can access device at a time*/
 	if (test_and_set_bit(0, &info->dev_inuse))
@@ -634,7 +635,7 @@ static int blktap_open(struct inode *ino
 			info->idx_map[i] = INVALID_REQ;
 	}
 
-	DPRINTK("Tap open: device /dev/xen/blktap%d\n",idx);
+	DPRINTK("Tap open: device /dev/" TAP_DEV_NAME "%d\n",idx);
 	return 0;
 
  fail_nomem:
@@ -677,7 +678,7 @@ static int blktap_release(struct inode *
 	}
 
 	clear_bit(0, &info->dev_inuse);
-	DPRINTK("Freeing device [/dev/xen/blktap%d]\n",info->minor);
+	DPRINTK("Freeing device [/dev/" TAP_DEV_NAME "%d]\n",info->minor);
 
 	return 0;
 }
@@ -1752,7 +1753,7 @@ static int __init blkif_init(void)
 	/* tapfds[0] is always NULL */
 	blktap_next_minor++;
 
-	DPRINTK("Created misc_dev %d:0 [/dev/xen/blktap0]\n", ret);
+	DPRINTK("Created misc_dev %d:0 [/dev/" TAP_DEV_NAME "0]\n", ret);
 
 	/* Make sure the xen class exists */
 	if ((class = get_xen_class()) != NULL) {
@@ -1764,7 +1765,7 @@ static int __init blkif_init(void)
 		 * made.
 		 */
 		device_create(class, NULL, MKDEV(blktap_major, 0), NULL,
-			      "blktap0");
+			      TAP_DEV_NAME "0");
 	} else {
 		/* this is bad, but not fatal */
 		WPRINTK("blktap: sysfs xen_class not created\n");
@@ -1778,5 +1779,4 @@ static int __init blkif_init(void)
 module_init(blkif_init);
 
 MODULE_LICENSE("Dual BSD/GPL");
-MODULE_ALIAS("devname:xen/blktap0");
-MODULE_ALIAS("devname:blktap0");
+MODULE_ALIAS("devname:" TAP_DEV_NAME "0");
--- head-2010-07-07.orig/drivers/xen/gntdev/gntdev.c	2010-06-22 12:23:05.000000000 +0200
+++ head-2010-07-07/drivers/xen/gntdev/gntdev.c	2010-07-08 13:53:22.000000000 +0200
@@ -44,8 +44,7 @@ MODULE_LICENSE("GPL");
 MODULE_AUTHOR(DRIVER_AUTHOR);
 MODULE_DESCRIPTION(DRIVER_DESC);
 
-#define GNTDEV_NAME "gntdev"
-MODULE_ALIAS("devname:xen/" GNTDEV_NAME);
+#define GNTDEV_NAME "xen/gntdev"
 MODULE_ALIAS("devname:" GNTDEV_NAME);
 
 #define MAX_GRANTS_LIMIT   1024
