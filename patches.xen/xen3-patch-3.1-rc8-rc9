Automatically created from "patch-3.1-rc8-rc9" by xen-port-patches.py

From: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: Linux: 3.1-rc9
Patch-mainline: 3.1-rc9

 This patch contains the differences between 3.1-rc8 and 3.1-rc9.

Acked-by: jbeulich@suse.com

--- head-2011-10-07.orig/drivers/hwmon/coretemp-xen.c	2011-10-07 12:29:35.000000000 +0200
+++ head-2011-10-07/drivers/hwmon/coretemp-xen.c	2011-10-07 12:45:23.000000000 +0200
@@ -98,7 +98,6 @@ struct platform_data {
 	struct device *hwmon_dev;
 	u16 phys_proc_id;
 	u8 x86_model, x86_mask;
-	u32 ucode_rev;
 	struct temp_data *core_data[MAX_CORE_DATA];
 	struct device_attribute name_attr;
 };
@@ -375,10 +374,8 @@ exit_free:
 }
 
 
-static int chk_ucode_version(struct platform_device *pdev)
+static int chk_ucode_version(unsigned int cpu, const struct cpu_info *c)
 {
-	struct platform_data *c = platform_get_drvdata(pdev);
-
 	/*
 	 * Check if we have problem with errata AE18 of Core processors:
 	 * Readings might stop update when processor visited too deep sleep,
@@ -387,14 +384,12 @@ static int chk_ucode_version(struct plat
 	if (c->x86_model == 0xe && c->x86_mask < 0xc) {
 		/* check for microcode update */
 		if (!(c->ucode_rev + 1)) {
-			dev_err(&pdev->dev,
-				"Cannot determine microcode revision of "
-				"PKG#%u!\n", pdev->id);
+			pr_err("Cannot determine microcode revision of "
+			       "CPU#%u!\n", cpu);
 			return -ENODEV;
 		} else if (c->ucode_rev < 0x39) {
-			dev_err(&pdev->dev,
-				"Errata AE18 not fixed, update BIOS or "
-				"microcode of the CPU!\n");
+			pr_err("Errata AE18 not fixed, update BIOS or "
+			       "microcode of the CPU!\n");
 			return -ENODEV;
 		}
 	}
@@ -539,11 +534,6 @@ static int coretemp_probe(struct platfor
 	struct platform_data *pdata = platform_get_drvdata(pdev);
 	int err;
 
-	/* Check the microcode version of the CPU */
-	err = chk_ucode_version(pdev);
-	if (err)
-		return err;
-
 	/* Initialize the per-package data structures */
 	err = create_name_attr(pdata, &pdev->dev);
 	if (err)
@@ -612,7 +602,6 @@ static int coretemp_device_add(unsigned 
 	pdata->phys_proc_id = c->phys_proc_id;
 	pdata->x86_model = c->x86_model;
 	pdata->x86_mask = c->x86_mask;
-	pdata->ucode_rev = c->ucode_rev;
 	platform_set_drvdata(pdev, pdata);
 
 	pdev_entry = kzalloc(sizeof(struct pdev_entry), GFP_KERNEL);
@@ -733,6 +722,10 @@ static void get_core_online(unsigned int
 		return;
 
 	if (!pdev) {
+		/* Check the microcode version of the CPU */
+		if (chk_ucode_version(cpu, &info))
+			return;
+
 		/*
 		 * Alright, we have DTS support.
 		 * We are bringing the _first_ core in this pkg
