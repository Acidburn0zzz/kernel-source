From: Suresh Siddha <suresh.b.siddha@intel.com>
To:  <jbarnes@virtuousgeek.org>,  <mingo@elte.hu>,  <tglx@linutronix.de>,  <hpa@zytor.com>,  <torvalds@linux-foundation.org>,  <akpm@linux-foundation.org>
Cc:  <arjan@linux.intel.com>,  <linux-kernel@vger.kernel.org>
Subject: [patch] ioremap sanity check to catch mapping requests exceeding the BAR sizes
References: bnc#425480

Go through the iomem resource tree to check if any of the ioremap() requests
span more than any slot in the iomem resource tree and do a WARN_ON() if we hit
this check.

This will raise a red-flag, if some driver is mapping more than what
is needed. And hopefully identify possible corruptions much earlier.

Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
Acked-by: Jiri Kosina <jkosina@suse.cz>
Automatically created from "patches.suse/e1000e_ioremap_sanity_check" by xen-port-patches.py

--- head-2009-01-06.orig/arch/x86/mm/ioremap-xen.c	2009-01-07 10:51:24.000000000 +0100
+++ head-2009-01-06/arch/x86/mm/ioremap-xen.c	2009-01-07 10:54:17.000000000 +0100
@@ -327,6 +327,12 @@ static void __iomem *__ioremap_caller(re
 		return (__force void __iomem *)isa_bus_to_virt((unsigned long)phys_addr);
 
 	/*
+	 * Check if the request spans more than any BAR in the iomem resource
+	 * tree.
+	 */
+	WARN_ON(iomem_map_sanity_check(phys_addr, size));
+
+	/*
 	 * Don't allow anybody to remap normal RAM that we're using..
 	 */
 	for (mfn = PFN_DOWN(phys_addr); mfn < PFN_UP(last_addr); mfn++) {
