From: Bernhard Walle <bwalle@suse.de>
Subject: Dynamic kernel command line - Xen
Patch-mainline: Xen isn't mainline

1. Rename saved_command_line into boot_command_line.
2. Set command_line as __initdata.

Signed-off-by: Bernhard Walle <bwalle@suse.de>
Acked-by: 

---
 arch/i386/kernel/setup-xen.c                |    6 +++---
 arch/x86_64/kernel/head64-xen.c             |   16 +++++++---------
 arch/x86_64/kernel/setup-xen.c              |    2 +-
 include/asm-x86_64/mach-xen/asm/bootsetup.h |    2 +-
 4 files changed, 12 insertions(+), 14 deletions(-)

Index: b/arch/i386/kernel/setup-xen.c
===================================================================
--- a/arch/i386/kernel/setup-xen.c
+++ b/arch/i386/kernel/setup-xen.c
@@ -765,15 +765,15 @@ static inline void copy_edd(void)
 
 static void __init parse_cmdline_early (char ** cmdline_p)
 {
-	char c = ' ', *to = command_line, *from = saved_command_line;
+	char c = ' ', *to = command_line, *from = boot_command_line;
 	int len = 0, max_cmdline;
 	int userdef = 0;
 
 	if ((max_cmdline = MAX_GUEST_CMDLINE) > COMMAND_LINE_SIZE)
 		max_cmdline = COMMAND_LINE_SIZE;
-	memcpy(saved_command_line, xen_start_info->cmd_line, max_cmdline);
+	memcpy(boot_command_line, xen_start_info->cmd_line, max_cmdline);
 	/* Save unparsed command line copy for /proc/cmdline */
-	saved_command_line[max_cmdline-1] = '\0';
+	boot_command_line[max_cmdline-1] = '\0';
 
 	for (;;) {
 		if (c != ' ')
Index: b/arch/x86_64/kernel/head64-xen.c
===================================================================
--- a/arch/x86_64/kernel/head64-xen.c
+++ b/arch/x86_64/kernel/head64-xen.c
@@ -44,8 +44,6 @@ static void __init clear_bss(void)
 #define OLD_CL_BASE_ADDR        0x90000
 #define OLD_CL_OFFSET           0x90022
 
-extern char saved_command_line[];
-
 static void __init copy_bootdata(char *real_mode_data)
 {
 #ifndef CONFIG_XEN
@@ -63,16 +61,16 @@ static void __init copy_bootdata(char *r
 		printk("old bootloader convention, maybe loadlin?\n");
 	}
 	command_line = (char *) ((u64)(new_data));
-	memcpy(saved_command_line, command_line, COMMAND_LINE_SIZE);
+	memcpy(boot_command_line, command_line, COMMAND_LINE_SIZE);
 #else
 	int max_cmdline;
 	
 	if ((max_cmdline = MAX_GUEST_CMDLINE) > COMMAND_LINE_SIZE)
 		max_cmdline = COMMAND_LINE_SIZE;
-	memcpy(saved_command_line, xen_start_info->cmd_line, max_cmdline);
-	saved_command_line[max_cmdline-1] = '\0';
+	memcpy(boot_command_line, xen_start_info->cmd_line, max_cmdline);
+	boot_command_line[max_cmdline-1] = '\0';
 #endif
-	printk("Bootdata ok (command line is %s)\n", saved_command_line);
+	printk("Bootdata ok (command line is %s)\n", boot_command_line);
 }
 
 static void __init setup_boot_cpu_data(void)
@@ -138,16 +136,16 @@ void __init x86_64_start_kernel(char * r
 #ifdef CONFIG_SMP
 	cpu_set(0, cpu_online_map);
 #endif
-	s = strstr(saved_command_line, "earlyprintk=");
+	s = strstr(boot_command_line, "earlyprintk=");
 	if (s != NULL)
 		setup_early_printk(strchr(s, '=') + 1);
 #ifdef CONFIG_NUMA
-	s = strstr(saved_command_line, "numa=");
+	s = strstr(boot_command_line, "numa=");
 	if (s != NULL)
 		numa_setup(s+5);
 #endif
 #if defined(CONFIG_X86_IO_APIC) && !defined(CONFIG_XEN)
-	if (strstr(saved_command_line, "disableapic"))
+	if (strstr(boot_command_line, "disableapic"))
 		disable_apic = 1;
 #endif
 	/* You need early console to see that */
Index: b/arch/x86_64/kernel/setup-xen.c
===================================================================
--- a/arch/x86_64/kernel/setup-xen.c
+++ b/arch/x86_64/kernel/setup-xen.c
@@ -154,7 +154,7 @@ struct e820map machine_e820;
 
 extern int root_mountflags;
 
-char command_line[COMMAND_LINE_SIZE];
+char __initdata command_line[COMMAND_LINE_SIZE];
 
 struct resource standard_io_resources[] = {
 	{ .name = "dma1", .start = 0x00, .end = 0x1f,
Index: b/include/asm-x86_64/mach-xen/asm/bootsetup.h
===================================================================
--- a/include/asm-x86_64/mach-xen/asm/bootsetup.h
+++ b/include/asm-x86_64/mach-xen/asm/bootsetup.h
@@ -33,7 +33,7 @@ extern char x86_boot_params[BOOT_PARAM_S
 #define EDD_MBR_SIG_NR (*(unsigned char *) (PARAM+EDD_MBR_SIG_NR_BUF))
 #define EDD_MBR_SIGNATURE ((unsigned int *) (PARAM+EDD_MBR_SIG_BUF))
 #define EDD_BUF     ((struct edd_info *) (PARAM+EDDBUF))
-#define COMMAND_LINE saved_command_line
+#define COMMAND_LINE boot_command_line
 
 #define RAMDISK_IMAGE_START_MASK  	0x07FF
 #define RAMDISK_PROMPT_FLAG		0x8000
