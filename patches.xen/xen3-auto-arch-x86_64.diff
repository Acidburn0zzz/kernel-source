Subject: xen3 arch-x86_64
From: jbeulich@novell.com

autogenerated from http://xenbits.xensource.com/xen-3.0-testing.hg (tip 9629)

Index: head-2006-04-21/arch/x86_64/ia32/Makefile
===================================================================
--- head-2006-04-21.orig/arch/x86_64/ia32/Makefile	2006-04-21 10:01:23.420776968 +0200
+++ head-2006-04-21/arch/x86_64/ia32/Makefile	2006-04-21 10:01:49.205857040 +0200
@@ -23,9 +23,25 @@ quiet_cmd_syscall = SYSCALL $@
 			   -Wl,-soname=linux-gate.so.1 -o $@ \
 			   -Wl,-T,$(filter-out FORCE,$^)
 
+$(obj)/vsyscall-int80.so \
 $(obj)/vsyscall-sysenter.so $(obj)/vsyscall-syscall.so: \
 $(obj)/vsyscall-%.so: $(src)/vsyscall.lds $(obj)/vsyscall-%.o FORCE
 	$(call if_changed,syscall)
 
-AFLAGS_vsyscall-sysenter.o = -m32 -Wa,-32
-AFLAGS_vsyscall-syscall.o = -m32 -Wa,-32
+AFLAGS_vsyscall-sysenter.o = -m32 -Iarch/i386/kernel -Wa,-32
+AFLAGS_vsyscall-syscall.o = -m32 -Iarch/i386/kernel -Wa,-32
+
+ifdef CONFIG_XEN
+AFLAGS_vsyscall-int80.o = -m32 -Iarch/i386/kernel
+CFLAGS_syscall32-xen.o += -DUSE_INT80
+AFLAGS_syscall32_syscall-xen.o += -DUSE_INT80
+
+$(obj)/syscall32_syscall-xen.o: \
+	$(foreach F,int80 sysenter syscall,$(obj)/vsyscall-$F.so)
+
+targets := $(foreach F,int80 sysenter syscall,vsyscall-$F.o vsyscall-$F.so)
+
+include $(srctree)/scripts/Makefile.xen
+
+obj-y := $(call cherrypickxen, $(obj-y))
+endif
Index: head-2006-04-21/arch/x86_64/ia32/vsyscall-sigreturn.S
===================================================================
--- head-2006-04-21.orig/arch/x86_64/ia32/vsyscall-sigreturn.S	2006-04-21 10:01:23.422776664 +0200
+++ head-2006-04-21/arch/x86_64/ia32/vsyscall-sigreturn.S	2006-04-21 10:01:49.207856736 +0200
@@ -120,5 +120,5 @@ __kernel_rt_sigreturn:
 	.align 4
 .LENDFDE3:
 
-#include "../../i386/kernel/vsyscall-note.S"
+#include <vsyscall-note.S>
 
Index: head-2006-04-21/arch/x86_64/kernel/acpi/Makefile
===================================================================
--- head-2006-04-21.orig/arch/x86_64/kernel/acpi/Makefile	2006-04-21 10:01:23.423776512 +0200
+++ head-2006-04-21/arch/x86_64/kernel/acpi/Makefile	2006-04-21 10:01:49.208856584 +0200
@@ -6,3 +6,4 @@ ifneq ($(CONFIG_ACPI_PROCESSOR),)
 obj-y			+= processor.o
 endif
 
+boot-$(CONFIG_XEN)		:= ../../../i386/kernel/acpi/boot-xen.o
Index: head-2006-04-21/arch/x86_64/kernel/asm-offsets.c
===================================================================
--- head-2006-04-21.orig/arch/x86_64/kernel/asm-offsets.c	2006-04-21 10:01:23.424776360 +0200
+++ head-2006-04-21/arch/x86_64/kernel/asm-offsets.c	2006-04-21 10:01:49.209856432 +0200
@@ -66,7 +66,9 @@ int main(void)
 	DEFINE(pbe_address, offsetof(struct pbe, address));
 	DEFINE(pbe_orig_address, offsetof(struct pbe, orig_address));
 	DEFINE(pbe_next, offsetof(struct pbe, next));
+#ifndef CONFIG_X86_NO_TSS
 	BLANK();
 	DEFINE(TSS_ist, offsetof(struct tss_struct, ist));
+#endif
 	return 0;
 }
Index: head-2006-04-21/arch/x86_64/kernel/init_task.c
===================================================================
--- head-2006-04-21.orig/arch/x86_64/kernel/init_task.c	2006-04-21 10:01:23.426776056 +0200
+++ head-2006-04-21/arch/x86_64/kernel/init_task.c	2006-04-21 10:01:49.210856280 +0200
@@ -37,6 +37,8 @@ union thread_union init_thread_union 
 struct task_struct init_task = INIT_TASK(init_task);
 
 EXPORT_SYMBOL(init_task);
+
+#ifndef CONFIG_X86_NO_TSS
 /*
  * per-CPU TSS segments. Threads are completely 'soft' on Linux,
  * no more per-task TSS's. The TSS size is kept cacheline-aligned
@@ -45,5 +47,6 @@ EXPORT_SYMBOL(init_task);
  * on exact cacheline boundaries, to eliminate cacheline ping-pong.
  */ 
 DEFINE_PER_CPU(struct tss_struct, init_tss) ____cacheline_internodealigned_in_smp = INIT_TSS;
+#endif
 
 #define ALIGN_TO_4K __attribute__((section(".data.init_task")))
Index: head-2006-04-21/arch/x86_64/kernel/Makefile
===================================================================
--- head-2006-04-21.orig/arch/x86_64/kernel/Makefile	2006-04-21 10:01:23.427775904 +0200
+++ head-2006-04-21/arch/x86_64/kernel/Makefile	2006-04-21 10:01:49.211856128 +0200
@@ -20,11 +20,13 @@ obj-$(CONFIG_MICROCODE)		+= microcode.o
 obj-$(CONFIG_X86_CPUID)		+= cpuid.o
 obj-$(CONFIG_SMP)		+= smp.o smpboot.o trampoline.o
 obj-$(CONFIG_X86_LOCAL_APIC)	+= apic.o  nmi.o
+obj-$(CONFIG_X86_XEN_GENAPIC)	+= genapic.o genapic_xen.o
 obj-$(CONFIG_X86_IO_APIC)	+= io_apic.o mpparse.o \
 		genapic.o genapic_cluster.o genapic_flat.o
 obj-$(CONFIG_KEXEC)		+= machine_kexec.o relocate_kernel.o crash.o
 obj-$(CONFIG_CRASH_DUMP)	+= crash_dump.o
-obj-$(CONFIG_PM)		+= suspend.o
+obj-$(CONFIG_SOFTWARE_SUSPEND)	+= suspend.o
+obj-$(CONFIG_ACPI_SLEEP)	+= suspend.o
 obj-$(CONFIG_SOFTWARE_SUSPEND)	+= suspend_asm.o
 obj-$(CONFIG_CPU_FREQ)		+= cpufreq/
 obj-$(CONFIG_EARLY_PRINTK)	+= early_printk.o
@@ -51,3 +53,17 @@ i8237-y				+= ../../i386/kernel/i8237.o
 msr-$(subst m,y,$(CONFIG_X86_MSR))  += ../../i386/kernel/msr.o
 dmi_scan-y			+= ../../i386/kernel/dmi_scan.o
 
+ifdef CONFIG_XEN
+time-y				+= ../../i386/kernel/time-xen.o
+pci-dma-y			+= ../../i386/kernel/pci-dma-xen.o
+microcode-$(subst m,y,$(CONFIG_MICROCODE))  := ../../i386/kernel/microcode-xen.o
+quirks-y			:= ../../i386/kernel/quirks-xen.o
+
+n-obj-xen := i8259.o reboot.o i8237.o smpboot.o trampoline.o
+
+include $(srctree)/scripts/Makefile.xen
+
+obj-y := $(call filterxen, $(obj-y), $(n-obj-xen))
+obj-y := $(call cherrypickxen, $(obj-y))
+extra-y := $(call cherrypickxen, $(extra-y))
+endif
Index: head-2006-04-21/arch/x86_64/Makefile
===================================================================
--- head-2006-04-21.orig/arch/x86_64/Makefile	2006-04-21 10:01:23.429775600 +0200
+++ head-2006-04-21/arch/x86_64/Makefile	2006-04-21 10:01:49.213855824 +0200
@@ -35,6 +35,10 @@ cflags-$(CONFIG_KDB) += $(call cc-option
 
 CFLAGS += $(cflags-y)
 
+cppflags-$(CONFIG_XEN) += \
+	-D__XEN_INTERFACE_VERSION__=$(CONFIG_XEN_INTERFACE_VERSION)
+CPPFLAGS += $(cppflags-y)
+
 CFLAGS += -m64
 CFLAGS += -mno-red-zone
 CFLAGS += -mcmodel=kernel
@@ -75,6 +79,21 @@ boot := arch/x86_64/boot
 .PHONY: bzImage bzlilo install archmrproper \
 	fdimage fdimage144 fdimage288 archclean
 
+ifdef CONFIG_XEN
+CPPFLAGS := -Iinclude$(if $(KBUILD_SRC),2)/asm/mach-xen $(CPPFLAGS)
+head-y := arch/x86_64/kernel/head-xen.o arch/x86_64/kernel/head64-xen.o arch/x86_64/kernel/init_task.o
+LDFLAGS_vmlinux := -e _start
+boot := arch/i386/boot-xen
+.PHONY: vmlinuz
+#Default target when executing "make"
+all: vmlinuz
+
+vmlinuz: vmlinux
+	$(Q)$(MAKE) $(build)=$(boot) $@
+
+install:
+	$(Q)$(MAKE) $(build)=$(boot) XENGUEST=$(XENGUEST) $@
+else
 #Default target when executing "make"
 all: bzImage
 
@@ -95,6 +114,7 @@ fdimage fdimage144 fdimage288: vmlinux
 
 install:
 	$(Q)$(MAKE) $(build)=$(boot) BOOTIMAGE=$(BOOTIMAGE) $@ 
+endif
 
 archclean:
 	$(Q)$(MAKE) $(clean)=$(boot)
Index: head-2006-04-21/arch/x86_64/mm/Makefile
===================================================================
--- head-2006-04-21.orig/arch/x86_64/mm/Makefile	2006-04-21 10:01:23.430775448 +0200
+++ head-2006-04-21/arch/x86_64/mm/Makefile	2006-04-21 10:01:49.214855672 +0200
@@ -9,3 +9,13 @@ obj-$(CONFIG_K8_NUMA) += k8topology.o
 obj-$(CONFIG_ACPI_NUMA) += srat.o
 
 hugetlbpage-y = ../../i386/mm/hugetlbpage.o
+
+ifdef CONFIG_XEN
+include $(srctree)/scripts/Makefile.xen
+
+ioremap-y	+= ../../i386/mm/ioremap-xen.o
+hypervisor-y	+= ../../i386/mm/hypervisor.o
+obj-y		+= hypervisor.o
+
+obj-y := $(call cherrypickxen, $(obj-y))
+endif
Index: head-2006-04-21/arch/x86_64/pci/Makefile
===================================================================
--- head-2006-04-21.orig/arch/x86_64/pci/Makefile	2006-04-21 10:01:23.431775296 +0200
+++ head-2006-04-21/arch/x86_64/pci/Makefile	2006-04-21 10:01:49.216855368 +0200
@@ -15,10 +15,22 @@ obj-$(CONFIG_PCI_MMCONFIG) += mmconfig.o
 
 obj-$(CONFIG_NUMA)	+= k8-bus.o
 
+# pcifront should be after mmconfig.o and direct.o as it should only
+# take over if direct access to the PCI bus is unavailable
+obj-$(CONFIG_XEN_PCIDEV_FRONTEND)	+= pcifront.o
+
 direct-y += ../../i386/pci/direct.o
 acpi-y   += ../../i386/pci/acpi.o
+pcifront-y += ../../i386/pci/pcifront.o
 legacy-y += ../../i386/pci/legacy.o
 irq-y    += ../../i386/pci/irq.o
 common-y += ../../i386/pci/common.o
 fixup-y  += ../../i386/pci/fixup.o
 i386-y  += ../../i386/pci/i386.o
+
+ifdef CONFIG_XEN
+irq-y		:= ../../i386/pci/irq-xen.o
+include $(srctree)/scripts/Makefile.xen
+
+obj-y := $(call cherrypickxen, $(obj-y))
+endif
Index: head-2006-04-21/include/asm-x86_64/apic.h
===================================================================
--- head-2006-04-21.orig/include/asm-x86_64/apic.h	2006-04-21 10:01:23.433774992 +0200
+++ head-2006-04-21/include/asm-x86_64/apic.h	2006-04-21 10:01:49.217855216 +0200
@@ -105,11 +105,13 @@ extern int disable_timer_pin_1;
 
 extern void setup_threshold_lvt(unsigned long lvt_off);
 
+#ifndef CONFIG_XEN
 void smp_send_timer_broadcast_ipi(void);
 void switch_APIC_timer_to_ipi(void *cpumask);
 void switch_ipi_to_APIC_timer(void *cpumask);
 
 #define ARCH_APICTIMER_STOPS_ON_C3	1
+#endif
 
 #endif /* CONFIG_X86_LOCAL_APIC */
 
