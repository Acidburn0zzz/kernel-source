Subject: xen: x86_64 arch changes
From: kraxel@suse.de

autogenerated from http://xenbits.xensource.com/linux-2.6-xen.hg

Signed-off-by: Gerd Knorr <kraxel@suse.de>
--- vanilla-2.6.14/arch/x86_64/Kconfig	2005-10-28 02:02:08.000000000 +0200
+++ xen-hg12171/arch/x86_64/Kconfig	2005-11-08 15:06:46.000000000 +0100
@@ -97,6 +97,13 @@ config GENERIC_CPU
 
 endchoice
 
+config X86_64_XEN
+	bool "Enable Xen compatible kernel"
+	select SWIOTLB if XEN_PHYSDEV_ACCESS
+	select DUMMY_IOMMU if XEN_PHYSDEV_ACCESS
+	help
+	  This option will compile a kernel compatible with Xen hypervisor
+
 #
 # Define implied options from the CPU selection here
 #
@@ -168,10 +175,17 @@ config EISA
 
 config X86_IO_APIC
 	bool
+	depends !XEN_UNPRIVILEGED_GUEST
 	default y
 
+config X86_XEN_GENAPIC
+	bool
+	depends X86_64_XEN
+	default XEN_PRIVILEGED_GUEST || SMP
+
 config X86_LOCAL_APIC
 	bool
+	depends !XEN_UNPRIVILEGED_GUEST
 	default y
 
 config MTRR
@@ -216,7 +230,7 @@ config SMP
 
 config SCHED_SMT
 	bool "SMT (Hyperthreading) scheduler support"
-	depends on SMP
+	depends on SMP && !X86_64_XEN
 	default n
 	help
 	  SMT scheduler support improves the CPU scheduler's decision making
@@ -229,7 +243,7 @@ source "kernel/Kconfig.preempt"
 config K8_NUMA
        bool "K8 NUMA support"
        select NUMA
-       depends on SMP
+       depends on SMP && !X86_64_XEN
        help
 	  Enable NUMA (Non Unified Memory Architecture) support for
 	  AMD Opteron Multiprocessor systems. The kernel will try to allocate
@@ -241,7 +255,7 @@ config K8_NUMA
 config NUMA_EMU
 	bool "NUMA emulation support"
 	select NUMA
-	depends on SMP
+	depends on SMP && !X86_64_XEN
 	help
 	  Enable NUMA emulation. A flat machine will be split
 	  into virtual nodes when booted with "numa=fake=N", where N is the
@@ -301,6 +315,7 @@ config HOTPLUG_CPU
 
 config HPET_TIMER
 	bool
+	depends on !X86_64_XEN
 	default y
 	help
 	  Use the IA-PC HPET (High Precision Event Timer) to manage
@@ -332,7 +347,7 @@ config HPET_EMULATE_RTC
 config GART_IOMMU
 	bool "IOMMU support"
 	default y
-	depends on PCI
+	depends on PCI && !X86_64_XEN
 	help
 	  Support the IOMMU. Needed to run systems with more than 3GB of memory
 	  properly with 32-bit PCI devices that do not support DAC (Double Address
@@ -359,6 +374,7 @@ config DUMMY_IOMMU
 
 config X86_MCE
 	bool "Machine check support" if EMBEDDED
+	depends on !X86_64_XEN
 	default y
 	help
 	   Include a machine check error handler to report hardware errors.
@@ -368,7 +384,7 @@ config X86_MCE
 
 config X86_MCE_INTEL
 	bool "Intel MCE features"
-	depends on X86_MCE && X86_LOCAL_APIC
+	depends on X86_MCE && X86_LOCAL_APIC && !X86_64_XEN
 	default y
 	help
 	   Additional support for intel specific MCE features such as
@@ -446,9 +462,11 @@ config GENERIC_PENDING_IRQ
 
 menu "Power management options"
 
+if !X86_64_XEN
 source kernel/power/Kconfig
 
 source "drivers/acpi/Kconfig"
+endif
 
 source "arch/x86_64/kernel/cpufreq/Kconfig"
 
@@ -479,6 +497,7 @@ config UNORDERED_IO
 	 from i386. Requires that the driver writer used memory barriers
 	 properly.
 
+if !X86_64_XEN
 source "drivers/pci/pcie/Kconfig"
 
 source "drivers/pci/Kconfig"
@@ -486,6 +505,7 @@ source "drivers/pci/Kconfig"
 source "drivers/pcmcia/Kconfig"
 
 source "drivers/pci/hotplug/Kconfig"
+endif
 
 endmenu
 
@@ -540,4 +560,6 @@ source "security/Kconfig"
 
 source "crypto/Kconfig"
 
+source "drivers/xen/Kconfig"
+
 source "lib/Kconfig"
--- vanilla-2.6.14/arch/x86_64/Makefile	2005-10-28 02:02:08.000000000 +0200
+++ xen-hg12171/arch/x86_64/Makefile	2005-11-08 15:06:46.000000000 +0100
@@ -50,22 +50,37 @@ CFLAGS += $(call cc-option,-funit-at-a-t
 # prevent gcc from generating any FP code by mistake
 CFLAGS += $(call cc-option,-mno-sse -mno-mmx -mno-sse2 -mno-3dnow,)
 
-head-y := arch/x86_64/kernel/head.o arch/x86_64/kernel/head64.o arch/x86_64/kernel/init_task.o
+ifndef CONFIG_XEN
+archdir := x86_64
+else
+archdir := x86_64/xen
+arch/x86_64/kernel/vmlinux.lds: arch/x86_64/kernel/vmlinux.lds.S
+CPPFLAGS := -D__KERNEL__ -Iinclude/asm/mach-xen $(LINUXINCLUDE)
+LDFLAGS_vmlinux := -e _start
+endif
+
+head-y := arch/$(archdir)/kernel/head.o arch/$(archdir)/kernel/head64.o arch/$(archdir)/kernel/init_task.o
 
 libs-y 					+= arch/x86_64/lib/
-core-y					+= arch/x86_64/kernel/ \
-					   arch/x86_64/mm/ \
+core-y					+= arch/$(archdir)/kernel/ \
+					   arch/$(archdir)/mm/ \
 					   arch/x86_64/crypto/
-core-$(CONFIG_IA32_EMULATION)		+= arch/x86_64/ia32/
-drivers-$(CONFIG_PCI)			+= arch/x86_64/pci/
+core-$(CONFIG_IA32_EMULATION)		+= arch/$(archdir)/ia32/
+drivers-$(CONFIG_PCI)			+= arch/$(archdir)/pci/
 drivers-$(CONFIG_OPROFILE)		+= arch/x86_64/oprofile/
 
-boot := arch/x86_64/boot
+boot := arch/$(archdir)/boot
 
 .PHONY: bzImage bzlilo install archmrproper \
 	fdimage fdimage144 fdimage288 archclean
 
 #Default target when executing "make"
+ifdef CONFIG_XEN
+all: vmlinuz
+
+vmlinuz: vmlinux
+	$(Q)$(MAKE) $(build)=$(boot) $@
+else
 all: bzImage
 
 BOOTIMAGE                     := arch/x86_64/boot/bzImage
@@ -82,6 +97,7 @@ bzdisk: vmlinux
 
 install fdimage fdimage144 fdimage288: vmlinux
 	$(Q)$(MAKE) $(build)=$(boot) BOOTIMAGE=$(BOOTIMAGE) $@
+endif
 
 archclean:
 	$(Q)$(MAKE) $(clean)=$(boot)
--- vanilla-2.6.14/arch/x86_64/ia32/Makefile	2005-10-28 02:02:08.000000000 +0200
+++ xen-hg12171/arch/x86_64/ia32/Makefile	2005-11-08 15:06:46.000000000 +0100
@@ -27,6 +27,6 @@ $(obj)/vsyscall-sysenter.so $(obj)/vsysc
 $(obj)/vsyscall-%.so: $(src)/vsyscall.lds $(obj)/vsyscall-%.o FORCE
 	$(call if_changed,syscall)
 
-AFLAGS_vsyscall-sysenter.o = -m32
-AFLAGS_vsyscall-syscall.o = -m32
+AFLAGS_vsyscall-sysenter.o = -m32 -Iarch/i386/kernel
+AFLAGS_vsyscall-syscall.o = -m32 -Iarch/i386/kernel
 CFLAGS_ia32_ioctl.o += -Ifs/
--- vanilla-2.6.14/arch/x86_64/ia32/vsyscall-sigreturn.S	2005-10-28 02:02:08.000000000 +0200
+++ xen-hg12171/arch/x86_64/ia32/vsyscall-sigreturn.S	2005-11-08 15:06:46.000000000 +0100
@@ -119,5 +119,5 @@ __kernel_rt_sigreturn:
 	.align 4
 .LENDFDE3:
 
-#include "../../i386/kernel/vsyscall-note.S"
+#include <vsyscall-note.S>
 
