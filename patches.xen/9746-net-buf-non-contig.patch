# HG changeset 9746 patch
From: kaf24@firebug.cl.cam.ac.uk
# Node ID c2ad3b08f272f8b7eeec1243268b9c422531829a
# Parent  1fa7c3a50ab030c23bdb3da205fbed0f9fda82f0
Subject: Network buffers do not need to be multi-page contiguous
for unprivileged domains (in any case, can fall back to swiotlb).
On non-privileged domain of Xen/IA64, this caused some trouble.
[Note: this patch will be removed when xen_create_contiguous_region()
       is fixed properly.]
Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>
xen-unstable changeset:   10356:4f0bc574455751ed0493f083c13911d8e01b92f0
xen-unstable date:        Thu Jun 15 13:19:04 2006 +0100

Acked-by: Jan Beulich <jbeulich@novell.com>

Index: head-2006-06-13/drivers/xen/core/skbuff.c
===================================================================
--- head-2006-06-13.orig/drivers/xen/core/skbuff.c	2006-06-13 08:35:17.000000000 +0200
+++ head-2006-06-13/drivers/xen/core/skbuff.c	2006-06-16 11:01:09.000000000 +0200
@@ -121,8 +121,13 @@ static int __init skbuff_init(void)
 	for (order = 0; order <= MAX_SKBUFF_ORDER; order++) {
 		size = PAGE_SIZE << order;
 		sprintf(name[order], "xen-skb-%lu", size);
-		skbuff_order_cachep[order] = kmem_cache_create(
-			name[order], size, size, 0, skbuff_ctor, skbuff_dtor);
+		if (xen_start_info->flags & SIF_PRIVILEGED)
+			skbuff_order_cachep[order] = kmem_cache_create(
+				name[order], size, size, 0,
+				skbuff_ctor, skbuff_dtor);
+		else
+			skbuff_order_cachep[order] = kmem_cache_create(
+				name[order], size, size, 0, NULL, NULL);
 	}
 
 	skbuff_cachep = skbuff_order_cachep[0];
