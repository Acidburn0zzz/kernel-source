Subject: Update Xen-specific files for 2.6.16-rc1-git6
From: jbeulich@novell.com

(no further updates needed for 2.6.16-rc2)

Index: head-2006-02-03/arch/i386/xen/kernel/acpi/Makefile
===================================================================
--- head-2006-02-03.orig/arch/i386/xen/kernel/acpi/Makefile	2006-02-03 09:49:10.000000000 +0100
+++ head-2006-02-03/arch/i386/xen/kernel/acpi/Makefile	2006-02-03 09:49:20.000000000 +0100
@@ -3,7 +3,7 @@ c-obj-$(CONFIG_X86_IO_APIC)	        += e
 c-obj-$(CONFIG_ACPI_SLEEP)	        += sleep.o wakeup.o
 
 ifneq ($(CONFIG_ACPI_PROCESSOR),)
-c-obj-y				+= cstate.o
+c-obj-y				+= cstate.o processor.o
 endif
 
 c-link                                  :=
Index: head-2006-02-03/arch/i386/xen/kernel/acpi/boot.c
===================================================================
--- head-2006-02-03.orig/arch/i386/xen/kernel/acpi/boot.c	2006-02-03 09:49:10.000000000 +0100
+++ head-2006-02-03/arch/i386/xen/kernel/acpi/boot.c	2006-02-03 09:49:20.000000000 +0100
@@ -471,7 +471,7 @@ int acpi_gsi_to_irq(u32 gsi, unsigned in
  * success: return IRQ number (>=0)
  * failure: return < 0
  */
-int acpi_register_gsi(u32 gsi, int edge_level, int active_high_low)
+int acpi_register_gsi(u32 gsi, int triggering, int polarity)
 {
 	unsigned int irq;
 	unsigned int plat_gsi = gsi;
@@ -483,14 +483,14 @@ int acpi_register_gsi(u32 gsi, int edge_
 	if (acpi_irq_model == ACPI_IRQ_MODEL_PIC) {
 		extern void eisa_set_level_irq(unsigned int irq);
 
-		if (edge_level == ACPI_LEVEL_SENSITIVE)
+		if (triggering == ACPI_LEVEL_SENSITIVE)
 			eisa_set_level_irq(gsi);
 	}
 #endif
 
 #ifdef CONFIG_X86_IO_APIC
 	if (acpi_irq_model == ACPI_IRQ_MODEL_IOAPIC) {
-		plat_gsi = mp_register_gsi(gsi, edge_level, active_high_low);
+		plat_gsi = mp_register_gsi(gsi, triggering, polarity);
 	}
 #endif
 	acpi_gsi_to_irq(plat_gsi, &irq);
Index: head-2006-02-03/arch/i386/xen/kernel/mpparse.c
===================================================================
--- head-2006-02-03.orig/arch/i386/xen/kernel/mpparse.c	2006-02-03 09:49:10.000000000 +0100
+++ head-2006-02-03/arch/i386/xen/kernel/mpparse.c	2006-02-03 09:49:20.000000000 +0100
@@ -1097,7 +1097,7 @@ void __init mp_config_acpi_legacy_irqs (
 
 #define MAX_GSI_NUM	4096
 
-int mp_register_gsi (u32 gsi, int edge_level, int active_high_low)
+int mp_register_gsi (u32 gsi, int triggering, int polarity)
 {
 	int			ioapic = -1;
 	int			ioapic_pin = 0;
@@ -1146,7 +1146,7 @@ int mp_register_gsi (u32 gsi, int edge_l
 
 	mp_ioapic_routing[ioapic].pin_programmed[idx] |= (1<<bit);
 
-	if (edge_level) {
+	if (triggering == ACPI_LEVEL_SENSITIVE) {
 		/*
 		 * For PCI devices assign IRQs in order, avoiding gaps
 		 * due to unused I/O APIC pins.
@@ -1168,8 +1168,8 @@ int mp_register_gsi (u32 gsi, int edge_l
 	}
 
 	io_apic_set_pci_routing(ioapic, ioapic_pin, gsi,
-		    edge_level == ACPI_EDGE_SENSITIVE ? 0 : 1,
-		    active_high_low == ACPI_ACTIVE_HIGH ? 0 : 1);
+		    triggering == ACPI_EDGE_SENSITIVE ? 0 : 1,
+		    polarity == ACPI_ACTIVE_HIGH ? 0 : 1);
 	return gsi;
 }
 
Index: head-2006-02-03/arch/i386/xen/pci/irq.c
===================================================================
--- head-2006-02-03.orig/arch/i386/xen/pci/irq.c	2006-02-03 09:49:10.000000000 +0100
+++ head-2006-02-03/arch/i386/xen/pci/irq.c	2006-02-03 09:49:20.000000000 +0100
@@ -542,6 +542,11 @@ static __init int intel_router_probe(str
 		case PCI_DEVICE_ID_INTEL_ICH7_30:
 		case PCI_DEVICE_ID_INTEL_ICH7_31:
 		case PCI_DEVICE_ID_INTEL_ESB2_0:
+		case PCI_DEVICE_ID_INTEL_ICH8_0:
+		case PCI_DEVICE_ID_INTEL_ICH8_1:
+		case PCI_DEVICE_ID_INTEL_ICH8_2:
+		case PCI_DEVICE_ID_INTEL_ICH8_3:
+		case PCI_DEVICE_ID_INTEL_ICH8_4:
 			r->name = "PIIX/ICH";
 			r->get = pirq_piix_get;
 			r->set = pirq_piix_set;
Index: head-2006-02-03/arch/x86_64/xen/ia32/ia32entry.S
===================================================================
--- head-2006-02-03.orig/arch/x86_64/xen/ia32/ia32entry.S	2006-02-03 09:49:10.000000000 +0100
+++ head-2006-02-03/arch/x86_64/xen/ia32/ia32entry.S	2006-02-03 09:49:20.000000000 +0100
@@ -703,7 +703,7 @@ ia32_sys_call_table:
 	.quad sys_mkdirat
 	.quad sys_mknodat
 	.quad sys_fchownat
-	.quad sys_futimesat
+	.quad compat_sys_futimesat
 	.quad compat_sys_newfstatat	/* 300 */
 	.quad sys_unlinkat
 	.quad sys_renameat
Index: head-2006-02-03/arch/x86_64/xen/kernel/acpi/Makefile
===================================================================
--- head-2006-02-03.orig/arch/x86_64/xen/kernel/acpi/Makefile	2006-02-03 09:49:10.000000000 +0100
+++ head-2006-02-03/arch/x86_64/xen/kernel/acpi/Makefile	2006-02-03 09:49:20.000000000 +0100
@@ -1,20 +1,15 @@
 i386-obj-y		:= boot.o
-c-obj-$(CONFIG_X86_IO_APIC)	        := earlyquirk.o
-c-obj-$(CONFIG_ACPI_SLEEP)	        += sleep.o
-s-obj-$(CONFIG_ACPI_SLEEP)	        += wakeup.o
 
-c-link                                  :=
+ifneq ($(CONFIG_ACPI_PROCESSOR),)
+c-obj-y			+= processor.o
+endif
 
 $(patsubst %.o,$(obj)/%.c,$(c-obj-y) $(c-link)):
-	@ln -fsn $(srctree)/arch/i386/kernel/acpi/$(notdir $@) $@
-
-$(patsubst %.o,$(obj)/%.S,$(s-obj-y) $(s-link)):
 	@ln -fsn $(srctree)/arch/x86_64/kernel/acpi/$(notdir $@) $@
 
 $(patsubst %.o,$(obj)/%.c,$(i386-obj-y)):
 	@ln -fsn $(srctree)/arch/i386/xen/kernel/acpi/$(notdir $@) $@
 
-obj-y	+= $(c-obj-y) $(s-obj-y) $(i386-obj-y)
+obj-y	+= $(c-obj-y) $(i386-obj-y)
 
-clean-files += $(patsubst %.o,%.c,$(c-obj-y) $(c-obj-) $(c-link))
-clean-files += $(patsubst %.o,%.S,$(s-obj-y) $(s-obj-) $(s-link))
+clean-files += $(patsubst %.o,%.c,$(c-obj-y) $(c-obj-))
Index: head-2006-02-03/arch/x86_64/xen/kernel/io_apic.c
===================================================================
--- head-2006-02-03.orig/arch/x86_64/xen/kernel/io_apic.c	2006-02-03 09:49:10.000000000 +0100
+++ head-2006-02-03/arch/x86_64/xen/kernel/io_apic.c	2006-02-03 09:49:20.000000000 +0100
@@ -2105,7 +2105,7 @@ int __init io_apic_get_redir_entries (in
 }
 
 
-int io_apic_set_pci_routing (int ioapic, int pin, int irq, int edge_level, int active_high_low)
+int io_apic_set_pci_routing (int ioapic, int pin, int irq, int triggering, int polarity)
 {
 	struct IO_APIC_route_entry entry;
 	unsigned long flags;
@@ -2127,8 +2127,8 @@ int io_apic_set_pci_routing (int ioapic,
 	entry.delivery_mode = INT_DELIVERY_MODE;
 	entry.dest_mode = INT_DEST_MODE;
 	entry.dest.logical.logical_dest = cpu_mask_to_apicid(TARGET_CPUS);
-	entry.trigger = edge_level;
-	entry.polarity = active_high_low;
+	entry.trigger = triggering;
+	entry.polarity = polarity;
 	entry.mask = 1;					 /* Disabled (masked) */
 
 	irq = gsi_irq_sharing(irq);
@@ -2143,9 +2143,9 @@ int io_apic_set_pci_routing (int ioapic,
 	apic_printk(APIC_VERBOSE,KERN_DEBUG "IOAPIC[%d]: Set PCI routing entry (%d-%d -> 0x%x -> "
 		"IRQ %d Mode:%i Active:%i)\n", ioapic, 
 	       mp_ioapics[ioapic].mpc_apicid, pin, entry.vector, irq,
-	       edge_level, active_high_low);
+	       triggering, polarity);
 
-	ioapic_register_intr(irq, entry.vector, edge_level);
+	ioapic_register_intr(irq, entry.vector, triggering);
 
 	if (!ioapic && (irq < 16))
 		disable_8259A_irq(irq);
Index: head-2006-02-03/arch/x86_64/xen/kernel/mpparse.c
===================================================================
--- head-2006-02-03.orig/arch/x86_64/xen/kernel/mpparse.c	2006-02-03 09:49:10.000000000 +0100
+++ head-2006-02-03/arch/x86_64/xen/kernel/mpparse.c	2006-02-03 09:49:20.000000000 +0100
@@ -920,7 +920,7 @@ void __init mp_config_acpi_legacy_irqs (
 
 #define MAX_GSI_NUM	4096
 
-int mp_register_gsi(u32 gsi, int edge_level, int active_high_low)
+int mp_register_gsi(u32 gsi, int triggering, int polarity)
 {
 	int			ioapic = -1;
 	int			ioapic_pin = 0;
@@ -969,7 +969,7 @@ int mp_register_gsi(u32 gsi, int edge_le
 
 	mp_ioapic_routing[ioapic].pin_programmed[idx] |= (1<<bit);
 
-	if (edge_level) {
+	if (triggering == ACPI_LEVEL_SENSITIVE) {
 		/*
 		 * For PCI devices assign IRQs in order, avoiding gaps
 		 * due to unused I/O APIC pins.
@@ -991,8 +991,8 @@ int mp_register_gsi(u32 gsi, int edge_le
 	}
 
 	io_apic_set_pci_routing(ioapic, ioapic_pin, gsi,
-		edge_level == ACPI_EDGE_SENSITIVE ? 0 : 1,
-		active_high_low == ACPI_ACTIVE_HIGH ? 0 : 1);
+		triggering == ACPI_EDGE_SENSITIVE ? 0 : 1,
+		polarity == ACPI_ACTIVE_HIGH ? 0 : 1);
 	return gsi;
 }
 
Index: head-2006-02-03/include/asm-i386/mach-xen/asm/page.h
===================================================================
--- head-2006-02-03.orig/include/asm-i386/mach-xen/asm/page.h	2006-02-03 08:30:24.000000000 +0100
+++ head-2006-02-03/include/asm-i386/mach-xen/asm/page.h	2006-02-03 09:49:20.000000000 +0100
@@ -226,10 +226,10 @@ extern int page_is_ram(unsigned long pag
 #endif /* __ASSEMBLY__ */
 
 #ifdef __ASSEMBLY__
-#define __PAGE_OFFSET		(0xC0000000)
+#define __PAGE_OFFSET		CONFIG_PAGE_OFFSET
 #define __PHYSICAL_START	CONFIG_PHYSICAL_START
 #else
-#define __PAGE_OFFSET		(0xC0000000UL)
+#define __PAGE_OFFSET		((unsigned long)CONFIG_PAGE_OFFSET)
 #define __PHYSICAL_START	((unsigned long)CONFIG_PHYSICAL_START)
 #endif
 #define __KERNEL_START		(__PAGE_OFFSET + __PHYSICAL_START)
