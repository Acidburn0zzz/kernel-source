Subject: Linux-RT 2.6.27-RT
From: http://www.kernel.org/pub/linux/kernel/projects/rt/
Acked-by: Tony Jones <tonyj@suse.de>
Subject: rt: move update_wall_time back to do timer
From: Thomas Gleixner <tglx@linutronix.de>
Date: Wed, 30 Apr 2008 15:01:10 +0200

Heavy networking or high load rt tasks can starve the timer
softirq. This can result in long loops in update_wall_time() once the
timer softirq gets hold of the CPU again. This code runs with
interrupts disabled and xtime lock write locked, so it can introduce
pretty long latencies. Move update_wall_time() back into do_timer, so
we avoid the looping and have a small but constant length irq off
section every tick.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 kernel/timer.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

Index: linux-2.6.27-RT/kernel/timer.c
===================================================================
--- linux-2.6.27-RT.orig/kernel/timer.c
+++ linux-2.6.27-RT/kernel/timer.c
@@ -1157,7 +1157,6 @@ static inline void update_times(void)
 	ticks = jiffies - last_tick;
 	if (ticks) {
 		last_tick += ticks;
-		update_wall_time();
 		calc_load(ticks);
 	}
 	write_sequnlock_irqrestore(&xtime_lock, flags);
@@ -1188,6 +1187,7 @@ void do_timer(unsigned long ticks)
 {
 	jiffies_64 += ticks;
 	trace_timer_update_time(&xtime, &wall_to_monotonic);
+	update_wall_time();
 }
 
 #ifdef __ARCH_WANT_SYS_ALARM
