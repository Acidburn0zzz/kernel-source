Subject: Linux-RT 2.6.24-rc5-rt1
From: http://www.kernel.org/pub/linux/kernel/projects/rt/
Acked-by: Sven-Thorsten Dietrich <sdietrich@suse.de>
From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] kdb/rt: don't use STACKFAULT_STACK or DEBUG_STACK in kdb
Patch-mainline: Never

 With CONFIG_PREEMPT_RT enabled, STACKFAULT_STACK and DEBUG_STACK are both
 0, which causes a compile failure. Other parts of the -rt code just
 work around this with #if val > 0, so I'll just use that here too.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 kdb/kdba_bt_x86.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/arch/x86/kdb/kdba_bt.c	2007-10-13 16:50:02.000000000 -0400
+++ b/arch/x86/kdb/kdba_bt.c	2007-10-13 18:44:56.000000000 -0400
@@ -4874,10 +4874,14 @@ kdba_get_stack_info_alternate(kdb_machre
 		unsigned int nested_size;
 		unsigned int next;
 	} *sdp, stack_data[] = {
+#if STACKFAULT_STACK > 0
 		[STACKFAULT_STACK - 1] =  { "stackfault",    EXCEPTION_STKSZ, EXCEPTION_STKSZ, EXCEPTION_STKSZ - 2*sizeof(void *) },
+#endif
 		[DOUBLEFAULT_STACK - 1] = { "doublefault",   EXCEPTION_STKSZ, EXCEPTION_STKSZ, EXCEPTION_STKSZ - 2*sizeof(void *) },
 		[NMI_STACK - 1] =         { "nmi",           EXCEPTION_STKSZ, EXCEPTION_STKSZ, EXCEPTION_STKSZ - 2*sizeof(void *) },
+#if DEBUG_STACK > 0
 		[DEBUG_STACK - 1] =       { "debug",         DEBUG_STKSZ,     EXCEPTION_STKSZ, EXCEPTION_STKSZ - 2*sizeof(void *) },
+#endif
 		[MCE_STACK - 1] =         { "machine check", EXCEPTION_STKSZ, EXCEPTION_STKSZ, EXCEPTION_STKSZ - 2*sizeof(void *) },
 		[INTERRUPT_STACK - 1] =   { "interrupt",     IRQSTACKSIZE,    IRQSTACKSIZE,    IRQSTACKSIZE    -   sizeof(void *) },
 	};
