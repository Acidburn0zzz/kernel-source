Subject: Convert megaraid sas IRQ to non-threaded IRQ
From: https://bugzilla.redhat.com/show_bug.cgi?id=250266

Acked-by: Sven-Thorsten Dietrich <sdietrich@suse.de>

--- vanilla/drivers/scsi/megaraid/megaraid_sas.c	2007-04-25 22:08:32.000000000 -0500
+++ linux-2.6.21.x86_64/drivers/scsi/megaraid/megaraid_sas.c	2007-09-19 13:59:30.000000000 -0500
@@ -51,6 +51,11 @@
 MODULE_AUTHOR("megaraidlinux@lsi.com");
 MODULE_DESCRIPTION("LSI Logic MegaRAID SAS Driver");
 
+static int megasas_intr_nodelay = 0;
+module_param_named(nodelay, megasas_intr_nodelay, int, 0);
+MODULE_PARM_DESC(nodelay,
+	"Set to 1 to change interrupt type to NODELAY (default=SHARED)");
+
 /*
  * PCI ID table for all supported controllers
  */
@@ -2408,7 +2413,20 @@
 	/*
 	 * Register IRQ
 	 */
-	if (request_irq(pdev->irq, megasas_isr, IRQF_SHARED, "megasas", instance)) {
+	/*
+	 * Use of IRQF_NODELAY in CONFIG_PREEMPT_RT is know to fix a timeout
+	 * problem that ultimately makes the driver consider the adapter dead,
+	 * setting instance->hw_crit_error.  It is safe because megasas_isr
+	 * doesn't take any locks, just using tasklet_schedule to defer the
+	 * interrupt handling to softirq time. This is indeed a big hammer
+	 * "solution", but at least systems with this hardware will work as
+	 * expected till we find the real fix.
+	 */
+	printk("megasas: requesting irq %d as %s interrupt\n",
+		pdev->irq, megasas_intr_nodelay ? "NODELAY" : "SHARED");
+	if (request_irq(pdev->irq, megasas_isr,
+			megasas_intr_nodelay ? 	IRQF_NODELAY : 	IRQF_SHARED,
+			"megasas", instance)) {
 		printk(KERN_DEBUG "megasas: Failed to register IRQ\n");
 		goto fail_irq;
 	}
