Subject: Linux-RT 2.6.24-rc2-rt1
From: http://www.kernel.org/pub/linux/kernel/projects/rt/
Acked-by: Sven-Thorsten Dietrich <sdietrich@suse.de>
 arch/x86/Kconfig.i386                |    1 +
 arch/x86/boot/compressed/Makefile_32 |    2 +-
 arch/x86/kernel/Makefile_32          |    1 +
 arch/x86/kernel/apic_32.c            |    2 ++
 arch/x86/kernel/entry_32.S           |   15 +++++++++++++++
 arch/x86/kernel/hpet.c               |    2 +-
 arch/x86/kernel/irq_32.c             |    7 ++++++-
 arch/x86/kernel/mcount-wrapper.S     |   27 +++++++++++++++++++++++++++
 arch/x86/kernel/traps_32.c           |    1 +
 arch/x86/kernel/tsc_32.c             |    2 +-
 arch/x86/mm/fault_32.c               |    1 +
 arch/x86/mm/init_32.c                |    2 +-
 include/asm-x86/irq_32.h             |    2 +-
 include/asm-x86/processor_32.h       |    2 +-
 14 files changed, 60 insertions(+), 7 deletions(-)

Index: linux-2.6.24-rc2-rt1/arch/x86/Kconfig.i386
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/Kconfig.i386
+++ linux-2.6.24-rc2-rt1/arch/x86/Kconfig.i386
@@ -808,6 +808,7 @@ config BOOT_IOREMAP
 #
 config REGPARM
 	bool
+	depends on !MCOUNT
 	default y
 
 config SECCOMP
Index: linux-2.6.24-rc2-rt1/arch/x86/boot/compressed/Makefile_32
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/boot/compressed/Makefile_32
+++ linux-2.6.24-rc2-rt1/arch/x86/boot/compressed/Makefile_32
@@ -11,7 +11,7 @@ EXTRA_AFLAGS	:= -traditional
 LDFLAGS_vmlinux := -T
 hostprogs-y	:= relocs
 
-KBUILD_CFLAGS  := -m32 -D__KERNEL__ $(LINUX_INCLUDE) -O2 \
+KBUILD_CFLAGS  := -m32 -D__KERNEL__ $(LINUX_INCLUDE) -Iinclude -O2 \
 	   -fno-strict-aliasing -fPIC \
 	   $(call cc-option,-ffreestanding) \
 	   $(call cc-option,-fno-stack-protector)
Index: linux-2.6.24-rc2-rt1/arch/x86/kernel/Makefile_32
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/kernel/Makefile_32
+++ linux-2.6.24-rc2-rt1/arch/x86/kernel/Makefile_32
@@ -22,6 +22,7 @@ obj-$(CONFIG_APM)		+= apm_32.o
 obj-$(CONFIG_X86_SMP)		+= smp_32.o smpboot_32.o tsc_sync.o
 obj-$(CONFIG_SMP)		+= smpcommon_32.o
 obj-$(CONFIG_X86_TRAMPOLINE)	+= trampoline_32.o
+obj-$(CONFIG_MCOUNT)		+= mcount-wrapper.o
 obj-$(CONFIG_X86_MPPARSE)	+= mpparse_32.o
 obj-$(CONFIG_X86_LOCAL_APIC)	+= apic_32.o nmi_32.o
 obj-$(CONFIG_X86_IO_APIC)	+= io_apic_32.o
Index: linux-2.6.24-rc2-rt1/arch/x86/kernel/apic_32.c
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/kernel/apic_32.c
+++ linux-2.6.24-rc2-rt1/arch/x86/kernel/apic_32.c
@@ -581,6 +581,8 @@ void fastcall smp_apic_timer_interrupt(s
 {
 	struct pt_regs *old_regs = set_irq_regs(regs);
 
+	trace_special(regs->eip, 1, 0);
+
 	/*
 	 * NOTE! We'd better ACK the irq immediately,
 	 * because timer handling can be slow.
Index: linux-2.6.24-rc2-rt1/arch/x86/kernel/entry_32.S
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/kernel/entry_32.S
+++ linux-2.6.24-rc2-rt1/arch/x86/kernel/entry_32.S
@@ -330,6 +330,11 @@ sysenter_past_esp:
 	pushl %eax
 	CFI_ADJUST_CFA_OFFSET 4
 	SAVE_ALL
+#ifdef CONFIG_EVENT_TRACE
+	pushl %edx; pushl %ecx; pushl %ebx; pushl %eax
+	call sys_call
+	popl %eax; popl %ebx; popl %ecx; popl %edx
+#endif
 	GET_THREAD_INFO(%ebp)
 
 	/* Note, _TIF_SECCOMP is bit number 8, and so it needs testw and not testb */
@@ -345,6 +350,11 @@ sysenter_past_esp:
 	movl TI_flags(%ebp), %ecx
 	testw $_TIF_ALLWORK_MASK, %cx
 	jne syscall_exit_work
+#ifdef CONFIG_EVENT_TRACE
+	pushl %eax
+	call sys_ret
+	popl %eax
+#endif
 /* if something modifies registers it must also disable sysexit */
 	movl PT_EIP(%esp), %edx
 	movl PT_OLDESP(%esp), %ecx
@@ -368,6 +378,11 @@ ENTRY(system_call)
 	pushl %eax			# save orig_eax
 	CFI_ADJUST_CFA_OFFSET 4
 	SAVE_ALL
+#ifdef CONFIG_EVENT_TRACE
+	pushl %edx; pushl %ecx; pushl %ebx; pushl %eax
+	call sys_call
+	popl %eax; popl %ebx; popl %ecx; popl %edx
+#endif
 	GET_THREAD_INFO(%ebp)
 					# system call tracing in operation / emulation
 	/* Note, _TIF_SECCOMP is bit number 8, and so it needs testw and not testb */
Index: linux-2.6.24-rc2-rt1/arch/x86/kernel/hpet.c
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/kernel/hpet.c
+++ linux-2.6.24-rc2-rt1/arch/x86/kernel/hpet.c
@@ -295,7 +295,7 @@ static int hpet_legacy_next_event(unsign
 /*
  * Clock source related code
  */
-static cycle_t read_hpet(void)
+static cycle_t notrace read_hpet(void)
 {
 	return (cycle_t)hpet_readl(HPET_COUNTER);
 }
Index: linux-2.6.24-rc2-rt1/arch/x86/kernel/irq_32.c
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/kernel/irq_32.c
+++ linux-2.6.24-rc2-rt1/arch/x86/kernel/irq_32.c
@@ -66,7 +66,7 @@ static union irq_ctx *softirq_ctx[NR_CPU
  * SMP cross-CPU interrupts have their own specific
  * handlers).
  */
-fastcall unsigned int do_IRQ(struct pt_regs *regs)
+fastcall notrace unsigned int do_IRQ(struct pt_regs *regs)
 {	
 	struct pt_regs *old_regs;
 	/* high bit used in ret_from_ code */
@@ -85,6 +85,11 @@ fastcall unsigned int do_IRQ(struct pt_r
 
 	old_regs = set_irq_regs(regs);
 	irq_enter();
+#ifdef CONFIG_EVENT_TRACE
+	if (irq == trace_user_trigger_irq)
+		user_trace_start();
+#endif
+	trace_special(regs->eip, irq, 0);
 #ifdef CONFIG_DEBUG_STACKOVERFLOW
 	/* Debugging check for stack overflow: is there less than 1KB free? */
 	{
Index: linux-2.6.24-rc2-rt1/arch/x86/kernel/mcount-wrapper.S
===================================================================
--- /dev/null
+++ linux-2.6.24-rc2-rt1/arch/x86/kernel/mcount-wrapper.S
@@ -0,0 +1,27 @@
+/*
+ *  linux/arch/i386/mcount-wrapper.S
+ *
+ *  Copyright (C) 2004 Ingo Molnar
+ */
+
+.globl mcount
+mcount:
+
+	cmpl $0, mcount_enabled
+	jz out
+
+	push %ebp
+	mov %esp, %ebp
+	pushl %eax
+	pushl %ecx
+	pushl %edx
+
+	call __mcount
+
+	popl %edx
+	popl %ecx
+	popl %eax
+	popl %ebp
+out:
+	ret
+
Index: linux-2.6.24-rc2-rt1/arch/x86/kernel/traps_32.c
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/kernel/traps_32.c
+++ linux-2.6.24-rc2-rt1/arch/x86/kernel/traps_32.c
@@ -237,6 +237,7 @@ show_trace_log_lvl(struct task_struct *t
 {
 	dump_trace(task, regs, stack, &print_trace_ops, log_lvl);
 	printk("%s =======================\n", log_lvl);
+	print_traces(task);
 }
 
 void show_trace(struct task_struct *task, struct pt_regs *regs,
Index: linux-2.6.24-rc2-rt1/arch/x86/kernel/tsc_32.c
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/kernel/tsc_32.c
+++ linux-2.6.24-rc2-rt1/arch/x86/kernel/tsc_32.c
@@ -269,7 +269,7 @@ core_initcall(cpufreq_tsc);
 
 static unsigned long current_tsc_khz = 0;
 
-static cycle_t read_tsc(void)
+static notrace cycle_t read_tsc(void)
 {
 	cycle_t ret;
 
Index: linux-2.6.24-rc2-rt1/arch/x86/mm/fault_32.c
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/mm/fault_32.c
+++ linux-2.6.24-rc2-rt1/arch/x86/mm/fault_32.c
@@ -498,6 +498,7 @@ bad_area_nosemaphore:
 		nr = (address - idt_descr.address) >> 3;
 
 		if (nr == 6) {
+		stop_trace();
 			do_invalid_op(regs, 0);
 			return;
 		}
Index: linux-2.6.24-rc2-rt1/arch/x86/mm/init_32.c
===================================================================
--- linux-2.6.24-rc2-rt1.orig/arch/x86/mm/init_32.c
+++ linux-2.6.24-rc2-rt1/arch/x86/mm/init_32.c
@@ -200,7 +200,7 @@ static inline int page_kills_ppro(unsign
 	return 0;
 }
 
-int page_is_ram(unsigned long pagenr)
+int notrace page_is_ram(unsigned long pagenr)
 {
 	int i;
 	unsigned long addr, end;
Index: linux-2.6.24-rc2-rt1/include/asm-x86/irq_32.h
===================================================================
--- linux-2.6.24-rc2-rt1.orig/include/asm-x86/irq_32.h
+++ linux-2.6.24-rc2-rt1/include/asm-x86/irq_32.h
@@ -41,7 +41,7 @@ extern int irqbalance_disable(char *str)
 extern void fixup_irqs(cpumask_t map);
 #endif
 
-unsigned int do_IRQ(struct pt_regs *regs);
+extern fastcall notrace unsigned int do_IRQ(struct pt_regs *regs);
 void init_IRQ(void);
 void __init native_init_IRQ(void);
 
Index: linux-2.6.24-rc2-rt1/include/asm-x86/processor_32.h
===================================================================
--- linux-2.6.24-rc2-rt1.orig/include/asm-x86/processor_32.h
+++ linux-2.6.24-rc2-rt1/include/asm-x86/processor_32.h
@@ -134,7 +134,7 @@ extern void detect_ht(struct cpuinfo_x86
 static inline void detect_ht(struct cpuinfo_x86 *c) {}
 #endif
 
-static inline void native_cpuid(unsigned int *eax, unsigned int *ebx,
+static inline void fastcall native_cpuid(unsigned int *eax, unsigned int *ebx,
 					 unsigned int *ecx, unsigned int *edx)
 {
 	/* ecx is often an input as well as an output. */
