Subject: Linux-RT 2.6.25.4-RT
From: http://www.kernel.org/pub/linux/kernel/projects/rt/
Acked-by: Sven-Thorsten Dietrich <sdietrich@suse.de>
From sagar.abhishek@gmail.com Tue May 27 11:53:35 2008
Date: Sat, 24 May 2008 23:45:02 +0530
From: Abhishek Sagar <sagar.abhishek@gmail.com>
To: rostedt@goodmis.org
Cc: Ingo Molnar <mingo@elte.hu>, LKML <linux-kernel@vger.kernel.org>
Subject: [PATCH] ftrace: safe traversal of ftrace_hash hlist

Hi Steven,

I noticed that concurrent instances of ftrace_record_ip() have a race between ftrace_hash list traversal during ftrace_ip_in_hash() (before acquiring ftrace_shutdown_lock) and ftrace_add_hash().If it's so then this should fix it.

Signed-off-by: Abhishek Sagar <sagar.abhishek@gmail.com>
---
Accommodate traversal of ftrace_hash hlist with concurrent insertions.

---
 kernel/trace/ftrace.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

Index: linux-2.6.25.4-rt4/kernel/trace/ftrace.c
===================================================================
--- linux-2.6.25.4-rt4.orig/kernel/trace/ftrace.c	2008-05-29 09:46:05.000000000 -0400
+++ linux-2.6.25.4-rt4/kernel/trace/ftrace.c	2008-05-29 09:46:05.000000000 -0400
@@ -200,7 +200,7 @@ ftrace_ip_in_hash(unsigned long ip, unsi
 	struct hlist_node *t;
 	int found = 0;
 
-	hlist_for_each_entry(p, t, &ftrace_hash[key], node) {
+	hlist_for_each_entry_rcu(p, t, &ftrace_hash[key], node) {
 		if (p->ip == ip) {
 			found = 1;
 			break;
@@ -213,7 +213,7 @@ ftrace_ip_in_hash(unsigned long ip, unsi
 static inline void
 ftrace_add_hash(struct dyn_ftrace *node, unsigned long key)
 {
-	hlist_add_head(&node->node, &ftrace_hash[key]);
+	hlist_add_head_rcu(&node->node, &ftrace_hash[key]);
 }
 
 static void ftrace_free_rec(struct dyn_ftrace *rec)
