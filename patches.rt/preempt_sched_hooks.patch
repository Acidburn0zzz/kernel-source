From kvm-devel-bounces@lists.sourceforge.net Wed Jul 11 09:55:36 2007
Return-path: <kvm-devel-bounces@lists.sourceforge.net>
Received: from AMPHION.novell.com ([130.57.1.22]) by
	lucius.provo.novell.com with ESMTP; Wed, 11 Jul 2007 09:55:36 -0600
Received: from lists-outbound.sourceforge.net
	(lists-outbound.sourceforge.net [66.35.250.225]) by AMPHION.novell.com (TMA
	SMTPRS 4.4.568.30) with ESMTP id <D0107045318@AMPHION.novell.com> for
	<ghaskins@novell.com>; Wed, 11 Jul 2007 09:55:10 -0600
Received-SPF: pass (AMPHION.novell.com: domain of
	kvm-devel-bounces@lists.sourceforge.net designates 66.35.250.225 as
	permitted sender)
	receiver=AMPHION.novell.com;client-ip=66.35.250.225;envelope-from=<kvm-devel-bounces@lists.sourceforge.net>;helo=lists-outbound.sourceforge.net;
X-IADB2: None
X-Bonded-Senders: None
X-Habeas: None
X-Cloudmark-Rating: 0 <127.0.50.0>
X-IDDB: None
X-Modus-ReverseDNS: OK
X-Modus-BlackList:
	66.35.250.225=OK;kvm-devel-bounces@lists.sourceforge.net=OK
X-Modus-RBL: 66.35.250.225=OK
X-Modus-Trusted: 66.35.250.225=NO
X-Modus-Audit: FALSE;0;0;0
Received: from sc8-sf-list2-new.sourceforge.net
	(sc8-sf-list2-new-b.sourceforge.net [10.3.1.94]) by
	sc8-sf-spam2.sourceforge.net (Postfix) with ESMTP id 728151268B; Wed, 11
	Jul 2007 08:55:33 -0700 (PDT)
Received: from sc8-sf-mx2-b.sourceforge.net ([10.3.1.92]
	helo=mail.sourceforge.net) by sc8-sf-list2-new.sourceforge.net with esmtp
	(Exim 4.43) id 1I8eXH-0001ii-Lx for kvm-devel@lists.sourceforge.net; Wed,
	11 Jul 2007 08:55:27 -0700
Received: from il.qumranet.com ([82.166.9.18]) by mail.sourceforge.net with
	esmtp (Exim 4.44) id 1I8eXK-0005IU-Np for kvm-devel@lists.sourceforge.net;
	Wed, 11 Jul 2007 08:55:31 -0700
Received: by il.qumranet.com (Postfix, from userid 500) id 5A4252508FB;
	Wed, 11 Jul 2007 18:55:33 +0300 (IDT)
From: Avi Kivity <avi@qumranet.com>
To: kvm-devel@lists.sourceforge.net
Date: Wed, 11 Jul 2007 18:55:32 +0300
X-Mailer: git-send-email 1.5.2.3
In-Reply-To: <11841693332609-git-send-email-avi@qumranet.com>
References: <11841693332609-git-send-email-avi@qumranet.com>
X-Spam-Score: 0.0 (/)
X-Spam-Report: Spam Filtering performed by sourceforge.net. See
	http://spamassassin.org/tag/ for more details. Report problems to
	http://sf.net/tracker/?func=add&group_id=1&atid=200001
Cc: linux-kernel@vger.kernel.org
Subject: [kvm-devel] [PATCH 1/2] SCHED: Generic hooks for trapping task
	preemption
X-BeenThere: kvm-devel@lists.sourceforge.net
X-Mailman-Version: 2.1.8
Precedence: list
List-Id: kernel virtual machine development
	<kvm-devel.lists.sourceforge.net>
List-Unsubscribe: <https://lists.sourceforge.net/lists/listinfo/kvm-devel>,
	<mailto:kvm-devel-request@lists.sourceforge.net?subject=unsubscribe>
List-Archive:
	<http://sourceforge.net/mailarchive/forum.php?forum_name=kvm-devel>
List-Post: <mailto:kvm-devel@lists.sourceforge.net>
List-Help: <mailto:kvm-devel-request@lists.sourceforge.net?subject=help>
List-Subscribe: <https://lists.sourceforge.net/lists/listinfo/kvm-devel>,
	<mailto:kvm-devel-request@lists.sourceforge.net?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Sender: kvm-devel-bounces@lists.sourceforge.net
Errors-To: kvm-devel-bounces@lists.sourceforge.net
Message-Id: <4694C554.WALTHAM.WAL-1.100.1696C67.1.13BD4.1@1:7.WALTHAM.WAL-1.100.0.1.0.1@16>
X-Evolution-Source: groupwise://ghaskins@wal-1.novell.com/
Content-Transfer-Encoding: 8bit

This adds a general mechanism whereby a task can request the scheduler to
notify it whenever it is preempted or scheduled back in.  This allows the
task to swap any special-purpose registers like the fpu or Intel's VT
registers.

Signed-off-by: Avi Kivity <avi@qumranet.com>
---
 include/linux/preempt.h |   27 +++++++++++++++++++++++
 include/linux/sched.h   |    4 +++
 kernel/Kconfig.preempt  |    4 +++
 kernel/sched.c          |   54 +++++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 89 insertions(+), 0 deletions(-)

Index: linux-2.6.22/include/linux/preempt.h
===================================================================
--- linux-2.6.22.orig/include/linux/preempt.h
+++ linux-2.6.22/include/linux/preempt.h
@@ -9,6 +9,7 @@
 #include <linux/thread_info.h>
 #include <linux/linkage.h>
 #include <linux/thread_info.h>
+#include <linux/list.h>
 
 #if defined(CONFIG_DEBUG_PREEMPT) || defined(CONFIG_CRITICAL_TIMING)
   extern void notrace add_preempt_count(unsigned int val);
@@ -93,4 +94,30 @@ do { \
 
 #endif
 
+#ifdef CONFIG_PREEMPT_HOOKS
+
+struct preempt_hook;
+
+struct preempt_ops {
+	void (*sched_in)(struct preempt_hook *hook, int cpu);
+	void (*sched_out)(struct preempt_hook *hook);
+};
+
+struct preempt_hook {
+	struct hlist_node link;
+	struct preempt_ops *ops;
+};
+
+void preempt_hook_register(struct preempt_hook *hook);
+void preempt_hook_unregister(struct preempt_hook *hook);
+
+static inline void preempt_hook_init(struct preempt_hook *hook,
+				     struct preempt_ops *ops)
+{
+	INIT_HLIST_NODE(&hook->link);
+	hook->ops = ops;
+}
+
+#endif
+
 #endif /* __LINUX_PREEMPT_H */
Index: linux-2.6.22/include/linux/sched.h
===================================================================
--- linux-2.6.22.orig/include/linux/sched.h
+++ linux-2.6.22/include/linux/sched.h
@@ -1070,6 +1070,10 @@ struct task_struct {
 	struct list_head run_list;
 	struct sched_entity se;
 
+#ifdef CONFIG_PREEMPT_HOOKS
+	struct hlist_head preempt_hooks;  /* list of struct preempt_hook */
+#endif
+
 	unsigned short ioprio;
 #ifdef CONFIG_BLK_DEV_IO_TRACE
 	unsigned int btrace_seq;
Index: linux-2.6.22/kernel/Kconfig.preempt
===================================================================
--- linux-2.6.22.orig/kernel/Kconfig.preempt
+++ linux-2.6.22/kernel/Kconfig.preempt
@@ -133,6 +133,11 @@ config SPINLOCK_BKL
 	  Say Y here if you are building a kernel for a desktop system.
 	  Say N if you are unsure.
 
+config PREEMPT_HOOKS
+	bool
+	depends on X86
+	default y
+
 config PREEMPT_BKL
 	bool
 	depends on PREEMPT_RT || !SPINLOCK_BKL
Index: linux-2.6.22/kernel/sched.c
===================================================================
--- linux-2.6.22.orig/kernel/sched.c
+++ linux-2.6.22/kernel/sched.c
@@ -1960,6 +1960,10 @@ static void __sched_fork(struct task_str
 	INIT_LIST_HEAD(&p->run_list);
 	p->se.on_rq = 0;
 
+#ifdef CONFIG_PREEMPT_HOOKS
+	INIT_HLIST_HEAD(&p->preempt_hooks);
+#endif
+
 	/*
 	 * We mark the process as running here, but have not actually
 	 * inserted it onto the runqueue yet. This guarantees that
@@ -2046,6 +2050,50 @@ void sched_dead(struct task_struct *p)
 	WARN_ON_ONCE(p->se.on_rq);
 }
 
+#ifdef CONFIG_PREEMPT_HOOKS
+
+void preempt_hook_register(struct preempt_hook *hook)
+{
+	hlist_add_head(&hook->link, &current->preempt_hooks);
+}
+EXPORT_SYMBOL_GPL(preempt_hook_register);
+
+void preempt_hook_unregister(struct preempt_hook *hook)
+{
+	hlist_del(&hook->link);
+}
+EXPORT_SYMBOL_GPL(preempt_hook_unregister);
+
+static void fire_sched_in_preempt_hooks(struct task_struct *tsk)
+{
+	struct preempt_hook *hook;
+	struct hlist_node *node;
+
+	hlist_for_each_entry(hook, node, &tsk->preempt_hooks, link)
+		hook->ops->sched_in(hook, raw_smp_processor_id());
+}
+
+static void fire_sched_out_preempt_hooks(struct task_struct *tsk)
+{
+	struct preempt_hook *hook;
+	struct hlist_node *node;
+
+	hlist_for_each_entry(hook, node, &tsk->preempt_hooks, link)
+		hook->ops->sched_out(hook);
+}
+
+#else
+
+static void fire_sched_in_preempt_hooks(struct task_struct *tsk)
+{
+}
+
+static void fire_sched_out_preempt_hooks(struct task_struct *tsk)
+{
+}
+
+#endif
+
 /**
  * prepare_task_switch - prepare to switch tasks
  * @rq: the runqueue preparing to switch
@@ -2060,6 +2108,7 @@ void sched_dead(struct task_struct *p)
  */
 static inline void prepare_task_switch(struct rq *rq, struct task_struct *next)
 {
+	fire_sched_out_preempt_hooks(current);
 	prepare_lock_switch(rq, next);
 	prepare_arch_switch(next);
 }
@@ -2111,6 +2160,7 @@ static inline void finish_task_switch(st
 	prev_state = prev->state;
 	_finish_arch_switch(prev);
 	finish_lock_switch(rq, prev);
+	fire_sched_in_preempt_hooks(current);
 	trace_stop_sched_switched(current);
 	/*
 	 * Delay the final freeing of the mm or task, so that we dont have
@@ -6972,6 +7022,10 @@ void __init sched_init(void)
 
 	set_load_weight(&init_task);
 
+#ifdef CONFIG_PREEMPT_HOOKS
+	INIT_HLIST_HEAD(&init_task.preempt_hooks);
+#endif
+
 #ifdef CONFIG_SMP
 	nr_cpu_ids = highest_cpu + 1;
 	open_softirq(SCHED_SOFTIRQ, run_rebalance_domains, NULL);
