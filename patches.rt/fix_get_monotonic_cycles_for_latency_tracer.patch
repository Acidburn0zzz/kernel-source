From linux-rt-users-owner@vger.kernel.org Fri Aug 24 11:04:09 2007
Return-Path: <linux-rt-users-owner@vger.kernel.org>
Received: from sx.thebigcorporation.com ([unix socket]) by
	sx.thebigcorporation.com (Cyrus v2.3.8-Fedora-RPM-2.3.8-3.fc7) with LMTPA;
	Fri, 24 Aug 2007 11:04:09 -0700
X-Sieve: CMU Sieve 2.3
Received: from vger.kernel.org (vger.kernel.org [209.132.176.167]) by
	sx.thebigcorporation.com (8.14.1/8.13.8) with ESMTP id l7OI40Dp021215 for
	<sven@thebigcorporation.com>; Fri, 24 Aug 2007 11:04:09 -0700
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand id
	S1765705AbXHXR62 (ORCPT <rfc822;sven@thebigcorporation.com>); Fri, 24 Aug
	2007 13:58:28 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id
	S1765730AbXHXR62 (ORCPT <rfc822;linux-rt-users-outgoing>); Fri, 24 Aug 2007
	13:58:28 -0400
Received: from ms-smtp-05.nyroc.rr.com ([24.24.2.59]:51675 "EHLO
	ms-smtp-05.nyroc.rr.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with
	ESMTP id S1765705AbXHXR6Z (ORCPT <rfc822;linux-rt-users@vger.kernel.org>);
	Fri, 24 Aug 2007 13:58:25 -0400
Received: from [192.168.23.10] (cpe-24-94-51-176.stny.res.rr.com
	[24.94.51.176]) by ms-smtp-05.nyroc.rr.com (8.13.6/8.13.6) with ESMTP id
	l7OHvJ8S022302; Fri, 24 Aug 2007 13:57:20 -0400 (EDT)
Subject: [PATCH RT 3/3] fix get_monotonic_cycles for latency tracer
From: Steven Rostedt <rostedt@goodmis.org>
To: Ingo Molnar <mingo@elte.hu>
Cc: LKML <linux-kernel@vger.kernel.org>, RT <linux-rt-users@vger.kernel.org>, Thomas Gleixner <tglx@linutronix.de>, john stultz <johnstul@us.ibm.com>
Content-Type: text/plain
Date:	Fri, 24 Aug 2007 13:57:16 -0400
Message-Id: <1187978236.2941.19.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.2 
X-Virus-Scanned: Symantec AntiVirus Scan Engine
Sender: linux-rt-users-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List:	linux-rt-users@vger.kernel.org
X-Evolution-Source: imap://sven@sx.thebigcorporation.com/
Content-Transfer-Encoding: 8bit

The latency tracer on SMP was given crazy results. It was found that the
get_monotonic_cycles that it uses was not returning a monotonic counter.
The cause of this was that clock->cycles_raw and clock->cycles_last can
be updated on another CPU and make the cycles_now variable out-of-date.
So the delta that was calculated from cycles_now - cycles_last was
incorrect.

This patch adds a loop to make sure that the cycles_raw and cycles_last
are consistent through out the calculation (otherwise it performs the
loop again).

With this patch the latency_tracer can produce normal results again.

Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

Index: linux-2.6-rt/kernel/time/timekeeping.c
===================================================================
--- linux-2.6-rt.orig/kernel/time/timekeeping.c	2007-08-24 11:41:04.000000000 -0400
+++ linux-2.6-rt/kernel/time/timekeeping.c	2007-08-24 11:47:01.000000000 -0400
@@ -75,15 +75,30 @@ s64 __get_nsec_offset(void)
 
 cycle_t notrace get_monotonic_cycles(void)
 {
-	cycle_t cycle_now, cycle_delta;
+	cycle_t cycle_now, cycle_delta, cycle_raw, cycle_last;
 
-	/* read clocksource: */
-	cycle_now = clocksource_read(clock);
+	do {
+		/*
+		 * cycle_raw and cycle_last can change on
+		 * another CPU and we need the delta calculation
+		 * of cycle_now and cycle_last happen atomic, as well
+		 * as the adding to cycle_raw. We don't need to grab
+		 * any locks, we just keep trying until get all the
+		 * calculations together in one state.
+		 */
+		cycle_raw = clock->cycle_raw;
+		cycle_last = clock->cycle_last;
+
+		/* read clocksource: */
+		cycle_now = clocksource_read(clock);
+
+		/* calculate the delta since the last update_wall_time: */
+		cycle_delta = (cycle_now - cycle_last) & clock->mask;
 
-	/* calculate the delta since the last update_wall_time: */
-	cycle_delta = (cycle_now - clock->cycle_last) & clock->mask;
+	} while (cycle_raw != clock->cycle_raw ||
+		 cycle_last != clock->cycle_last);
 
-	return clock->cycle_raw + cycle_delta;
+	return cycle_raw + cycle_delta;
 }
 
 unsigned long notrace cycles_to_usecs(cycle_t cycles)


-
To unsubscribe from this list: send the line "unsubscribe linux-rt-users" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
