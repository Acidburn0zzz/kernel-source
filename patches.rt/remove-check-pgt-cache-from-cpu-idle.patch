From mingo@elte.hu Mon Jul 23 22:39:06 2007
Return-Path: <mingo@elte.hu>
X-Spam-Checker-Version: SpamAssassin 3.1.7-deb (2006-10-05) on debian
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=unavailable 
	version=3.1.7-deb
Received: from mx3.mail.elte.hu (mx3.mail.elte.hu [157.181.1.138]) (using
	TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits)) (No client certificate
	requested) by mail.tglx.de (Postfix) with ESMTP id CF49165C003 for
	<tglx@linutronix.de>; Mon, 23 Jul 2007 22:39:06 +0200 (CEST)
Received: from elvis.elte.hu ([157.181.1.14]) by mx3.mail.elte.hu with
	esmtp (Exim) id 1ID4gH-0003dj-MX from <mingo@elte.hu>; Mon, 23 Jul 2007
	22:39:04 +0200
Received: by elvis.elte.hu (Postfix, from userid 1004) id 2C9303E2153; Mon,
	23 Jul 2007 22:38:55 +0200 (CEST)
Date: Mon, 23 Jul 2007 22:38:58 +0200
From: Ingo Molnar <mingo@elte.hu>
To: Daniel Walker <dwalker@mvista.com>
Cc: Rui Nuno Capela <rncbc@rncbc.org>, Thomas Gleixner <tglx@linutronix.de>, LKML <linux-kernel@vger.kernel.org>, RT-Users <linux-rt-users@vger.kernel.org>
Subject: Re: 2.6.22.1-rt4 lockups
Message-ID: <20070723203858.GA18569@elte.hu>
References: <1184325752.12353.312.camel@chaos> <46A283A1.6030005@rncbc.org>
	 <1185206905.2573.52.camel@imap.mvista.com>
	 <1185221746.2573.142.camel@imap.mvista.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1185221746.2573.142.camel@imap.mvista.com>
User-Agent: Mutt/1.5.14 (2007-02-12)
Received-SPF: softfail (mx3: transitioning domain of elte.hu does not
	designate 157.181.1.14 as permitted sender) client-ip=157.181.1.14;
	envelope-from=mingo@elte.hu; helo=elvis.elte.hu;
X-ELTE-VirusStatus: clean
X-ELTE-SpamScore: -1.0
X-ELTE-SpamLevel: 
X-ELTE-SpamCheck: no
X-ELTE-SpamVersion: ELTE 2.0 
X-ELTE-SpamCheck-Details: score=-1.0 required=5.9 tests=BAYES_00
	autolearn=no SpamAssassin version=3.1.7-deb -1.0 BAYES_00              
	BODY: Bayesian spam probability is 0 to 1% [score: 0.0000]
X-Evolution-Source: imap://tglx%40linutronix.de@localhost:8993/
Content-Transfer-Encoding: 8bit


* Daniel Walker <dwalker@mvista.com> wrote:

> It looks like sched_class->enqueue_task() is NULL and that's why the 
> system hangs ..
> 
> The reason why that happens is because check_pgt_cache() is called 
> from the idle thread, and with PREEMPT_RT check_pgt_cache() locks at 
> least one mutex .. Once the idle thread is on a wait_list, as soon as 
> it's woke by the mutex owner the system will crash in enqueue_task. 
> Since the idle thread has a NULL sched_class->enqueue_task ..
> 
> check_pgt_cache() is already getting called from the desched_thread() 
> , so I think it could just be removed from i386 cpu_idle().
> 
> Anyone have comments on the theory above?

yeah, that call definitely looks wrong in cpu_idle(). Most of the other 
check_pgd_cache() calls introduced by commit f1d1a842 look wrong too in 
an -rt context. Fix is below.

	Ingo

---
 arch/i386/kernel/process.c |    1 -
 1 file changed, 1 deletion(-)

Index: linux-2.6.22/arch/i386/kernel/process.c
===================================================================
--- linux-2.6.22.orig/arch/i386/kernel/process.c	2007-07-24 08:57:29.000000000 +0200
+++ linux-2.6.22/arch/i386/kernel/process.c	2007-07-24 08:57:44.000000000 +0200
@@ -189,7 +189,6 @@ void cpu_idle(void)
 
 			tick_nohz_stop_sched_tick();
 
-			check_pgt_cache();
 			rmb();
 			idle = pm_idle;
 
