Subject: Fix run-time stack-dump in IB driver.
From: John Blackwood <john.blackwood@ccur.com>

This resolves a run-time stack-dump observed when running IB 
under the RT Kernel.

signed-off-by: Sven-Thorsten Dietrich <sdietrich@novell.com>

---
 drivers/infiniband/core/user_mad.c |   46 ++++++++++++++++++-------------------
 1 files changed, 23 insertions(+), 23 deletions(-)

--- linux-2.6.22.orig/drivers/infiniband/core/user_mad.c
+++ linux-2.6.22/drivers/infiniband/core/user_mad.c
@@ -93,7 +93,7 @@ struct ib_umad_port {
 	struct class_device   *sm_class_dev;
 	struct semaphore       sm_sem;
 
-	struct rw_semaphore    mutex;
+	struct compat_rw_semaphore    mutex;
 	struct list_head       file_list;
 
 	struct ib_device      *ib_dev;
@@ -159,7 +159,7 @@ static int queue_packet(struct ib_umad_f
 {
 	int ret = 1;
 
-	down_read(&file->port->mutex);
+	compat_down_read(&file->port->mutex);
 
 	for (packet->mad.hdr.id = 0;
 	     packet->mad.hdr.id < IB_UMAD_MAX_AGENTS;
@@ -173,7 +173,7 @@ static int queue_packet(struct ib_umad_f
 			break;
 		}
 
-	up_read(&file->port->mutex);
+	compat_up_read(&file->port->mutex);
 
 	return ret;
 }
@@ -461,7 +461,7 @@ static ssize_t ib_umad_write(struct file
 		goto err;
 	}
 
-	down_read(&file->port->mutex);
+	compat_down_read(&file->port->mutex);
 
 	agent = __get_agent(file, packet->mad.hdr.id);
 	if (!agent) {
@@ -558,7 +558,7 @@ static ssize_t ib_umad_write(struct file
 	if (ret)
 		goto err_send;
 
-	up_read(&file->port->mutex);
+	compat_up_read(&file->port->mutex);
 	return count;
 
 err_send:
@@ -568,7 +568,7 @@ err_msg:
 err_ah:
 	ib_destroy_ah(ah);
 err_up:
-	up_read(&file->port->mutex);
+	compat_up_read(&file->port->mutex);
 err:
 	kfree(packet);
 	return ret;
@@ -597,7 +597,7 @@ static int ib_umad_reg_agent(struct ib_u
 	int agent_id;
 	int ret;
 
-	down_write(&file->port->mutex);
+	compat_down_write(&file->port->mutex);
 
 	if (!file->port->ib_dev) {
 		ret = -EPIPE;
@@ -650,7 +650,7 @@ found:
 	ret = 0;
 
 out:
-	up_write(&file->port->mutex);
+	compat_up_write(&file->port->mutex);
 	return ret;
 }
 
@@ -663,7 +663,7 @@ static int ib_umad_unreg_agent(struct ib
 	if (get_user(id, (u32 __user *) arg))
 		return -EFAULT;
 
-	down_write(&file->port->mutex);
+	compat_down_write(&file->port->mutex);
 
 	if (id < 0 || id >= IB_UMAD_MAX_AGENTS || !__get_agent(file, id)) {
 		ret = -EINVAL;
@@ -674,7 +674,7 @@ static int ib_umad_unreg_agent(struct ib
 	file->agent[id] = NULL;
 
 out:
-	up_write(&file->port->mutex);
+	compat_up_write(&file->port->mutex);
 
 	if (agent)
 		ib_unregister_mad_agent(agent);
@@ -710,7 +710,7 @@ static int ib_umad_open(struct inode *in
 	if (!port)
 		return -ENXIO;
 
-	down_write(&port->mutex);
+	compat_down_write(&port->mutex);
 
 	if (!port->ib_dev) {
 		ret = -ENXIO;
@@ -736,7 +736,7 @@ static int ib_umad_open(struct inode *in
 	list_add_tail(&file->port_list, &port->file_list);
 
 out:
-	up_write(&port->mutex);
+	compat_up_write(&port->mutex);
 	return ret;
 }
 
@@ -748,7 +748,7 @@ static int ib_umad_close(struct inode *i
 	int already_dead;
 	int i;
 
-	down_write(&file->port->mutex);
+	compat_down_write(&file->port->mutex);
 
 	already_dead = file->agents_dead;
 	file->agents_dead = 1;
@@ -761,14 +761,14 @@ static int ib_umad_close(struct inode *i
 
 	list_del(&file->port_list);
 
-	downgrade_write(&file->port->mutex);
+	compat_downgrade_write(&file->port->mutex);
 
 	if (!already_dead)
 		for (i = 0; i < IB_UMAD_MAX_AGENTS; ++i)
 			if (file->agent[i])
 				ib_unregister_mad_agent(file->agent[i]);
 
-	up_read(&file->port->mutex);
+	compat_up_read(&file->port->mutex);
 
 	kfree(file);
 	kref_put(&dev->ref, ib_umad_release_dev);
@@ -839,10 +839,10 @@ static int ib_umad_sm_close(struct inode
 	};
 	int ret = 0;
 
-	down_write(&port->mutex);
+	compat_down_write(&port->mutex);
 	if (port->ib_dev)
 		ret = ib_modify_port(port->ib_dev, port->port_num, 0, &props);
-	up_write(&port->mutex);
+	compat_up_write(&port->mutex);
 
 	up(&port->sm_sem);
 
@@ -906,7 +906,7 @@ static int ib_umad_init_port(struct ib_d
 	port->ib_dev   = device;
 	port->port_num = port_num;
 	init_MUTEX(&port->sm_sem);
-	init_rwsem(&port->mutex);
+	compat_init_rwsem(&port->mutex);
 	INIT_LIST_HEAD(&port->file_list);
 
 	port->dev = cdev_alloc();
@@ -992,7 +992,7 @@ static void ib_umad_kill_port(struct ib_
 	umad_port[port->dev_num] = NULL;
 	spin_unlock(&port_lock);
 
-	down_write(&port->mutex);
+	compat_down_write(&port->mutex);
 
 	port->ib_dev = NULL;
 
@@ -1017,17 +1017,17 @@ static void ib_umad_kill_port(struct ib_
 		file->agents_dead = 1;
 		list_del_init(&file->port_list);
 
-		downgrade_write(&port->mutex);
+		compat_downgrade_write(&port->mutex);
 
 		for (id = 0; id < IB_UMAD_MAX_AGENTS; ++id)
 			if (file->agent[id])
 				ib_unregister_mad_agent(file->agent[id]);
 
-		up_read(&port->mutex);
-		down_write(&port->mutex);
+		compat_up_read(&port->mutex);
+		compat_down_write(&port->mutex);
 	}
 
-	up_write(&port->mutex);
+	compat_up_write(&port->mutex);
 
 	clear_bit(port->dev_num, dev_map);
 }
