Subject: sysctl for runtime-control of lateral mutex stealing

From: Sven-Thorsten Dietrich <sdietrich@suse.de>

Add /proc/sys/kernel/lateral_steal, to allow switching on and off
equal-priority mutex stealing between threads.

Signed-off-by: Sven-Thorsten Dietrich <sdietrich@suse.de>
Signed-off-by: Gregory Haskins <ghaskins@novell.com>
---

 kernel/rtmutex.c        |    4 ++++
 kernel/rtmutex_common.h |    4 +++-
 kernel/sysctl.c         |   12 ++++++++++++
 3 files changed, 19 insertions(+), 1 deletions(-)

diff --git a/kernel/rtmutex.c b/kernel/rtmutex.c
index 0d3f76f..720e01c 100644
--- a/kernel/rtmutex.c
+++ b/kernel/rtmutex.c
@@ -18,6 +18,10 @@
 
 #include "rtmutex_common.h"
 
+#ifdef CONFIG_RTLOCK_LATERAL_STEAL
+int rtmutex_lateral_steal __read_mostly = 1;
+#endif
+
 /*
  * lock->owner state tracking:
  *
diff --git a/kernel/rtmutex_common.h b/kernel/rtmutex_common.h
index 4c0213a..89b800d 100644
--- a/kernel/rtmutex_common.h
+++ b/kernel/rtmutex_common.h
@@ -127,13 +127,15 @@ extern void rt_mutex_proxy_unlock(struct rt_mutex *lock,
 #define STEAL_LATERAL 1
 #define STEAL_NORMAL  0
 
+extern int rtmutex_lateral_steal;
+
 /*
  * Note that RT tasks are excluded from lateral-steals to prevent the
  * introduction of an unbounded latency
  */
 static inline int lock_is_stealable(struct task_struct *pendowner, int mode)
 {
-    if (mode == STEAL_NORMAL || rt_task(current)) {
+    if (mode == STEAL_NORMAL || rt_task(current) || !rtmutex_lateral_steal) {
 	    if (current->prio >= pendowner->prio)
 		    return 0;
     } else if (current->prio > pendowner->prio)
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index 4cf02a8..4fd3b79 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -51,6 +51,8 @@
 #include <asm/uaccess.h>
 #include <asm/processor.h>
 
+#include "rtmutex_common.h"
+
 #ifdef CONFIG_X86
 #include <asm/nmi.h>
 #include <asm/stacktrace.h>
@@ -882,6 +884,16 @@ static struct ctl_table kern_table[] = {
 		.proc_handler	= &proc_dointvec,
 	},
 #endif
+#ifdef CONFIG_RTLOCK_LATERAL_STEAL
+	{
+		.ctl_name       = CTL_UNNUMBERED,
+		.procname       = "rtmutex_lateral_steal",
+		.data           = &rtmutex_lateral_steal,
+		.maxlen         = sizeof(int),
+		.mode           = 0644,
+		.proc_handler   = &proc_dointvec,
+       },
+#endif
 #ifdef CONFIG_PROC_FS
 	{
 		.ctl_name       = CTL_UNNUMBERED,
