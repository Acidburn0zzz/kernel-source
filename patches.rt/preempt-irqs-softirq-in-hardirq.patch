---
 include/linux/interrupt.h |    1 +
 kernel/softirq.c          |   35 +++++++++++++++++++++++++++++++++++
 2 files changed, 36 insertions(+)

Index: linux-2.6.22/include/linux/interrupt.h
===================================================================
--- linux-2.6.22.orig/include/linux/interrupt.h	2007-07-24 08:57:14.000000000 +0200
+++ linux-2.6.22/include/linux/interrupt.h	2007-07-24 08:57:14.000000000 +0200
@@ -290,6 +290,7 @@ struct softirq_action
 asmlinkage void do_softirq(void);
 extern void open_softirq(int nr, void (*action)(struct softirq_action*), void *data);
 extern void softirq_init(void);
+extern void do_softirq_from_hardirq(void);
 
 #ifdef CONFIG_PREEMPT_HARDIRQS
 # define __raise_softirq_irqoff(nr) raise_softirq_irqoff(nr)
Index: linux-2.6.22/kernel/softirq.c
===================================================================
--- linux-2.6.22.orig/kernel/softirq.c	2007-07-24 08:57:14.000000000 +0200
+++ linux-2.6.22/kernel/softirq.c	2007-07-24 08:57:14.000000000 +0200
@@ -295,6 +295,8 @@ restart:
 
 asmlinkage void __do_softirq(void)
 {
+	unsigned long p_flags;
+
 #ifdef CONFIG_PREEMPT_SOFTIRQS
 	/*
 	 * 'preempt harder'. Push all softirq processing off to ksoftirqd.
@@ -310,6 +312,38 @@ asmlinkage void __do_softirq(void)
 	 */
 	__local_bh_disable((unsigned long)__builtin_return_address(0));
 	trace_softirq_enter();
+	p_flags = current->flags & PF_HARDIRQ;
+	current->flags &= ~PF_HARDIRQ;
+
+	___do_softirq();
+
+	trace_softirq_exit();
+
+	account_system_vtime(current);
+	_local_bh_enable();
+
+	current->flags |= p_flags;
+}
+
+/*
+ * Process softirqs straight from hardirq context,
+ * without having to switch to a softirq thread.
+ * This can reduce the context-switch rate.
+ *
+ * NOTE: this is unused right now.
+ */
+void do_softirq_from_hardirq(void)
+{
+	unsigned long p_flags;
+
+	if (!local_softirq_pending())
+		return;
+	/*
+	 * 'immediate' softirq execution:
+	 */
+	__local_bh_disable((unsigned long)__builtin_return_address(0));
+	p_flags = current->flags & PF_HARDIRQ;
+	current->flags &= ~PF_HARDIRQ;
 
 	___do_softirq();
 
@@ -318,6 +352,7 @@ asmlinkage void __do_softirq(void)
 	account_system_vtime(current);
 	_local_bh_enable();
 
+	current->flags |= p_flags;
 }
 
 #ifndef __ARCH_HAS_DO_SOFTIRQ
