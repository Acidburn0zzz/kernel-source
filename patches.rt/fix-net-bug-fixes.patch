Subject: Linux-RT 2.6.27-RT
From: http://www.kernel.org/pub/linux/kernel/projects/rt/
Acked-by: Tony Jones <tonyj@suse.de>
On Thu, 2008-07-31 at 15:49 +0200, John Kacur wrote:
> Signed-off-by: John Kacur <jkacur@gmail.com>
> Index: linux-2.6.26-rt1/net/core/sock.c
> ===================================================================
> --- linux-2.6.26-rt1.orig/net/core/sock.c
> +++ linux-2.6.26-rt1/net/core/sock.c
> @@ -1986,11 +1986,12 @@ static __init int net_inuse_init(void)
>  
>  core_initcall(net_inuse_init);
>  #else
> -static DEFINE_PER_CPU(struct prot_inuse, prot_inuse);
> +static DEFINE_PER_CPU_LOCKED(struct prot_inuse, prot_inuse);
>  
>  void sock_prot_inuse_add(struct net *net, struct proto *prot, int val)
>  {
> -       __get_cpu_var(prot_inuse).val[prot->inuse_idx] += val;
> +       int cpu = 0;
> +       __get_cpu_var_locked(prot_inuse, cpu).val[prot->inuse_idx] += val;
>  }
>  EXPORT_SYMBOL_GPL(sock_prot_inuse_add);
>  
> @@ -2000,7 +2001,7 @@ int sock_prot_inuse_get(struct net *net,
>         int res = 0;
>  
>         for_each_possible_cpu(cpu)
> -               res += per_cpu(prot_inuse, cpu).val[idx];
> +               res += per_cpu_var_locked(prot_inuse, cpu).val[idx];
>  
>         return res >= 0 ? res : 0;
>  }

This doesn't look good. You declare it as a PER_CPU_LOCKED, but then
never use the extra lock to synchronize data.

Given that sock_proc_inuse_get() is a racy read anyway, the 'right' fix
would be to do something like:

---
 net/core/sock.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

Index: linux-2.6.27-RT/net/core/sock.c
===================================================================
--- linux-2.6.27-RT.orig/net/core/sock.c
+++ linux-2.6.27-RT/net/core/sock.c
@@ -2064,8 +2064,9 @@ static DECLARE_BITMAP(proto_inuse_idx, P
 #ifdef CONFIG_NET_NS
 void sock_prot_inuse_add(struct net *net, struct proto *prot, int val)
 {
-	int cpu = smp_processor_id();
+	int cpu = get_cpu();
 	per_cpu_ptr(net->core.inuse, cpu)->val[prot->inuse_idx] += val;
+	put_cpu();
 }
 EXPORT_SYMBOL_GPL(sock_prot_inuse_add);
 
@@ -2111,7 +2112,9 @@ static DEFINE_PER_CPU(struct prot_inuse,
 
 void sock_prot_inuse_add(struct net *net, struct proto *prot, int val)
 {
-	__get_cpu_var(prot_inuse).val[prot->inuse_idx] += val;
+	int cpu = get_cpu();
+	per_cpu(prot_inuse, cpu).val[prot->inuse_idx] += val;
+	put_cpu();
 }
 EXPORT_SYMBOL_GPL(sock_prot_inuse_add);
 
