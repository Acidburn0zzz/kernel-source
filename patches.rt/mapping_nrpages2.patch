From: tonyj@suse.de
Subject: additional address_space::nrpages changes
Mainline: no

Additional nrpages() fixes not in patches.rt/mapping_nrpages.patch


--- linux-2.6.27-RT.orig/fs/ext4/inode.c
+++ linux-2.6.27-RT/fs/ext4/inode.c
@@ -2399,7 +2399,8 @@ static int ext4_da_writepages(struct add
 	 * a transaction for special inodes like journal inode on last iput()
 	 * because that could violate lock ordering on umount
 	 */
-	if (!mapping->nrpages || !mapping_tagged(mapping, PAGECACHE_TAG_DIRTY))
+	if (!mapping_nrpages(mapping) ||
+	    !mapping_tagged(mapping, PAGECACHE_TAG_DIRTY))
 		return 0;
 	/*
 	 * Make sure nr_to_write is >= sbi->s_mb_stream_request
--- linux-2.6.27-RT.orig/arch/sh/lib64/dbg.c
+++ linux-2.6.27-RT/arch/sh/lib64/dbg.c
@@ -425,6 +425,6 @@ void print_page(struct page *page)
 	printk("  page[%p] -> index 0x%lx,  count 0x%x,  flags 0x%lx\n",
 	       page, page->index, page_count(page), page->flags);
 	printk("       address_space = %p, pages =%ld\n", page->mapping,
-	       page->mapping->nrpages);
+	       mapping_nrpages(page->mapping));
 
 }
--- linux-2.6.27-RT.orig/fs/jbd2/commit.c
+++ linux-2.6.27-RT/fs/jbd2/commit.c
@@ -197,7 +197,7 @@ static int journal_submit_inode_data_buf
 	int ret;
 	struct writeback_control wbc = {
 		.sync_mode =  WB_SYNC_ALL,
-		.nr_to_write = mapping->nrpages * 2,
+		.nr_to_write = mapping_nrpages(mapping) * 2,
 		.range_start = 0,
 		.range_end = i_size_read(mapping->host),
 		.for_writepages = 1,
--- linux-2.6.27-RT.orig/fs/ubifs/dir.c
+++ linux-2.6.27-RT/fs/ubifs/dir.c
@@ -114,7 +114,7 @@ struct inode *ubifs_new_inode(struct ubi
 	inode->i_mode = mode;
 	inode->i_mtime = inode->i_atime = inode->i_ctime =
 			 ubifs_current_time(inode);
-	inode->i_mapping->nrpages = 0;
+	mapping_nrpages_init(inode->i_mapping);
 	/* Disable readahead */
 	inode->i_mapping->backing_dev_info = &c->bdi;
 
