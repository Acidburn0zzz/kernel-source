Subject: Linux-RT 2.6.25.4-RT
From: http://www.kernel.org/pub/linux/kernel/projects/rt/
Acked-by: Sven-Thorsten Dietrich <sdietrich@suse.de>
Subject: Linux-RT 2.6.25-rt
From: http://www.kernel.org/pub/linux/kernel/projects/rt/
Acked-by: Sven-Thorsten Dietrich <sdietrich@suse.de>
Subject: ftracer-build-fix.patch
From: Thomas Gleixner <tglx@linutronix.de>
Date: Wed, 07 May 2008 11:29:47 +0200

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 arch/x86/kernel/alternative.c |    4 ++--
 include/asm-x86/alternative.h |    2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

Index: linux-2.6-rt-test/arch/x86/kernel/alternative.c
===================================================================
--- linux-2.6-rt-test.orig/arch/x86/kernel/alternative.c	2008-05-07 11:37:37.000000000 -0400
+++ linux-2.6-rt-test/arch/x86/kernel/alternative.c	2008-05-07 11:49:36.000000000 -0400
@@ -141,7 +141,7 @@ static const unsigned char *const p6_nop
 #ifdef CONFIG_X86_64
 
 extern char __vsyscall_0;
-const unsigned char*const * find_nop_table(void)
+const unsigned char *const *find_nop_table(void)
 {
 	return boot_cpu_data.x86_vendor != X86_VENDOR_INTEL ||
 	       boot_cpu_data.x86 < 6 ? k8_nops : p6_nops;
@@ -160,7 +160,7 @@ static const struct nop {
 	{ -1, NULL }
 };
 
-static const unsigned char*const * find_nop_table(void)
+const unsigned char *const *find_nop_table(void)
 {
 	const unsigned char *const *noptable = intel_nops;
 	int i;
Index: linux-2.6-rt-test/include/asm-x86/alternative.h
===================================================================
--- linux-2.6-rt-test.orig/include/asm-x86/alternative.h	2008-05-07 11:37:37.000000000 -0400
+++ linux-2.6-rt-test/include/asm-x86/alternative.h	2008-05-07 11:49:36.000000000 -0400
@@ -72,7 +72,7 @@ static inline void alternatives_smp_modu
 static inline void alternatives_smp_switch(int smp) {}
 #endif	/* CONFIG_SMP */
 
-const unsigned char *const *find_nop_table(void);
+extern const unsigned char *const *find_nop_table(void);
 
 /*
  * Alternative instructions for different CPU types or capabilities.
