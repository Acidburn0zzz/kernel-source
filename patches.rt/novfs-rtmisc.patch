Subject: Misc NOVFS fixes for RT (debug builds)
From: Tony Jones <tonyj@suse.de>
Upstream: no

- Switch to using mapping_nrpages
- Drop spinlock on tree_lock
- Use compat_semaphore for events (should really be completion)

--- linux-2.6.26-RT.orig/fs/novfs/inode.c
+++ linux-2.6.26-RT/fs/novfs/inode.c
@@ -1622,12 +1622,12 @@ int novfs_f_flush(struct file *file, fl_
 			}
 
 			if (inode &&
-			    inode->i_mapping && inode->i_mapping->nrpages) {
+			    inode->i_mapping && mapping_nrpages(inode->i_mapping)) {
 
 				DbgPrint("novfs_f_flush: %.*s pages=%lu\n",
 					 file->f_dentry->d_name.len,
 					 file->f_dentry->d_name.name,
-					 inode->i_mapping->nrpages);
+					 mapping_nrpages(inode->i_mapping));
 
 				if (file->f_dentry &&
 				    file->f_dentry->d_inode &&
@@ -1678,12 +1678,12 @@ int novfs_f_release(struct inode *inode,
 			     file->f_dentry->d_name.name, file->f_flags,
 			     file->f_mode, inode->i_mode);
 
-			if (inode->i_mapping && inode->i_mapping->nrpages) {
+			if (inode->i_mapping && mapping_nrpages(inode->i_mapping)) {
 
 				DbgPrint("novfs_f_release: %.*s pages=%lu\n",
 					 file->f_dentry->d_name.len,
 					 file->f_dentry->d_name.name,
-					 inode->i_mapping->nrpages);
+					 mapping_nrpages(inode->i_mapping));
 
 				if (inode->i_mapping->a_ops &&
 				    inode->i_mapping->a_ops->writepage) {
@@ -2011,10 +2011,13 @@ int novfs_a_writepages(struct address_sp
 			DbgPrint("novfs_a_writepages1: nr_pages=%d\n",
 				 nr_pages);
 			if (!nr_pages) {
+				DEFINE_RADIX_TREE_CONTEXT(ctx,
+					&mapping->page_tree);
+
 				memset(pages, 0,
 				       sizeof(struct page *) * max_page_lookup);
 
-				spin_lock_irq(&mapping->tree_lock);
+				radix_tree_lock(&ctx);
 
 				/*
 				 * Need to ask for one less then max_page_lookup or we
@@ -2022,8 +2025,7 @@ int novfs_a_writepages(struct address_sp
 				 * the first entry for the reply buffer.
 				 */
 				nr_pages =
-				    radix_tree_gang_lookup_tag(&mapping->
-							       page_tree,
+				    radix_tree_gang_lookup_tag(ctx.tree,
 							       (void **)pages,
 							       index,
 							       max_page_lookup -
@@ -2048,7 +2050,7 @@ int novfs_a_writepages(struct address_sp
 					page_cache_get(pages[i]);
 				}
 
-				spin_unlock_irq(&mapping->tree_lock);
+				radix_tree_unlock(&ctx);
 
 				if (nr_pages) {
 					index = pages[nr_pages - 1]->index + 1;
--- linux-2.6.26-RT.orig/fs/novfs/daemon.c
+++ linux-2.6.26-RT/fs/novfs/daemon.c
@@ -46,7 +46,7 @@
 struct daemon_queue {
 	struct list_head list;	/* Must be first entry */
 	spinlock_t lock;	/* Used to control access to list */
-	struct semaphore semaphore;	/* Used to signal when data is available */
+	struct compat_semaphore semaphore;	/* Used to signal when data is available */
 };
 
 struct daemon_cmd {
@@ -54,7 +54,7 @@ struct daemon_cmd {
 	atomic_t reference;
 	unsigned int status;
 	unsigned int flags;
-	struct semaphore semaphore;
+	struct compat_semaphore semaphore;
 	unsigned long sequence;
 	struct timer_list timer;
 	void *request;
--- linux-2.6.26-RT.orig/fs/novfs/scope.c
+++ linux-2.6.26-RT/fs/novfs/scope.c
@@ -36,7 +36,7 @@
 
 static struct list_head Scope_List;
 static struct semaphore Scope_Lock;
-static struct semaphore Scope_Thread_Delay;
+static struct compat_semaphore Scope_Thread_Delay;
 static int Scope_Thread_Terminate = 0;
 static struct timer_list Scope_Timer;
 static unsigned int Scope_Hash_Val = 1;
