# Makefile.suse
#
# Use for test compiling external kernel modules.
#

KERNEL_SOURCE	:= /usr/src/linux
KERNEL_OBJ	:= /usr/src/linux-obj

# Do not print "Entering directory ..."
MAKEFLAGS += --no-print-directory

# If V=1 is specified, be verbose.
ifeq ($(V),)
Q := @
endif

ifneq ($(CONFIG_FILE),)
##############################################################################
#
# Rules per configuration
#
OUT_FIND_IGNORE := \( -name '*.[oas]' -o -name '*.ko' -o -name '.*.cmd' \
		      -o -name '.*.d' -o -name '.*.tmp' -o -name '*.mod.c' \
		      -o -name .tmp_versions -o -name .build \) -prune -o

ARCH := $(word 1,$(subst /, ,$(CONFIG_FILE)))
FLAVOR := $(word 2,$(subst /, ,$(CONFIG_FILE)))

ifeq ($(FLAVOR),um)
SUBARCH := $(ARCH)
ARCH := um
endif
ifeq ($(ARCH),ppc64)
ARCH := powerpc
endif

MAKE_ARGS := ARCH=$(ARCH) $(if $(SUBARCH),SUBARCH:=$(SUBARCH))

.PHONY: modules update modules_add
modules :: update
modules modules_add ::
	$(Q)$(MAKE) -C $(KERNEL_SOURCE) O=$(KERNEL_OBJ)/$(CONFIG_FILE) \
		M=$(CURDIR)/.build/$(CONFIG_FILE) $@ $(MAKE_ARGS)
	@echo

update:
	@echo "[$(FLAVOR) ($(ARCH))]"
	$(Q)mkdir -p .build/$(CONFIG_FILE)
	$(Q)cp -ud --preserve=mode $(if $(V),-v) --parents \
		$(shell find . $(OUT_FIND_IGNORE) -not -type d \
		-print) .build/$(CONFIG_FILE)
else
##############################################################################
#
# Main rules
#
CONFIGS := $(patsubst $(KERNEL_OBJ)/%,%,$(wildcard $(KERNEL_OBJ)/*/*))

export HOSTARCH := $(shell uname -m | \
		     sed -e s/i.86/i386/ -e s/sun4u/sparc64/ \
			 -e s/arm.*/arm/ -e s/sa110/arm/ \
			 -e s/s390x/s390/ -e s/parisc64/parisc/ )

.PHONY: all modules install clean
all: modules

modules: $(patsubst %,_mod_%,$(CONFIGS))

.PHONY: $(patsubst %,_mod_%,$(CONFIGS))
$(patsubst %,_mod_%,$(CONFIGS)):
	$(Q)$(MAKE) -f $(KERNEL_SOURCE)/Makefile.suse modules \
		CONFIG_FILE=$(patsubst _mod_%,%,$@)

install: $(patsubst %,_inst_%,$(CONFIGS))

.PHONY: $(patsubst %,_inst_%,$(CONFIGS))
$(patsubst %,_inst_%,$(CONFIGS)):
	$(Q)$(MAKE) -f $(KERNEL_SOURCE)/Makefile.suse modules_add \
		CONFIG_FILE=$(patsubst _inst_%,%,$@)

clean:
	$(Q)rm -rf .build
endif
