From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] AppArmor: Add runtime disabling

 Since LSM is now static, AppArmor must also be. This patch adds two methods
 to disable AppArmor at runtime:

 1) apparmor=0 on the boot command line
 2) echo 1 > /sys/kernel/security/apparmor/disable

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

---
 security/apparmor/Kconfig |   29 ++++++++++++++++++++++++++++
 security/apparmor/lsm.c   |   47 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 76 insertions(+)

--- linux-2.6.24.orig/security/apparmor/Kconfig
+++ linux-2.6.24/security/apparmor/Kconfig
@@ -8,3 +8,32 @@ config SECURITY_APPARMOR
 	  distribution) and further information may be found at
 	  <http://forge.novell.com/modules/xfmod/project/?apparmor>
 	  If you are unsure how to answer this question, answer N.
+
+config SECURITY_APPARMOR_BOOTPARAM_VALUE
+	int "AppArmor boot parameter default value"
+	range 0 1
+	default 1
+	help
+	  This option sets the default value for the kernel parameter
+	  'apparmor.enabled', which allows AppArmor to be enabled or
+	  disabled at boot.  If this option is set to 0 (zero), the
+	  AppArmor kernel parameter will default to 0, disabling AppArmor
+	  at bootup.  If this option is set to 1 (one), the AppArmor
+	  kernel parameter will default to 1, enabling AppArmor at bootup.
+
+	  If you are unsure how to answer this question, answer 1.
+
+config SECURITY_APPARMOR_DISABLE
+	bool "AppArmor runtime disable"
+	depends on SECURITY_APPARMOR
+	default n
+	help
+	  This option enables writing to a apparmorfs node 'disable', which
+	  allows AppArmor to be disabled at runtime prior to the policy load.
+	  AppArmor will then remain disabled until the next boot.
+	  This option is similar to the apparmor.enabled=0 boot parameter,
+	  but is to support runtime disabling of AppArmor, e.g. from
+	  /sbin/init, for portability across platforms where boot
+	  parameters are difficult to employ.
+
+	  If you are unsure how to answer this question, answer N.
--- linux-2.6.24.orig/security/apparmor/lsm.c
+++ linux-2.6.24/security/apparmor/lsm.c
@@ -78,6 +78,17 @@ unsigned int apparmor_path_max = 2 * PAT
 module_param_named(path_max, apparmor_path_max, aauint, S_IRUSR | S_IWUSR);
 MODULE_PARM_DESC(apparmor_path_max, "Maximum pathname length allowed");
 
+#ifdef CONFIG_SECURITY_APPARMOR_DISABLE
+#define AA_ENABLED_PERMS 0600
+#else
+#define AA_ENABLED_PERMS 0400
+#endif
+static int param_set_aa_enabled(const char *val, struct kernel_param *kp);
+unsigned int apparmor_enabled = CONFIG_SECURITY_APPARMOR_BOOTPARAM_VALUE;
+module_param_call(enabled, param_set_aa_enabled, param_get_aauint,
+		  &apparmor_enabled, AA_ENABLED_PERMS);
+MODULE_PARM_DESC(apparmor_enabled, "Enable/Disable Apparmor on boot");
+
 static int param_set_aabool(const char *val, struct kernel_param *kp)
 {
 	if (aa_task_context(current))
@@ -976,10 +987,16 @@ struct security_operations apparmor_ops 
 	.socket_getpeersec_dgram =	apparmor_socket_getpeersec_dgram,
 };
 
+static int apparmor_initialized;
 static int __init apparmor_init(void)
 {
 	int error;
 
+	if (!apparmor_enabled) {
+		printk(KERN_INFO "AppArmor:  Disabled at boot.\n");
+		return 0;
+	}
+
 	if ((error = alloc_null_complain_profile())){
 		AA_ERROR("Unable to allocate null complain profile\n");
 		goto alloc_out;
@@ -996,6 +1013,8 @@ static int __init apparmor_init(void)
 	else
 		info_message("AppArmor initialized", NULL);
 
+	apparmor_initialized = 1;
+
 	return error;
 
 register_security_out:
@@ -1045,6 +1064,34 @@ void apparmor_disable(void)
 	info_message("AppArmor protection removed", NULL);
 }
 
+static int param_set_aa_enabled(const char *val, struct kernel_param *kp)
+{
+	char *endp;
+	unsigned long l;
+
+	if (!apparmor_initialized) {
+		apparmor_enabled = 0;
+		return 0;
+	}
+
+	if (aa_task_context(current))
+		return -EPERM;
+
+	if (!apparmor_enabled)
+		return -EINVAL;
+
+	if (!val)
+		return -EINVAL;
+
+	l = simple_strtoul(val, &endp, 0);
+	if (endp == val || l != 0)
+		return -EINVAL;
+
+	apparmor_enabled = 0;
+	apparmor_disable();
+	return 0;
+}
+
 MODULE_DESCRIPTION("AppArmor process confinement");
 MODULE_AUTHOR("Novell/Immunix, http://bugs.opensuse.org");
 MODULE_LICENSE("GPL");
