From: Jeff Mahoney <jeffm@suse.com>
Subject: reiserfs: rearrange journal abort

 This patch kills off reiserfs_journal_abort as it is never called, and
 combines __reiserfs_journal_abort_{soft,hard} into one function called
 reiserfs_abort_journal, which performs the same work. It is silent
 as opposed to the old version, since the message was always issued
 after a regular 'abort' message.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

---
 fs/reiserfs/journal.c       |   23 ++++-------------------
 fs/reiserfs/prints.c        |    2 +-
 include/linux/reiserfs_fs.h |    2 +-
 3 files changed, 6 insertions(+), 21 deletions(-)

Index: b/fs/reiserfs/journal.c
===================================================================
--- a/fs/reiserfs/journal.c	2008-03-27 15:17:45.000000000 -0400
+++ b/fs/reiserfs/journal.c	2008-03-27 15:19:31.000000000 -0400
@@ -4298,14 +4298,15 @@ static int do_journal_end(struct reiserf
 	return journal->j_errno;
 }
 
-static void __reiserfs_journal_abort_hard(struct super_block *sb)
+/* Send the file system read only and refuse new transactions */
+void reiserfs_abort_journal(struct super_block *sb, int errno)
 {
 	struct reiserfs_journal *journal = SB_JOURNAL(sb);
 	if (test_bit(J_ABORTED, &journal->j_state))
 		return;
 
-	printk(KERN_CRIT "REISERFS: Aborting journal for filesystem on %s\n",
-	       reiserfs_bdevname(sb));
+	if (!journal->j_errno)
+		journal->j_errno = errno;
 
 	sb->s_flags |= MS_RDONLY;
 	set_bit(J_ABORTED, &journal->j_state);
@@ -4315,19 +4316,3 @@ static void __reiserfs_journal_abort_har
 #endif
 }
 
-static void __reiserfs_journal_abort_soft(struct super_block *sb, int errno)
-{
-	struct reiserfs_journal *journal = SB_JOURNAL(sb);
-	if (test_bit(J_ABORTED, &journal->j_state))
-		return;
-
-	if (!journal->j_errno)
-		journal->j_errno = errno;
-
-	__reiserfs_journal_abort_hard(sb);
-}
-
-void reiserfs_journal_abort(struct super_block *sb, int errno)
-{
-	return __reiserfs_journal_abort_soft(sb, errno);
-}
Index: b/fs/reiserfs/prints.c
===================================================================
--- a/fs/reiserfs/prints.c	2008-03-27 15:17:45.000000000 -0400
+++ b/fs/reiserfs/prints.c	2008-03-27 15:19:31.000000000 -0400
@@ -389,7 +389,7 @@ void reiserfs_abort(struct super_block *
 	       error_buf);
 
 	sb->s_flags |= MS_RDONLY;
-	reiserfs_journal_abort(sb, errno);
+	reiserfs_abort_journal(sb, errno);
 }
 
 /* this prints internal nodes (4 keys/items in line) (dc_number,
Index: b/include/linux/reiserfs_fs.h
===================================================================
--- a/include/linux/reiserfs_fs.h	2008-03-27 15:17:45.000000000 -0400
+++ b/include/linux/reiserfs_fs.h	2008-03-27 15:19:31.000000000 -0400
@@ -1770,7 +1770,7 @@ int journal_begin(struct reiserfs_transa
 		  struct super_block *p_s_sb, unsigned long);
 int journal_join_abort(struct reiserfs_transaction_handle *,
 		       struct super_block *p_s_sb, unsigned long);
-void reiserfs_journal_abort(struct super_block *sb, int errno);
+void reiserfs_abort_journal(struct super_block *sb, int errno);
 void reiserfs_abort(struct super_block *sb, int errno, const char *fmt, ...);
 int reiserfs_allocate_list_bitmaps(struct super_block *s,
 				   struct reiserfs_list_bitmap *, unsigned int);
