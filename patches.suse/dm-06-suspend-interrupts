Handle interrupts within suspend.
--- diff/drivers/md/dm.c	2004-03-16 11:39:29.021319112 +0000
+++ source/drivers/md/dm.c	2004-03-16 11:39:30.827044600 +0000
@@ -926,7 +926,7 @@ int dm_suspend(struct mapped_device *md)
 	while (1) {
 		set_current_state(TASK_INTERRUPTIBLE);
 
-		if (!atomic_read(&md->pending))
+		if (!atomic_read(&md->pending) || signal_pending(current))
 			break;
 
 		io_schedule();
@@ -935,6 +935,14 @@ int dm_suspend(struct mapped_device *md)
 
 	down_write(&md->lock);
 	remove_wait_queue(&md->wait, &wait);
+
+	/* were we interrupted ? */
+	if (atomic_read(&md->pending)) {
+		clear_bit(DMF_BLOCK_IO, &md->flags);
+		up_write(&md->lock);
+		return -EINTR;
+	}
+
 	set_bit(DMF_SUSPENDED, &md->flags);
 
 	map = dm_get_table(md);
