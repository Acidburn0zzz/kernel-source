
From: Nick Piggin <nickpiggin@yahoo.com.au>

After the for_each_domain change, the warn here won't trigger, instead it
will oops in the if statement.  Also, make sure we don't pass an empty
cpumask to for_each_cpu.


Index: linux-2.6.5/kernel/sched.c
===================================================================
--- linux-2.6.5.orig/kernel/sched.c	2004-04-16 15:06:44.000000000 +0200
+++ linux-2.6.5/kernel/sched.c	2004-04-16 15:06:44.000000000 +0200
@@ -1684,8 +1684,7 @@
 		if (cpu_isset(busiest->push_cpu, sd->span))
 			break;
 	}
-
-	if (!sd->parent && !cpu_isset(busiest->push_cpu, sd->span)) {
+	if (!sd) {
 		WARN_ON(1);
 		return;
 	}
@@ -1699,20 +1698,20 @@
  	do {
 		cpumask_t tmp;
 		runqueue_t *rq;
- 		int push_cpu = 0, nr = 0;
+ 		int push_cpu = 0;
 
  		if (group == busy_group)
  			goto next_group;
 
 		cpus_and(tmp, group->cpumask, cpu_online_map);
+		if (cpus_weight(tmp) == 0)
+			goto next_group;
+
  		for_each_cpu_mask(i, tmp) {
 			if (!idle_cpu(i))
 				goto next_group;
  			push_cpu = i;
- 			nr++;
  		}
- 		if (nr == 0)
- 			goto next_group;
 
 		rq = cpu_rq(push_cpu);
 		double_lock_balance(busiest, rq);
