From akpm@osdl.org Wed May 12 23:19:30 2004
Return-Path: <mason@watt>
Received: from watt ([unix socket]) (authenticated user=mason bits=0) by
	watt (Cyrus v2.2.3) with LMTP; Wed, 12 May 2004 23:19:30 -0400
X-Sieve: CMU Sieve 2.2
Return-Path: <akpm@osdl.org>
Received: from extimap.suse.de [195.135.220.6] by localhost with IMAP
	(fetchmail-6.2.5) for mason@localhost (single-drop); Wed, 12 May 2004
	23:19:30 -0400 (EDT)
Received: from extimap.suse.de ([unix socket]) by extimap (Cyrus v2.1.16)
	with LMTP; Thu, 13 May 2004 05:13:33 +0200
X-Sieve: CMU Sieve 2.2
Received: from hermes.suse.de (Hermes-ext.suse.de [195.135.221.8]) (using
	TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits)) (Client CN
	"hermes.suse.de", Issuer "SuSE Linux AG internal IMAP-Server CA" (verified
	OK)) by extimap.suse.de (Postfix) with ESMTP id E1CDDA8E11 for
	<mason@extimap.suse.de>; Thu, 13 May 2004 05:13:32 +0200 (CEST)
Received: from imap-dhs.suse.de (imap-dhs.suse.de [10.0.0.4]) by
	hermes.suse.de (Postfix) with ESMTP id AC8A63A2CF for
	<mason@extimap.suse.de>; Thu, 13 May 2004 05:13:32 +0200 (CEST)
Received: by imap-dhs.suse.de (Postfix, from userid 96) id AA1B257B0F9;
	Thu, 13 May 2004 05:13:32 +0200 (CEST)
Received: from imap-dhs.suse.de ([unix socket]) by imap-dhs (Cyrus v2.1.16)
	with LMTP; Thu, 13 May 2004 05:13:32 +0200
X-Sieve: CMU Sieve 2.2
Received: from hermes.suse.de (hermes.suse.de [10.0.0.1]) (using TLSv1 with
	cipher EDH-RSA-DES-CBC3-SHA (168/168 bits)) (Client CN "hermes.suse.de",
	Issuer "SuSE Linux AG internal IMAP-Server CA" (verified OK)) by
	imap-dhs.suse.de (Postfix) with ESMTP id 8AA7857B006 for
	<mason@imap-dhs.suse.de>; Thu, 13 May 2004 05:13:32 +0200 (CEST)
Received: by hermes.suse.de (Postfix) id 7263267265; Thu, 13 May 2004
	05:13:32 +0200 (CEST)
Received: from scanhost.suse.de (scanhost.suse.de [10.0.0.5]) by
	hermes.suse.de (Postfix) with ESMTP id 6B4373A2CF for <mason@suse.com>;
	Thu, 13 May 2004 05:13:32 +0200 (CEST)
Received: from hermes.suse.de ([10.0.0.1]) by scanhost.suse.de (scanhost
	[10.0.0.5]) (amavisd-new, port 10025) with ESMTP id 19675-01 for
	<mason@suse.com>; Thu, 13 May 2004 05:13:29 +0200 (CEST)
Received: from Cantor.suse.de (ns.suse.de [195.135.220.2]) (using TLSv1
	with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits)) (No client certificate
	requested) by hermes.suse.de (Postfix) with ESMTP id 48AA368D68 for
	<mason@suse.com>; Thu, 13 May 2004 05:13:29 +0200 (CEST)
Received: from mail.osdl.org (fw.osdl.org [65.172.181.6]) by Cantor.suse.de
	(Postfix) with ESMTP id 2086A59ECE4 for <mason@suse.com>; Thu, 13 May 2004
	05:13:27 +0200 (CEST)
Received: from bix (build.pdx.osdl.net [172.20.1.2]) by mail.osdl.org
	(8.11.6/8.11.6) with ESMTP id i4D3DQJ06295 for <mason@suse.com>; Wed, 12
	May 2004 20:13:26 -0700
Date: Wed, 12 May 2004 20:13:01 -0700
From: Andrew Morton <akpm@osdl.org>
To: Chris Mason <mason@suse.com>
Subject: Re: writeback_inodes Q
Message-Id: <20040512201301.1c715c02.akpm@osdl.org>
In-Reply-To: <1084415646.2583.333.camel@watt.suse.com>
References: <1084414292.2583.317.camel@watt.suse.com>
	 <20040512191601.27632701.akpm@osdl.org>
	 <1084415646.2583.333.camel@watt.suse.com>
X-Mailer: Sylpheed version 0.9.7 (GTK+ 1.2.10; i386-redhat-linux-gnu)
Mime-Version: 1.0
X-Virus-Scanned: by amavisd-new at scanhost.suse.de
X-Spam-Status: No, hits=-2.0 tagged_above=-20.0 required=5.0
	tests=BAYES_44, MY_LINUX
X-Spam-Level: 
X-Bogosity: No, tests=bogofilter, spamicity=0.496668, version=0.16.4
Content-Type: text/plain; CHARSET=US-ASCII
X-Evolution-Source: imap://mason@localhost/
Content-Transfer-Encoding: 8bit

Chris Mason <mason@suse.com> wrote:
>
> We need a goto restart in there, which is probably what you've
>  been trying to avoid all along.

Surely that's OK.  Could just bale out of there though.





---

 25-akpm/fs/fs-writeback.c  |    4 ++++
 25-akpm/fs/super.c         |   21 ++++++++++++++++++---
 25-akpm/include/linux/fs.h |    1 +
 3 files changed, 23 insertions(+), 3 deletions(-)

diff -puN fs/fs-writeback.c~writeback_inodes-fix fs/fs-writeback.c
--- 25/fs/fs-writeback.c~writeback_inodes-fix	2004-05-12 20:06:05.821458552 -0700
+++ 25-akpm/fs/fs-writeback.c	2004-05-12 20:07:47.530996352 -0700
@@ -397,12 +397,16 @@ writeback_inodes(struct writeback_contro
 
 	spin_lock(&inode_lock);
 	spin_lock(&sb_lock);
+restart:
 	sb = sb_entry(super_blocks.prev);
 	for (; sb != sb_entry(&super_blocks); sb = sb_entry(sb->s_list.prev)) {
 		if (!list_empty(&sb->s_dirty) || !list_empty(&sb->s_io)) {
+			sb->s_count++;
 			spin_unlock(&sb_lock);
 			sync_sb_inodes(sb, wbc);
 			spin_lock(&sb_lock);
+			if (__put_super(sb))
+				goto restart;
 		}
 		if (wbc->nr_to_write <= 0)
 			break;
diff -puN fs/super.c~writeback_inodes-fix fs/super.c
--- 25/fs/super.c~writeback_inodes-fix	2004-05-12 20:07:09.227819320 -0700
+++ 25-akpm/fs/super.c	2004-05-12 20:12:32.122731832 -0700
@@ -101,6 +101,21 @@ static inline void destroy_super(struct 
 
 /* Superblock refcounting  */
 
+/*
+ * Drop a superblock's refcount.  Returns non-zero if the superblock was
+ * destroyed.  The caller must hold sb_lock.
+ */
+int __put_super(struct super_block *sb)
+{
+	int ret = 0;
+
+	if (!--sb->s_count) {
+		destroy_super(sb);
+		ret = 1;
+	}
+	return ret;
+}
+
 /**
  *	put_super	-	drop a temporary reference to superblock
  *	@s: superblock in question
@@ -108,14 +123,14 @@ static inline void destroy_super(struct 
  *	Drops a temporary reference, frees superblock if there's no
  *	references left.
  */
-static inline void put_super(struct super_block *s)
+static void put_super(struct super_block *sb)
 {
 	spin_lock(&sb_lock);
-	if (!--s->s_count)
-		destroy_super(s);
+	__put_super(sb);
 	spin_unlock(&sb_lock);
 }
 
+
 /**
  *	deactivate_super	-	drop an active reference to superblock
  *	@s: superblock to deactivate
diff -puN include/linux/fs.h~writeback_inodes-fix include/linux/fs.h
--- 25/include/linux/fs.h~writeback_inodes-fix	2004-05-12 20:09:59.662909248 -0700
+++ 25-akpm/include/linux/fs.h	2004-05-12 20:10:25.887922440 -0700
@@ -1114,6 +1114,7 @@ struct super_block *sget(struct file_sys
 			void *data);
 struct super_block *get_sb_pseudo(struct file_system_type *, char *,
 			struct super_operations *ops, unsigned long);
+int __put_super(struct super_block *sb);
 void unnamed_dev_init(void);
 
 /* Alas, no aliases. Too much hassle with bringing module.h everywhere */

_


