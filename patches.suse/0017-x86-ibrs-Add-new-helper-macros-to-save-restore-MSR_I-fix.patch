From: Jiri Slaby <jslaby@suse.cz>
Subject: x86/ibrs: Add new helper macros to save/restore MSR_IA32_SPEC_CTRL fix
Patch-mainline: submitted 26/1/2018
References: bsc#1068032 CVE-2017-5753

Fix 32-bit broken by "x86/ibrs: Add new helper macros to save/restore
MSR_IA32_SPEC_CTRL" in patch:
patches.suse/0017-x86-ibrs-Add-new-helper-macros-to-save-restore-MSR_I.patch

1) shift by 32 of ulong is too much, cast to u64.
2) constratints for registers should be of size unsigned long, so cast.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 arch/x86/include/asm/nospec-branch.h |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

--- a/arch/x86/include/asm/nospec-branch.h
+++ b/arch/x86/include/asm/nospec-branch.h
@@ -276,7 +276,7 @@ static inline u64 save_and_restrict_bran
 		     : [msr] "i" (MSR_IA32_SPEC_CTRL)
 		     : "memory");
 
-	ret = ax | (dx << 32);
+	ret = ax | ((u64)dx << 32);
 
 	/* restrict speculation */
 	asm volatile(ALTERNATIVE("",
@@ -303,8 +303,8 @@ static inline void restore_branch_specul
 				 X86_FEATURE_IBRS)
 		     : "=a" (ax), "=c" (cx), "=d" (dx)
 		     : [msr] "i" (MSR_IA32_SPEC_CTRL),
-		       [val_low] "a" (val & 0xffffffff),
-		       [val_high] "d" (val >> 32)
+		       [val_low] "a" ((unsigned long)(val & 0xffffffff)),
+		       [val_high] "d" ((unsigned long)(val >> 32))
 		     : "memory");
 }
 
