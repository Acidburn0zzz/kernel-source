From: Jan Kara <jack@suse.cz>
Subject: kABI placeholder for "dax: Introduce a ->copy_to_iter dax operation"
Patch-mainline: No, kABI
References: bsc#1098782

This is a part of commit b3a9a0c36e1f "dax: Introduce a ->copy_to_iter dax
operation" just that kABI remains stable once we backport full set of RAS /
MCE handling fixes.

Signed-off-by: Jan Kara <jack@suse.cz>

---
 include/linux/dax.h           |    3 +++
 include/linux/device-mapper.h |    5 +++--
 2 files changed, 6 insertions(+), 2 deletions(-)

--- a/include/linux/dax.h
+++ b/include/linux/dax.h
@@ -19,6 +19,9 @@ struct dax_operations {
 	/* copy_from_iter: dax-driver override for default copy_from_iter */
 	size_t (*copy_from_iter)(struct dax_device *, pgoff_t, void *, size_t,
 			struct iov_iter *);
+	/* copy_to_iter: required operation for fs-dax direct-i/o */
+	size_t (*copy_to_iter)(struct dax_device *, pgoff_t, void *, size_t,
+			struct iov_iter *);
 };
 
 extern struct attribute_group dax_attribute_group;
--- a/include/linux/device-mapper.h
+++ b/include/linux/device-mapper.h
@@ -132,7 +132,7 @@ typedef int (*dm_busy_fn) (struct dm_tar
  */
 typedef long (*dm_dax_direct_access_fn) (struct dm_target *ti, pgoff_t pgoff,
 		long nr_pages, void **kaddr, pfn_t *pfn);
-typedef size_t (*dm_dax_copy_from_iter_fn)(struct dm_target *ti, pgoff_t pgoff,
+typedef size_t (*dm_dax_copy_iter_fn)(struct dm_target *ti, pgoff_t pgoff,
 		void *addr, size_t bytes, struct iov_iter *i);
 #define PAGE_SECTORS (PAGE_SIZE / 512)
 
@@ -183,7 +183,8 @@ struct target_type {
 	dm_iterate_devices_fn iterate_devices;
 	dm_io_hints_fn io_hints;
 	dm_dax_direct_access_fn direct_access;
-	dm_dax_copy_from_iter_fn dax_copy_from_iter;
+	dm_dax_copy_iter_fn dax_copy_from_iter;
+	dm_dax_copy_iter_fn dax_copy_to_iter;
 
 	/* For internal device-mapper use. */
 	struct list_head list;
