From: Pavel Kankovsky <peak@argo.troja.mff.cuni.cz>
Subject: BUG: Small information leak in SO_ORIGINAL_DST (2.4 and 2.6)
References: 159046

It appears sockaddr_in.sin_zero is not zeroed during certain operations 
returning IPv4 socket names, namely:

- getsockopt(...SO_ORIGINAL_DST...) (2.4 and 2.6)
  see getorigdst() in net/ipv4/netfilter/ip_conntrack_core.c
  (+ in net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c in 2.6?!)

- getsockname() and getpeername() (and accept()) (2.4 only)
  see inet_getname() in net/ipv4/af_inet.c

and several unitialized bytes of kernel stack (sizeof(sin_zero) == 6
to be precise) leak to the userspace.

This *might* have some security ramification.

Acked-by: Olaf Kirch <okir@suse.de>
Acked-by: Jaroslav Kysela <perex@suse.cz>

--- linux-2.6.13.orig/net/ipv4/netfilter/ip_conntrack_core.c	2005-08-29 01:41:01.000000000 +0200
+++ linux-2.6.13-SL100_BRANCH/net/ipv4/netfilter/ip_conntrack_core.c	2006-05-01 10:17:56.091996303 +0200
@@ -1059,6 +1059,7 @@ getorigdst(struct sock *sk, int optval, 
 			.tuple.dst.u.tcp.port;
 		sin.sin_addr.s_addr = ct->tuplehash[IP_CT_DIR_ORIGINAL]
 			.tuple.dst.ip;
+		memset(sin.sin_zero, 0, sizeof(sin.sin_zero));
 
 		DEBUGP("SO_ORIGINAL_DST: %u.%u.%u.%u %u\n",
 		       NIPQUAD(sin.sin_addr.s_addr), ntohs(sin.sin_port));
--- linux-2.6.16.orig/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c	2006-03-20 06:53:29.000000000 +0100
+++ linux-2.6.16-SL101_BRANCH/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c	2006-05-01 10:51:30.346200100 +0200
@@ -354,6 +354,7 @@
 			.tuple.dst.u.tcp.port;
 		sin.sin_addr.s_addr = ct->tuplehash[IP_CT_DIR_ORIGINAL]
 			.tuple.dst.u3.ip;
+		memset(sin.sin_zero, 0, sizeof(sin.sin_zero));
 
 		DEBUGP("SO_ORIGINAL_DST: %u.%u.%u.%u %u\n",
 		       NIPQUAD(sin.sin_addr.s_addr), ntohs(sin.sin_port));
