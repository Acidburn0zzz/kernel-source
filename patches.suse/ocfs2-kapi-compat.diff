From: Jeff Mahoney <jeffm@suse.com>
Subject: ocfs2: API compatibility layer

 OCFS2 makes use of a different kernel API, but provides a compatibility
 layer for use until the kernel API matches the one it uses. Some are
 already updated, but it makes merging easier to just leave everything.

 fs/ocfs2/Makefile                                  |   10 ++++++++
 fs/ocfs2/cluster/Makefile                          |    3 ++
 fs/ocfs2/dlm/Makefile                              |    3 ++
 fs/ocfs2/kapi-compat/include/assert_spin_locked.h  |   18 ++++++++++++++
 fs/ocfs2/kapi-compat/include/journal_access.h      |   26 +++++++++++++++++++++
 fs/ocfs2/kapi-compat/include/kref_init.h           |    9 +++++++
 fs/ocfs2/kapi-compat/include/kref_put.h            |    8 ++++++
 fs/ocfs2/kapi-compat/include/sparse_endian_types.h |   13 ++++++++++
 8 files changed, 90 insertions(+)
diff -ruNpX dontdiff linux-2.6.14/fs/ocfs2/cluster/Makefile linux-2.6.14.ocfs2/fs/ocfs2/cluster/Makefile
--- linux-2.6.14/fs/ocfs2/cluster/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ linux-2.6.14.ocfs2/fs/ocfs2/cluster/Makefile	2005-11-01 12:07:09.000000000 -0500
@@ -1,7 +1,10 @@
 CLUSTER_BUILD_VERSION="\"1.3.0 svn 2673\""
 EXTRA_CFLAGS += -DCLUSTER_BUILD_VERSION=$(CLUSTER_BUILD_VERSION)
 
+KAPI_INCLUDE_DIR = fs/ocfs2/kapi-compat/include
+EXTRA_CFLAGS += -include $(KAPI_INCLUDE_DIR)/kref_init.h
+
 obj-$(CONFIG_OCFS2_FS) += ocfs2_nodemanager.o
 
 ocfs2_nodemanager-objs := heartbeat.o masklog.o nodemanager.o \
        quorum.o tcp.o ver.o
diff -ruNpX dontdiff linux-2.6.14/fs/ocfs2/dlm/Makefile linux-2.6.14.ocfs2/fs/ocfs2/dlm/Makefile
--- linux-2.6.14/fs/ocfs2/dlm/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ linux-2.6.14.ocfs2/fs/ocfs2/dlm/Makefile	2005-11-01 12:09:26.000000000 -0500
@@ -1,11 +1,14 @@
 EXTRA_CFLAGS += -Ifs/ocfs2
 
 DLM_BUILD_VERSION="\"1.3.0 svn 2673\""
 EXTRA_CFLAGS += -DDLM_BUILD_VERSION=$(DLM_BUILD_VERSION)
 
+KAPI_INCLUDE_DIR = fs/ocfs2/kapi-compat/include
+EXTRA_CFLAGS += -include $(KAPI_INCLUDE_DIR)/kref_init.h
+
 obj-$(CONFIG_OCFS2_FS) += ocfs2_dlm.o ocfs2_dlmfs.o
 
 ocfs2_dlm-objs := dlmdomain.o dlmdebug.o dlmthread.o dlmrecovery.o \
        dlmmaster.o dlmast.o dlmconvert.o dlmlock.o dlmunlock.o dlmver.o
 
 ocfs2_dlmfs-objs := userdlm.o dlmfs.o dlmfsver.o
diff -ruNpX dontdiff linux-2.6.14/fs/ocfs2/kapi-compat/include/assert_spin_locked.h linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/assert_spin_locked.h
--- linux-2.6.14/fs/ocfs2/kapi-compat/include/assert_spin_locked.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/assert_spin_locked.h	2005-11-01 10:39:57.000000000 -0500
@@ -0,0 +1,18 @@
+#ifndef KAPI_ASSERT_SPIN_LOCKED_H
+#define KAPI_ASSERT_SPIN_LOCKED_H
+
+/*
+http://linux.bkbits.net:8080/linux-2.5/gnupatch@420104cfKCNCOybFRuNN48-HuIMO6w
+ *
+ * We only care about checking the assertion in modern 2.6; we just want old
+ * kernels to build without errors.  We have to watch out for old jbd headers
+ * that expose this api.  (kernel namespace inconsistency 1, universe 0)
+ */
+
+#include <linux/types.h>
+#include <linux/jbd.h>
+#ifndef assert_spin_locked
+#define assert_spin_locked(lock)	do { (void)(lock); } while(0)
+#endif
+
+#endif
diff -ruNpX dontdiff linux-2.6.14/fs/ocfs2/kapi-compat/include/journal_access.h linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/journal_access.h
--- linux-2.6.14/fs/ocfs2/kapi-compat/include/journal_access.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/journal_access.h	2005-11-01 10:39:57.000000000 -0500
@@ -0,0 +1,26 @@
+#ifndef KAPI_JOURNAL_ACCESS_WITH_CREDITS_H
+#define KAPI_JOURNAL_ACCESS_WITH_CREDITS_H
+
+/* bzzz 1, universe 0 */
+
+#ifdef JOURNAL_ACCESS_WITH_CREDITS
+
+#define kapi_journal_get_write_access(a, b) \
+		journal_get_write_access(a, b, NULL)
+#define kapi_journal_get_read_access(a, b) \
+		journal_get_read_access(a, b, NULL)
+#define kapi_journal_get_undo_access(a, b) \
+		journal_get_undo_access(a, b, NULL)
+
+#else
+
+#define kapi_journal_get_write_access(a, b) \
+		journal_get_write_access(a, b)
+#define kapi_journal_get_read_access(a, b) \
+		journal_get_read_access(a, b)
+#define kapi_journal_get_undo_access(a, b) \
+		journal_get_undo_access(a, b)
+
+#endif
+
+#endif /* KAPI_JOURNAL_ACCESS_WITH_CREDITS_H */
diff -ruNpX dontdiff linux-2.6.14/fs/ocfs2/kapi-compat/include/kref_init.h linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/kref_init.h
--- linux-2.6.14/fs/ocfs2/kapi-compat/include/kref_init.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/kref_init.h	2005-11-01 10:39:57.000000000 -0500
@@ -0,0 +1,9 @@
+#ifndef KAPI_KREF_INIT_H
+#define KAPI_KREF_INIT_H
+
+#include <linux/kref.h>
+
+/* kernel folks 1, universe 0 */
+#define kref_init(kref_obj, release_func)	kref_init(kref_obj)
+
+#endif /* KAPI_KREF_INIT_H */
diff -ruNpX dontdiff linux-2.6.14/fs/ocfs2/kapi-compat/include/kref_put.h linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/kref_put.h
--- linux-2.6.14/fs/ocfs2/kapi-compat/include/kref_put.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/kref_put.h	2005-11-01 10:39:57.000000000 -0500
@@ -0,0 +1,8 @@
+#ifndef KAPI_KREF_PUT_H
+#define KAPI_KREF_PUT_H
+
+#include <linux/kref.h>
+
+#define kref_put(kref_obj, release_func)	kref_put(kref_obj)
+
+#endif /* KAPI_KREF_PUT_H */
diff -ruNpX dontdiff linux-2.6.14/fs/ocfs2/kapi-compat/include/sparse_endian_types.h linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/sparse_endian_types.h
--- linux-2.6.14/fs/ocfs2/kapi-compat/include/sparse_endian_types.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-2.6.14.ocfs2/fs/ocfs2/kapi-compat/include/sparse_endian_types.h	2005-11-01 10:39:57.000000000 -0500
@@ -0,0 +1,13 @@
+#ifndef KAPI_SPARSE_ENDIAN_TYPES_H
+#define KAPI_SPARSE_ENDIAN_TYPES_H
+
+#include <linux/types.h>
+
+typedef __u16 __le16;
+typedef __u16 __be16;
+typedef __u32 __le32;
+typedef __u32 __be32;
+typedef __u64 __le64;
+typedef __u64 __be64;
+
+#endif /* KAPI_SPARSE_ENDIAN_TYPES_H */
diff -ruNpX dontdiff linux-2.6.14/fs/ocfs2/Makefile linux-2.6.14.ocfs2/fs/ocfs2/Makefile
--- linux-2.6.14/fs/ocfs2/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ linux-2.6.14.ocfs2/fs/ocfs2/Makefile	2005-11-01 12:06:50.000000000 -0500
@@ -1,10 +1,20 @@
 OCFS2_BUILD_VERSION="\"1.3.0 svn 2673\""
 EXTRA_CFLAGS += -Ifs/ocfs2
 
 EXTRA_CFLAGS += -DCATCH_BH_JBD_RACES
 EXTRA_CFLAGS += -DOCFS2_CDSL
 
+# This is a huge kludge, but it will go away when the kernel API catches up
+# Without in-kernel integration, this is normally hidden away in the OCFS2
+# configure/Makefile mess.
+KAPI_INCLUDE_DIR = fs/ocfs2/kapi-compat/include
+EXTRA_CFLAGS += -include $(KAPI_INCLUDE_DIR)/assert_spin_locked.h
+EXTRA_CFLAGS += -include $(KAPI_INCLUDE_DIR)/journal_access.h
+EXTRA_CFLAGS += -include $(KAPI_INCLUDE_DIR)/kref_init.h
+EXTRA_CFLAGS += -include $(KAPI_INCLUDE_DIR)/kref_put.h
+#EXTRA_CFLAGS += -include $(KAPI_INCLUDE_DIR)/sparse_endian_types.h
+
 EXTRA_CFLAGS += -DOCFS2_BUILD_VERSION=$(OCFS2_BUILD_VERSION)
 
 obj-$(CONFIG_OCFS2_FS) += ocfs2.o
 
