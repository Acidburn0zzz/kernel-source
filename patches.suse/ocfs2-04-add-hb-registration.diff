Subject: [PATCH] ocfs2: add heartbeat operation registration interface
From: Jeff Mahoney <jeffm@suse.com>

 This patch allows heartbeat modules to register themselves with the
 generic heartbeat implementation.

 It adds a heartbeat operations structure, refcounted and protected. Currently
 there may only be one heartbeat operations module active at any given time,
 but this can be changed if multiple implementations are desired.

 The registration process starts up o2net, since o2net can't start up without
 heartbeat information.

 fs/ocfs2/cluster/Makefile         |    6 ++-
 fs/ocfs2/cluster/disk_heartbeat.c |   51 +++++++++++++++++++------
 fs/ocfs2/cluster/disk_heartbeat.h |    3 -
 fs/ocfs2/cluster/heartbeat.c      |   76 ++++++++++++++++++++++++++++++++++++--
 fs/ocfs2/cluster/heartbeat.h      |   10 +++++
 fs/ocfs2/cluster/nodemanager.c    |    5 --
 fs/ocfs2/cluster/quorum.c         |    1 
 7 files changed, 125 insertions(+), 27 deletions(-)

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

diff -ruNpX dontdiff linux-2.6.15/fs/ocfs2/cluster/disk_heartbeat.c linux-2.6.15-ocfs2/fs/ocfs2/cluster/disk_heartbeat.c
--- linux-2.6.15/fs/ocfs2/cluster/disk_heartbeat.c	2006-01-06 12:21:55.993968784 -0500
+++ linux-2.6.15-ocfs2/fs/ocfs2/cluster/disk_heartbeat.c	2006-01-06 12:22:06.546364576 -0500
@@ -852,18 +852,8 @@ static int o2hb_thread(void *data)
 	return 0;
 }
 
-void init_disk_heartbeat(void)
-{
-	int i;
-
-	for (i = 0; i < ARRAY_SIZE(o2hb_live_slots); i++)
-		INIT_LIST_HEAD(&o2hb_live_slots[i]);
-
-	memset(o2hb_live_node_bitmap, 0, sizeof(o2hb_live_node_bitmap));
-}
-
 /* if we're already in a callback then we're already serialized by the sem */
-void o2hb_fill_node_map_from_callback(unsigned long *map, unsigned bytes)
+static void fill_node_map(unsigned long *map, size_t bytes)
 {
 	BUG_ON(bytes < (BITS_TO_LONGS(O2NM_MAX_NODES) * sizeof(unsigned long)));
 
@@ -1479,7 +1469,7 @@ static struct configfs_group_operations 
 	.drop_item	= o2hb_heartbeat_group_drop_item,
 };
 
-struct config_item_type o2hb_heartbeat_group_type = {
+static struct config_item_type o2hb_heartbeat_group_type = {
 	.ct_group_ops	= &o2hb_heartbeat_group_group_ops,
 	.ct_item_ops	= &o2hb_hearbeat_group_item_ops,
 	.ct_attrs	= o2hb_heartbeat_group_attrs,
@@ -1503,4 +1493,39 @@ void o2hb_stop_all_regions(void)
 
 	spin_unlock(&o2hb_live_lock);
 }
-EXPORT_SYMBOL_GPL(o2hb_stop_all_regions);
+
+struct o2hb_heartbeat_operations operations = {
+	.ho_name = "disk",
+	.ho_owner = THIS_MODULE,
+	.ho_group_type = &o2hb_heartbeat_group_type,
+	.fill_node_map = fill_node_map,
+};
+
+static int __init init_disk_heartbeat(void)
+{
+	int i;
+
+	for (i = 0; i < ARRAY_SIZE(o2hb_live_slots); i++)
+		INIT_LIST_HEAD(&o2hb_live_slots[i]);
+
+	memset(o2hb_live_node_bitmap, 0, sizeof(o2hb_live_node_bitmap));
+
+	i = o2quo_init();
+	if (i)
+		return i;
+
+	return o2hb_register_heartbeat_operations(&operations);
+}
+
+static void __exit exit_disk_heartbeat(void)
+{
+	o2quo_exit();
+	o2hb_unregister_heartbeat_operations(&operations);
+}
+
+MODULE_AUTHOR("Novell");
+MODULE_LICENSE("GPL");
+
+module_init(init_disk_heartbeat);
+module_exit(exit_disk_heartbeat);
+
diff -ruNpX dontdiff linux-2.6.15/fs/ocfs2/cluster/disk_heartbeat.h linux-2.6.15-ocfs2/fs/ocfs2/cluster/disk_heartbeat.h
--- linux-2.6.15/fs/ocfs2/cluster/disk_heartbeat.h	2006-01-06 12:21:55.994968632 -0500
+++ linux-2.6.15-ocfs2/fs/ocfs2/cluster/disk_heartbeat.h	2006-01-06 12:22:06.546364576 -0500
@@ -36,8 +36,5 @@ extern unsigned int o2hb_dead_threshold;
 #define O2HB_MIN_DEAD_THRESHOLD	  2
 #define O2HB_MAX_WRITE_TIMEOUT_MS (O2HB_REGION_TIMEOUT_MS * (o2hb_dead_threshold - 1))
 void o2hb_stop_all_regions(void);
-void init_disk_heartbeat(void);
-void o2hb_fill_node_map_from_callback(unsigned long *map, unsigned bytes);
-extern struct config_item_type o2hb_heartbeat_group_type;
 
 #endif /* O2CLUSTER_DISK_HEARTBEAT_H */
diff -ruNpX dontdiff linux-2.6.15/fs/ocfs2/cluster/heartbeat.c linux-2.6.15-ocfs2/fs/ocfs2/cluster/heartbeat.c
--- linux-2.6.15/fs/ocfs2/cluster/heartbeat.c	2006-01-06 12:21:56.014965592 -0500
+++ linux-2.6.15-ocfs2/fs/ocfs2/cluster/heartbeat.c	2006-01-06 12:22:06.548364272 -0500
@@ -35,7 +35,6 @@
 #include <linux/time.h>
 
 #include "heartbeat.h"
-#include "disk_heartbeat.h"
 #include "tcp.h"
 #include "nodemanager.h"
 #include "quorum.h"
@@ -57,6 +56,8 @@ static DECLARE_RWSEM(o2hb_callback_sem);
  */
 spinlock_t o2hb_live_lock = SPIN_LOCK_UNLOCKED;
 static LIST_HEAD(o2hb_node_events);
+static DEFINE_SPINLOCK(o2hb_operations_lock);
+static struct o2hb_heartbeat_operations *o2hb_operations;
 
 static struct o2hb_callback {
 	struct list_head list;
@@ -124,6 +125,7 @@ void o2hb_run_event_list(struct o2hb_nod
 
 	up_write(&o2hb_callback_sem);
 }
+EXPORT_SYMBOL_GPL(o2hb_run_event_list);
 
 void o2hb_queue_node_event(struct o2hb_node_event *event,
 				  enum o2hb_callback_type type,
@@ -142,6 +144,7 @@ void o2hb_queue_node_event(struct o2hb_n
 
 	list_add_tail(&event->hn_item, &o2hb_node_events);
 }
+EXPORT_SYMBOL_GPL(o2hb_queue_node_event);
 
 void o2hb_notify(enum o2hb_callback_type type, struct o2nm_node *node,
                  int node_num)
@@ -163,8 +166,11 @@ void o2hb_init(void)
 		INIT_LIST_HEAD(&o2hb_callbacks[i].list);
 
 	INIT_LIST_HEAD(&o2hb_node_events);
+}
 
-	init_disk_heartbeat();
+void o2hb_fill_node_map_from_callback(unsigned long *map, unsigned bytes)
+{
+	o2hb_operations->fill_node_map(map, bytes);
 }
 
 /*
@@ -188,18 +194,37 @@ struct config_group *o2hb_alloc_hb_set(v
 {
 	struct o2hb_heartbeat_group *hs = NULL;
 	struct config_group *ret = NULL;
+	int err = 0;
+
+	spin_lock(&o2hb_operations_lock);
+	if (o2hb_operations == NULL) {
+		printk("o2hb: No operations have been associated with "
+		       "heartbeat. Please load an operations module.\n");
+		spin_unlock(&o2hb_operations_lock);
+		return NULL;
+	}
+
+	/* Once we've claimed the module, we can safely use the
+	 * o2hb_operations struct */
+	err = try_module_get(o2hb_operations->ho_owner);
+	spin_unlock(&o2hb_operations_lock);
+
+	if (err == 0)
+		return NULL;
 
 	hs = kcalloc(1, sizeof(struct o2hb_heartbeat_group), GFP_KERNEL);
 	if (hs == NULL)
 		goto out;
 
 	config_group_init_type_name(&hs->hs_group, "heartbeat",
-				    &o2hb_heartbeat_group_type);
+				    o2hb_operations->ho_group_type);
 
 	ret = &hs->hs_group;
 out:
-	if (ret == NULL)
+	if (ret == NULL) {
 		kfree(hs);
+		module_put(o2hb_operations->ho_owner);
+	}
 	return ret;
 }
 
@@ -207,6 +232,11 @@ void o2hb_free_hb_set(struct config_grou
 {
 	struct o2hb_heartbeat_group *hs = to_o2hb_heartbeat_group(group);
 	kfree(hs);
+
+	spin_lock(&o2hb_operations_lock);
+	if (o2hb_operations)
+		module_put(o2hb_operations->ho_owner);
+	spin_unlock(&o2hb_operations_lock);
 }
 
 /* hb callback registration and issueing */
@@ -291,6 +321,44 @@ int o2hb_unregister_callback(struct o2hb
 }
 EXPORT_SYMBOL_GPL(o2hb_unregister_callback);
 
+int o2hb_register_heartbeat_operations(struct o2hb_heartbeat_operations *operations)
+{
+	int err = -EBUSY;
+
+	spin_lock(&o2hb_operations_lock);
+	if (o2hb_operations == NULL) {
+		o2hb_operations = operations;
+		err = 0;
+	}
+	spin_unlock(&o2hb_operations_lock);
+
+	if (err)
+		printk ("heartbeat: Couldn't register operations for %s - "
+		        "operations already registered for %s\n",
+		        operations->ho_name, o2hb_operations->ho_name);
+	else
+		o2net_init();
+	return err;
+}
+EXPORT_SYMBOL_GPL(o2hb_register_heartbeat_operations);
+
+int o2hb_unregister_heartbeat_operations(struct o2hb_heartbeat_operations *operations)
+{
+	int err = -EINVAL;
+	spin_lock(&o2hb_operations_lock);
+	if (o2hb_operations == operations) {
+		o2hb_operations = NULL;
+		err = 0;
+	}
+	spin_unlock(&o2hb_operations_lock);
+
+	if (!err)
+		o2net_exit();
+
+	return err;
+}
+EXPORT_SYMBOL_GPL(o2hb_unregister_heartbeat_operations);
+
 int o2hb_check_node_heartbeating(u8 node_num)
 {
 	unsigned long testing_map[BITS_TO_LONGS(O2NM_MAX_NODES)];
diff -ruNpX dontdiff linux-2.6.15/fs/ocfs2/cluster/heartbeat.h linux-2.6.15-ocfs2/fs/ocfs2/cluster/heartbeat.h
--- linux-2.6.15/fs/ocfs2/cluster/heartbeat.h	2006-01-06 12:21:56.015965440 -0500
+++ linux-2.6.15-ocfs2/fs/ocfs2/cluster/heartbeat.h	2006-01-06 12:22:06.549364120 -0500
@@ -78,6 +78,16 @@ void o2hb_queue_node_event(struct o2hb_n
                            struct o2nm_node *node, int node_num);
 void o2hb_run_event_list(struct o2hb_node_event *queued_event);
 
+struct o2hb_heartbeat_operations {
+	const char *ho_name;
+	struct module *ho_owner;
+	struct config_item_type *ho_group_type;
+	void (*fill_node_map)(unsigned long *map, size_t len);
+};
+
+int o2hb_register_heartbeat_operations(struct o2hb_heartbeat_operations *ops);
+int o2hb_unregister_heartbeat_operations(struct o2hb_heartbeat_operations *ops);
+
 struct config_group *o2hb_alloc_hb_set(void);
 void o2hb_free_hb_set(struct config_group *group);
 
diff -ruNpX dontdiff linux-2.6.15/fs/ocfs2/cluster/Makefile linux-2.6.15-ocfs2/fs/ocfs2/cluster/Makefile
--- linux-2.6.15/fs/ocfs2/cluster/Makefile	2006-01-06 12:21:56.024964072 -0500
+++ linux-2.6.15-ocfs2/fs/ocfs2/cluster/Makefile	2006-01-06 12:22:50.188729928 -0500
@@ -1,4 +1,6 @@
-obj-$(CONFIG_OCFS2_FS) += ocfs2_nodemanager.o
+obj-$(CONFIG_OCFS2_FS) += ocfs2_nodemanager.o ocfs2_disk_heartbeat.o
 
 ocfs2_nodemanager-objs := heartbeat.o masklog.o sys.o nodemanager.o \
-	quorum.o tcp.o ver.o disk_heartbeat.o
+	tcp.o ver.o
+
+ocfs2_disk_heartbeat-objs := disk_heartbeat.o quorum.o
diff -ruNpX dontdiff linux-2.6.15/fs/ocfs2/cluster/nodemanager.c linux-2.6.15-ocfs2/fs/ocfs2/cluster/nodemanager.c
--- linux-2.6.15/fs/ocfs2/cluster/nodemanager.c	2006-01-06 12:19:15.956298208 -0500
+++ linux-2.6.15-ocfs2/fs/ocfs2/cluster/nodemanager.c	2006-01-06 12:22:06.558362752 -0500
@@ -740,9 +740,6 @@ static void __exit exit_o2nm(void)
 	o2net_unregister_hb_callbacks();
 	configfs_unregister_subsystem(&o2nm_cluster_group.cs_subsys);
 	o2cb_sys_shutdown();
-
-	o2quo_exit();
-	o2net_exit();
 }
 
 static int __init init_o2nm(void)
@@ -752,8 +749,6 @@ static int __init init_o2nm(void)
 	cluster_print_version();
 
 	o2hb_init();
-	o2quo_init();
-	o2net_init();
 
 	ocfs2_table_header = register_sysctl_table(ocfs2_root_table, 0);
 	if (!ocfs2_table_header) {
diff -ruNpX dontdiff linux-2.6.15/fs/ocfs2/cluster/quorum.c linux-2.6.15-ocfs2/fs/ocfs2/cluster/quorum.c
--- linux-2.6.15/fs/ocfs2/cluster/quorum.c	2006-01-06 12:19:15.957298056 -0500
+++ linux-2.6.15-ocfs2/fs/ocfs2/cluster/quorum.c	2006-01-06 12:22:06.556363056 -0500
@@ -48,6 +48,7 @@
 #include <linux/workqueue.h>
 
 #include "heartbeat.h"
+#include "disk_heartbeat.h"
 #include "nodemanager.h"
 #define MLOG_MASK_PREFIX ML_QUORUM
 #include "masklog.h"
