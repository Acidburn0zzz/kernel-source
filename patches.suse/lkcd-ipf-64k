diff -urNp linux-2.6.5/drivers/dump/dump_ia64.c linux-2.6.5.SUSE/drivers/dump/dump_ia64.c
--- linux-2.6.5/drivers/dump/dump_ia64.c	2004-05-27 16:31:44.168116328 +0200
+++ linux-2.6.5.SUSE/drivers/dump/dump_ia64.c	2004-05-27 16:31:54.330240392 +0200
@@ -45,13 +45,12 @@ static int alloc_dha_stack(void)
 	{
 		return 0;
 	}
-
-       	ptr = kmalloc(THREAD_SIZE * num_online_cpus(),GFP_KERNEL);
-	bzero(ptr,THREAD_SIZE );
+       	ptr = vmalloc(THREAD_SIZE * num_online_cpus());
        	if (!ptr) {
 		printk("vmalloc for dha_stacks failed\n");
 		return -ENOMEM;
 	}
+	bzero(ptr,THREAD_SIZE );
 
 	for (i = 0; i < num_online_cpus(); i++) {
 		dump_header_asm.dha_stack[i] = (uint64_t)((unsigned long)ptr + (i * THREAD_SIZE));
diff -urNp linux-2.6.5/drivers/dump/dump_methods.h linux-2.6.5.SUSE/drivers/dump/dump_methods.h
--- linux-2.6.5/drivers/dump/dump_methods.h	2004-05-27 16:31:44.168116328 +0200
+++ linux-2.6.5.SUSE/drivers/dump/dump_methods.h	2004-05-27 16:31:54.331240405 +0200
@@ -43,6 +43,7 @@
 #include <linux/slab.h>
 #include <linux/highmem.h>
 #include <linux/dumpdev.h>
+#include <asm/page.h>	/* get_order */
 
 #define MAX_PASSES 	6
 #define MAX_DEVS	4
@@ -330,7 +331,14 @@ static inline void dumper_reset(void)
  */
 static inline void *dump_alloc_mem(unsigned long size)
 {
+#if defined(CONFIG_IA64) && defined(CONFIG_IA64_PAGE_SIZE_64KB)
+	/*
+	 * Ok, kmalloc does not allow more than 128K. 
+	 */
+	return (void *) __get_free_pages(GFP_KERNEL, get_order(size));
+#else
 	return kmalloc(size, GFP_KERNEL);
+#endif
 }
 
 static inline void dump_free_mem(void *buf)
@@ -342,8 +350,15 @@ static inline void dump_free_mem(void *b
 		if (PageReserved(page))
 			return;
 	}
-
+#if defined(CONFIG_IA64) && defined(CONFIG_IA64_PAGE_SIZE_64KB)
+	/*
+	 * Allocated using __get_free_pages().
+	 */
+	free_pages((unsigned long)buf, 
+		get_order(DUMP_BUFFER_SIZE + 3 * DUMP_PAGE_SIZE));
+#else
 	kfree(buf);
+#endif
 }
 
 
