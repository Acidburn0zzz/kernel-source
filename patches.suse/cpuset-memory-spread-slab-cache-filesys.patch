From: Paul Jackson <pj@sgi.com>
Subject: Mark file system inode and similar slab caches subject to SLAB_MEM_SPREAD memory spreading.
References: 150185
Patch-mainline: yes

If a slab cache is marked SLAB_MEM_SPREAD, then anytime that a task that's
in a cpuset with the 'memory_spread_slab' option enabled goes to allocate
from such a slab cache, the allocations are spread evenly over all the
memory nodes (task->mems_allowed) allowed to that task, instead of favoring
allocation on the node local to the current cpu.

The following inode and similar caches are marked SLAB_MEM_SPREAD:

    file                               cache
    ====                               =====
    fs/adfs/super.c                    adfs_inode_cache
    fs/affs/super.c                    affs_inode_cache
    fs/befs/linuxvfs.c                 befs_inode_cache
    fs/bfs/inode.c                     bfs_inode_cache
    fs/block_dev.c                     bdev_cache
    fs/cifs/cifsfs.c                   cifs_inode_cache
    fs/coda/inode.c                    coda_inode_cache
    fs/dquot.c                         dquot
    fs/efs/super.c                     efs_inode_cache
    fs/ext2/super.c                    ext2_inode_cache
    fs/ext2/xattr.c (fs/mbcache.c)     ext2_xattr
    fs/ext3/super.c                    ext3_inode_cache
    fs/ext3/xattr.c (fs/mbcache.c)     ext3_xattr
    fs/fat/cache.c                     fat_cache
    fs/fat/inode.c                     fat_inode_cache
    fs/freevxfs/vxfs_super.c           vxfs_inode
    fs/hpfs/super.c                    hpfs_inode_cache
    fs/isofs/inode.c                   isofs_inode_cache
    fs/jffs/inode-v23.c                jffs_fm
    fs/jffs2/super.c                   jffs2_i
    fs/jfs/super.c                     jfs_ip
    fs/minix/inode.c                   minix_inode_cache
    fs/ncpfs/inode.c                   ncp_inode_cache
    fs/nfs/direct.c                    nfs_direct_cache
    fs/nfs/inode.c                     nfs_inode_cache
    fs/ntfs/super.c                    ntfs_big_inode_cache_name
    fs/ntfs/super.c                    ntfs_inode_cache
    fs/ocfs2/dlm/dlmfs.c               dlmfs_inode_cache
    fs/ocfs2/super.c                   ocfs2_inode_cache
    fs/proc/inode.c                    proc_inode_cache
    fs/qnx4/inode.c                    qnx4_inode_cache
    fs/reiserfs/super.c                reiser_inode_cache
    fs/romfs/inode.c                   romfs_inode_cache
    fs/smbfs/inode.c                   smb_inode_cache
    fs/sysv/inode.c                    sysv_inode_cache
    fs/udf/super.c                     udf_inode_cache
    fs/ufs/super.c                     ufs_inode_cache
    net/socket.c                       sock_inode_cache
    net/sunrpc/rpc_pipe.c              rpc_inode_cache

The choice of which slab caches to so mark was quite simple.  I marked
those already marked SLAB_RECLAIM_ACCOUNT, except for fs/xfs, dentry_cache,
inode_cache, and buffer_head, which were marked in a previous patch.  Even
though SLAB_RECLAIM_ACCOUNT is for a different purpose, it marks the same
potentially large file system i/o related slab caches as we need for memory
spreading.

Given that the rule now becomes "wherever you would have used a
SLAB_RECLAIM_ACCOUNT slab cache flag before (usually the inode cache), use
the SLAB_MEM_SPREAD flag too", this should be easy enough to maintain. 
Future file system writers will just copy one of the existing file system
slab cache setups and tend to get it right without thinking.

Signed-off-by: Paul Jackson <pj@sgi.com>
Signed-off-by: Andrew Morton <akpm@osdl.org>
Acked-by: Andreas Gruenbacher <agruen@suse.de>

---

 fs/adfs/super.c          |    2 +-
 fs/affs/super.c          |    2 +-
 fs/befs/linuxvfs.c       |    2 +-
 fs/bfs/inode.c           |    2 +-
 fs/block_dev.c           |    2 +-
 fs/cifs/cifsfs.c         |    2 +-
 fs/coda/inode.c          |    2 +-
 fs/dquot.c               |    2 +-
 fs/efs/super.c           |    2 +-
 fs/ext2/super.c          |    2 +-
 fs/ext3/super.c          |    2 +-
 fs/fat/cache.c           |    2 +-
 fs/fat/inode.c           |    2 +-
 fs/freevxfs/vxfs_super.c |    2 +-
 fs/hpfs/super.c          |    2 +-
 fs/isofs/inode.c         |    2 +-
 fs/jffs/inode-v23.c      |    4 ++--
 fs/jffs2/super.c         |    2 +-
 fs/jfs/super.c           |    2 +-
 fs/mbcache.c             |    2 +-
 fs/minix/inode.c         |    2 +-
 fs/ncpfs/inode.c         |    2 +-
 fs/nfs/direct.c          |    2 +-
 fs/nfs/inode.c           |    2 +-
 fs/ntfs/super.c          |    4 ++--
 fs/ocfs2/dlm/dlmfs.c     |    2 +-
 fs/ocfs2/super.c         |    2 +-
 fs/proc/inode.c          |    2 +-
 fs/qnx4/inode.c          |    2 +-
 fs/reiserfs/super.c      |    2 +-
 fs/romfs/inode.c         |    2 +-
 fs/smbfs/inode.c         |    2 +-
 fs/sysv/inode.c          |    2 +-
 fs/udf/super.c           |    2 +-
 fs/ufs/super.c           |    2 +-
 net/socket.c             |    2 +-
 net/sunrpc/rpc_pipe.c    |    2 +-
 37 files changed, 39 insertions(+), 39 deletions(-)

diff -puN fs/adfs/super.c~cpuset-memory-spread-slab-cache-filesys fs/adfs/super.c
--- devel/fs/adfs/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/adfs/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -241,7 +241,7 @@ static int init_inodecache(void)
 {
 	adfs_inode_cachep = kmem_cache_create("adfs_inode_cache",
 					     sizeof(struct adfs_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (adfs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/affs/super.c~cpuset-memory-spread-slab-cache-filesys fs/affs/super.c
--- devel/fs/affs/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/affs/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -98,7 +98,7 @@ static int init_inodecache(void)
 {
 	affs_inode_cachep = kmem_cache_create("affs_inode_cache",
 					     sizeof(struct affs_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (affs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/befs/linuxvfs.c~cpuset-memory-spread-slab-cache-filesys fs/befs/linuxvfs.c
--- devel/fs/befs/linuxvfs.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/befs/linuxvfs.c	2006-02-27 17:59:54.000000000 -0800
@@ -427,7 +427,7 @@ befs_init_inodecache(void)
 {
 	befs_inode_cachep = kmem_cache_create("befs_inode_cache",
 					      sizeof (struct befs_inode_info),
-					      0, SLAB_RECLAIM_ACCOUNT,
+					      0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					      init_once, NULL);
 	if (befs_inode_cachep == NULL) {
 		printk(KERN_ERR "befs_init_inodecache: "
diff -puN fs/bfs/inode.c~cpuset-memory-spread-slab-cache-filesys fs/bfs/inode.c
--- devel/fs/bfs/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/bfs/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -257,7 +257,7 @@ static int init_inodecache(void)
 {
 	bfs_inode_cachep = kmem_cache_create("bfs_inode_cache",
 					     sizeof(struct bfs_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (bfs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/block_dev.c~cpuset-memory-spread-slab-cache-filesys fs/block_dev.c
--- devel/fs/block_dev.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/block_dev.c	2006-02-27 17:59:54.000000000 -0800
@@ -319,7 +319,7 @@ void __init bdev_cache_init(void)
 {
 	int err;
 	bdev_cachep = kmem_cache_create("bdev_cache", sizeof(struct bdev_inode),
-			0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_PANIC,
+			0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD|SLAB_PANIC,
 			init_once, NULL);
 	err = register_filesystem(&bd_type);
 	if (err)
diff -puN fs/cifs/cifsfs.c~cpuset-memory-spread-slab-cache-filesys fs/cifs/cifsfs.c
--- devel/fs/cifs/cifsfs.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/cifs/cifsfs.c	2006-02-27 17:59:54.000000000 -0800
@@ -692,7 +692,7 @@ cifs_init_inodecache(void)
 {
 	cifs_inode_cachep = kmem_cache_create("cifs_inode_cache",
 					      sizeof (struct cifsInodeInfo),
-					      0, SLAB_RECLAIM_ACCOUNT,
+					      0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					      cifs_init_once, NULL);
 	if (cifs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/coda/inode.c~cpuset-memory-spread-slab-cache-filesys fs/coda/inode.c
--- devel/fs/coda/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/coda/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -71,7 +71,7 @@ int coda_init_inodecache(void)
 {
 	coda_inode_cachep = kmem_cache_create("coda_inode_cache",
 				sizeof(struct coda_inode_info),
-				0, SLAB_RECLAIM_ACCOUNT,
+				0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 				init_once, NULL);
 	if (coda_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/dquot.c~cpuset-memory-spread-slab-cache-filesys fs/dquot.c
--- devel/fs/dquot.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/dquot.c	2006-02-27 17:59:54.000000000 -0800
@@ -1817,7 +1817,7 @@ static int __init dquot_init(void)
 
 	dquot_cachep = kmem_cache_create("dquot", 
 			sizeof(struct dquot), sizeof(unsigned long) * 4,
-			SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_PANIC,
+			SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD|SLAB_PANIC,
 			NULL, NULL);
 
 	order = 0;
diff -puN fs/efs/super.c~cpuset-memory-spread-slab-cache-filesys fs/efs/super.c
--- devel/fs/efs/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/efs/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -81,7 +81,7 @@ static int init_inodecache(void)
 {
 	efs_inode_cachep = kmem_cache_create("efs_inode_cache",
 				sizeof(struct efs_inode_info),
-				0, SLAB_RECLAIM_ACCOUNT,
+				0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 				init_once, NULL);
 	if (efs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/ext2/super.c~cpuset-memory-spread-slab-cache-filesys fs/ext2/super.c
--- devel/fs/ext2/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/ext2/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -175,7 +175,7 @@ static int init_inodecache(void)
 {
 	ext2_inode_cachep = kmem_cache_create("ext2_inode_cache",
 					     sizeof(struct ext2_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (ext2_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/ext3/super.c~cpuset-memory-spread-slab-cache-filesys fs/ext3/super.c
--- devel/fs/ext3/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:53.000000000 -0800
+++ devel-akpm/fs/ext3/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -481,7 +481,7 @@ static int init_inodecache(void)
 {
 	ext3_inode_cachep = kmem_cache_create("ext3_inode_cache",
 					     sizeof(struct ext3_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (ext3_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/fat/cache.c~cpuset-memory-spread-slab-cache-filesys fs/fat/cache.c
--- devel/fs/fat/cache.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/fat/cache.c	2006-02-27 17:59:54.000000000 -0800
@@ -49,7 +49,7 @@ int __init fat_cache_init(void)
 {
 	fat_cache_cachep = kmem_cache_create("fat_cache",
 				sizeof(struct fat_cache),
-				0, SLAB_RECLAIM_ACCOUNT,
+				0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 				init_once, NULL);
 	if (fat_cache_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/fat/inode.c~cpuset-memory-spread-slab-cache-filesys fs/fat/inode.c
--- devel/fs/fat/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/fat/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -518,7 +518,7 @@ static int __init fat_init_inodecache(vo
 {
 	fat_inode_cachep = kmem_cache_create("fat_inode_cache",
 					     sizeof(struct msdos_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (fat_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/freevxfs/vxfs_super.c~cpuset-memory-spread-slab-cache-filesys fs/freevxfs/vxfs_super.c
--- devel/fs/freevxfs/vxfs_super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/freevxfs/vxfs_super.c	2006-02-27 17:59:54.000000000 -0800
@@ -260,7 +260,7 @@ vxfs_init(void)
 {
 	vxfs_inode_cachep = kmem_cache_create("vxfs_inode",
 			sizeof(struct vxfs_inode_info), 0, 
-			SLAB_RECLAIM_ACCOUNT, NULL, NULL);
+			SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD, NULL, NULL);
 	if (vxfs_inode_cachep)
 		return register_filesystem(&vxfs_fs_type);
 	return -ENOMEM;
diff -puN fs/hpfs/super.c~cpuset-memory-spread-slab-cache-filesys fs/hpfs/super.c
--- devel/fs/hpfs/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/hpfs/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -191,7 +191,7 @@ static int init_inodecache(void)
 {
 	hpfs_inode_cachep = kmem_cache_create("hpfs_inode_cache",
 					     sizeof(struct hpfs_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (hpfs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/isofs/inode.c~cpuset-memory-spread-slab-cache-filesys fs/isofs/inode.c
--- devel/fs/isofs/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/isofs/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -87,7 +87,7 @@ static int init_inodecache(void)
 {
 	isofs_inode_cachep = kmem_cache_create("isofs_inode_cache",
 					     sizeof(struct iso_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (isofs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/jffs2/super.c~cpuset-memory-spread-slab-cache-filesys fs/jffs2/super.c
--- devel/fs/jffs2/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/jffs2/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -331,7 +331,7 @@ static int __init init_jffs2_fs(void)
 
 	jffs2_inode_cachep = kmem_cache_create("jffs2_i",
 					     sizeof(struct jffs2_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     jffs2_i_init_once, NULL);
 	if (!jffs2_inode_cachep) {
 		printk(KERN_ERR "JFFS2 error: Failed to initialise inode cache\n");
diff -puN fs/jffs/inode-v23.c~cpuset-memory-spread-slab-cache-filesys fs/jffs/inode-v23.c
--- devel/fs/jffs/inode-v23.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/jffs/inode-v23.c	2006-02-27 17:59:54.000000000 -0800
@@ -1812,14 +1812,14 @@ init_jffs_fs(void)
 	}
 #endif
 	fm_cache = kmem_cache_create("jffs_fm", sizeof(struct jffs_fm),
-				     0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT, 
+				     0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 				     NULL, NULL);
 	if (!fm_cache) {
 		return -ENOMEM;
 	}
 
 	node_cache = kmem_cache_create("jffs_node",sizeof(struct jffs_node),
-				       0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT, 
+				       0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 				       NULL, NULL);
 	if (!node_cache) {
 		kmem_cache_destroy(fm_cache);
diff -puN fs/jfs/super.c~cpuset-memory-spread-slab-cache-filesys fs/jfs/super.c
--- devel/fs/jfs/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/jfs/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -634,7 +634,7 @@ static int __init init_jfs_fs(void)
 
 	jfs_inode_cachep =
 	    kmem_cache_create("jfs_ip", sizeof(struct jfs_inode_info), 0, 
-			    SLAB_RECLAIM_ACCOUNT, init_once, NULL);
+			    SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD, init_once, NULL);
 	if (jfs_inode_cachep == NULL)
 		return -ENOMEM;
 
diff -puN fs/mbcache.c~cpuset-memory-spread-slab-cache-filesys fs/mbcache.c
--- devel/fs/mbcache.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/mbcache.c	2006-02-27 17:59:54.000000000 -0800
@@ -288,7 +288,7 @@ mb_cache_create(const char *name, struct
 			INIT_LIST_HEAD(&cache->c_indexes_hash[m][n]);
 	}
 	cache->c_entry_cache = kmem_cache_create(name, entry_size, 0,
-		SLAB_RECLAIM_ACCOUNT, NULL, NULL);
+		SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD, NULL, NULL);
 	if (!cache->c_entry_cache)
 		goto fail;
 
diff -puN fs/minix/inode.c~cpuset-memory-spread-slab-cache-filesys fs/minix/inode.c
--- devel/fs/minix/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/minix/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -80,7 +80,7 @@ static int init_inodecache(void)
 {
 	minix_inode_cachep = kmem_cache_create("minix_inode_cache",
 					     sizeof(struct minix_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (minix_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/ncpfs/inode.c~cpuset-memory-spread-slab-cache-filesys fs/ncpfs/inode.c
--- devel/fs/ncpfs/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/ncpfs/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -72,7 +72,7 @@ static int init_inodecache(void)
 {
 	ncp_inode_cachep = kmem_cache_create("ncp_inode_cache",
 					     sizeof(struct ncp_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (ncp_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/nfs/direct.c~cpuset-memory-spread-slab-cache-filesys fs/nfs/direct.c
--- devel/fs/nfs/direct.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/nfs/direct.c	2006-02-27 17:59:54.000000000 -0800
@@ -898,7 +898,7 @@ int nfs_init_directcache(void)
 {
 	nfs_direct_cachep = kmem_cache_create("nfs_direct_cache",
 						sizeof(struct nfs_direct_req),
-						0, SLAB_RECLAIM_ACCOUNT,
+						0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 						NULL, NULL);
 	if (nfs_direct_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/nfs/inode.c~cpuset-memory-spread-slab-cache-filesys fs/nfs/inode.c
--- devel/fs/nfs/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/nfs/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -2276,7 +2276,7 @@ static int nfs_init_inodecache(void)
 {
 	nfs_inode_cachep = kmem_cache_create("nfs_inode_cache",
 					     sizeof(struct nfs_inode),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (nfs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/ntfs/super.c~cpuset-memory-spread-slab-cache-filesys fs/ntfs/super.c
--- devel/fs/ntfs/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/ntfs/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -3151,7 +3151,7 @@ static int __init init_ntfs_fs(void)
 
 	ntfs_inode_cache = kmem_cache_create(ntfs_inode_cache_name,
 			sizeof(ntfs_inode), 0,
-			SLAB_RECLAIM_ACCOUNT, NULL, NULL);
+			SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD, NULL, NULL);
 	if (!ntfs_inode_cache) {
 		printk(KERN_CRIT "NTFS: Failed to create %s!\n",
 				ntfs_inode_cache_name);
@@ -3160,7 +3160,7 @@ static int __init init_ntfs_fs(void)
 
 	ntfs_big_inode_cache = kmem_cache_create(ntfs_big_inode_cache_name,
 			sizeof(big_ntfs_inode), 0,
-			SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT,
+			SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 			ntfs_big_inode_init_once, NULL);
 	if (!ntfs_big_inode_cache) {
 		printk(KERN_CRIT "NTFS: Failed to create %s!\n",
diff -puN fs/ocfs2/dlm/dlmfs.c~cpuset-memory-spread-slab-cache-filesys fs/ocfs2/dlm/dlmfs.c
--- devel/fs/ocfs2/dlm/dlmfs.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/ocfs2/dlm/dlmfs.c	2006-02-27 17:59:54.000000000 -0800
@@ -596,7 +596,7 @@ static int __init init_dlmfs_fs(void)
 
 	dlmfs_inode_cache = kmem_cache_create("dlmfs_inode_cache",
 				sizeof(struct dlmfs_inode_private),
-				0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT,
+				0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 				dlmfs_init_once, NULL);
 	if (!dlmfs_inode_cache)
 		return -ENOMEM;
diff -puN fs/ocfs2/super.c~cpuset-memory-spread-slab-cache-filesys fs/ocfs2/super.c
--- devel/fs/ocfs2/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/ocfs2/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -951,7 +951,7 @@ static int ocfs2_initialize_mem_caches(v
 {
 	ocfs2_inode_cachep = kmem_cache_create("ocfs2_inode_cache",
 					       sizeof(struct ocfs2_inode_info),
-					       0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT,
+					       0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					       ocfs2_inode_init_once, NULL);
 	if (!ocfs2_inode_cachep)
 		return -ENOMEM;
diff -puN fs/proc/inode.c~cpuset-memory-spread-slab-cache-filesys fs/proc/inode.c
--- devel/fs/proc/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/proc/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -121,7 +121,7 @@ int __init proc_init_inodecache(void)
 {
 	proc_inode_cachep = kmem_cache_create("proc_inode_cache",
 					     sizeof(struct proc_inode),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (proc_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/qnx4/inode.c~cpuset-memory-spread-slab-cache-filesys fs/qnx4/inode.c
--- devel/fs/qnx4/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/qnx4/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -546,7 +546,7 @@ static int init_inodecache(void)
 {
 	qnx4_inode_cachep = kmem_cache_create("qnx4_inode_cache",
 					     sizeof(struct qnx4_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (qnx4_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/reiserfs/super.c~cpuset-memory-spread-slab-cache-filesys fs/reiserfs/super.c
--- devel/fs/reiserfs/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/reiserfs/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -521,7 +521,7 @@ static int init_inodecache(void)
 	reiserfs_inode_cachep = kmem_cache_create("reiser_inode_cache",
 						  sizeof(struct
 							 reiserfs_inode_info),
-						  0, SLAB_RECLAIM_ACCOUNT,
+						  0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 						  init_once, NULL);
 	if (reiserfs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/romfs/inode.c~cpuset-memory-spread-slab-cache-filesys fs/romfs/inode.c
--- devel/fs/romfs/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/romfs/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -579,7 +579,7 @@ static int init_inodecache(void)
 {
 	romfs_inode_cachep = kmem_cache_create("romfs_inode_cache",
 					     sizeof(struct romfs_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (romfs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/smbfs/inode.c~cpuset-memory-spread-slab-cache-filesys fs/smbfs/inode.c
--- devel/fs/smbfs/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/smbfs/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -80,7 +80,7 @@ static int init_inodecache(void)
 {
 	smb_inode_cachep = kmem_cache_create("smb_inode_cache",
 					     sizeof(struct smb_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (smb_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/sysv/inode.c~cpuset-memory-spread-slab-cache-filesys fs/sysv/inode.c
--- devel/fs/sysv/inode.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/sysv/inode.c	2006-02-27 17:59:54.000000000 -0800
@@ -342,7 +342,7 @@ int __init sysv_init_icache(void)
 {
 	sysv_inode_cachep = kmem_cache_create("sysv_inode_cache",
 			sizeof(struct sysv_inode_info), 0,
-			SLAB_RECLAIM_ACCOUNT,
+			SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 			init_once, NULL);
 	if (!sysv_inode_cachep)
 		return -ENOMEM;
diff -puN fs/udf/super.c~cpuset-memory-spread-slab-cache-filesys fs/udf/super.c
--- devel/fs/udf/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/udf/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -140,7 +140,7 @@ static int init_inodecache(void)
 {
 	udf_inode_cachep = kmem_cache_create("udf_inode_cache",
 					     sizeof(struct udf_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (udf_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN fs/ufs/super.c~cpuset-memory-spread-slab-cache-filesys fs/ufs/super.c
--- devel/fs/ufs/super.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/fs/ufs/super.c	2006-02-27 17:59:54.000000000 -0800
@@ -1184,7 +1184,7 @@ static int init_inodecache(void)
 {
 	ufs_inode_cachep = kmem_cache_create("ufs_inode_cache",
 					     sizeof(struct ufs_inode_info),
-					     0, SLAB_RECLAIM_ACCOUNT,
+					     0, SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 					     init_once, NULL);
 	if (ufs_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN net/socket.c~cpuset-memory-spread-slab-cache-filesys net/socket.c
--- devel/net/socket.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/net/socket.c	2006-02-27 17:59:54.000000000 -0800
@@ -319,7 +319,7 @@ static int init_inodecache(void)
 {
 	sock_inode_cachep = kmem_cache_create("sock_inode_cache",
 				sizeof(struct socket_alloc),
-				0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT,
+				0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
 				init_once, NULL);
 	if (sock_inode_cachep == NULL)
 		return -ENOMEM;
diff -puN net/sunrpc/rpc_pipe.c~cpuset-memory-spread-slab-cache-filesys net/sunrpc/rpc_pipe.c
--- devel/net/sunrpc/rpc_pipe.c~cpuset-memory-spread-slab-cache-filesys	2006-02-27 17:59:54.000000000 -0800
+++ devel-akpm/net/sunrpc/rpc_pipe.c	2006-02-27 17:59:54.000000000 -0800
@@ -851,7 +851,7 @@ int register_rpc_pipefs(void)
 {
 	rpc_inode_cachep = kmem_cache_create("rpc_inode_cache",
                                              sizeof(struct rpc_inode),
-                                             0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT,
+                                             0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD,
                                              init_once, NULL);
 	if (!rpc_inode_cachep)
 		return -ENOMEM;
_
