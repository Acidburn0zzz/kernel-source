From: Mel Gorman <mgorman@suse.de>
Date: Thu, 30 Jan 2020 10:20:40 +0000
Subject: [PATCH] sched/numa: Trace when no candidate CPU was found on the
 preferred node

Patch-mainline: Submitted - https://lore.kernel.org/lkml/20200214081324.26859-1-mgorman@techsingularity.net/
References: bnc#1155798 (CPU scheduler functional and performance backports)

sched:sched_stick_numa is meant to fire when a task is unable to migrate
to the preferred node. The case where no candidate CPU could be found is
not traced which is an important gap. The tracepoint is not fired when
the task is not allowed to run on any CPU on the preferred node or the
task is already running on the target CPU but neither are interesting
corner cases.

Signed-off-by: Mel Gorman <mgorman@suse.de>
Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 kernel/sched/fair.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 1f67bc82fa6d..4475574e99ad 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -1849,8 +1849,10 @@ static int task_numa_migrate(struct task_struct *p)
 	}
 
 	/* No better CPU than the current one was found. */
-	if (env.best_cpu == -1)
+	if (env.best_cpu == -1) {
+		trace_sched_stick_numa(p, env.src_cpu, -1);
 		return -EAGAIN;
+	}
 
 	best_rq = cpu_rq(env.best_cpu);
 	if (env.best_task == NULL) {
