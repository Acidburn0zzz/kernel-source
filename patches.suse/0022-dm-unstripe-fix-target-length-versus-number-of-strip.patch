From cc65661981ae2424e27c695ae8d15604448eb666 Mon Sep 17 00:00:00 2001
From: Scott Bauer <scott.bauer@intel.com>
Date: Tue, 23 Jan 2018 10:55:18 -0700
Subject: [PATCH] dm unstripe: fix target length versus number of stripes size
 check
Git-commit: cc65661981ae2424e27c695ae8d15604448eb666
References: bsc#1111974
Patch-mainline: v4.16-rc1

Since the unstripe target takes a target length which is the
size of *one* striped member we're trying to expose, not the
total size of *all* the striped members, the check does not
make sense and fails for some striped setups.

For example, say we have a 4TB striped device:
or 3907018496 sectors per underlying device:

if (sector_div(width, uc->stripes)) :
   3907018496 / 2(num stripes)  == 1953509248

tmp_len = width;
if (sector_div(tmp_len, uc->chunk_size)) :
   1953509248 / 256(chunk size) == 7630895.5
   (fails)

Fix this by removing the first check which isn't valid for unstriping.

Signed-off-by: Scott Bauer <scott.bauer@intel.com>
Signed-off-by: Mike Snitzer <snitzer@redhat.com>
Signed-off-by: Coly Li <colyli@suse.de>

---
 drivers/md/dm-unstripe.c | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

diff --git a/drivers/md/dm-unstripe.c b/drivers/md/dm-unstripe.c
index 061b4f10bf5c..65f838fa2e99 100644
--- a/drivers/md/dm-unstripe.c
+++ b/drivers/md/dm-unstripe.c
@@ -44,7 +44,7 @@ static void cleanup_unstripe(struct unstripe_c *uc, struct dm_target *ti)
 static int unstripe_ctr(struct dm_target *ti, unsigned int argc, char **argv)
 {
 	struct unstripe_c *uc;
-	sector_t width, tmp_len;
+	sector_t tmp_len;
 	unsigned long long start;
 	char dummy;
 
@@ -100,13 +100,7 @@ static int unstripe_ctr(struct dm_target *ti, unsigned int argc, char **argv)
 	uc->unstripe_width = (uc->stripes - 1) * uc->chunk_size;
 	uc->chunk_shift = fls(uc->chunk_size) - 1;
 
-	width = ti->len;
-	if (sector_div(width, uc->stripes)) {
-		ti->error = "Target length not divisible by number of stripes";
-		goto err;
-	}
-
-	tmp_len = width;
+	tmp_len = ti->len;
 	if (sector_div(tmp_len, uc->chunk_size)) {
 		ti->error = "Target length not divisible by chunk size";
 		goto err;
-- 
2.19.0

