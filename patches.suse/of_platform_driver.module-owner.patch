Subject: add missing module symlink to /sys/bus/*/driver/* in struct of_platform_driver
From: olh@suse.de
---
 Documentation/sparc/sbus_drivers.txt       |    1 +
 arch/powerpc/kernel/of_platform.c          |    1 +
 arch/powerpc/platforms/52xx/mpc52xx_gpio.c |    3 +++
 arch/powerpc/platforms/82xx/ep8248e.c      |    1 +
 arch/powerpc/platforms/83xx/suspend.c      |    1 +
 arch/powerpc/platforms/cell/axon_msi.c     |    1 +
 arch/powerpc/platforms/pasemi/gpio_mdio.c  |    1 +
 arch/powerpc/sysdev/fsl_msi.c              |    1 +
 arch/powerpc/sysdev/fsl_rio.c              |    1 +
 arch/powerpc/sysdev/pmi.c                  |    1 +
 arch/sparc/include/asm/parport.h           |    1 +
 arch/sparc/kernel/time.c                   |    1 +
 arch/sparc64/kernel/auxio.c                |    1 +
 arch/sparc64/kernel/power.c                |    1 +
 arch/sparc64/kernel/time.c                 |    1 +
 drivers/ata/pata_of_platform.c             |    1 +
 drivers/ata/sata_fsl.c                     |    1 +
 drivers/char/hw_random/n2-drv.c            |    1 +
 drivers/char/hw_random/pasemi-rng.c        |    1 +
 drivers/char/ipmi/ipmi_si_intf.c           |    1 +
 drivers/crypto/talitos.c                   |    1 +
 drivers/dma/fsldma.c                       |    2 ++
 drivers/i2c/busses/i2c-ibm_iic.c           |    1 +
 drivers/infiniband/hw/ehca/ehca_main.c     |    1 +
 drivers/input/misc/sparcspkr.c             |    2 ++
 drivers/input/serio/i8042-sparcio.h        |    1 +
 drivers/input/serio/xilinx_ps2.c           |    1 +
 drivers/macintosh/smu.c                    |    1 +
 drivers/macintosh/therm_pm72.c             |    1 +
 drivers/macintosh/therm_windtunnel.c       |    1 +
 drivers/mtd/maps/physmap_of.c              |    1 +
 drivers/mtd/maps/sun_uflash.c              |    1 +
 drivers/mtd/nand/fsl_elbc_nand.c           |    1 +
 drivers/mtd/nand/fsl_upm.c                 |    1 +
 drivers/mtd/nand/pasemi_nand.c             |    1 +
 drivers/net/ehea/ehea_main.c               |    1 +
 drivers/net/fec_mpc52xx_phy.c              |    1 +
 drivers/net/fs_enet/fs_enet-main.c         |    1 +
 drivers/net/fs_enet/mii-bitbang.c          |    1 +
 drivers/net/fs_enet/mii-fec.c              |    1 +
 drivers/net/ibm_newemac/core.c             |    1 +
 drivers/net/ibm_newemac/mal.c              |    1 +
 drivers/net/ibm_newemac/rgmii.c            |    1 +
 drivers/net/ibm_newemac/tah.c              |    1 +
 drivers/net/ibm_newemac/zmii.c             |    1 +
 drivers/net/myri_sbus.c                    |    1 +
 drivers/net/niu.c                          |    1 +
 drivers/net/phy/mdio-ofgpio.c              |    1 +
 drivers/net/sunbmac.c                      |    1 +
 drivers/net/sunhme.c                       |    1 +
 drivers/net/sunlance.c                     |    1 +
 drivers/net/sunqe.c                        |    1 +
 drivers/net/ucc_geth.c                     |    1 +
 drivers/net/ucc_geth_mii.c                 |    1 +
 drivers/parport/parport_sunbpp.c           |    1 +
 drivers/pcmcia/electra_cf.c                |    1 +
 drivers/pcmcia/m8xx_pcmcia.c               |    1 +
 drivers/scsi/qlogicpti.c                   |    1 +
 drivers/scsi/sun_esp.c                     |    1 +
 drivers/serial/cpm_uart/cpm_uart_core.c    |    1 +
 drivers/serial/mpc52xx_uart.c              |    1 +
 drivers/serial/sunhv.c                     |    1 +
 drivers/serial/sunsab.c                    |    1 +
 drivers/serial/sunsu.c                     |    1 +
 drivers/serial/sunzilog.c                  |    1 +
 drivers/usb/host/isp1760-if.c              |    1 +
 drivers/video/bw2.c                        |    1 +
 drivers/video/cg14.c                       |    1 +
 drivers/video/cg3.c                        |    1 +
 drivers/video/cg6.c                        |    1 +
 drivers/video/ffb.c                        |    1 +
 drivers/video/leo.c                        |    1 +
 drivers/video/p9100.c                      |    1 +
 drivers/video/platinumfb.c                 |    1 +
 drivers/video/tcx.c                        |    1 +
 sound/sparc/amd7930.c                      |    1 +
 sound/sparc/dbri.c                         |    1 +
 77 files changed, 81 insertions(+)

--- a/arch/powerpc/kernel/of_platform.c
+++ b/arch/powerpc/kernel/of_platform.c
@@ -307,6 +307,7 @@ static struct of_device_id of_pci_phb_id
 };
 
 static struct of_platform_driver of_pci_phb_driver = {
+	.owner = THIS_MODULE,
 	.match_table = of_pci_phb_ids,
 	.probe = of_pci_phb_probe,
 	.driver = {
--- a/arch/powerpc/platforms/52xx/mpc52xx_gpio.c
+++ b/arch/powerpc/platforms/52xx/mpc52xx_gpio.c
@@ -192,6 +192,7 @@ static const struct of_device_id mpc52xx
 };
 
 static struct of_platform_driver mpc52xx_wkup_gpiochip_driver = {
+	.owner = THIS_MODULE,
 	.name = "gpio_wkup",
 	.match_table = mpc52xx_wkup_gpiochip_match,
 	.probe = mpc52xx_wkup_gpiochip_probe,
@@ -348,6 +349,7 @@ static const struct of_device_id mpc52xx
 };
 
 static struct of_platform_driver mpc52xx_simple_gpiochip_driver = {
+	.owner = THIS_MODULE,
 	.name = "gpio",
 	.match_table = mpc52xx_simple_gpiochip_match,
 	.probe = mpc52xx_simple_gpiochip_probe,
@@ -433,6 +435,7 @@ static const struct of_device_id mpc52xx
 };
 
 static struct of_platform_driver mpc52xx_gpt_gpiochip_driver = {
+	.owner = THIS_MODULE,
 	.name = "gpio_gpt",
 	.match_table = mpc52xx_gpt_gpiochip_match,
 	.probe = mpc52xx_gpt_gpiochip_probe,
--- a/arch/powerpc/platforms/82xx/ep8248e.c
+++ b/arch/powerpc/platforms/82xx/ep8248e.c
@@ -163,6 +163,7 @@ static struct of_platform_driver ep8248e
 	.match_table = ep8248e_mdio_match,
 	.probe = ep8248e_mdio_probe,
 	.remove = ep8248e_mdio_remove,
+	.owner = THIS_MODULE,
 };
 
 struct cpm_pin {
--- a/arch/powerpc/platforms/83xx/suspend.c
+++ b/arch/powerpc/platforms/83xx/suspend.c
@@ -374,6 +374,7 @@ static struct of_device_id pmc_match[] =
 };
 
 static struct of_platform_driver pmc_driver = {
+	.owner = THIS_MODULE,
 	.name = "mpc83xx-pmc",
 	.match_table = pmc_match,
 	.probe = pmc_probe,
--- a/arch/powerpc/platforms/cell/axon_msi.c
+++ b/arch/powerpc/platforms/cell/axon_msi.c
@@ -417,6 +417,7 @@ static const struct of_device_id axon_ms
 };
 
 static struct of_platform_driver axon_msi_driver = {
+	.owner		= THIS_MODULE,
 	.match_table	= axon_msi_device_id,
 	.probe		= axon_msi_probe,
 	.shutdown	= axon_msi_shutdown,
--- a/arch/powerpc/platforms/pasemi/gpio_mdio.c
+++ b/arch/powerpc/platforms/pasemi/gpio_mdio.c
@@ -322,6 +322,7 @@ MODULE_DEVICE_TABLE(of, gpio_mdio_match)
 
 static struct of_platform_driver gpio_mdio_driver =
 {
+	.owner		= THIS_MODULE,
 	.match_table	= gpio_mdio_match,
 	.probe		= gpio_mdio_probe,
 	.remove		= gpio_mdio_remove,
--- a/arch/powerpc/sysdev/fsl_msi.c
+++ b/arch/powerpc/sysdev/fsl_msi.c
@@ -416,6 +416,7 @@ static const struct of_device_id fsl_of_
 };
 
 static struct of_platform_driver fsl_of_msi_driver = {
+	.owner = THIS_MODULE,
 	.name = "fsl-msi",
 	.match_table = fsl_of_msi_ids,
 	.probe = fsl_of_msi_probe,
--- a/arch/powerpc/sysdev/fsl_rio.c
+++ b/arch/powerpc/sysdev/fsl_rio.c
@@ -1197,6 +1197,7 @@ static const struct of_device_id fsl_of_
 };
 
 static struct of_platform_driver fsl_of_rio_rpn_driver = {
+	.owner = THIS_MODULE,
 	.name = "fsl-of-rio",
 	.match_table = fsl_of_rio_rpn_ids,
 	.probe = fsl_of_rio_rpn_probe,
--- a/arch/powerpc/sysdev/pmi.c
+++ b/arch/powerpc/sysdev/pmi.c
@@ -205,6 +205,7 @@ static int pmi_of_remove(struct of_devic
 }
 
 static struct of_platform_driver pmi_of_platform_driver = {
+	.owner		= THIS_MODULE,
 	.match_table	= pmi_match,
 	.probe		= pmi_of_probe,
 	.remove		= pmi_of_remove,
--- a/arch/sparc64/kernel/auxio.c
+++ b/arch/sparc64/kernel/auxio.c
@@ -148,6 +148,7 @@ static int __devinit auxio_probe(struct 
 }
 
 static struct of_platform_driver auxio_driver = {
+	.owner		= THIS_MODULE,
 	.match_table	= auxio_match,
 	.probe		= auxio_probe,
 	.driver		= {
--- a/arch/sparc64/kernel/power.c
+++ b/arch/sparc64/kernel/power.c
@@ -104,6 +104,7 @@ static struct of_device_id power_match[]
 };
 
 static struct of_platform_driver power_driver = {
+	.owner		= THIS_MODULE,
 	.match_table	= power_match,
 	.probe		= power_probe,
 	.driver		= {
--- a/arch/sparc64/kernel/time.c
+++ b/arch/sparc64/kernel/time.c
@@ -777,6 +777,7 @@ static struct of_device_id clock_match[]
 };
 
 static struct of_platform_driver clock_driver = {
+	.owner		= THIS_MODULE,
 	.match_table	= clock_match,
 	.probe		= clock_probe,
 	.driver		= {
--- a/arch/sparc/include/asm/parport.h
+++ b/arch/sparc/include/asm/parport.h
@@ -231,6 +231,7 @@ static struct of_device_id ecpp_match[] 
 };
 
 static struct of_platform_driver ecpp_driver = {
+	.owner			= THIS_MODULE,
 	.name			= "ecpp",
 	.match_table		= ecpp_match,
 	.probe			= ecpp_probe,
--- a/arch/sparc/kernel/time.c
+++ b/arch/sparc/kernel/time.c
@@ -345,6 +345,7 @@ static struct of_device_id clock_match[]
 };
 
 static struct of_platform_driver clock_driver = {
+	.owner		= THIS_MODULE,
 	.match_table	= clock_match,
 	.probe		= clock_probe,
 	.driver		= {
--- a/Documentation/sparc/sbus_drivers.txt
+++ b/Documentation/sparc/sbus_drivers.txt
@@ -68,6 +68,7 @@ probe in an SBUS driver under Linux:
 
 	static struct of_platform_driver mydevice_driver = {
 		.match_table	= mydevice_match,
+		.owner		= THIS_MODULE,
 		.probe		= mydevice_probe,
 		.remove		= __devexit_p(mydevice_remove),
 		.driver		= {
--- a/drivers/ata/pata_of_platform.c
+++ b/drivers/ata/pata_of_platform.c
@@ -91,6 +91,7 @@ static struct of_device_id pata_of_platf
 MODULE_DEVICE_TABLE(of, pata_of_platform_match);
 
 static struct of_platform_driver pata_of_platform_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "pata_of_platform",
 	.match_table	= pata_of_platform_match,
 	.probe		= pata_of_platform_probe,
--- a/drivers/ata/sata_fsl.c
+++ b/drivers/ata/sata_fsl.c
@@ -1385,6 +1385,7 @@ static struct of_device_id fsl_sata_matc
 MODULE_DEVICE_TABLE(of, fsl_sata_match);
 
 static struct of_platform_driver fsl_sata_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "fsl-sata",
 	.match_table	= fsl_sata_match,
 	.probe		= sata_fsl_probe,
--- a/drivers/char/hw_random/n2-drv.c
+++ b/drivers/char/hw_random/n2-drv.c
@@ -751,6 +751,7 @@ static struct of_device_id n2rng_match[]
 MODULE_DEVICE_TABLE(of, n2rng_match);
 
 static struct of_platform_driver n2rng_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "n2rng",
 	.match_table	= n2rng_match,
 	.probe		= n2rng_probe,
--- a/drivers/char/hw_random/pasemi-rng.c
+++ b/drivers/char/hw_random/pasemi-rng.c
@@ -140,6 +140,7 @@ static struct of_device_id rng_match[] =
 };
 
 static struct of_platform_driver rng_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "pasemi-rng",
 	.match_table	= rng_match,
 	.probe		= rng_probe,
--- a/drivers/char/ipmi/ipmi_si_intf.c
+++ b/drivers/char/ipmi/ipmi_si_intf.c
@@ -2400,6 +2400,7 @@ static struct of_device_id ipmi_match[] 
 };
 
 static struct of_platform_driver ipmi_of_platform_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "ipmi",
 	.match_table	= ipmi_match,
 	.probe		= ipmi_of_probe,
--- a/drivers/crypto/talitos.c
+++ b/drivers/crypto/talitos.c
@@ -1619,6 +1619,7 @@ static struct of_device_id talitos_match
 MODULE_DEVICE_TABLE(of, talitos_match);
 
 static struct of_platform_driver talitos_driver = {
+	.owner = THIS_MODULE,
 	.name = "talitos",
 	.match_table = talitos_match,
 	.probe = talitos_probe,
--- a/drivers/dma/fsldma.c
+++ b/drivers/dma/fsldma.c
@@ -1036,6 +1036,7 @@ static struct of_device_id of_fsl_dma_ch
 };
 
 static struct of_platform_driver of_fsl_dma_chan_driver = {
+	.owner = THIS_MODULE,
 	.name = "of-fsl-dma-channel",
 	.match_table = of_fsl_dma_chan_ids,
 	.probe = of_fsl_dma_chan_probe,
@@ -1116,6 +1117,7 @@ static struct of_device_id of_fsl_dma_id
 };
 
 static struct of_platform_driver of_fsl_dma_driver = {
+	.owner = THIS_MODULE,
 	.name = "of-fsl-dma",
 	.match_table = of_fsl_dma_ids,
 	.probe = of_fsl_dma_probe,
--- a/drivers/i2c/busses/i2c-ibm_iic.c
+++ b/drivers/i2c/busses/i2c-ibm_iic.c
@@ -807,6 +807,7 @@ static const struct of_device_id ibm_iic
 };
 
 static struct of_platform_driver ibm_iic_driver = {
+	.owner = THIS_MODULE,
 	.name	= "ibm-iic",
 	.match_table = ibm_iic_match,
 	.probe	= iic_probe,
--- a/drivers/infiniband/hw/ehca/ehca_main.c
+++ b/drivers/infiniband/hw/ehca/ehca_main.c
@@ -927,6 +927,7 @@ MODULE_DEVICE_TABLE(of, ehca_device_tabl
 
 static struct of_platform_driver ehca_driver = {
 	.name        = "ehca",
+	.owner       = THIS_MODULE,
 	.match_table = ehca_device_table,
 	.probe       = ehca_probe,
 	.remove      = ehca_remove,
--- a/drivers/input/misc/sparcspkr.c
+++ b/drivers/input/misc/sparcspkr.c
@@ -258,6 +258,7 @@ static struct of_device_id bbc_beep_matc
 };
 
 static struct of_platform_driver bbc_beep_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "bbcbeep",
 	.match_table	= bbc_beep_match,
 	.probe		= bbc_beep_probe,
@@ -337,6 +338,7 @@ static struct of_device_id grover_beep_m
 };
 
 static struct of_platform_driver grover_beep_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "groverbeep",
 	.match_table	= grover_beep_match,
 	.probe		= grover_beep_probe,
--- a/drivers/input/serio/i8042-sparcio.h
+++ b/drivers/input/serio/i8042-sparcio.h
@@ -96,6 +96,7 @@ static struct of_device_id sparc_i8042_m
 MODULE_DEVICE_TABLE(of, sparc_i8042_match);
 
 static struct of_platform_driver sparc_i8042_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "i8042",
 	.match_table	= sparc_i8042_match,
 	.probe		= sparc_i8042_probe,
--- a/drivers/input/serio/xilinx_ps2.c
+++ b/drivers/input/serio/xilinx_ps2.c
@@ -355,6 +355,7 @@ static struct of_device_id xps2_of_match
 MODULE_DEVICE_TABLE(of, xps2_of_match);
 
 static struct of_platform_driver xps2_of_driver = {
+	.owner		= THIS_MODULE,
 	.name		= DRIVER_NAME,
 	.match_table	= xps2_of_match,
 	.probe		= xps2_of_probe,
--- a/drivers/macintosh/smu.c
+++ b/drivers/macintosh/smu.c
@@ -670,6 +670,7 @@ static struct of_device_id smu_platform_
 
 static struct of_platform_driver smu_of_platform_driver =
 {
+	.owner		= THIS_MODULE,
 	.name 		= "smu",
 	.match_table	= smu_platform_match,
 	.probe		= smu_platform_probe,
--- a/drivers/macintosh/therm_pm72.c
+++ b/drivers/macintosh/therm_pm72.c
@@ -2220,6 +2220,7 @@ static struct of_device_id fcu_match[] =
 
 static struct of_platform_driver fcu_of_platform_driver = 
 {
+	.owner		= THIS_MODULE,
 	.name 		= "temperature",
 	.match_table	= fcu_match,
 	.probe		= fcu_of_probe,
--- a/drivers/macintosh/therm_windtunnel.c
+++ b/drivers/macintosh/therm_windtunnel.c
@@ -470,6 +470,7 @@ static struct of_device_id therm_of_matc
 };
 
 static struct of_platform_driver therm_of_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "temperature",
 	.match_table	= therm_of_match,
 	.probe		= therm_of_probe,
--- a/drivers/mtd/maps/physmap_of.c
+++ b/drivers/mtd/maps/physmap_of.c
@@ -281,6 +281,7 @@ static struct of_device_id of_flash_matc
 MODULE_DEVICE_TABLE(of, of_flash_match);
 
 static struct of_platform_driver of_flash_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "of-flash",
 	.match_table	= of_flash_match,
 	.probe		= of_flash_probe,
--- a/drivers/mtd/maps/sun_uflash.c
+++ b/drivers/mtd/maps/sun_uflash.c
@@ -151,6 +151,7 @@ static struct of_device_id uflash_match[
 MODULE_DEVICE_TABLE(of, uflash_match);
 
 static struct of_platform_driver uflash_driver = {
+	.owner		= THIS_MODULE,
 	.name		= UFLASH_DEVNAME,
 	.match_table	= uflash_match,
 	.probe		= uflash_probe,
--- a/drivers/mtd/nand/fsl_elbc_nand.c
+++ b/drivers/mtd/nand/fsl_elbc_nand.c
@@ -1079,6 +1079,7 @@ static const struct of_device_id fsl_elb
 static struct of_platform_driver fsl_elbc_ctrl_driver = {
 	.driver = {
 		.name	= "fsl-elbc",
+		.owner	= THIS_MODULE,
 	},
 	.match_table = fsl_elbc_match,
 	.probe = fsl_elbc_ctrl_probe,
--- a/drivers/mtd/nand/fsl_upm.c
+++ b/drivers/mtd/nand/fsl_upm.c
@@ -267,6 +267,7 @@ static struct of_device_id of_fun_match[
 MODULE_DEVICE_TABLE(of, of_fun_match);
 
 static struct of_platform_driver of_fun_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "fsl,upm-nand",
 	.match_table	= of_fun_match,
 	.probe		= fun_probe,
--- a/drivers/mtd/nand/pasemi_nand.c
+++ b/drivers/mtd/nand/pasemi_nand.c
@@ -220,6 +220,7 @@ MODULE_DEVICE_TABLE(of, pasemi_nand_matc
 
 static struct of_platform_driver pasemi_nand_driver =
 {
+	.owner		= THIS_MODULE,
 	.name		= (char*)driver_name,
 	.match_table	= pasemi_nand_match,
 	.probe		= pasemi_nand_probe,
--- a/drivers/net/ehea/ehea_main.c
+++ b/drivers/net/ehea/ehea_main.c
@@ -122,6 +122,7 @@ MODULE_DEVICE_TABLE(of, ehea_device_tabl
 
 static struct of_platform_driver ehea_driver = {
 	.name = "ehea",
+	.owner = THIS_MODULE,
 	.match_table = ehea_device_table,
 	.probe = ehea_probe_adapter,
 	.remove = ehea_remove,
--- a/drivers/net/fec_mpc52xx_phy.c
+++ b/drivers/net/fec_mpc52xx_phy.c
@@ -185,6 +185,7 @@ static struct of_device_id mpc52xx_fec_m
 };
 
 struct of_platform_driver mpc52xx_fec_mdio_driver = {
+	.owner = THIS_MODULE,
 	.name = "mpc5200b-fec-phy",
 	.probe = mpc52xx_fec_mdio_probe,
 	.remove = mpc52xx_fec_mdio_remove,
--- a/drivers/net/fs_enet/fs_enet-main.c
+++ b/drivers/net/fs_enet/fs_enet-main.c
@@ -1192,6 +1192,7 @@ static struct of_device_id fs_enet_match
 };
 
 static struct of_platform_driver fs_enet_driver = {
+	.owner = THIS_MODULE,
 	.name	= "fs_enet",
 	.match_table = fs_enet_match,
 	.probe = fs_enet_probe,
--- a/drivers/net/fs_enet/mii-bitbang.c
+++ b/drivers/net/fs_enet/mii-bitbang.c
@@ -249,6 +249,7 @@ static struct of_device_id fs_enet_mdio_
 };
 
 static struct of_platform_driver fs_enet_bb_mdio_driver = {
+	.owner = THIS_MODULE,
 	.name = "fsl-bb-mdio",
 	.match_table = fs_enet_mdio_bb_match,
 	.probe = fs_enet_mdio_probe,
--- a/drivers/net/fs_enet/mii-fec.c
+++ b/drivers/net/fs_enet/mii-fec.c
@@ -218,6 +218,7 @@ static struct of_device_id fs_enet_mdio_
 };
 
 static struct of_platform_driver fs_enet_fec_mdio_driver = {
+	.owner = THIS_MODULE,
 	.name = "fsl-fec-mdio",
 	.match_table = fs_enet_mdio_fec_match,
 	.probe = fs_enet_mdio_probe,
--- a/drivers/net/ibm_newemac/core.c
+++ b/drivers/net/ibm_newemac/core.c
@@ -2923,6 +2923,7 @@ static struct of_device_id emac_match[] 
 };
 
 static struct of_platform_driver emac_driver = {
+	.owner = THIS_MODULE,
 	.name = "emac",
 	.match_table = emac_match,
 
--- a/drivers/net/ibm_newemac/mal.c
+++ b/drivers/net/ibm_newemac/mal.c
@@ -724,6 +724,7 @@ static struct of_device_id mal_platform_
 };
 
 static struct of_platform_driver mal_of_driver = {
+	.owner = THIS_MODULE,
 	.name = "mcmal",
 	.match_table = mal_platform_match,
 
--- a/drivers/net/ibm_newemac/rgmii.c
+++ b/drivers/net/ibm_newemac/rgmii.c
@@ -317,6 +317,7 @@ static struct of_device_id rgmii_match[]
 };
 
 static struct of_platform_driver rgmii_driver = {
+	.owner = THIS_MODULE,
 	.name = "emac-rgmii",
 	.match_table = rgmii_match,
 
--- a/drivers/net/ibm_newemac/tah.c
+++ b/drivers/net/ibm_newemac/tah.c
@@ -165,6 +165,7 @@ static struct of_device_id tah_match[] =
 };
 
 static struct of_platform_driver tah_driver = {
+	.owner = THIS_MODULE,
 	.name = "emac-tah",
 	.match_table = tah_match,
 
--- a/drivers/net/ibm_newemac/zmii.c
+++ b/drivers/net/ibm_newemac/zmii.c
@@ -311,6 +311,7 @@ static struct of_device_id zmii_match[] 
 };
 
 static struct of_platform_driver zmii_driver = {
+	.owner = THIS_MODULE,
 	.name = "emac-zmii",
 	.match_table = zmii_match,
 
--- a/drivers/net/myri_sbus.c
+++ b/drivers/net/myri_sbus.c
@@ -1150,6 +1150,7 @@ static struct of_device_id myri_sbus_mat
 MODULE_DEVICE_TABLE(of, myri_sbus_match);
 
 static struct of_platform_driver myri_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "myri",
 	.match_table	= myri_sbus_match,
 	.probe		= myri_sbus_probe,
--- a/drivers/net/niu.c
+++ b/drivers/net/niu.c
@@ -9139,6 +9139,7 @@ static struct of_device_id niu_match[] =
 MODULE_DEVICE_TABLE(of, niu_match);
 
 static struct of_platform_driver niu_of_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "niu",
 	.match_table	= niu_match,
 	.probe		= niu_of_probe,
--- a/drivers/net/phy/mdio-ofgpio.c
+++ b/drivers/net/phy/mdio-ofgpio.c
@@ -185,6 +185,7 @@ static struct of_device_id mdio_ofgpio_m
 };
 
 static struct of_platform_driver mdio_ofgpio_driver = {
+	.owner = THIS_MODULE,
 	.name = "mdio-gpio",
 	.match_table = mdio_ofgpio_match,
 	.probe = mdio_ofgpio_probe,
--- a/drivers/net/sunbmac.c
+++ b/drivers/net/sunbmac.c
@@ -1305,6 +1305,7 @@ static struct of_device_id bigmac_sbus_m
 MODULE_DEVICE_TABLE(of, bigmac_sbus_match);
 
 static struct of_platform_driver bigmac_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "sunbmac",
 	.match_table	= bigmac_sbus_match,
 	.probe		= bigmac_sbus_probe,
--- a/drivers/net/sunhme.c
+++ b/drivers/net/sunhme.c
@@ -3336,6 +3336,7 @@ static struct of_device_id hme_sbus_matc
 MODULE_DEVICE_TABLE(of, hme_sbus_match);
 
 static struct of_platform_driver hme_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "hme",
 	.match_table	= hme_sbus_match,
 	.probe		= hme_sbus_probe,
--- a/drivers/net/sunlance.c
+++ b/drivers/net/sunlance.c
@@ -1583,6 +1583,7 @@ static struct of_device_id sunlance_sbus
 MODULE_DEVICE_TABLE(of, sunlance_sbus_match);
 
 static struct of_platform_driver sunlance_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "sunlance",
 	.match_table	= sunlance_sbus_match,
 	.probe		= sunlance_sbus_probe,
--- a/drivers/net/sunqe.c
+++ b/drivers/net/sunqe.c
@@ -983,6 +983,7 @@ static struct of_device_id qec_sbus_matc
 MODULE_DEVICE_TABLE(of, qec_sbus_match);
 
 static struct of_platform_driver qec_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "qec",
 	.match_table	= qec_sbus_match,
 	.probe		= qec_sbus_probe,
--- a/drivers/net/ucc_geth.c
+++ b/drivers/net/ucc_geth.c
@@ -4083,6 +4083,7 @@ static struct of_device_id ucc_geth_matc
 MODULE_DEVICE_TABLE(of, ucc_geth_match);
 
 static struct of_platform_driver ucc_geth_driver = {
+	.owner		= THIS_MODULE,
 	.name		= DRV_NAME,
 	.match_table	= ucc_geth_match,
 	.probe		= ucc_geth_probe,
--- a/drivers/net/ucc_geth_mii.c
+++ b/drivers/net/ucc_geth_mii.c
@@ -268,6 +268,7 @@ static struct of_device_id uec_mdio_matc
 };
 
 static struct of_platform_driver uec_mdio_driver = {
+	.owner	= THIS_MODULE,
 	.name	= MII_DRV_NAME,
 	.probe	= uec_mdio_probe,
 	.remove	= uec_mdio_remove,
--- a/drivers/parport/parport_sunbpp.c
+++ b/drivers/parport/parport_sunbpp.c
@@ -389,6 +389,7 @@ static struct of_device_id bpp_match[] =
 MODULE_DEVICE_TABLE(of, bpp_match);
 
 static struct of_platform_driver bpp_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "bpp",
 	.match_table	= bpp_match,
 	.probe		= bpp_probe,
--- a/drivers/pcmcia/electra_cf.c
+++ b/drivers/pcmcia/electra_cf.c
@@ -356,6 +356,7 @@ static struct of_device_id electra_cf_ma
 MODULE_DEVICE_TABLE(of, electra_cf_match);
 
 static struct of_platform_driver electra_cf_driver = {
+	.owner = THIS_MODULE,
 	.name	   = (char *)driver_name,
 	.match_table    = electra_cf_match,
 	.probe	  = electra_cf_probe,
--- a/drivers/pcmcia/m8xx_pcmcia.c
+++ b/drivers/pcmcia/m8xx_pcmcia.c
@@ -1319,6 +1319,7 @@ static struct of_device_id m8xx_pcmcia_m
 MODULE_DEVICE_TABLE(of, m8xx_pcmcia_match);
 
 static struct of_platform_driver m8xx_pcmcia_driver = {
+	.owner = THIS_MODULE,
 	.name = driver_name,
 	.match_table = m8xx_pcmcia_match,
 	.probe = m8xx_probe,
--- a/drivers/scsi/qlogicpti.c
+++ b/drivers/scsi/qlogicpti.c
@@ -1434,6 +1434,7 @@ static struct of_device_id qpti_match[] 
 MODULE_DEVICE_TABLE(of, qpti_match);
 
 static struct of_platform_driver qpti_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "qpti",
 	.match_table	= qpti_match,
 	.probe		= qpti_sbus_probe,
--- a/drivers/scsi/sun_esp.c
+++ b/drivers/scsi/sun_esp.c
@@ -611,6 +611,7 @@ static struct of_device_id esp_match[] =
 MODULE_DEVICE_TABLE(of, esp_match);
 
 static struct of_platform_driver esp_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "esp",
 	.match_table	= esp_match,
 	.probe		= esp_sbus_probe,
--- a/drivers/serial/cpm_uart/cpm_uart_core.c
+++ b/drivers/serial/cpm_uart/cpm_uart_core.c
@@ -1359,6 +1359,7 @@ static struct of_device_id cpm_uart_matc
 };
 
 static struct of_platform_driver cpm_uart_driver = {
+	.owner = THIS_MODULE,
 	.name = "cpm_uart",
 	.match_table = cpm_uart_match,
 	.probe = cpm_uart_probe,
--- a/drivers/serial/mpc52xx_uart.c
+++ b/drivers/serial/mpc52xx_uart.c
@@ -1391,6 +1391,7 @@ mpc52xx_uart_of_enumerate(void)
 MODULE_DEVICE_TABLE(of, mpc52xx_uart_of_match);
 
 static struct of_platform_driver mpc52xx_uart_of_driver = {
+	.owner		= THIS_MODULE,
 	.match_table	= mpc52xx_uart_of_match,
 	.probe		= mpc52xx_uart_of_probe,
 	.remove		= mpc52xx_uart_of_remove,
--- a/drivers/serial/sunhv.c
+++ b/drivers/serial/sunhv.c
@@ -630,6 +630,7 @@ static struct of_device_id hv_match[] = 
 MODULE_DEVICE_TABLE(of, hv_match);
 
 static struct of_platform_driver hv_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "hv",
 	.match_table	= hv_match,
 	.probe		= hv_probe,
--- a/drivers/serial/sunsab.c
+++ b/drivers/serial/sunsab.c
@@ -1091,6 +1091,7 @@ static struct of_device_id sab_match[] =
 MODULE_DEVICE_TABLE(of, sab_match);
 
 static struct of_platform_driver sab_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "sab",
 	.match_table	= sab_match,
 	.probe		= sab_probe,
--- a/drivers/serial/sunsu.c
+++ b/drivers/serial/sunsu.c
@@ -1522,6 +1522,7 @@ static struct of_device_id su_match[] = 
 MODULE_DEVICE_TABLE(of, su_match);
 
 static struct of_platform_driver su_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "su",
 	.match_table	= su_match,
 	.probe		= su_probe,
--- a/drivers/serial/sunzilog.c
+++ b/drivers/serial/sunzilog.c
@@ -1489,6 +1489,7 @@ static struct of_device_id zs_match[] = 
 MODULE_DEVICE_TABLE(of, zs_match);
 
 static struct of_platform_driver zs_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "zs",
 	.match_table	= zs_match,
 	.probe		= zs_probe,
--- a/drivers/usb/host/isp1760-if.c
+++ b/drivers/usb/host/isp1760-if.c
@@ -121,6 +121,7 @@ static struct of_device_id of_isp1760_ma
 MODULE_DEVICE_TABLE(of, of_isp1760_match);
 
 static struct of_platform_driver isp1760_of_driver = {
+	.owner		= THIS_MODULE,
 	.name           = "nxp-isp1760",
 	.match_table    = of_isp1760_match,
 	.probe          = of_isp1760_probe,
--- a/drivers/video/bw2.c
+++ b/drivers/video/bw2.c
@@ -381,6 +381,7 @@ static struct of_device_id bw2_match[] =
 MODULE_DEVICE_TABLE(of, bw2_match);
 
 static struct of_platform_driver bw2_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "bw2",
 	.match_table	= bw2_match,
 	.probe		= bw2_probe,
--- a/drivers/video/cg14.c
+++ b/drivers/video/cg14.c
@@ -598,6 +598,7 @@ static struct of_device_id cg14_match[] 
 MODULE_DEVICE_TABLE(of, cg14_match);
 
 static struct of_platform_driver cg14_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "cg14",
 	.match_table	= cg14_match,
 	.probe		= cg14_probe,
--- a/drivers/video/cg3.c
+++ b/drivers/video/cg3.c
@@ -468,6 +468,7 @@ static struct of_device_id cg3_match[] =
 MODULE_DEVICE_TABLE(of, cg3_match);
 
 static struct of_platform_driver cg3_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "cg3",
 	.match_table	= cg3_match,
 	.probe		= cg3_probe,
--- a/drivers/video/cg6.c
+++ b/drivers/video/cg6.c
@@ -826,6 +826,7 @@ static struct of_device_id cg6_match[] =
 MODULE_DEVICE_TABLE(of, cg6_match);
 
 static struct of_platform_driver cg6_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "cg6",
 	.match_table	= cg6_match,
 	.probe		= cg6_probe,
--- a/drivers/video/ffb.c
+++ b/drivers/video/ffb.c
@@ -1054,6 +1054,7 @@ static struct of_device_id ffb_match[] =
 MODULE_DEVICE_TABLE(of, ffb_match);
 
 static struct of_platform_driver ffb_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "ffb",
 	.match_table	= ffb_match,
 	.probe		= ffb_probe,
--- a/drivers/video/leo.c
+++ b/drivers/video/leo.c
@@ -650,6 +650,7 @@ static struct of_device_id leo_match[] =
 MODULE_DEVICE_TABLE(of, leo_match);
 
 static struct of_platform_driver leo_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "leo",
 	.match_table	= leo_match,
 	.probe		= leo_probe,
--- a/drivers/video/p9100.c
+++ b/drivers/video/p9100.c
@@ -358,6 +358,7 @@ static struct of_device_id p9100_match[]
 MODULE_DEVICE_TABLE(of, p9100_match);
 
 static struct of_platform_driver p9100_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "p9100",
 	.match_table	= p9100_match,
 	.probe		= p9100_probe,
--- a/drivers/video/platinumfb.c
+++ b/drivers/video/platinumfb.c
@@ -674,6 +674,7 @@ static struct of_device_id platinumfb_ma
 
 static struct of_platform_driver platinum_driver = 
 {
+	.owner		= THIS_MODULE,
 	.name 		= "platinumfb",
 	.match_table	= platinumfb_match,
 	.probe		= platinumfb_probe,
--- a/drivers/video/tcx.c
+++ b/drivers/video/tcx.c
@@ -514,6 +514,7 @@ static struct of_device_id tcx_match[] =
 MODULE_DEVICE_TABLE(of, tcx_match);
 
 static struct of_platform_driver tcx_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "tcx",
 	.match_table	= tcx_match,
 	.probe		= tcx_probe,
--- a/sound/sparc/amd7930.c
+++ b/sound/sparc/amd7930.c
@@ -1108,6 +1108,7 @@ static struct of_device_id amd7930_match
 };
 
 static struct of_platform_driver amd7930_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "audio",
 	.match_table	= amd7930_match,
 	.probe		= amd7930_sbus_probe,
--- a/sound/sparc/dbri.c
+++ b/sound/sparc/dbri.c
@@ -2679,6 +2679,7 @@ static struct of_device_id dbri_match[] 
 MODULE_DEVICE_TABLE(of, dbri_match);
 
 static struct of_platform_driver dbri_sbus_driver = {
+	.owner		= THIS_MODULE,
 	.name		= "dbri",
 	.match_table	= dbri_match,
 	.probe		= dbri_probe,
