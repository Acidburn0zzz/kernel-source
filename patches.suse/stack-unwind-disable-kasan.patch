Subject: Disable KASAN for stack unwinder code
From: Jiri Slaby <jslaby@suse.cz>
Patch-mainline: no, depends on stack unwinder

When KASAN is instrumented into unwinder code, it takes ages to boot
the kernel. save_stack is called when allocating memory and it indeed
propagates to the unwinder code. So disable KASAN on unwind.c and
mm/maccess.c (for probe_kernel_address). The same is done for
dumpstack*.c by upstream.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 kernel/Makefile |    2 ++
 mm/Makefile     |    1 +
 2 files changed, 3 insertions(+)

--- a/kernel/Makefile
+++ b/kernel/Makefile
@@ -29,6 +29,8 @@ KCOV_INSTRUMENT_extable.o := n
 KCOV_INSTRUMENT_kcov.o := n
 KASAN_SANITIZE_kcov.o := n
 
+KASAN_SANITIZE_unwind.o := n
+
 # cond_syscall is currently not LTO compatible
 CFLAGS_sys_ni.o = $(DISABLE_LTO)
 
--- a/mm/Makefile
+++ b/mm/Makefile
@@ -5,6 +5,7 @@
 KASAN_SANITIZE_slab_common.o := n
 KASAN_SANITIZE_slab.o := n
 KASAN_SANITIZE_slub.o := n
+KASAN_SANITIZE_maccess.o := n
 
 # These files are disabled because they produce non-interesting and/or
 # flaky coverage that is not a function of syscall inputs. E.g. slab is out of
