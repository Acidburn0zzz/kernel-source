diff -u linux/arch/i386/kernel/time.c-o linux/arch/i386/kernel/time.c
--- linux/arch/i386/kernel/time.c-o	2004-05-26 20:19:03.000000000 +0200
+++ linux/arch/i386/kernel/time.c	2004-05-26 21:10:11.000000000 +0200
@@ -213,7 +213,7 @@
 					struct pt_regs *regs)
 {
 #ifdef CONFIG_X86_IO_APIC
-	if (timer_ack) {
+	if (timer_ack && nr_ioapics) {
 		/*
 		 * Subtle, when I/O APICs are used we have to ack timer IRQ
 		 * manually to reset the IRR bit for do_slow_gettimeoffset().
diff -u linux/arch/i386/kernel/apic.c-o linux/arch/i386/kernel/apic.c
--- linux/arch/i386/kernel/apic.c-o	2004-05-26 20:20:14.000000000 +0200
+++ linux/arch/i386/kernel/apic.c	2004-05-26 21:21:36.000000000 +0200
@@ -621,7 +621,7 @@
 int enable_local_apic __initdata = 0;
 #endif
 
-static int __init lapic_disable(char *str)
+int __init lapic_disable(char *str)
 {
 	enable_local_apic = -1;
 	clear_bit(X86_FEATURE_APIC, boot_cpu_data.x86_capability);
@@ -629,7 +629,7 @@
 }
 __setup("nolapic", lapic_disable);
 
-static int __init lapic_enable(char *str)
+int __init lapic_enable(char *str)
 {
 	enable_local_apic = 1;
 	return 0;
@@ -638,6 +638,8 @@
 
 int __init apic_enable(char *str)
 {
+	printk("apic_enable\n");
+	
 #ifdef CONFIG_X86_IO_APIC
 	extern int skip_ioapic_setup;
 	skip_ioapic_setup = 0;
diff -u linux/arch/i386/kernel/setup.c-o linux/arch/i386/kernel/setup.c
--- linux/arch/i386/kernel/setup.c-o	2004-05-26 20:20:00.000000000 +0200
+++ linux/arch/i386/kernel/setup.c	2004-05-26 21:21:13.000000000 +0200
@@ -636,12 +636,20 @@
 
 #ifdef CONFIG_X86_LOCAL_APIC
 		/* disable IO-APIC */
-		else if (!memcmp(from, "noapic", 6))
+		else if (c == ' ' && !memcmp(from, "noapic", 6))
 			disable_ioapic_setup();
-		else if (!memcmp(from, "apic", 4)) {
+		else if (c == ' ' && !memcmp(from, "apic", 4)) {
 		     extern int apic_enable(char *);
 		     apic_enable(from); 
-		} 		     	
+		}
+		else if (c == ' ' && !memcmp(from, "lapic", 5)) { 
+		     extern int lapic_enable(char *str);
+		     lapic_enable(from);
+		} 
+		else if (c == ' ' && !memcmp(from, "nolapic", 7)) { 
+		     extern int lapic_enable(char *str);
+		     lapic_disable(from);
+		}
 #endif /* CONFIG_X86_LOCAL_APIC */
 #endif /* CONFIG_ACPI_BOOT */
 
