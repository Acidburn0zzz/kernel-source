From: Balbir Singh <balbir@in.ibm.com>
Subject: Delay accounting failed when task leader exits
References: 183151

This patch is to be applied on top of 
per-task-delay-accounting-taskstats-interface-fix-2.patch

Currently fill_tgid() fails if any thread in a thread_group has a missing
delays structure. This behaviour is incorrect in the case when a thread group
leader exits before any of the other threads in the group. The leader continues
to be examined but has a null tsk->delays struct. The correct behaviour is to
skip threads with a null delays struct and continue accumulating delay
accounting statistics for the other threads.

The patch also adds an explicit check for delay accounting being on since
presence or absence of tsk->delays struct is no longer an equivalent check.

Signed-off-by: Balbir Singh <balbir@in.ibm.com>
Signed-off-by: Shailabh Nagar <nagar@us.ibm.com>
Acked-by: okir@suse.de

---

 include/linux/delayacct.h |    4 +++-
 1 files changed, 3 insertions(+), 1 deletion(-)

diff -puN include/linux/delayacct.h~per-task-delay-accounting-taskstats-interface-fix-3 include/linux/delayacct.h
--- linux-2.6.16/include/linux/delayacct.h~per-task-delay-accounting-taskstats-interface-fix-3	2006-06-08 12:29:50.000000000 +0530
+++ linux-2.6.16-balbir/include/linux/delayacct.h	2006-06-08 12:29:50.000000000 +0530
@@ -70,8 +70,10 @@ static inline void delayacct_blkio_end(v
 static inline int delayacct_add_tsk(struct taskstats *d,
 				    struct task_struct *tsk)
 {
-	if (!tsk->delays)
+	if (likely(!delayacct_on))
 		return -EINVAL;
+	if (!tsk->delays)
+		return 0;
 	return __delayacct_add_tsk(d, tsk);
 }
 #endif
_
