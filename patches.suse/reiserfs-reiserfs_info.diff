From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH 04/37] reiserfs: make some warnings informational

 In several places, reiserfs_warning is used when there is no warning, just
 a notice. This patch changes some of them to indicate that the message
 is merely informational.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

--
 fs/reiserfs/bitmap.c |    4 ++--
 fs/reiserfs/super.c  |   14 ++++++--------
 fs/reiserfs/xattr.c  |   10 ++++------
 3 files changed, 12 insertions(+), 16 deletions(-)

--- a/fs/reiserfs/bitmap.c	2007-05-10 07:58:19.000000000 -0400
+++ b/fs/reiserfs/bitmap.c	2007-05-10 07:58:25.000000000 -0400
@@ -40,7 +40,7 @@
 
 #define SET_OPTION(optname) \
    do { \
-        reiserfs_warning(s, "reiserfs: option \"%s\" is set", #optname); \
+        reiserfs_info(s, "block allocator option \"%s\" is set", #optname); \
         set_bit(_ALLOC_ ## optname , &SB_ALLOC_OPTS(s)); \
     } while(0)
 #define TEST_OPTION(optname, s) \
@@ -625,7 +625,7 @@ int reiserfs_parse_alloc_options(struct 
 		return 1;
 	}
 
-	reiserfs_warning(s, "allocator options = [%08x]\n", SB_ALLOC_OPTS(s));
+	reiserfs_info(s, "allocator options = [%08x]\n", SB_ALLOC_OPTS(s));
 	return 0;
 }
 
--- a/fs/reiserfs/super.c	2007-05-10 07:58:19.000000000 -0400
+++ b/fs/reiserfs/super.c	2007-05-10 07:58:25.000000000 -0400
@@ -1311,13 +1311,11 @@ static int read_super_block(struct super
 		/* magic is of non-standard journal filesystem, look at s_version to
 		   find which format is in use */
 		if (sb_version(rs) == REISERFS_VERSION_2)
-			reiserfs_warning(s,
-					 "read_super_block: found reiserfs format \"3.6\""
-					 " with non-standard journal");
+			reiserfs_info(s, "found reiserfs format \"3.6\""
+			              " with non-standard journal\n");
 		else if (sb_version(rs) == REISERFS_VERSION_1)
-			reiserfs_warning(s,
-					 "read_super_block: found reiserfs format \"3.5\""
-					 " with non-standard journal");
+			reiserfs_info(s, "found reiserfs format \"3.5\""
+			              " with non-standard journal\n");
 		else {
 			reiserfs_warning(s,
 					 "sh-2012: read_super_block: found unknown "
@@ -1396,8 +1394,8 @@ static __u32 find_hash_out(struct super_
 			if (reiserfs_rupasov_hash(s)) {
 				hash = YURA_HASH;
 			}
-			reiserfs_warning(s, "FS seems to be empty, autodetect "
-					 "is using the default hash");
+			reiserfs_info(s, "FS seems to be empty, autodetect "
+					 "is using the default hash\n");
 			break;
 		}
 		r5hash = GET_HASH_VALUE(r5_hash(de.de_name, de.de_namelen));
--- a/fs/reiserfs/xattr.c	2007-05-10 07:58:24.000000000 -0400
+++ b/fs/reiserfs/xattr.c	2007-05-10 07:58:25.000000000 -0400
@@ -1231,12 +1231,10 @@ int reiserfs_xattr_init(struct super_blo
 				}
 
 				if (dentry && dentry->d_inode)
-					reiserfs_warning(s,
-							 "Created %s on %s - reserved for "
-							 "xattr storage.",
-							 PRIVROOT_NAME,
-							 reiserfs_bdevname
-							 (inode->i_sb));
+					reiserfs_info(s, "Created %s - "
+					              "reserved for xattr "
+						      "storage.\n",
+						      PRIVROOT_NAME);
 			} else if (!dentry->d_inode) {
 				dput(dentry);
 				dentry = NULL;
