Index: linux.t/mm/filemap.c
===================================================================
--- linux.t.orig/mm/filemap.c	2004-08-13 20:34:57.000000000 -0400
+++ linux.t/mm/filemap.c	2004-08-13 21:02:59.000000000 -0400
@@ -848,7 +848,6 @@ void do_generic_mapping_read(struct addr
 		goto out;
 
 	if (unlikely(in_aio())) {
-		unsigned long i, last, nr;
 		/*
 	 	 * Let the readahead logic know upfront about all
 	 	 * the pages we'll need to satisfy this request while
@@ -858,20 +857,15 @@ void do_generic_mapping_read(struct addr
 		 */
 		if ((!is_retried_kiocb(io_wait_to_kiocb(current->io_wait)))
 			|| (ra.prev_page + 1 == index)) {
-
-			last = (*ppos + desc->count - 1) >> PAGE_CACHE_SHIFT;
-			nr = max_sane_readahead(last - index + 1);
-
-			for (i = 0; (i < nr) && ((i == 0)||(i < ra.ra_pages));
-				i++) {
-				page_cache_readahead(mapping, &ra, filp, 
-				index + i);
-				if (bdi_read_congested(
-					mapping->backing_dev_info)) {
-					printk("AIO readahead congestion\n");
-					break;
-				}
-			}
+			unsigned long nr, bytes;
+			bytes = offset + desc->count;
+			nr = bytes >> PAGE_CACHE_SHIFT;
+			if (bytes & ~PAGE_CACHE_MASK)
+				nr++;
+			nr = max_sane_readahead(nr);
+			force_page_cache_readahead(mapping, filp, index,
+					max_sane_readahead(nr));
+			ra.prev_page = index;
 		}
 	}
 
