From: garloff@suse.de
Subject: readahead tuning

Changing the default readahead window from 128 to 512kB can lead 
to a significant performance increase for linear reads. A measurement
on a raid storage has resulted in more than doubling the MB/s.

Not interesting for IDE hardware, where you're limited to 128kB
request size; patch thus only really interesting for SLES.

The readahaed window can be tuned via sysfs. Previously, it was 
limited to the max request size of the underlying hardware; this
change allows twice as much, which can give a little advantage
in some configurations.

--- linux-2.6.15/include/linux/mm.h.orig	2006-02-04 10:58:19.000000000 +0100
+++ linux-2.6.15/include/linux/mm.h	2006-02-06 10:37:22.281484112 +0100
@@ -959,7 +959,7 @@ extern int filemap_populate(struct vm_ar
 int write_one_page(struct page *page, int wait);
 
 /* readahead.c */
-#define VM_MAX_READAHEAD	128	/* kbytes */
+#define VM_MAX_READAHEAD	512	/* kbytes */
 #define VM_MIN_READAHEAD	16	/* kbytes (includes current page) */
 #define VM_MAX_CACHE_HIT    	256	/* max pages in a row in cache before
 					 * turning readahead off */
--- linux-2.6.15/block/ll_rw_blk.c.orig	2006-02-04 10:58:18.000000000 +0100
+++ linux-2.6.15/block/ll_rw_blk.c	2006-02-06 10:36:52.828330432 +0100
@@ -3665,8 +3665,9 @@ queue_ra_store(struct request_queue *q, 
 	ssize_t ret = queue_var_store(&ra_kb, page, count);
 
 	spin_lock_irq(q->queue_lock);
-	if (ra_kb > (q->max_sectors >> 1))
-		ra_kb = (q->max_sectors >> 1);
+	/* Allow up to twice the max request size; 1 kB == 2 sectors */
+	if (ra_kb > q->max_sectors)
+		ra_kb = q->max_sectors;
 
 	q->backing_dev_info.ra_pages = ra_kb >> (PAGE_CACHE_SHIFT - 10);
 	spin_unlock_irq(q->queue_lock);
