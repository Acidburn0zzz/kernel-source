From: Timo Hoenig <thoenig@suse.de>
Subject: ASUS ACPI: make driver less verbose
References: 114960
Date: Fri Sep  9 12:28:58 CEST 2005

This fix prevents the ASUS ACPI driver to flood syslog triggered by
polling of the KMILO plugin for ASUS laptops.

The problem occured on very few systems under the following conditions:

   * An ASUS laptop which is _not_ explicitly supported by ASUS ACPI
   * In this case the ASUS ACPI driver loads with default values which
     are not sane for some systems
   * If the ASUS module of KMILO polls the kernel interfaces of the
     ASUS ACPI driver it reports the error to syslog

Signed-off-by: Timo Hoenig <thoenig@suse.de>

--- linux-2.6.13/drivers/acpi/asus_acpi.c_org	2005-09-09 12:12:42.000000000 +0200
+++ linux-2.6.13/drivers/acpi/asus_acpi.c	2005-09-09 12:18:02.000000000 +0200
@@ -602,9 +602,11 @@
 
 		if (read_acpi_int(NULL, ledname, &led_status))
 			return led_status;
+#ifdef DEBUG
 		else
 			printk(KERN_WARNING "Asus ACPI: Error reading LED "
 			       "status\n");
+#endif
 	}
 	return (hotk->status & ledmask) ? 1 : 0;
 }
@@ -756,8 +758,11 @@
 
 	if (hotk->model != L3H) {
 	/* We don't have to check anything if we are here */
-		if (!read_acpi_int(NULL, hotk->methods->lcd_status, &lcd))
+		if (!read_acpi_int(NULL, hotk->methods->lcd_status, &lcd)) {
+#ifdef DEBUG
 			printk(KERN_WARNING "Asus ACPI: Error reading LCD status\n");
+#endif
+		}
 	
 		if (hotk->model == L2D)
 			lcd = ~lcd;
@@ -843,12 +848,18 @@
 	
 	if(hotk->methods->brightness_get) { /* SPLV/GPLV laptop */
 		if (!read_acpi_int(hotk->handle, hotk->methods->brightness_get, 
-				   &value))
+				   &value)) {
+#ifdef DEBUG
 			printk(KERN_WARNING "Asus ACPI: Error reading brightness\n");
+#endif
+		}
 	} else if (hotk->methods->brightness_status) { /* For D1 for example */
 		if (!read_acpi_int(NULL, hotk->methods->brightness_status, 
-				   &value))
+				   &value)) {
+#ifdef DEBUG
 			printk(KERN_WARNING "Asus ACPI: Error reading brightness\n");
+#endif
+		}
 	} else /* No GPLV method */
 		value = hotk->brightness;
 	return value;
@@ -927,8 +938,12 @@
 {
 	int value = 0;
 	
-	if (!read_acpi_int(hotk->handle, hotk->methods->display_get, &value))
+	if (!read_acpi_int(hotk->handle, hotk->methods->display_get, &value)) {
+#ifdef DEBUG
 		printk(KERN_WARNING "Asus ACPI: Error reading display status\n");
+#endif
+	}
+
 	value &= 0x07; /* needed for some models, shouldn't hurt others */
 	return sprintf(page, "%d\n", value);
 }
