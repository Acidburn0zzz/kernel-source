diff -urNp linux-2.6.3/arch/i386/Kconfig linux-2.6.3.SUSE/arch/i386/Kconfig
--- linux-2.6.3/arch/i386/Kconfig	2004-02-26 14:03:37.476381599 +0100
+++ linux-2.6.3.SUSE/arch/i386/Kconfig	2004-02-26 14:04:32.870480672 +0100
@@ -1200,6 +1200,58 @@ source "arch/i386/oprofile/Kconfig"
 
 menu "Kernel hacking"
 
+config CRASH_DUMP
+	tristate "Crash dump support (EXPERIMENTAL)"
+	depends on EXPERIMENTAL
+	default n
+	---help---
+	  Say Y here to enable saving an image of system memory when a panic
+	  or other error occurs. Dumps can also be forced with the SysRq+d
+	  key if MAGIC_SYSRQ is enabled.
+
+config CRASH_DUMP_BLOCKDEV
+	tristate "Crash dump block device driver"
+	depends on CRASH_DUMP
+	help
+	  Say Y to allow saving crash dumps directly to a disk device.
+
+config CRASH_DUMP_NETDEV
+	tristate "Crash dump network device driver"
+	depends on CRASH_DUMP
+	help
+	  Say Y to allow saving crash dumps over a network device.
+
+config CRASH_DUMP_MEMDEV
+	bool "Crash dump staged memory driver"
+	depends on CRASH_DUMP
+	help
+	  Say Y to allow intermediate saving crash dumps in spare 
+	  memory pages which would then be written out to disk
+	  later.
+
+config CRASH_DUMP_SOFTBOOT
+	bool "Save crash dump across a soft reboot"
+	depends on CRASH_DUMP_MEMDEV
+	help
+	  Say Y to allow a crash dump to be preserved in memory
+	  pages across a soft reboot and written out to disk
+	  thereafter. For this to work, CRASH_DUMP must be 
+	  configured as part of the kernel (not as a module).
+
+config CRASH_DUMP_COMPRESS_RLE
+	tristate "Crash dump RLE compression"
+	depends on CRASH_DUMP
+	help
+	  Say Y to allow saving dumps with Run Length Encoding compression.
+
+config CRASH_DUMP_COMPRESS_GZIP
+	tristate "Crash dump GZIP compression"
+	select ZLIB_INFLATE
+	select ZLIB_DEFLATE
+	depends on CRASH_DUMP
+	help
+	  Say Y to allow saving dumps with Gnu Zip compression.
+
 config DEBUG_KERNEL
 	bool "Kernel debugging"
 	help
diff -urNp linux-2.6.3/arch/i386/boot/Makefile linux-2.6.3.SUSE/arch/i386/boot/Makefile
--- linux-2.6.3/arch/i386/boot/Makefile	2004-02-26 14:03:15.952782762 +0100
+++ linux-2.6.3.SUSE/arch/i386/boot/Makefile	2004-02-26 14:04:32.866481676 +0100
@@ -102,3 +102,4 @@ zlilo: $(BOOTIMAGE)
 
 install: $(BOOTIMAGE)
 	sh $(srctree)/$(src)/install.sh $(KERNELRELEASE) $< System.map "$(INSTALL_PATH)"
+	if [ -f init/kerntypes.o ]; then cp init/kerntypes.o $(INSTALL_PATH)/Kerntypes; fi
diff -urNp linux-2.6.3/arch/i386/kernel/i386_ksyms.c linux-2.6.3.SUSE/arch/i386/kernel/i386_ksyms.c
--- linux-2.6.3/arch/i386/kernel/i386_ksyms.c	2004-02-26 14:03:38.415146022 +0100
+++ linux-2.6.3.SUSE/arch/i386/kernel/i386_ksyms.c	2004-02-26 14:05:39.797685067 +0100
@@ -16,6 +16,7 @@
 #include <linux/tty.h>
 #include <linux/highmem.h>
 #include <linux/time.h>
+#include <linux/nmi.h>
 
 #include <asm/semaphore.h>
 #include <asm/processor.h>
@@ -33,6 +34,7 @@
 #include <asm/tlbflush.h>
 #include <asm/nmi.h>
 #include <asm/ist.h>
+#include <asm/e820.h>
 
 extern void dump_thread(struct pt_regs *, struct user *);
 extern spinlock_t rtc_lock;
@@ -211,3 +213,20 @@ EXPORT_SYMBOL(csum_partial);
 #ifdef CONFIG_X86_GENERICARCH
 EXPORT_SYMBOL(genapic);
 #endif
+
+#ifdef CONFIG_CRASH_DUMP_MODULE
+#ifdef CONFIG_SMP
+extern irq_desc_t irq_desc[NR_IRQS];
+extern unsigned long irq_affinity[NR_IRQS];
+extern void stop_this_cpu(void *);
+EXPORT_SYMBOL(irq_desc);
+EXPORT_SYMBOL(irq_affinity);
+EXPORT_SYMBOL(stop_this_cpu);
+EXPORT_SYMBOL(dump_send_ipi);
+#endif
+extern int pfn_is_ram(unsigned long);
+EXPORT_SYMBOL(pfn_is_ram);
+#ifdef ARCH_HAS_NMI_WATCHDOG
+EXPORT_SYMBOL(touch_nmi_watchdog);
+#endif
+#endif
diff -urNp linux-2.6.3/arch/i386/kernel/nmi.c linux-2.6.3.SUSE/arch/i386/kernel/nmi.c
--- linux-2.6.3/arch/i386/kernel/nmi.c	2004-02-26 14:03:27.989762192 +0100
+++ linux-2.6.3.SUSE/arch/i386/kernel/nmi.c	2004-02-26 14:04:32.871480422 +0100
@@ -28,6 +28,7 @@
 #ifdef	CONFIG_KDB
 #include <linux/kdb.h>
 #endif	/* CONFIG_KDB */
+#include <linux/dump.h>
 
 #include <asm/smp.h>
 #include <asm/mtrr.h>
@@ -439,6 +440,7 @@ void nmi_watchdog_tick (struct pt_regs *
 			bust_spinlocks(1);
 			printk("NMI Watchdog detected LOCKUP on CPU%d, eip %08lx, registers:\n", cpu, regs->eip);
 			show_registers(regs);
+			dump("NMI Watchdog detected LOCKUP", regs);
 			printk("console shuts up ...\n");
 #ifdef	CONFIG_KDB
 			kdb(KDB_REASON_NMI, 0, regs);
diff -urNp linux-2.6.3/arch/i386/kernel/setup.c linux-2.6.3.SUSE/arch/i386/kernel/setup.c
--- linux-2.6.3/arch/i386/kernel/setup.c	2004-02-26 14:03:16.000770720 +0100
+++ linux-2.6.3.SUSE/arch/i386/kernel/setup.c	2004-02-26 14:04:32.884477160 +0100
@@ -478,6 +478,7 @@ static void __init setup_memory_region(v
 	print_memory_map(who);
 } /* setup_memory_region */
 
+unsigned long crashdump_addr = 0xdeadbeef;
 
 static void __init parse_cmdline_early (char ** cmdline_p)
 {
@@ -595,6 +596,9 @@ static void __init parse_cmdline_early (
 		if (c == ' ' && !memcmp(from, "highmem=", 8))
 			highmem_pages = memparse(from+8, &from) >> PAGE_SHIFT;
 	
+		if (c == ' ' && !memcmp(from, "crashdump=", 10))
+			crashdump_addr = memparse(from+10, &from); 
+			
 		c = *(from++);
 		if (!c)
 			break;
@@ -1037,6 +1041,10 @@ static int __init noreplacement_setup(ch
 
 __setup("noreplacement", noreplacement_setup); 
 
+#ifdef CONFIG_CRASH_DUMP_SOFTBOOT
+extern void crashdump_reserve(void);
+#endif
+
 /*
  * Determine if we were loaded by an EFI loader.  If so, then we have also been
  * passed the efi memmap, systab, etc., so we should use these data structures
@@ -1131,6 +1139,10 @@ void __init setup_arch(char **cmdline_p)
 #endif
 
 
+#ifdef CONFIG_CRASH_DUMP_SOFTBOOT
+	crashdump_reserve(); /* Preserve crash dump state from prev boot */
+#endif
+
 	dmi_scan_machine();
 
 #ifdef CONFIG_X86_GENERICARCH
diff -urNp linux-2.6.3/arch/i386/kernel/smp.c linux-2.6.3.SUSE/arch/i386/kernel/smp.c
--- linux-2.6.3/arch/i386/kernel/smp.c	2004-02-26 14:03:27.982763948 +0100
+++ linux-2.6.3.SUSE/arch/i386/kernel/smp.c	2004-02-26 14:04:32.873479920 +0100
@@ -19,6 +19,7 @@
 #include <linux/mc146818rtc.h>
 #include <linux/cache.h>
 #include <linux/interrupt.h>
+#include <linux/dump.h>
 
 #include <asm/mtrr.h>
 #include <asm/pgalloc.h>
@@ -149,6 +150,13 @@ inline void __send_IPI_shortcut(unsigned
 	 */
 	cfg = __prepare_ICR(shortcut, vector);
 
+	if (vector == DUMP_VECTOR) {
+		/*
+		 * Setup DUMP IPI to be delivered as an NMI
+		 */
+		cfg = (cfg&~APIC_VECTOR_MASK)|APIC_DM_NMI;
+	}
+
 #ifdef	CONFIG_KDB
 	if (vector == KDB_VECTOR) {
 		/*
@@ -244,7 +252,13 @@ inline void send_IPI_mask_sequence(cpuma
 				cfg = (cfg&~APIC_VECTOR_MASK)|APIC_DM_NMI;
 			}
 #endif	/* CONFIG_KDB */
-			
+		
+			if (vector == DUMP_VECTOR) {
+				/*
+				 * Setup DUMP IPI to be delivered as an NMI
+				 */
+				cfg = (cfg&~APIC_VECTOR_MASK)|APIC_DM_NMI;
+			}	
 			/*
 			 * Send the IPI. The write to APIC_ICR fires this off.
 			 */
@@ -499,6 +513,11 @@ smp_kdb_stop(void)
 }
 #endif	/* CONFIG_KDB */
 
+void dump_send_ipi(void)
+{
+	send_IPI_allbutself(DUMP_VECTOR);
+}
+
 /*
  * this function sends a 'reschedule' IPI to another CPU.
  * it goes straight through and wastes no time serializing
@@ -577,7 +596,7 @@ int smp_call_function (void (*func) (voi
 	return 0;
 }
 
-static void stop_this_cpu (void * dummy)
+void stop_this_cpu (void * dummy)
 {
 	/*
 	 * Remove this CPU:
@@ -638,4 +657,3 @@ asmlinkage void smp_call_function_interr
 		atomic_inc(&call_data->finished);
 	}
 }
-
diff -urNp linux-2.6.3/arch/i386/kernel/traps.c linux-2.6.3.SUSE/arch/i386/kernel/traps.c
--- linux-2.6.3/arch/i386/kernel/traps.c	2004-02-26 14:03:27.980764450 +0100
+++ linux-2.6.3.SUSE/arch/i386/kernel/traps.c	2004-02-26 14:04:32.892475153 +0100
@@ -25,6 +25,7 @@
 #include <linux/kallsyms.h>
 #include <linux/ptrace.h>
 #include <linux/version.h>
+#include <linux/dump.h>
 
 #ifdef CONFIG_EISA
 #include <linux/ioport.h>
@@ -287,6 +288,7 @@ void die(const char * str, struct pt_reg
 	if (nl)
 		printk("\n");
 	show_registers(regs);
+	dump((char *)str, regs);
 	bust_spinlocks(0);
 	spin_unlock_irq(&die_lock);
 #ifdef	CONFIG_KDB
diff -urNp linux-2.6.3/arch/i386/mm/init.c linux-2.6.3.SUSE/arch/i386/mm/init.c
--- linux-2.6.3/arch/i386/mm/init.c	2004-02-18 04:58:56.000000000 +0100
+++ linux-2.6.3.SUSE/arch/i386/mm/init.c	2004-02-26 14:04:32.855484436 +0100
@@ -206,6 +206,13 @@ static inline int page_is_ram(unsigned l
 	return 0;
 }
 
+/* To enable modules to check if a page is in RAM */
+int pfn_is_ram(unsigned long pfn)
+{
+	return (page_is_ram(pfn));
+}
+
+
 #ifdef CONFIG_HIGHMEM
 pte_t *kmap_pte;
 pgprot_t kmap_prot;
diff -urNp linux-2.6.3/arch/s390/boot/Makefile linux-2.6.3.SUSE/arch/s390/boot/Makefile
--- linux-2.6.3/arch/s390/boot/Makefile	2004-02-18 04:59:58.000000000 +0100
+++ linux-2.6.3.SUSE/arch/s390/boot/Makefile	2004-02-26 14:04:32.893474902 +0100
@@ -15,4 +15,4 @@ $(obj)/image: vmlinux FORCE
 
 install: $(CONFIGURE) $(obj)/image
 	sh -x $(obj)/install.sh $(KERNELRELEASE) $(obj)/image \
-	      System.map Kerntypes "$(INSTALL_PATH)"
+	      System.map init/kerntypes.o "$(INSTALL_PATH)"
diff -urNp linux-2.6.3/arch/s390/boot/install.sh linux-2.6.3.SUSE/arch/s390/boot/install.sh
--- linux-2.6.3/arch/s390/boot/install.sh	2004-02-18 04:58:34.000000000 +0100
+++ linux-2.6.3.SUSE/arch/s390/boot/install.sh	2004-02-26 14:04:32.894474651 +0100
@@ -16,7 +16,8 @@
 #   $1 - kernel version
 #   $2 - kernel image file
 #   $3 - kernel map file
-#   $4 - default install path (blank if root directory)
+#   $4 - kernel type file
+#   $5 - default install path (blank if root directory)
 #
 
 # User may have a custom install script
@@ -26,13 +27,22 @@ if [ -x /sbin/installkernel ]; then exec
 
 # Default install - same as make zlilo
 
-if [ -f $4/vmlinuz ]; then
-	mv $4/vmlinuz $4/vmlinuz.old
+if [ -f $5/vmlinuz ]; then
+	mv $5/vmlinuz $5/vmlinuz.old
 fi
 
-if [ -f $4/System.map ]; then
-	mv $4/System.map $4/System.old
+if [ -f $5/System.map ]; then
+	mv $5/System.map $5/System.old
 fi
 
-cat $2 > $4/vmlinuz
-cp $3 $4/System.map
+if [ -f $5/Kerntypes ]; then
+	mv $5/Kerntypes $5/Kerntypes.old
+fi
+
+cat $2 > $5/vmlinuz
+cp $3 $5/System.map
+
+# copy the kernel type file if it exists
+if [ -f $4 ]; then
+	cp $4 $5/Kerntypes
+fi
diff -urNp linux-2.6.3/arch/s390/Kconfig linux-2.6.3.SuSE/arch/s390/Kconfig
--- linux-2.6.3/arch/s390/Kconfig	Fri Feb 27 11:38:42 2004
+++ linux-2.6.3.SuSE/arch/s390/Kconfig	Fri Feb 27 11:32:20 2004
@@ -361,6 +361,15 @@
 
 menu "Kernel hacking"
 
+config CRASH_DUMP
+	tristate "Crash dump support (EXPERIMENTAL)"
+	depends on EXPERIMENTAL
+	default n
+	---help---
+	  Say Y here to enable saving an image of system memory when a panic
+	  or other error occurs. Dumps can also be forced with the SysRq+d
+	  key if MAGIC_SYSRQ is enabled.
+
 config DEBUG_KERNEL
 	bool "Kernel debugging"
 	help
diff -urNp /dev/null linux-2.6.3/include/asm-s390/dump.h
--- /dev/null   Fri Jan 25 11:57:06 2002
+++ linux-2.6.3/include/asm-s390/dump.h Fri Feb 27 11:51:30 2004
@@ -0,0 +1,10 @@
+/*
+ * Kernel header file for Linux crash dumps.
+ */
+
+/* Nothing to be done here, we have proper hardware support */
+#ifndef _ASM_DUMP_H
+#define _ASM_DUMP_H
+
+#endif
+
diff -urNp linux-2.6.3/drivers/Makefile linux-2.6.3.SUSE/drivers/Makefile
--- linux-2.6.3/drivers/Makefile	2004-02-26 14:03:16.327688683 +0100
+++ linux-2.6.3.SUSE/drivers/Makefile	2004-02-26 14:04:32.920468128 +0100
@@ -49,3 +49,4 @@ obj-$(CONFIG_ISDN)		+= isdn/
 obj-$(CONFIG_MCA)		+= mca/
 obj-$(CONFIG_EISA)		+= eisa/
 obj-$(CONFIG_CPU_FREQ)		+= cpufreq/
+obj-$(CONFIG_CRASH_DUMP)	+= dump/
diff -urNp linux-2.6.3/include/asm-i386/kmap_types.h linux-2.6.3.SUSE/include/asm-i386/kmap_types.h
--- linux-2.6.3/include/asm-i386/kmap_types.h	2004-02-26 14:03:27.974765955 +0100
+++ linux-2.6.3.SUSE/include/asm-i386/kmap_types.h	2004-02-26 14:04:32.948461103 +0100
@@ -25,7 +25,8 @@ D(11)	KM_IRQ1,
 D(12)	KM_SOFTIRQ0,
 D(13)	KM_SOFTIRQ1,
 D(14)	KM_KDB,
-D(15)	KM_TYPE_NR
+D(15)	KM_DUMP,
+D(16)	KM_TYPE_NR
 };
 
 #undef D
diff -urNp linux-2.6.3/include/asm-i386/mach-default/irq_vectors.h linux-2.6.3.SUSE/include/asm-i386/mach-default/irq_vectors.h
--- linux-2.6.3/include/asm-i386/mach-default/irq_vectors.h	2004-02-26 14:03:27.973766206 +0100
+++ linux-2.6.3.SUSE/include/asm-i386/mach-default/irq_vectors.h	2004-02-26 14:04:32.949460852 +0100
@@ -49,6 +49,7 @@
 #define INVALIDATE_TLB_VECTOR	0xfd
 #define RESCHEDULE_VECTOR	0xfc
 #define CALL_FUNCTION_VECTOR	0xfb
+#define DUMP_VECTOR		0xfa
 #define KDB_VECTOR		0xf9
 
 #define THERMAL_APIC_VECTOR	0xf0
diff -urNp linux-2.6.3/include/asm-i386/smp.h linux-2.6.3.SUSE/include/asm-i386/smp.h
--- linux-2.6.3/include/asm-i386/smp.h	2004-02-18 04:58:26.000000000 +0100
+++ linux-2.6.3.SUSE/include/asm-i386/smp.h	2004-02-26 14:04:32.946461605 +0100
@@ -37,6 +37,7 @@ extern int smp_num_siblings;
 extern int cpu_sibling_map[];
 
 extern void smp_flush_tlb(void);
+extern void dump_send_ipi(void);
 extern void smp_message_irq(int cpl, void *dev_id, struct pt_regs *regs);
 extern void smp_send_reschedule(int cpu);
 extern void smp_invalidate_rcv(void);		/* Process an NMI */
diff -urNp linux-2.6.3/include/linux/miscdevice.h linux-2.6.3.SUSE/include/linux/miscdevice.h
--- linux-2.6.3/include/linux/miscdevice.h	2004-02-18 04:58:25.000000000 +0100
+++ linux-2.6.3.SUSE/include/linux/miscdevice.h	2004-02-26 14:04:32.942462609 +0100
@@ -24,6 +24,7 @@
 #define MICROCODE_MINOR		184
 #define MWAVE_MINOR	219		/* ACP/Mwave Modem */
 #define MPT_MINOR	220
+#define CRASH_DUMP_MINOR   230		/* LKCD */
 #define MISC_DYNAMIC_MINOR 255
 
 #define SGI_GRAPHICS_MINOR   146
diff -urNp linux-2.6.3/include/linux/sched.h linux-2.6.3.SUSE/include/linux/sched.h
--- linux-2.6.3/include/linux/sched.h	2004-02-26 14:03:36.500626457 +0100
+++ linux-2.6.3.SUSE/include/linux/sched.h	2004-02-26 14:04:32.940463110 +0100
@@ -91,6 +91,7 @@ extern unsigned long avenrun[];		/* Load
 extern int nr_threads;
 extern int last_pid;
 DECLARE_PER_CPU(unsigned long, process_counts);
+DECLARE_PER_CPU(struct runqueue, runqueues);
 extern int nr_processes(void);
 extern unsigned long nr_running(void);
 extern unsigned long nr_uninterruptible(void);
@@ -572,6 +573,45 @@ extern int idle_cpu(int cpu);
 void yield(void);
 
 /*
+ * These are the runqueue data structures:
+ */
+
+#define BITMAP_SIZE ((((MAX_PRIO+1+7)/8)+sizeof(long)-1)/sizeof(long))
+
+typedef struct runqueue runqueue_t;
+
+struct prio_array {
+	int nr_active;
+	unsigned long bitmap[BITMAP_SIZE];
+	struct list_head queue[MAX_PRIO];
+};
+
+/*
+ * This is the main, per-CPU runqueue data structure.
+ *
+ * Locking rule: those places that want to lock multiple runqueues
+ * (such as the load balancing or the thread migration code), lock
+ * acquire operations must be ordered by ascending &runqueue.
+ */
+struct runqueue {
+	spinlock_t lock;
+	unsigned long nr_running, nr_switches, expired_timestamp,
+	              nr_uninterruptible, timestamp_last_tick;
+	task_t *curr, *idle;
+	struct mm_struct *prev_mm;
+	prio_array_t *active, *expired, arrays[2];
+	int best_expired_prio, prev_cpu_load[NR_CPUS];
+#ifdef CONFIG_NUMA
+	atomic_t *node_nr_running;
+	int prev_node_load[MAX_NUMNODES];
+#endif
+	task_t *migration_thread;
+	struct list_head migration_queue;
+
+	atomic_t nr_iowait;
+};
+
+/*
  * The default (Linux) execution domain.
  */
 extern struct exec_domain	default_exec_domain;
diff -urNp linux-2.6.3/include/linux/sysctl.h linux-2.6.3.SUSE/include/linux/sysctl.h
--- linux-2.6.3/include/linux/sysctl.h	2004-02-26 14:03:28.322678649 +0100
+++ linux-2.6.3.SUSE/include/linux/sysctl.h	2004-02-26 14:04:32.945461856 +0100
@@ -131,6 +131,7 @@ enum
 	KERN_NGROUPS_MAX=63,	/* int: NGROUPS_MAX */
 	KERN_KDB=64,		/* int: kdb on/off */
 	KERN_S390_HZ_TIMER=65,  /* int: hz timer on or off */
+	KERN_DUMP=66,		/* directory: dump parameters */
 };
 
 
diff -urNp linux-2.6.3/init/Makefile linux-2.6.3.SUSE/init/Makefile
--- linux-2.6.3/init/Makefile	2004-02-26 14:03:18.917038911 +0100
+++ linux-2.6.3.SUSE/init/Makefile	2004-02-26 14:04:32.904472142 +0100
@@ -9,6 +9,9 @@ mounts-$(CONFIG_BLK_DEV_RAM)	+= do_mount
 mounts-$(CONFIG_BLK_DEV_INITRD)	+= do_mounts_initrd.o
 mounts-$(CONFIG_BLK_DEV_MD)	+= do_mounts_md.o
 
+extra-$(subst m,y,$(CONFIG_CRASH_DUMP))	+= kerntypes.o
+CFLAGS_kerntypes.o		:= -gstabs
+
 # files to be removed upon make clean
 clean-files := ../include/linux/compile.h
 
@@ -24,3 +27,4 @@ $(obj)/version.o: include/linux/compile.
 include/linux/compile.h: FORCE
 	@echo '  CHK     $@'
 	@$(CONFIG_SHELL) $(srctree)/scripts/mkcompile_h $@ "$(UTS_MACHINE)" "$(CONFIG_SMP)" "$(CC) $(CFLAGS)"
+
diff -urNp linux-2.6.3/init/main.c linux-2.6.3.SUSE/init/main.c
--- linux-2.6.3/init/main.c	2004-02-26 14:03:37.419395899 +0100
+++ linux-2.6.3.SUSE/init/main.c	2004-02-26 14:04:32.906471641 +0100
@@ -102,6 +102,16 @@ extern void tc_init(void);
 int system_running;
 
 /*
+ * The kernel_magic value represents the address of _end, which allows
+ * namelist tools to "match" each other respectively.  That way a tool
+ * that looks at /dev/mem can verify that it is using the right System.map
+ * file -- if kernel_magic doesn't equal the namelist value of _end,
+ * something's wrong.
+ */
+extern unsigned long _end;
+unsigned long *kernel_magic = &_end;
+
+/*
  * Boot command-line arguments
  */
 #define MAX_INIT_ARGS 32
diff -urNp linux-2.6.3/init/version.c linux-2.6.3.SUSE/init/version.c
--- linux-2.6.3/init/version.c	2004-02-18 04:57:54.000000000 +0100
+++ linux-2.6.3.SUSE/init/version.c	2004-02-26 14:04:32.907471390 +0100
@@ -11,6 +11,7 @@
 #include <linux/uts.h>
 #include <linux/utsname.h>
 #include <linux/version.h>
+#include <linux/stringify.h>
 
 #define version(a) Version_ ## a
 #define version_string(a) version(a)
@@ -31,3 +32,6 @@ EXPORT_SYMBOL(system_utsname);
 const char *linux_banner = 
 	"Linux version " UTS_RELEASE " (" LINUX_COMPILE_BY "@"
 	LINUX_COMPILE_HOST ") (" LINUX_COMPILER ") " UTS_VERSION "\n";
+
+const char *LINUX_COMPILE_VERSION_ID = __stringify(LINUX_COMPILE_VERSION_ID);
+LINUX_COMPILE_VERSION_ID_TYPE;
diff -urNp linux-2.6.3/kernel/panic.c linux-2.6.3.SUSE/kernel/panic.c
--- linux-2.6.3/kernel/panic.c	2004-02-26 14:03:37.798300815 +0100
+++ linux-2.6.3.SUSE/kernel/panic.c	2004-02-26 14:04:32.934464616 +0100
@@ -18,12 +18,17 @@
 #include <linux/syscalls.h>
 #include <linux/interrupt.h>
 #include <linux/nmi.h>
+#ifdef CONFIG_KEXEC
+#include <linux/kexec.h>
+#endif
 
 int panic_timeout;
 int panic_on_oops;
 int tainted;
+void (*dump_function_ptr)(const char *, const struct pt_regs *) = 0;
 
 EXPORT_SYMBOL(panic_timeout);
+EXPORT_SYMBOL(dump_function_ptr);
 
 struct notifier_block *panic_notifier_list;
 
@@ -60,6 +65,7 @@ NORET_TYPE void panic(const char * fmt, 
 	va_start(args, fmt);
 	vsnprintf(buf, sizeof(buf), fmt, args);
 	va_end(args);
+
 	printk(KERN_EMERG "Kernel panic: %s\n",buf);
 	if (in_interrupt())
 		printk(KERN_EMERG "In interrupt handler - not syncing\n");
@@ -69,14 +75,13 @@ NORET_TYPE void panic(const char * fmt, 
 		sys_sync();
 	bust_spinlocks(0);
 
+        notifier_call_chain(&panic_notifier_list, 0, buf);
+	
 #ifdef CONFIG_SMP
 	smp_send_stop();
 #endif
 
-       notifier_call_chain(&panic_notifier_list, 0, buf);
-
-	if (panic_timeout > 0)
-	{
+	if (panic_timeout > 0) {
 		int i;
 		/*
 	 	 * Delay timeout seconds before rebooting the machine. 
@@ -89,6 +94,17 @@ NORET_TYPE void panic(const char * fmt, 
 			(void)splash_verbose();
 		}
 #endif
+#ifdef CONFIG_KEXEC
+{		
+		struct kimage *image;
+		image = xchg(&kexec_image, 0);
+ 		if (image) {
+ 			printk(KERN_EMERG "by starting a new kernel ..\n");
+ 			mdelay(panic_timeout*1000);
+			machine_kexec(image);
+ 		}
+ }
+#endif
 		for (i = 0; i < panic_timeout; i++) {
 			touch_nmi_watchdog();
 			mdelay(1000);
diff -urNp linux-2.6.3/kernel/sched.c linux-2.6.3.SUSE/kernel/sched.c
--- linux-2.6.3/kernel/sched.c	2004-02-26 14:03:27.800809608 +0100
+++ linux-2.6.3.SUSE/kernel/sched.c	2004-02-26 14:04:32.930465619 +0100
@@ -45,6 +45,10 @@
 #define cpu_to_node_mask(cpu) (cpu_online_map)
 #endif
 
+/* used to soft spin in sched while dump is in progress */
+unsigned long dump_oncpu;
+EXPORT_SYMBOL(dump_oncpu);
+
 /*
  * Convert user-nice values [ -20 ... 0 ... 19 ]
  * to static priority [ MAX_RT_PRIO..MAX_PRIO-1 ],
@@ -177,47 +181,7 @@ static inline unsigned int task_timeslic
 	return BASE_TIMESLICE(p);
 }
 
-/*
- * These are the runqueue data structures:
- */
-
-#define BITMAP_SIZE ((((MAX_PRIO+1+7)/8)+sizeof(long)-1)/sizeof(long))
-
-typedef struct runqueue runqueue_t;
-
-struct prio_array {
-	int nr_active;
-	unsigned long bitmap[BITMAP_SIZE];
-	struct list_head queue[MAX_PRIO];
-};
-
-/*
- * This is the main, per-CPU runqueue data structure.
- *
- * Locking rule: those places that want to lock multiple runqueues
- * (such as the load balancing or the thread migration code), lock
- * acquire operations must be ordered by ascending &runqueue.
- */
-struct runqueue {
-	spinlock_t lock;
-	unsigned long long nr_switches;
-	unsigned long nr_running, expired_timestamp, nr_uninterruptible,
-		timestamp_last_tick;
-	task_t *curr, *idle;
-	struct mm_struct *prev_mm;
-	prio_array_t *active, *expired, arrays[2];
-	int best_expired_prio, prev_cpu_load[NR_CPUS];
-#ifdef CONFIG_NUMA
-	atomic_t *node_nr_running;
-	int prev_node_load[MAX_NUMNODES];
-#endif
-	task_t *migration_thread;
-	struct list_head migration_queue;
-
-	atomic_t nr_iowait;
-};
-
-static DEFINE_PER_CPU(struct runqueue, runqueues);
+DEFINE_PER_CPU(struct runqueue, runqueues);
 
 #define cpu_rq(cpu)		(&per_cpu(runqueues, (cpu)))
 #define this_rq()		(&__get_cpu_var(runqueues))
@@ -1603,6 +1568,15 @@ asmlinkage void schedule(void)
 	unsigned long run_time;
 	int idx;
 
+ 	/*
+	 * If crash dump is in progress, this other cpu's
+	 * need to wait until it completes.
+	 * NB: this code is optimized away for kernels without
+	 * dumping enabled.
+	 */
+	if (unlikely(dump_oncpu))
+		goto dump_scheduling_disabled;
+
 	/*
 	 * Test if we are atomic.  Since do_exit() needs to call into
 	 * schedule() atomically, we ignore that path for now.
@@ -1721,6 +1695,16 @@ switch_tasks:
 	preempt_enable_no_resched();
 	if (test_thread_flag(TIF_NEED_RESCHED))
 		goto need_resched;
+
+	return;
+
+ dump_scheduling_disabled:
+	/* allow scheduling only if this is the dumping cpu */
+	if (dump_oncpu != smp_processor_id()+1) {
+		while (dump_oncpu)
+			cpu_relax();
+	}
+	return;
 }
 
 EXPORT_SYMBOL(schedule);
diff -urNp linux-2.6.3/mm/bootmem.c linux-2.6.3.SUSE/mm/bootmem.c
--- linux-2.6.3/mm/bootmem.c	2004-02-26 14:03:20.715587582 +0100
+++ linux-2.6.3.SUSE/mm/bootmem.c	2004-02-26 14:04:32.853484938 +0100
@@ -16,6 +16,7 @@
 #include <linux/init.h>
 #include <linux/bootmem.h>
 #include <linux/mmzone.h>
+#include <linux/module.h>
 #include <asm/dma.h>
 #include <asm/io.h>
 
@@ -25,6 +26,7 @@
  */
 unsigned long max_low_pfn;
 unsigned long min_low_pfn;
+EXPORT_SYMBOL(min_low_pfn);
 unsigned long max_pfn;
 
 /* return the number of _pages_ that will be allocated for the boot bitmap */
diff -urNp linux-2.6.3/mm/page_alloc.c linux-2.6.3.SUSE/mm/page_alloc.c
--- linux-2.6.3/mm/page_alloc.c	2004-02-26 14:03:30.455143525 +0100
+++ linux-2.6.3.SUSE/mm/page_alloc.c	2004-02-26 14:04:32.841487948 +0100
@@ -45,6 +45,11 @@ int sysctl_lower_zone_protection = 0;
 EXPORT_SYMBOL(totalram_pages);
 EXPORT_SYMBOL(nr_swap_pages);
 
+#ifdef CONFIG_CRASH_DUMP_MODULE
+/* This symbol has to be exported to use 'for_each_pgdat' macro by modules. */
+EXPORT_SYMBOL(pgdat_list);
+#endif
+
 /*
  * Used by page_zone() to look up the address of the struct zone whose
  * id is encoded in the upper bits of page->flags
@@ -88,7 +93,8 @@ static void bad_page(const char *functio
 	page->mapping = NULL;
 }
 
-#ifndef CONFIG_HUGETLB_PAGE
+#if !defined(CONFIG_HUGETLB_PAGE) && !defined(CONFIG_CRASH_DUMP) \
+	&& !defined(CONFIG_CRASH_DUMP_MODULE)
 #define prep_compound_page(page, order) do { } while (0)
 #define destroy_compound_page(page, order) do { } while (0)
 #else
diff -urNp linux-2.6.3/scripts/mkcompile_h linux-2.6.3.SUSE/scripts/mkcompile_h
--- linux-2.6.3/scripts/mkcompile_h	2004-02-26 14:03:37.521370309 +0100
+++ linux-2.6.3.SUSE/scripts/mkcompile_h	2004-02-26 14:04:32.908471139 +0100
@@ -33,7 +33,7 @@ UTS_VERSION="$UTS_VERSION `LC_ALL=C LANG
 
 UTS_LEN=64
 UTS_TRUNCATE="sed -e s/\(.\{1,$UTS_LEN\}\).*/\1/"
-
+LINUX_COMPILE_VERSION_ID="__linux_compile_version_id__`hostname | tr -c '[0-9A-Za-z\n]' '__'`_`LANG=C date | tr -c '[0-9A-Za-z\n]' '_'`"
 # Generate a temporary compile.h
 
 ( echo /\* This file is auto generated, version $VERSION \*/
@@ -48,6 +48,8 @@ UTS_TRUNCATE="sed -e s/\(.\{1,$UTS_LEN\}
   echo \#define LINUX_COMPILE_DOMAIN \"suse.de\"
 
   echo \#define LINUX_COMPILER \"`$CC -v 2>&1 | tail -n 1`\"
+  echo \#define LINUX_COMPILE_VERSION_ID $LINUX_COMPILE_VERSION_ID
+  echo \#define LINUX_COMPILE_VERSION_ID_TYPE typedef char* "$LINUX_COMPILE_VERSION_ID""_t"
 ) > .tmpcompile
 
 # Only replace the real compile.h if the new one is different,
