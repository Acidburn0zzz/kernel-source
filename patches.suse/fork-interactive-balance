garloff@suse.de

Optimization.

This patch changes the way the interactive bonus is inherited on fork slightly.
Instead of always lowering the bonus to 95%, it does draw the bonus of the 
child towar5ds the center, keeping 80% of the deviation.
This way, new processes can more quickly be adjusted to their real 
interactivity status, while not losing the gint from the parent.

Index: kernel/sched.c
===================================================================
--- .orig/kernel/sched.c
+++ /kernel/sched.c
@@ -93,7 +93,7 @@ int max_timeslice = __MAX_TIMESLICE, min
 #define MIN_TIMESLICE ((min_timeslice * HZ + 999999) / 1000000)
 
 #define ON_RUNQUEUE_WEIGHT	 30
-#define CHILD_PENALTY		 95
+#define CHILD_INHERITANCE	 80
 #define PARENT_PENALTY		100
 #define EXIT_WEIGHT		  3
 #define PRIO_BONUS_RATIO	 25
@@ -947,8 +947,9 @@ void fastcall wake_up_forked_process(tas
 	current->sleep_avg = JIFFIES_TO_NS(CURRENT_BONUS(current) *
 		PARENT_PENALTY / 100 * MAX_SLEEP_AVG / MAX_BONUS);
 
-	p->sleep_avg = JIFFIES_TO_NS(CURRENT_BONUS(p) *
-		CHILD_PENALTY / 100 * MAX_SLEEP_AVG / MAX_BONUS);
+	p->sleep_avg = JIFFIES_TO_NS((CURRENT_BONUS(p)
+		* MAX_SLEEP_AVG / MAX_BONUS * CHILD_INHERITANCE / 100
+		+ (100-CHILD_INHERITANCE) * MAX_SLEEP_AVG / 200));
 
 	p->interactive_credit = 0;
 
