From: Olaf Kirch <okir@suse.de>
Subject: Hide use of lockd's h_monitored flag

  This patch moves all checks of the h_monitored flag into
  the nsm_monitor/unmonitor functions.
  A subsequent patch will replace the mechanism by which we
  mark a host as being monitored.

Signed-off-by: Olaf Kirch <okir@suse.de>

Index: 2.6.15/fs/lockd/clntproc.c
===================================================================
--- 2.6.15.orig/fs/lockd/clntproc.c
+++ 2.6.15/fs/lockd/clntproc.c
@@ -555,7 +555,7 @@ nlmclnt_lock(struct nlm_rqst *req, struc
 	long timeout;
 	int status;
 
-	if (!host->h_monitored && nsm_monitor(host) < 0) {
+	if (nsm_monitor(host) < 0) {
 		printk(KERN_NOTICE "lockd: failed to monitor %s\n",
 					host->h_name);
 		status = -ENOLCK;
Index: 2.6.15/fs/lockd/host.c
===================================================================
--- 2.6.15.orig/fs/lockd/host.c
+++ 2.6.15/fs/lockd/host.c
@@ -318,9 +318,12 @@ nlm_gc_hosts(void)
 			}
 			dprintk("lockd: delete host %s\n", host->h_name);
 			*q = host->h_next;
-			/* Don't unmonitor hosts that have been invalidated */
-			if (host->h_monitored && !host->h_killed)
-				nsm_unmonitor(host);
+
+			/*
+			 * Unmonitor unless host was invalidated (i.e. lockd restarted)
+			 */
+			nsm_unmonitor(host);
+
 			if ((clnt = host->h_rpcclnt) != NULL) {
 				if (atomic_read(&clnt->cl_users)) {
 					printk(KERN_WARNING
Index: 2.6.15/fs/lockd/mon.c
===================================================================
--- 2.6.15.orig/fs/lockd/mon.c
+++ 2.6.15/fs/lockd/mon.c
@@ -69,6 +69,8 @@ nsm_monitor(struct nlm_host *host)
 	int		status;
 
 	dprintk("lockd: nsm_monitor(%s)\n", host->h_name);
+	if (host->h_monitored)
+		return 0;
 
 	status = nsm_mon_unmon(host, SM_MON, &res);
 
@@ -86,15 +88,18 @@ int
 nsm_unmonitor(struct nlm_host *host)
 {
 	struct nsm_res	res;
-	int		status;
+	int		status = 0;
 
 	dprintk("lockd: nsm_unmonitor(%s)\n", host->h_name);
-
-	status = nsm_mon_unmon(host, SM_UNMON, &res);
-	if (status < 0)
-		printk(KERN_NOTICE "lockd: cannot unmonitor %s\n", host->h_name);
-	else
-		host->h_monitored = 0;
+	if (!host->h_monitored)
+		return 0;
+	host->h_monitored = 0;
+
+	if (!host->h_killed) {
+		status = nsm_mon_unmon(host, SM_UNMON, &res);
+		if (status < 0)
+			printk(KERN_NOTICE "lockd: cannot unmonitor %s\n", host->h_name);
+	}
 	return status;
 }
 
Index: 2.6.15/fs/lockd/svc4proc.c
===================================================================
--- 2.6.15.orig/fs/lockd/svc4proc.c
+++ 2.6.15/fs/lockd/svc4proc.c
@@ -42,7 +42,7 @@ nlm4svc_retrieve_args(struct svc_rqst *r
 
 	/* Obtain host handle */
 	if (!(host = nlmsvc_lookup_host(rqstp))
-	 || (argp->monitor && !host->h_monitored && nsm_monitor(host) < 0))
+	 || (argp->monitor && nsm_monitor(host) < 0))
 		goto no_locks;
 	*hostp = host;
 
Index: 2.6.15/fs/lockd/svcproc.c
===================================================================
--- 2.6.15.orig/fs/lockd/svcproc.c
+++ 2.6.15/fs/lockd/svcproc.c
@@ -71,7 +71,7 @@ nlmsvc_retrieve_args(struct svc_rqst *rq
 
 	/* Obtain host handle */
 	if (!(host = nlmsvc_lookup_host(rqstp))
-	 || (argp->monitor && !host->h_monitored && nsm_monitor(host) < 0))
+	 || (argp->monitor && nsm_monitor(host) < 0))
 		goto no_locks;
 	*hostp = host;
 
