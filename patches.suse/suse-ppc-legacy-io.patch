Date: Thu, 05 Aug 2004 14:00:10 +0200
From: olh@suse.de
Subject: Prevent legacy io access on pmac

The ppc32 common config runs also on PReP/CHRP, which uses PC style IO
devices.  The probing is bogus, it crashes or floods dmesg.

ppc can boot one single binary on prep, chrp and pmac boards.
ppc64 can boot one single binary on pseries and G5 boards.
pmac has no legacy io, probing for PC style legacy hardware leads to a
hard crash.
Several patches exist to prevent serial, floppy, ps2, parport and other
drivers from probing these io ports in the legacy IO space.
I think the simplest fix for 2.6 is a request_region of the problematic
areas.
Leave the serial ports open on Powerbooks with pccard slot, modem cards
should work that way.

Signed-off-by: Olaf Hering <olh@suse.de>

diff -purN linux-2.6.10.orig/arch/ppc/kernel/setup.c linux-2.6.10-olh/arch/ppc/kernel/setup.c
--- linux-2.6.10.orig/arch/ppc/kernel/setup.c	2004-12-24 22:35:28.000000000 +0100
+++ linux-2.6.10-olh/arch/ppc/kernel/setup.c	2005-01-09 13:19:58.031539726 +0100
@@ -480,6 +480,8 @@ platform_init(unsigned long r3, unsigned
 
 #ifdef CONFIG_SERIAL_CORE_CONSOLE
 extern char *of_stdout_device;
+int do_not_try_pc_legacy_8250_console;
+EXPORT_SYMBOL(do_not_try_pc_legacy_8250_console);
 
 static int __init set_preferred_console(void)
 {
@@ -525,9 +527,15 @@ static int __init set_preferred_console(
 			}
 		}
 	} else if (strcmp(name, "ch-a") == 0)
+	{
+		do_not_try_pc_legacy_8250_console = 1;
 		offset = 0;
+	}
 	else if (strcmp(name, "ch-b") == 0)
+	{
+		do_not_try_pc_legacy_8250_console = 1;
 		offset = 1;
+	}
 	else
 		return -ENODEV;
 	return add_preferred_console("ttyS", offset, NULL);
diff -purN linux-2.6.10.orig/arch/ppc/platforms/pmac_pci.c linux-2.6.10-olh/arch/ppc/platforms/pmac_pci.c
--- linux-2.6.10.orig/arch/ppc/platforms/pmac_pci.c	2004-12-24 22:34:46.000000000 +0100
+++ linux-2.6.10-olh/arch/ppc/platforms/pmac_pci.c	2005-01-09 13:19:58.034539260 +0100
@@ -904,6 +904,16 @@ pmac_pcibios_fixup(void)
 {
 	/* Fixup interrupts according to OF tree */
 	pcibios_fixup_OF_interrupts();
+
+#ifdef CONFIG_SERIAL_CORE_CONSOLE
+	do_not_try_pc_legacy_8250_console = 1;
+#endif
+	if (pci_get_class(PCI_CLASS_BRIDGE_CARDBUS << 8, NULL)) {
+		request_region(0x0UL, 0x2e0UL, "reserved legacy io");
+		request_region(0x300UL, 0xe0UL, "reserved legacy io");
+		request_region(0x400UL, 0x10000UL-0x400UL, "reserved legacy io");
+	} else
+		request_region(0x0UL, 0x10000UL, "reserved legacy io");
 }
 
 int __pmac
diff -purN linux-2.6.10.orig/drivers/serial/8250.c linux-2.6.10-olh/drivers/serial/8250.c
--- linux-2.6.10.orig/drivers/serial/8250.c	2004-12-24 22:33:50.000000000 +0100
+++ linux-2.6.10-olh/drivers/serial/8250.c	2005-01-09 13:19:58.038538638 +0100
@@ -45,6 +45,10 @@
 
 #include "8250.h"
 
+#ifndef NO_PC_LEGACY_SERIAL_8250_CONSOLE
+#define do_not_try_pc_legacy_8250_console (0)
+#endif
+
 /*
  * Configuration:
  *   share_irqs - whether we pass SA_SHIRQ to request_irq().  This option
@@ -2111,6 +2115,10 @@ static struct console serial8250_console
 
 static int __init serial8250_console_init(void)
 {
+	if(do_not_try_pc_legacy_8250_console) {
+		printk(KERN_INFO "%s: nothing to do on this board\n",__FUNCTION__);
+		return -ENODEV;
+	}
 	serial8250_isa_init_ports();
 	register_console(&serial8250_console);
 	return 0;
@@ -2442,6 +2450,11 @@ static int __init serial8250_init(void)
 {
 	int ret, i;
 
+	if(do_not_try_pc_legacy_8250_console) {
+		printk(KERN_INFO "%s: nothing to do on this board\n",__FUNCTION__);
+		return -ENODEV;
+	}
+
 	printk(KERN_INFO "Serial: 8250/16550 driver $Revision: 1.90 $ "
 		"%d ports, IRQ sharing %sabled\n", (int) UART_NR,
 		share_irqs ? "en" : "dis");
diff -purN linux-2.6.10.orig/include/asm-ppc/io.h linux-2.6.10-olh/include/asm-ppc/io.h
--- linux-2.6.10.orig/include/asm-ppc/io.h	2004-12-24 22:35:24.000000000 +0100
+++ linux-2.6.10-olh/include/asm-ppc/io.h	2005-01-09 13:19:58.039538482 +0100
@@ -525,6 +525,10 @@ struct pci_dev;
 extern void __iomem *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);
 extern void pci_iounmap(struct pci_dev *dev, void __iomem *);
 
+#define NO_PC_LEGACY_SERIAL_8250_CONSOLE 1
+extern int do_not_try_pc_legacy_8250_console;
+
+
 #endif /* _PPC_IO_H */
 
 #ifdef CONFIG_8260_PCI9
