Date: Thu, 05 Aug 2004 14:00:10 +0200
From: olh@suse.de
Subject: Prevent legacy io access on pmac

The ppc32 common config runs also on PReP/CHRP, which uses PC style IO
devices.  The probing is bogus, it crashes or floods dmesg.

ppc can boot one single binary on prep, chrp and pmac boards.
ppc64 can boot one single binary on pseries and G5 boards.
pmac has no legacy io, probing for PC style legacy hardware leads to a
hard crash.
Several patches exist to prevent serial, floppy, ps2, parport and other
drivers from probing these io ports in the legacy IO space.
I think the simplest fix for 2.6 is a request_region of the problematic
areas.
Leave the serial ports open on Powerbooks with pccard slot, modem cards
should work that way.

Signed-off-by: Olaf Hering <olh@suse.de>

diff -urNp linux-2.6.8/arch/ppc/kernel/setup.c linux-2.6.8.SUSE/arch/ppc/kernel/setup.c
--- linux-2.6.8/arch/ppc/kernel/setup.c	2004-08-30 12:09:15.560338869 +0200
+++ linux-2.6.8.SUSE/arch/ppc/kernel/setup.c	2004-08-30 12:09:32.840572327 +0200
@@ -477,6 +477,8 @@ platform_init(unsigned long r3, unsigned
 
 #ifdef CONFIG_SERIAL_CORE_CONSOLE
 extern char *of_stdout_device;
+int do_not_try_pc_legacy_8250_console;
+EXPORT_SYMBOL(do_not_try_pc_legacy_8250_console);
 
 static int __init set_preferred_console(void)
 {
@@ -522,9 +524,15 @@ static int __init set_preferred_console(
 			}
 		}
 	} else if (strcmp(name, "ch-a") == 0)
+	{
+		do_not_try_pc_legacy_8250_console = 1;
 		offset = 0;
+	}
 	else if (strcmp(name, "ch-b") == 0)
+	{
+		do_not_try_pc_legacy_8250_console = 1;
 		offset = 1;
+	}
 	else
 		return -ENODEV;
 	return add_preferred_console("ttyS", offset, NULL);
diff -urNp linux-2.6.8/arch/ppc/platforms/pmac_pci.c linux-2.6.8.SUSE/arch/ppc/platforms/pmac_pci.c
--- linux-2.6.8/arch/ppc/platforms/pmac_pci.c	2004-08-30 12:09:15.562338548 +0200
+++ linux-2.6.8.SUSE/arch/ppc/platforms/pmac_pci.c	2004-08-30 12:09:32.840572327 +0200
@@ -888,6 +888,16 @@ pmac_pcibios_fixup(void)
 {
 	/* Fixup interrupts according to OF tree */
 	pcibios_fixup_OF_interrupts();
+
+#ifdef CONFIG_SERIAL_CORE_CONSOLE
+	do_not_try_pc_legacy_8250_console = 1;
+#endif
+	if (pci_find_class(PCI_CLASS_BRIDGE_CARDBUS << 8, NULL)) {
+		request_region(0x0UL, 0x2e0UL, "reserved legacy io");
+		request_region(0x300UL, 0xe0UL, "reserved legacy io");
+		request_region(0x400UL, 0x10000UL-0x400UL, "reserved legacy io");
+	} else
+		request_region(0x0UL, 0x10000UL, "reserved legacy io");
 }
 
 int __pmac
diff -urNp linux-2.6.8/arch/ppc64/kernel/pmac_pci.c linux-2.6.8.SUSE/arch/ppc64/kernel/pmac_pci.c
--- linux-2.6.8/arch/ppc64/kernel/pmac_pci.c	2004-08-30 12:09:15.568337588 +0200
+++ linux-2.6.8.SUSE/arch/ppc64/kernel/pmac_pci.c	2004-08-30 12:09:32.841572167 +0200
@@ -664,6 +664,8 @@ void __init pmac_pcibios_fixup(void)
 
 	pci_fix_bus_sysdata();
 
+	request_region(0x0UL, 0x10000UL, "reserved legacy io");
+
 #ifdef CONFIG_PMAC_DART
 	iommu_setup_pmac();
 #endif /* CONFIG_PMAC_DART */
diff -urNp linux-2.6.8/arch/ppc64/kernel/setup.c linux-2.6.8.SUSE/arch/ppc64/kernel/setup.c
--- linux-2.6.8/arch/ppc64/kernel/setup.c	2004-08-30 12:09:15.571337108 +0200
+++ linux-2.6.8.SUSE/arch/ppc64/kernel/setup.c	2004-08-30 12:11:01.373397965 +0200
@@ -474,6 +474,9 @@ void parse_cmd_line(unsigned long r3, un
 }
 
 #ifdef CONFIG_PPC_PSERIES
+int do_not_try_pc_legacy_8250_console;
+EXPORT_SYMBOL(do_not_try_pc_legacy_8250_console);
+
 static int __init set_preferred_console(void)
 {
 	struct device_node *prom_stdout;
@@ -537,9 +540,15 @@ static int __init set_preferred_console(
  			return add_preferred_console("hvc", 0, NULL);
  		}
 	} else if (strcmp(name, "ch-a") == 0)
+		{
+		do_not_try_pc_legacy_8250_console = 1;
 		offset = 0;
+		}
 	else if (strcmp(name, "ch-b") == 0)
+		{
+		do_not_try_pc_legacy_8250_console = 1;
 		offset = 1;
+		}
 	else
 		return -ENODEV;
 
diff -urNp linux-2.6.8/drivers/serial/8250.c linux-2.6.8.SUSE/drivers/serial/8250.c
--- linux-2.6.8/drivers/serial/8250.c	2004-08-30 12:09:16.172240904 +0200
+++ linux-2.6.8.SUSE/drivers/serial/8250.c	2004-08-30 12:09:32.843571847 +0200
@@ -36,6 +36,10 @@
 #include <asm/io.h>
 #include <asm/irq.h>
 
+#ifndef NO_PC_LEGACY_SERIAL_8250_CONSOLE
+#define do_not_try_pc_legacy_8250_console (0)
+#endif
+
 #if defined(CONFIG_SERIAL_8250_CONSOLE) && defined(CONFIG_MAGIC_SYSRQ)
 #define SUPPORT_SYSRQ
 #endif
@@ -2018,6 +2022,10 @@ static struct console serial8250_console
 
 static int __init serial8250_console_init(void)
 {
+	if(do_not_try_pc_legacy_8250_console) {
+		printk(KERN_INFO "%s: nothing to do on this board\n",__FUNCTION__);
+		return -ENODEV;
+	}
 	serial8250_isa_init_ports();
 	register_console(&serial8250_console);
 	return 0;
@@ -2167,6 +2175,11 @@ static int __init serial8250_init(void)
 {
 	int ret, i;
 
+	if(do_not_try_pc_legacy_8250_console) {
+		printk(KERN_INFO "%s: nothing to do on this board\n",__FUNCTION__);
+		return -ENODEV;
+	}
+
 	printk(KERN_INFO "Serial: 8250/16550 driver $Revision: 1.90 $ "
 		"%d ports, IRQ sharing %sabled\n", (int) UART_NR,
 		share_irqs ? "en" : "dis");
diff -urNp linux-2.6.8/include/asm-ppc/io.h linux-2.6.8.SUSE/include/asm-ppc/io.h
--- linux-2.6.8/include/asm-ppc/io.h	2004-08-14 07:37:38.000000000 +0200
+++ linux-2.6.8.SUSE/include/asm-ppc/io.h	2004-08-30 12:09:32.844571687 +0200
@@ -399,6 +399,10 @@ static inline int isa_check_signature(un
 	return 0;
 }
 
+#define NO_PC_LEGACY_SERIAL_8250_CONSOLE 1
+extern int do_not_try_pc_legacy_8250_console;
+
+
 #endif /* _PPC_IO_H */
 
 #ifdef CONFIG_8260_PCI9
diff -urNp linux-2.6.8/include/asm-ppc64/io.h linux-2.6.8.SUSE/include/asm-ppc64/io.h
--- linux-2.6.8/include/asm-ppc64/io.h	2004-08-14 07:38:04.000000000 +0200
+++ linux-2.6.8.SUSE/include/asm-ppc64/io.h	2004-08-30 12:09:32.844571687 +0200
@@ -401,6 +401,9 @@ out:
 #define dma_cache_wback(_start,_size)		do { } while (0)
 #define dma_cache_wback_inv(_start,_size)	do { } while (0)
 
+#define NO_PC_LEGACY_SERIAL_8250_CONSOLE 1
+extern int do_not_try_pc_legacy_8250_console;
+
 #endif /* __KERNEL__ */
 
 #endif /* _PPC64_IO_H */
