garloff@suse.de

Performance

By reordering the fields, unecessary padding is avoided on 64bit platforms,
reducing the size of struct file from 264 to 256 and thus saving 64 bytes 
per entry into the filp slab.

diff -uNrp linux-2.6.5/include/linux/fs.h linux-2.6.5.smallstruct/include/linux/fs.h
--- linux-2.6.5/include/linux/fs.h	2004-05-22 13:11:08.000000000 +0200
+++ linux-2.6.5.smallstruct/include/linux/fs.h	2004-05-22 14:32:55.000000000 +0200
@@ -513,8 +513,8 @@ struct fown_struct {
 	rwlock_t lock;          /* protects pid, uid, euid fields */
 	int pid;		/* pid or -pgrp where SIGIO should be sent */
 	uid_t uid, euid;	/* uid/euid of process setting the owner */
-	int signum;		/* posix.1b rt signal to be delivered on IO */
 	void *security;
+	int signum;		/* posix.1b rt signal to be delivered on IO */
 };
 
 /*
@@ -542,10 +542,10 @@ struct file {
 	atomic_t		f_count;
 	unsigned int 		f_flags;
 	mode_t			f_mode;
+	int			f_error;
 	loff_t			f_pos;
 	struct fown_struct	f_owner;
 	unsigned int		f_uid, f_gid;
-	int			f_error;
 	struct file_ra_state	f_ra;
 
 	unsigned long		f_version;
