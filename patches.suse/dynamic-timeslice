From: garloff@suse.de
Subject: allow tuning of scheduling timeslices
Patch-mainline: no

Forward port from andrea's 2.4 patch.

Signed-off-by: Andrea Arcangeli <andrea@suse.de>

 include/linux/sched.h  |    1 +
 include/linux/sysctl.h |    2 ++
 kernel/sched.c         |   11 +++++++----
 kernel/sysctl.c        |   16 ++++++++++++++++
 4 files changed, 26 insertions(+), 4 deletions(-)

Index: linux-2.6.15/include/linux/sched.h
===================================================================
--- linux-2.6.15.orig/include/linux/sched.h
+++ linux-2.6.15/include/linux/sched.h
@@ -231,12 +231,13 @@ extern int in_sched_functions(unsigned l
 
 #define	MAX_SCHEDULE_TIMEOUT	LONG_MAX
 extern signed long FASTCALL(schedule_timeout(signed long timeout));
 extern signed long schedule_timeout_interruptible(signed long timeout);
 extern signed long schedule_timeout_uninterruptible(signed long timeout);
 asmlinkage void schedule(void);
+extern int def_timeslice, min_timeslice;
 
 struct namespace;
 
 /* Maximum number of active map areas.. This is a random (large) number */
 #define DEFAULT_MAX_MAP_COUNT	65536
 
Index: linux-2.6.15/include/linux/sysctl.h
===================================================================
--- linux-2.6.15.orig/include/linux/sysctl.h
+++ linux-2.6.15/include/linux/sysctl.h
@@ -151,12 +151,14 @@ enum
 	KERN_UNSUPPORTED=73,	/* int: allow loading of unsupported modules */
 	KERN_KDB=74,		/* int: kdb on/off */
 	KERN_DUMP=75,		/* directory: dump parameters */
 	KERN_DELAYACCT=76,	/* int: Per-task delay accounting on/off */
 	KERN_SCHEDSTATS=77,	/* int: Schedstats on/off */
 	KERN_HZ=78,		/* unsigned long: internal kernel HZ */
+	KERN_DEFTIMESLICE=79,	/* int: nice   0 def timeslice */
+	KERN_MINTIMESLICE=80,	/* int: nice +19 min timeslice */
 };
 
 
 /* CTL_VM names: */
 enum
 {
Index: linux-2.6.15/kernel/sched.c
===================================================================
--- linux-2.6.15.orig/kernel/sched.c
+++ linux-2.6.15/kernel/sched.c
@@ -89,14 +89,17 @@ EXPORT_SYMBOL_GPL(dump_polling_oncpu);
  * These are the 'tuning knobs' of the scheduler:
  *
  * Minimum timeslice is 5 msecs (or 1 jiffy, whichever is larger),
  * default timeslice is 100 msecs, maximum timeslice is 800 msecs.
  * Timeslices get refilled after they expire.
  */
-#define MIN_TIMESLICE		max(5 * HZ / 1000, 1)
-#define DEF_TIMESLICE		(100 * HZ / 1000)
+#define __MIN_TIMESLICE		  5000 /* usec userspace */
+#define __DEF_TIMESLICE		100000 /* usec userspace */
+int def_timeslice = __DEF_TIMESLICE, min_timeslice = __MIN_TIMESLICE;
+#define MIN_TIMESLICE ((min_timeslice * HZ + 999999) / 1000000)
+#define DEF_TIMESLICE ((def_timeslice * HZ + 999999) / 1000000)
 #define ON_RUNQUEUE_WEIGHT	 30
 #define CHILD_PENALTY		 95
 #define PARENT_PENALTY		100
 #define EXIT_WEIGHT		  3
 #define PRIO_BONUS_RATIO	 25
 #define MAX_BONUS		(MAX_USER_PRIO * PRIO_BONUS_RATIO / 100)
@@ -131,14 +134,14 @@ EXPORT_SYMBOL_GPL(dump_polling_oncpu);
  * tasks will be expired. Default nice 0 tasks are somewhere between,
  * it takes some effort for them to get interactive, but it's not
  * too hard.
  */
 
 #define CURRENT_BONUS(p) \
-	(NS_TO_JIFFIES((p)->sleep_avg) * MAX_BONUS / \
-		MAX_SLEEP_AVG)
+	min((unsigned long) MAX_BONUS, (NS_TO_JIFFIES((p)->sleep_avg) * MAX_BONUS / \
+		MAX_SLEEP_AVG))
 
 #define GRANULARITY	(10 * HZ / 1000 ? : 1)
 
 #ifdef CONFIG_SMP
 #define TIMESLICE_GRANULARITY(p)	(GRANULARITY * \
 		(1 << (((MAX_BONUS - CURRENT_BONUS(p)) ? : 1) - 1)) * \
Index: linux-2.6.15/kernel/sysctl.c
===================================================================
--- linux-2.6.15.orig/kernel/sysctl.c
+++ linux-2.6.15/kernel/sysctl.c
@@ -718,12 +718,28 @@ static ctl_table kern_table[] = {
 		.procname	= "HZ",
 		.data		= &__HZ,
 		.maxlen		= sizeof(int),
 		.mode		= 0444,
 		.proc_handler	= &proc_dointvec,
 	},
+	{
+		.ctl_name	= KERN_DEFTIMESLICE,
+		.procname	= "def-timeslice",
+		.data		=  &def_timeslice,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
+	{
+		.ctl_name	= KERN_MINTIMESLICE,
+		.procname	= "min-timeslice",
+		.data		= &min_timeslice,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
 	{ .ctl_name = 0 }
 };
 
 /* Constants for minimum and maximum testing in vm_table.
    We use these as one-element integer vectors. */
 static int zero;
