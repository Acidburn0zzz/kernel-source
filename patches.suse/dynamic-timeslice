From: garloff@suse.de
Subject: allow tuning of scheduling timeslices
Patch-mainline: no

Forward port from andrea's 2.4 patch.

Signed-off-by: Andrea Arcangeli <andrea@suse.de>

 include/linux/sched.h  |    1 +
 include/linux/sysctl.h |    2 ++
 kernel/sched.c         |   11 +++++++----
 kernel/sysctl.c        |   16 ++++++++++++++++
 4 files changed, 26 insertions(+), 4 deletions(-)

Index: sles10/include/linux/sched.h
--- sles10/include/linux/sched.h.orig	2006-02-20 16:59:01.000000000 +0100
+++ sles10/include/linux/sched.h	2006-02-20 16:59:41.000000000 +0100
@@ -234,6 +234,7 @@ extern signed long FASTCALL(schedule_tim
 extern signed long schedule_timeout_interruptible(signed long timeout);
 extern signed long schedule_timeout_uninterruptible(signed long timeout);
 asmlinkage void schedule(void);
+extern int def_timeslice, min_timeslice;
 
 struct namespace;
 
Index: sles10/include/linux/sysctl.h
--- sles10/include/linux/sysctl.h.orig	2006-02-20 16:59:01.000000000 +0100
+++ sles10/include/linux/sysctl.h	2006-02-20 18:07:32.000000000 +0100
@@ -151,6 +151,8 @@ enum
 	KERN_DUMP=73,		/* directory: dump parameters */
 	KERN_DELAYACCT=74,	/* int: Per-task delay accounting on/off */
 	KERN_SCHEDSTATS=75,	/* int: Schedstats on/off */
+	KERN_DEFTIMESLICE=77,	/* int: nice   0 def timeslice */
+	KERN_MINTIMESLICE=78,	/* int: nice +19 min timeslice */
 };
 
 
Index: sles10/kernel/sched.c
--- sles10/kernel/sched.c.orig	2006-02-20 16:59:01.000000000 +0100
+++ sles10/kernel/sched.c	2006-02-20 18:09:55.000000000 +0100
@@ -92,8 +92,11 @@ EXPORT_SYMBOL_GPL(dump_polling_oncpu);
  * default timeslice is 100 msecs, maximum timeslice is 800 msecs.
  * Timeslices get refilled after they expire.
  */
-#define MIN_TIMESLICE		max(5 * HZ / 1000, 1)
-#define DEF_TIMESLICE		(100 * HZ / 1000)
+#define __MIN_TIMESLICE		  5000 /* usec userspace */
+#define __DEF_TIMESLICE		100000 /* usec userspace */
+int def_timeslice = __DEF_TIMESLICE, min_timeslice = __MIN_TIMESLICE;
+#define MIN_TIMESLICE ((min_timeslice * HZ + 999999) / 1000000)
+#define DEF_TIMESLICE ((def_timeslice * HZ + 999999) / 1000000)
 #define ON_RUNQUEUE_WEIGHT	 30
 #define CHILD_PENALTY		 95
 #define PARENT_PENALTY		100
@@ -134,8 +137,8 @@ EXPORT_SYMBOL_GPL(dump_polling_oncpu);
  */
 
 #define CURRENT_BONUS(p) \
-	(NS_TO_JIFFIES((p)->sleep_avg) * MAX_BONUS / \
-		MAX_SLEEP_AVG)
+	min((unsigned long) MAX_BONUS, (NS_TO_JIFFIES((p)->sleep_avg) * MAX_BONUS / \
+		MAX_SLEEP_AVG))
 
 #define GRANULARITY	(10 * HZ / 1000 ? : 1)
 
Index: sles10/kernel/sysctl.c
--- sles10/kernel/sysctl.c.orig	2006-02-20 16:59:01.000000000 +0100
+++ sles10/kernel/sysctl.c	2006-02-20 18:10:36.000000000 +0100
@@ -668,6 +668,22 @@ static ctl_table kern_table[] = {
 		.proc_handler	= &proc_dointvec,
 	},
 #endif
+	{
+		.ctl_name	= KERN_DEFTIMESLICE,
+		.procname	= "def-timeslice",
+		.data		=  &def_timeslice,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
+	{
+		.ctl_name	= KERN_MINTIMESLICE,
+		.procname	= "min-timeslice",
+		.data		= &min_timeslice,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
 	{ .ctl_name = 0 }
 };
 
