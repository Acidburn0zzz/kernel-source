From: garloff@suse.de
Subject: allow tuning of scheduling timeslices

Forward port from andrea's 2.4 patch.

 include/linux/sched.h  |    1 +
 include/linux/sysctl.h |    3 +++
 kernel/sched.c         |   20 +++++++++++++++++---
 kernel/sysctl.c        |   25 +++++++++++++++++++++++++
 4 files changed, 46 insertions(+), 3 deletions(-)

Index: linux-2.6.15/include/linux/sched.h
===================================================================
--- linux-2.6.15.orig/include/linux/sched.h	2006-02-19 23:18:28.000000000 +0100
+++ linux-2.6.15/include/linux/sched.h	2006-02-19 23:29:40.000000000 +0100
@@ -232,6 +232,7 @@
 extern signed long schedule_timeout_interruptible(signed long timeout);
 extern signed long schedule_timeout_uninterruptible(signed long timeout);
 asmlinkage void schedule(void);
+extern int def_timeslice, min_timeslice;
 
 struct namespace;
 
Index: linux-2.6.15/include/linux/sysctl.h
===================================================================
--- linux-2.6.15.orig/include/linux/sysctl.h	2006-02-19 23:18:28.000000000 +0100
+++ linux-2.6.15/include/linux/sysctl.h	2006-02-19 23:30:27.000000000 +0100
@@ -148,6 +148,9 @@
 	KERN_SPIN_RETRY=70,	/* int: number of spinlock retries */
 	KERN_UNSUPPORTED=71,	/* int: allow loading of unsupported modules */
 	KERN_KDB=72,		/* int: kdb on/off */
+	KERN_DEFTIMESLICE=73,	/* int: nice   0 def timeslice */
+	KERN_MINTIMESLICE=74,	/* int: nice +19 min timeslice */
+	KERN_HZ=75,		/* unsigned long: internal kernel HZ */
 };
 
 
Index: linux-2.6.15/kernel/sched.c
===================================================================
--- linux-2.6.15.orig/kernel/sched.c	2006-02-19 23:18:28.000000000 +0100
+++ linux-2.6.15/kernel/sched.c	2006-02-19 23:29:40.000000000 +0100
@@ -81,11 +81,18 @@
  * These are the 'tuning knobs' of the scheduler:
  *
  * Minimum timeslice is 5 msecs (or 1 jiffy, whichever is larger),
- * default timeslice is 100 msecs, maximum timeslice is 800 msecs.
+ * default timeslice is 105 msecs, maximum timeslice is 805 msecs.
  * Timeslices get refilled after they expire.
+ * Those values are choosen accurately to make sure each nice level
+ * step does make a difference with HZ = 250.
  */
-#define MIN_TIMESLICE		max(5 * HZ / 1000, 1)
-#define DEF_TIMESLICE		(100 * HZ / 1000)
+#define __MIN_TIMESLICE		  5000 /* usec userspace */
+#define __DEF_TIMESLICE		105000 /* usec userspace */
+#define __MIN_TIMESLICE_DESKTOP	  2500 /* usec userspace */
+#define __DEF_TIMESLICE_DESKTOP	 52500 /* usec userspace */
+int def_timeslice = __DEF_TIMESLICE, min_timeslice = __MIN_TIMESLICE;
+#define MIN_TIMESLICE ((min_timeslice * HZ + 999999) / 1000000)
+#define DEF_TIMESLICE ((def_timeslice * HZ + 999999) / 1000000)
 #define ON_RUNQUEUE_WEIGHT	 30
 #define CHILD_PENALTY		 95
 #define PARENT_PENALTY		100
@@ -3375,6 +3382,13 @@
 }
 EXPORT_SYMBOL(wait_for_completion_interruptible_timeout);
 
+static int __init init_desktop(char *str)
+{
+	min_timeslice = __MIN_TIMESLICE_DESKTOP;
+	def_timeslice = __DEF_TIMESLICE_DESKTOP;
+	return 1;
+}
+__setup("desktop", init_desktop);
 
 #define	SLEEP_ON_VAR					\
 	unsigned long flags;				\
Index: linux-2.6.15/kernel/sysctl.c
===================================================================
--- linux-2.6.15.orig/kernel/sysctl.c	2006-02-19 23:18:28.000000000 +0100
+++ linux-2.6.15/kernel/sysctl.c	2006-02-19 23:29:40.000000000 +0100
@@ -174,6 +174,7 @@
 static void unregister_proc_table(ctl_table *, struct proc_dir_entry *);
 #endif
 
+static unsigned int __HZ = HZ;
 /* The default sysctl tables: */
 
 static ctl_table root_table[] = {
@@ -667,6 +668,30 @@
 		.proc_handler	= &proc_dointvec,
 	},
 #endif
+	{
+		.ctl_name	= KERN_DEFTIMESLICE,
+		.procname	= "def-timeslice",
+		.data		=  &def_timeslice,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
+	{
+		.ctl_name	= KERN_MINTIMESLICE,
+		.procname	= "min-timeslice",
+		.data		= &min_timeslice,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
+	{
+		.ctl_name	= KERN_HZ,
+		.procname	= "HZ",
+		.data		= &__HZ,
+		.maxlen		= sizeof(int),
+		.mode		= 0444,
+		.proc_handler	= &proc_dointvec,
+	},
 	{ .ctl_name = 0 }
 };
 
