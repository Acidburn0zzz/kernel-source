From: garloff@suse.de
Subject: allow tuning of scheduling timeslices

Forward port from andrea's 2.4 patch.

Index: linux-2.6.10/include/linux/sched.h
===================================================================
--- linux-2.6.10.orig/include/linux/sched.h
+++ linux-2.6.10/include/linux/sched.h
@@ -182,8 +182,9 @@ extern int in_sched_functions(unsigned l
 
 #define	MAX_SCHEDULE_TIMEOUT	LONG_MAX
 extern signed long FASTCALL(schedule_timeout(signed long timeout));
 asmlinkage void schedule(void);
+extern int def_timeslice, min_timeslice;
 
 struct namespace;
 
 /* Maximum number of active map areas.. This is a random (large) number */
Index: linux-2.6.10/include/linux/sysctl.h
===================================================================
--- linux-2.6.10.orig/include/linux/sysctl.h
+++ linux-2.6.10/include/linux/sysctl.h
@@ -135,8 +135,11 @@ enum
 	KERN_BOOTLOADER_TYPE=67, /* int: boot loader type */
 	KERN_RANDOMIZE=68, /* int: randomize virtual address space */
 	KERN_SETUID_DUMPABLE=69, /* int: behaviour of dumps for setuid core */
 	KERN_KDB=70,		/* int: kdb on/off */
+	KERN_DEFTIMESLICE=71,	/* int: nice   0 def timeslice */
+	KERN_MINTIMESLICE=72,	/* int: nice +19 min timeslice */
+	KERN_HZ=73,		/* unsigned long: internal kernel HZ */
 };
 
 
 /* CTL_VM names: */
Index: linux-2.6.10/kernel/sched.c
===================================================================
--- linux-2.6.10.orig/kernel/sched.c
+++ linux-2.6.10/kernel/sched.c
@@ -76,13 +76,20 @@
 /*
  * These are the 'tuning knobs' of the scheduler:
  *
  * Minimum timeslice is 5 msecs (or 1 jiffy, whichever is larger),
- * default timeslice is 100 msecs, maximum timeslice is 800 msecs.
+ * default timeslice is 105 msecs, maximum timeslice is 805 msecs.
  * Timeslices get refilled after they expire.
+ * Those values are choosen accurately to make sure each nice level
+ * step does make a difference with HZ = 1000.
  */
-#define MIN_TIMESLICE		max(5 * HZ / 1000, 1)
-#define DEF_TIMESLICE		(100 * HZ / 1000)
+#define __MIN_TIMESLICE		  5000 /* usec userspace */
+#define __DEF_TIMESLICE		105000 /* usec userspace */
+#define __MIN_TIMESLICE_DESKTOP	  1000 /* usec userspace */
+#define __DEF_TIMESLICE_DESKTOP	 21000 /* usec userspace */
+int def_timeslice = __DEF_TIMESLICE, min_timeslice = __MIN_TIMESLICE;
+#define MIN_TIMESLICE ((min_timeslice * HZ + 999999) / 1000000)
+#define DEF_TIMESLICE ((def_timeslice * HZ + 999999) / 1000000)
 #define ON_RUNQUEUE_WEIGHT	 30
 #define CHILD_PENALTY		 95
 #define PARENT_PENALTY		100
 #define EXIT_WEIGHT		  3
@@ -3145,8 +3152,15 @@ out:
 	return timeout;
 }
 EXPORT_SYMBOL(wait_for_completion_interruptible_timeout);
 
+static int __init init_desktop(char *str)
+{
+	min_timeslice = __MIN_TIMESLICE_DESKTOP;
+	def_timeslice = __DEF_TIMESLICE_DESKTOP;
+	return 1;
+}
+__setup("desktop", init_desktop);
 
 #define	SLEEP_ON_VAR					\
 	unsigned long flags;				\
 	wait_queue_t wait;				\
Index: linux-2.6.10/kernel/sysctl.c
===================================================================
--- linux-2.6.10.orig/kernel/sysctl.c
+++ linux-2.6.10/kernel/sysctl.c
@@ -174,8 +174,9 @@ extern struct proc_dir_entry *proc_sys_r
 static void register_proc_table(ctl_table *, struct proc_dir_entry *);
 static void unregister_proc_table(ctl_table *, struct proc_dir_entry *);
 #endif
 
+static unsigned int __HZ = HZ;
 /* The default sysctl tables: */
 
 static ctl_table root_table[] = {
 	{
@@ -651,8 +652,32 @@ static ctl_table kern_table[] = {
		.maxlen		= sizeof(int),
 		.mode		= 0644,
 		.proc_handler	= &proc_dointvec,
 	},
+	{
+		.ctl_name	= KERN_DEFTIMESLICE, 
+		.procname	= "def-timeslice",
+		.data		=  &def_timeslice,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
+	{
+		.ctl_name	= KERN_MINTIMESLICE, 
+		.procname	= "min-timeslice",
+		.data		= &min_timeslice,
+		.maxlen		= sizeof(int),
+		.mode		= 0644,
+		.proc_handler	= &proc_dointvec,
+	},
+	{
+		.ctl_name	= KERN_HZ, 
+		.procname	= "HZ",
+		.data		= &__HZ,
+		.maxlen		= sizeof(int),
+		.mode		= 0444,
+		.proc_handler	= &proc_dointvec,
+	},
 
 	{ .ctl_name = 0 }
 };
 
