Date: Wed, 28 Apr 2004 16:21:55 +1000
From: Anton Blanchard <anton@samba.org>
To: olh@suse.de
Subject: 7781


Fix for 7781. We should be able to enable 128way support with this
patch.

Anton

diff -Naurp before/drivers/dump/dump_i386.c after/drivers/dump/dump_i386.c
--- before/drivers/dump/dump_i386.c	2004-02-19 11:50:12.000000000 +0530
+++ after/drivers/dump/dump_i386.c	2004-04-27 19:32:46.000000000 +0530
@@ -92,13 +92,13 @@ __dump_save_regs(struct pt_regs *dest_re
 
 
 #ifdef CONFIG_SMP
-extern unsigned long irq_affinity[];
+extern cpumask_t irq_affinity[];
 extern irq_desc_t irq_desc[];
 extern void dump_send_ipi(void);
 
 static int dump_expect_ipi[NR_CPUS];
 static atomic_t waiting_for_dump_ipi;
-static unsigned long saved_affinity[NR_IRQS];
+static cpumask_t saved_affinity[NR_IRQS];
 
 extern void stop_this_cpu(void *); /* exported by i386 kernel */
 
@@ -178,13 +178,14 @@ static void 
 set_irq_affinity(void)
 {
 	int i;
-	int cpu = smp_processor_id();
+	cpumask_t cpu = CPU_MASK_NONE;
 
+	cpu_set(smp_processor_id(), cpu);
 	memcpy(saved_affinity, irq_affinity, NR_IRQS * sizeof(unsigned long));
 	for (i = 0; i < NR_IRQS; i++) {
 		if (irq_desc[i].handler == NULL)
 			continue;
-		irq_affinity[i] = 1UL << cpu;
+		irq_affinity[i] = cpu;
 		if (irq_desc[i].handler->set_affinity != NULL)
 			irq_desc[i].handler->set_affinity(i, irq_affinity[i]);
 	}
diff -Naurp before/drivers/dump/dump_ppc64.c after/drivers/dump/dump_ppc64.c
--- before/drivers/dump/dump_ppc64.c	2004-04-13 09:47:23.000000000 +0530
+++ after/drivers/dump/dump_ppc64.c	2004-04-27 19:37:53.000000000 +0530
@@ -36,9 +36,9 @@
 #include <linux/kdb.h>
 #endif
 
-extern unsigned long irq_affinity[];
+extern cpumask_t irq_affinity[];
 
-static unsigned long saved_affinity[NR_IRQS];
+static cpumask_t saved_affinity[NR_IRQS];
 
 static __s32         saved_irq_count;   /* saved preempt_count() flags */
 
@@ -170,9 +170,11 @@ static void
 __dump_set_irq_affinity(void)
 {
 	int i;
-	int cpu = smp_processor_id();
+	cpumask_t cpu = CPU_MASK_NONE;
 	irq_desc_t *irq_d;
 
+	cpu_set(smp_processor_id(), cpu);
+
 	memcpy(saved_affinity, irq_affinity, NR_IRQS * sizeof(unsigned long));
 
 	for_each_irq(i) {
@@ -180,7 +182,7 @@ __dump_set_irq_affinity(void)
 		if (irq_d->handler == NULL) {
 			continue;
 		}
-		irq_affinity[i] = 1UL << cpu;
+		irq_affinity[i] = cpu;
 		if (irq_d->handler->set_affinity != NULL) {
 			irq_d->handler->set_affinity(i, irq_affinity[i]);
 		}
diff -Naurp before/include/asm-i386/dump.h after/include/asm-i386/dump.h
--- before/include/asm-i386/dump.h	2003-10-01 14:26:18.000000000 +0530
+++ after/include/asm-i386/dump.h	2004-04-27 19:29:58.000000000 +0530
@@ -63,7 +63,7 @@ struct __dump_header_asm {
 extern struct __dump_header_asm dump_header_asm;
 
 #ifdef CONFIG_SMP
-extern unsigned long irq_affinity[];
+extern cpumask_t irq_affinity[];
 extern int (*dump_ipi_function_ptr)(struct pt_regs *);
 extern void dump_send_ipi(void);
 #else

