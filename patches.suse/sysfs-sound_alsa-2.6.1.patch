

This patch adds support for all ALSA sound devices.  The previous OSS
sound patch is required for this one to work properly.

This patch is based on a work originally written by 
Leann Ogasawara <ogasawara@osdl.org>



---

 25-akpm/include/sound/core.h |    1 +
 25-akpm/sound/core/sound.c   |   37 ++++++++++++++++++++-----------------
 25-akpm/sound/pci/intel8x0.c |    1 +
 3 files changed, 22 insertions(+), 17 deletions(-)

diff -puN include/sound/core.h~sysfs-class-08-alsa-sound include/sound/core.h
--- 25/include/sound/core.h~sysfs-class-08-alsa-sound	Thu Jan 15 16:39:57 2004
+++ 25-akpm/include/sound/core.h	Thu Jan 15 16:39:57 2004
@@ -160,6 +160,7 @@ struct _snd_card {
 	int shutdown;			/* this card is going down */
 	wait_queue_head_t shutdown_sleep;
 	struct work_struct free_workq;	/* for free in workqueue */
+	struct device *dev;
 
 #ifdef CONFIG_PM
 	int (*set_power_state) (snd_card_t *card, unsigned int state);
diff -puN sound/core/sound.c~sysfs-class-08-alsa-sound sound/core/sound.c
--- 25/sound/core/sound.c~sysfs-class-08-alsa-sound	Thu Jan 15 16:39:57 2004
+++ 25-akpm/sound/core/sound.c	Thu Jan 15 16:56:11 2004
@@ -38,9 +38,7 @@
 static int major = CONFIG_SND_MAJOR;
 int snd_major;
 static int cards_limit = 1;
-#ifdef CONFIG_DEVFS_FS
 static int device_mode = S_IFCHR | S_IRUGO | S_IWUGO;
-#endif
 
 MODULE_AUTHOR("Jaroslav Kysela <perex@suse.cz>");
 MODULE_DESCRIPTION("Advanced Linux Sound Architecture driver for soundcards.");
@@ -71,6 +69,7 @@ static struct list_head snd_minors_hash[
 
 static DECLARE_MUTEX(sound_mutex);
 
+extern struct class_simple *sound_class;
 #ifdef CONFIG_KMOD
 
 /**
@@ -212,6 +211,7 @@ int snd_register_device(int type, snd_ca
 {
 	int minor = snd_kernel_minor(type, card, dev);
 	snd_minor_t *preg;
+	struct device *device = NULL;
 
 	if (minor < 0)
 		return minor;
@@ -230,10 +230,14 @@ int snd_register_device(int type, snd_ca
 		return -EBUSY;
 	}
 	list_add_tail(&preg->list, &snd_minors_hash[SNDRV_MINOR_CARD(minor)]);
-#ifdef CONFIG_DEVFS_FS
-	if (strncmp(name, "controlC", 8) || card->number >= cards_limit)
-		devfs_mk_cdev(MKDEV(major, minor), S_IFCHR | device_mode, "snd/%s", name);
-#endif
+	if (strncmp(name, "controlC", 8) || (card->number >= cards_limit)) {
+		devfs_mk_cdev(MKDEV(major, minor), S_IFCHR | device_mode,
+				"snd/%s", name);
+		if (card)
+			device = card->dev;
+		class_simple_device_add(sound_class, MKDEV(major, minor),
+					device, name);
+	}
 	up(&sound_mutex);
 	return 0;
 }
@@ -261,12 +265,11 @@ int snd_unregister_device(int type, snd_
 		up(&sound_mutex);
 		return -EINVAL;
 	}
-#ifdef CONFIG_DEVFS_FS
-	if (strncmp(mptr->name, "controlC", 8))	/* created in sound.c */
+	if (strncmp(mptr->name, "controlC", 8) ||
+			(card->number >= cards_limit)) {
 		devfs_remove("snd/%s", mptr->name);
-	else if (card->number >= cards_limit)
-		devfs_remove("snd/%s", mptr->name); /* manualy created */
-#endif
+		class_simple_device_remove(MKDEV(major, minor));
+	}
 	list_del(&mptr->list);
 	up(&sound_mutex);
 	kfree(mptr);
@@ -332,9 +335,7 @@ int __exit snd_minor_info_done(void)
 
 static int __init alsa_sound_init(void)
 {
-#ifdef CONFIG_DEVFS_FS
 	short controlnum;
-#endif
 #ifdef CONFIG_SND_OSSEMUL
 	int err;
 #endif
@@ -368,10 +369,10 @@ static int __init alsa_sound_init(void)
 #ifdef CONFIG_SND_OSSEMUL
 	snd_info_minor_register();
 #endif
-#ifdef CONFIG_DEVFS_FS
-	for (controlnum = 0; controlnum < cards_limit; controlnum++) 
+	for (controlnum = 0; controlnum < cards_limit; controlnum++) {
 		devfs_mk_cdev(MKDEV(major, controlnum<<5), S_IFCHR | device_mode, "snd/controlC%d", controlnum);
-#endif
+		class_simple_device_add(sound_class, MKDEV(major, controlnum<<5), NULL, "controlC%d", controlnum);
+	}
 #ifndef MODULE
 	printk(KERN_INFO "Advanced Linux Sound Architecture Driver Version " CONFIG_SND_VERSION CONFIG_SND_DATE ".\n");
 #endif
@@ -382,8 +383,10 @@ static void __exit alsa_sound_exit(void)
 {
 	short controlnum;
 
-	for (controlnum = 0; controlnum < cards_limit; controlnum++)
+	for (controlnum = 0; controlnum < cards_limit; controlnum++) {
 		devfs_remove("snd/controlC%d", controlnum);
+		class_simple_device_remove(MKDEV(major, controlnum<<5));
+	}
 
 #ifdef CONFIG_SND_OSSEMUL
 	snd_info_minor_unregister();
diff -puN sound/pci/intel8x0.c~sysfs-class-08-alsa-sound sound/pci/intel8x0.c
--- 25/sound/pci/intel8x0.c~sysfs-class-08-alsa-sound	Thu Jan 15 16:39:57 2004
+++ 25-akpm/sound/pci/intel8x0.c	Thu Jan 15 16:39:57 2004
@@ -2522,6 +2522,7 @@ static int __devinit snd_intel8x0_probe(
 			break;
 		}
 	}
+	card->dev = &pci->dev;
 
 	if ((err = snd_intel8x0_create(card, pci, pci_id->driver_data, &chip)) < 0) {
 		snd_card_free(card);

_
