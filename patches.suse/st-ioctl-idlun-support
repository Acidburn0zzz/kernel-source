From: garloff@suse.de
Subject: Allow generic SCSI ioctls to work with st
Patch-mainline: 
References: SUSE45446

When no tape was inserted, the st ioctls would error out prior to
trying the generic SCSI ioctls, thus preventing things like 
SCSI_IOCTL_GET_IDLUN (which definitely does not need a medium) to
work.

Signed-off-by: garloff@suse.de

---
 drivers/scsi/st.c |   51 ++++++++++++++++++++++++++++-----------------------
 1 files changed, 28 insertions(+), 23 deletions(-)

--- linux-2.6.18.orig/drivers/scsi/st.c
+++ linux-2.6.18/drivers/scsi/st.c
@@ -3216,6 +3216,34 @@ static int st_ioctl(struct inode *inode,
 	char *name = tape_name(STp);
 	void __user *p = (void __user *)arg;
 
+	/* generic ioctls */
+	switch (cmd_in) {
+		case SCSI_IOCTL_TEST_UNIT_READY:
+		case SCSI_IOCTL_BENCHMARK_COMMAND:
+		case SCSI_IOCTL_SYNC:
+		case SCSI_IOCTL_START_UNIT:
+		case SCSI_IOCTL_STOP_UNIT:
+		case SCSI_IOCTL_DOORLOCK:
+		case SCSI_IOCTL_DOORUNLOCK:
+		case SCSI_IOCTL_GET_IDLUN:
+		case SCSI_IOCTL_PROBE_HOST:
+		case SCSI_IOCTL_GET_BUS_NUMBER:
+	        case SCSI_IOCTL_GET_PCI:
+			retval = scsi_ioctl(STp->device, cmd_in, p);
+			if (!retval && cmd_in == SCSI_IOCTL_STOP_UNIT) { /* unload */
+				STp->rew_at_close = 0;
+				STp->ready = ST_NO_TAPE;
+			}
+			return retval;
+		case SCSI_IOCTL_SEND_COMMAND:
+		case SG_IO:
+		case CDROM_SEND_PACKET:
+			if (!capable(CAP_SYS_RAWIO))
+				return -EPERM;
+			return scsi_cmd_ioctl(file, STp->disk, cmd_in, p);
+	}
+
+	/* tape specific ioctls */
 	if (down_interruptible(&STp->lock))
 		return -ERESTARTSYS;
 
@@ -3527,29 +3555,6 @@ static int st_ioctl(struct inode *inode,
 			retval = (-EFAULT);
 		goto out;
 	}
-	up(&STp->lock);
-	switch (cmd_in) {
-		case SCSI_IOCTL_GET_IDLUN:
-		case SCSI_IOCTL_GET_BUS_NUMBER:
-			break;
-		default:
-			if ((cmd_in == SG_IO ||
-			     cmd_in == SCSI_IOCTL_SEND_COMMAND ||
-			     cmd_in == CDROM_SEND_PACKET) &&
-			    !capable(CAP_SYS_RAWIO))
-				i = -EPERM;
-			else
-				i = scsi_cmd_ioctl(file, STp->disk, cmd_in, p);
-			if (i != -ENOTTY)
-				return i;
-			break;
-	}
-	retval = scsi_ioctl(STp->device, cmd_in, p);
-	if (!retval && cmd_in == SCSI_IOCTL_STOP_UNIT) { /* unload */
-		STp->rew_at_close = 0;
-		STp->ready = ST_NO_TAPE;
-	}
-	return retval;
 
  out:
 	up(&STp->lock);
