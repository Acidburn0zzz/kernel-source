Index: linux-2.6.8/drivers/scsi/st.c
===================================================================
--- linux-2.6.8.orig/drivers/scsi/st.c
+++ linux-2.6.8/drivers/scsi/st.c
@@ -3105,8 +3105,28 @@ static int st_ioctl(struct inode *inode,
 	ST_partstat *STps;
 	char *name = tape_name(STp);
 	void __user *p = (void __user *)arg;
 
+	/* generic ioctls */
+	switch (cmd_in) {
+		case SCSI_IOCTL_GET_IDLUN:
+		case SCSI_IOCTL_GET_BUS_NUMBER:
+		case SCSI_IOCTL_PROBE_HOST:
+		case SCSI_IOCTL_SEND_COMMAND:
+		case SCSI_IOCTL_DOORLOCK:
+		case SCSI_IOCTL_DOORUNLOCK:
+		case SCSI_IOCTL_TEST_UNIT_READY:
+	        case SCSI_IOCTL_GET_PCI:
+		case SCSI_IOCTL_START_UNIT:
+		case SCSI_IOCTL_STOP_UNIT:
+			return scsi_ioctl(STp->device, cmd_in, (void *)arg);
+		default:
+			retval = scsi_cmd_ioctl(file, STp->disk, cmd_in, arg);
+			if (retval != -ENOTTY && retval != -ENXIO)
+				return retval;
+	}
+
+	/* tape specific ioctls */
 	if (down_interruptible(&STp->lock))
 		return -ERESTARTSYS;
 
         DEB(
@@ -3401,20 +3421,8 @@ static int st_ioctl(struct inode *inode,
 		if (i)
 			retval = (-EFAULT);
 		goto out;
 	}
-	up(&STp->lock);
-	switch (cmd_in) {
-		case SCSI_IOCTL_GET_IDLUN:
-		case SCSI_IOCTL_GET_BUS_NUMBER:
-			break;
-		default:
-			i = scsi_cmd_ioctl(file, STp->disk, cmd_in, p);
-			if (i != -ENOTTY)
-				return i;
-			break;
-	}
-	return scsi_ioctl(STp->device, cmd_in, p);
 
  out:
 	up(&STp->lock);
 	return retval;
