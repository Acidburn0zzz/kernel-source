Return-Path: <anton@samba.org>
Received: from Hermes.suse.de (Hermes.suse.de [10.0.0.1])
	by wotan.suse.de (Postfix) with ESMTP id F2DDE7A4C
	for <olh@wotan.suse.de>; Thu, 15 Jan 2004 02:18:34 +0100 (CET)
Received: by Hermes.suse.de (Postfix)
	id ECDAF11E1C; Thu, 15 Jan 2004 02:18:34 +0100 (CET)
Received: from Cantor.suse.de (ns.suse.de [195.135.220.2])
	(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))
	(No client certificate requested)
	by Hermes.suse.de (Postfix) with ESMTP id E80913637
	for <olh@suse.de>; Thu, 15 Jan 2004 02:18:34 +0100 (CET)
Received: from lists.samba.org (dp.samba.org [66.70.73.150])
	by Cantor.suse.de (Postfix) with ESMTP id 56C6B19EB399
	for <olh@suse.de>; Thu, 15 Jan 2004 02:18:34 +0100 (CET)
Received: by lists.samba.org (Postfix, from userid 504)
	id C399E2C069; Thu, 15 Jan 2004 01:18:30 +0000 (GMT)
Date: Thu, 15 Jan 2004 12:18:08 +1100
From: Anton Blanchard <anton@samba.org>
To: Hollis Blanchard <hollisb@us.ibm.com>
Cc: Olaf Hering <olh@suse.de>, Mike Kravetz <kravetz@us.ibm.com>,
	linuxppc64-dev@lists.linuxppc.org
Subject: Re: autoconsole
Message-ID: <20040115011808.GD27924@krispykreme>
References: <20040113134042.A3771@w-mikek2.beaverton.ibm.com> <D56F210C-4617-11D8-92C2-000A95A0560C@us.ibm.com> <20040113235744.GB13397@krispykreme> <20040113185245.A1747@w-mikek2.beaverton.ibm.com> <20040114080749.GA374@suse.de> <080D5891-46A6-11D8-9E58-000A95A0560C@us.ibm.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <080D5891-46A6-11D8-9E58-000A95A0560C@us.ibm.com>
User-Agent: Mutt/1.5.5.1+cvs20040105i
X-Spam-Checker-Version: SpamAssassin 2.61 (1.212.2.1-2003-12-09-exp) on 
	wotan.suse.de
X-Spam-Level: 
X-Spam-Status: No, hits=-4.0 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=2.61

 
> I haven't had time to check it out yet, but Sparc pushed an 
> add_preferred_console() to 2.5 a couple weeks ago. See 
> arch/sparc/kernel/setup.c set_preferred_console() ; it's a bit cleaner 
> looking than what you've posted here. :)

Agreed, how does this look? I could only compile test it, I dont have a
machine to run on at the moment.

Could we ever end up with the console on a hvc other than 0?

Anton

===== arch/ppc64/kernel/setup.c 1.31 vs edited =====
--- 1.31/arch/ppc64/kernel/setup.c	Wed Oct  8 12:53:40 2003
+++ edited/arch/ppc64/kernel/setup.c	Thu Jan 15 12:14:06 2004
@@ -405,6 +405,56 @@
 	}
 }
 
+static int __init set_preferred_console(void)
+{
+	struct device_node *prom_stdout;
+	char *name;
+
+	/* The user has requested a console so this is already set up. */
+	if (strstr(cmd_line, "console="))
+		return -EBUSY;
+
+	prom_stdout = find_path_device(of_stdout_device);
+	if (!prom_stdout)
+		return -ENODEV;
+
+	name = (char *)get_property(prom_stdout, "name", NULL);
+	if (!name)
+		return -ENODEV;
+
+	if (strcmp(name, "serial") == 0) {
+		int i;
+		u32 *reg = (u32 *)get_property(prom_stdout, "reg", &i);
+		if (i > 8) {
+			int offset;
+			switch (reg[1]) {
+				case 0x3f8:
+					offset = 0;
+					break;
+				case 0x2f8:
+					offset = 1;
+					break;
+				case 0x898:
+					offset = 2;
+					break;
+				case 0x890: 
+					offset = 3;
+					break;
+				default:
+					/* We dont recognise the serial port */
+					return -ENODEV;
+			}
+
+			return add_preferred_console("ttyS", offset, NULL);
+		}
+	} else if (strcmp(name, "vty") == 0) {
+		/* pSeries LPAR virtual console */
+		return add_preferred_console("hvc", 0, NULL);
+	}
+
+	return -ENODEV;
+}
+console_initcall(set_preferred_console);
 
 char *bi_tag2str(unsigned long tag)
 {

