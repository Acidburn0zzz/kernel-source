From 8bd8a338f808d8865ce79a9b1fdc7810ab13d11c Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Wed, 5 Jun 2019 16:20:37 +0200
Subject: [PATCH 2/6] kABI padding: Type C
Patch-mainline: Never, kABI padding
References: bsc#1138132

Very extensive - type C can affect displays and the pressure
to make displays work will be huge

Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 include/linux/usb/typec.h         | 9 +++++++++
 include/linux/usb/typec_altmode.h | 6 ++++++
 2 files changed, 15 insertions(+)

diff --git a/include/linux/usb/typec.h b/include/linux/usb/typec.h
index a78a899..0a6544f 100644
--- a/include/linux/usb/typec.h
+++ b/include/linux/usb/typec.h
@@ -102,6 +102,9 @@ struct typec_altmode_desc {
 	u16			svid;
 	u8			mode;
 	u32			vdo;
+
+	void *suse_kabi_padding;
+
 	/* Only used with ports */
 	enum typec_port_data	roles;
 };
@@ -149,6 +152,8 @@ struct typec_cable_desc {
 	enum typec_plug_type	type;
 	unsigned int		active:1;
 	struct usb_pd_identity	*identity;
+
+	void *suse_kabi_padding;
 };
 
 /*
@@ -165,6 +170,8 @@ struct typec_partner_desc {
 	unsigned int		usb_pd:1;
 	enum typec_accessory	accessory;
 	struct usb_pd_identity	*identity;
+
+	void *suse_kabi_padding;
 };
 
 /*
@@ -209,6 +216,8 @@ struct typec_capability {
 				     enum typec_role);
 	int		(*port_type_set)(const struct typec_capability *,
 					 enum typec_port_type);
+
+	void *suse_kabi_padding;
 };
 
 /* Specific to try_role(). Indicates the user want's to clear the preference. */
diff --git a/include/linux/usb/typec_altmode.h b/include/linux/usb/typec_altmode.h
index 9a88c74..4d30209 100644
--- a/include/linux/usb/typec_altmode.h
+++ b/include/linux/usb/typec_altmode.h
@@ -30,6 +30,8 @@ struct typec_altmode {
 
 	char				*desc;
 	const struct typec_altmode_ops	*ops;
+
+	void *suse_kabi_padding;
 };
 
 #define to_typec_altmode(d) container_of(d, struct typec_altmode, dev)
@@ -63,6 +65,8 @@ struct typec_altmode_ops {
 	int (*notify)(struct typec_altmode *altmode, unsigned long conf,
 		      void *data);
 	int (*activate)(struct typec_altmode *altmode, int activate);
+
+	void *suse_kabi_padding;
 };
 
 int typec_altmode_enter(struct typec_altmode *altmode);
@@ -142,6 +146,8 @@ struct typec_altmode_driver {
 	int (*probe)(struct typec_altmode *altmode);
 	void (*remove)(struct typec_altmode *altmode);
 	struct device_driver driver;
+
+	void *suse_kabi_padding;
 };
 
 #define to_altmode_driver(d) container_of(d, struct typec_altmode_driver, \
-- 
2.16.4

