From: Jeff Mahoney <jeffm@suse.com>
Subject: overlayfs: api: do_splice_direct has changed
Patch-mainline: Dependent on overlayfs

Commit 7995bd28 (splice: don't pass the address of ->f_pos to methods)
added a new argument to do_splice_direct (and moved the definition to
fs/internal.h).

This patch includes fs/internal.h and adds a new offset variable.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 fs/overlayfs/Makefile  |    2 ++
 fs/overlayfs/copy_up.c |   10 ++++++----
 2 files changed, 8 insertions(+), 4 deletions(-)

--- a/fs/overlayfs/Makefile	2013-06-26 17:10:59.858884302 -0400
+++ b/fs/overlayfs/Makefile	2013-06-27 10:39:15.239222944 -0400
@@ -4,4 +4,6 @@
 
 obj-$(CONFIG_OVERLAYFS_FS) += overlayfs.o
 
+EXTRA_CFLAGS=-Ifs
+
 overlayfs-objs := super.o inode.o dir.o readdir.o copy_up.o
--- a/fs/overlayfs/copy_up.c	2013-06-26 17:10:59.858884302 -0400
+++ b/fs/overlayfs/copy_up.c	2013-06-27 10:54:35.237083803 -0400
@@ -15,6 +15,7 @@
 #include <linux/security.h>
 #include <linux/uaccess.h>
 #include <linux/sched.h>
+#include "internal.h"
 #include "overlayfs.h"
 
 #define OVL_COPY_UP_CHUNK_SIZE (1 << 20)
@@ -90,9 +91,10 @@ static int ovl_copy_up_data(struct path
 
 	/* FIXME: copy up sparse files efficiently */
 	while (len) {
-		loff_t offset = new_file->f_pos;
-		size_t this_len = OVL_COPY_UP_CHUNK_SIZE;
+		loff_t ipos, opos;
+		loff_t this_len = OVL_COPY_UP_CHUNK_SIZE;
 		long bytes;
+		ipos = opos = new_file->f_pos;
 
 		if (len < this_len)
 			this_len = len;
@@ -102,8 +104,8 @@ static int ovl_copy_up_data(struct path
 			break;
 		}
 
-		bytes = do_splice_direct(old_file, &offset, new_file, this_len,
-				 SPLICE_F_MOVE);
+		bytes = do_splice_direct(old_file, &ipos, new_file, &opos,
+					 this_len, SPLICE_F_MOVE);
 		if (bytes <= 0) {
 			error = bytes;
 			break;
