diff -burpN -X ../../KDIFX linux/arch/i386/mach-es7000/es7000.h linux-2.6.7rc1/arch/i386/mach-es7000/es7000.h
--- linux/arch/i386/mach-es7000/es7000.h	2004-05-24 17:16:51.000000000 +0200
+++ linux-2.6.7rc1/arch/i386/mach-es7000/es7000.h	2004-05-23 15:41:41.000000000 +0200
@@ -30,9 +30,9 @@
 #define	MIP_BUSY		1
 #define	MIP_SPIN		0xf0000
 #define	MIP_VALID		0x0100000000000000
+#define	MIP_PORT(VALUE)	((VALUE >> 32) & 0xffff)
 
 #define	MIP_RD_LO(VALUE)	(VALUE & 0xffffffff)   
-#define	MIP_PORT(VALUE)		((VALUE >> 32) & 0xffff)
 
 struct mip_reg_info {
 	unsigned long long mip_info;
diff -burpN -X ../../KDIFX linux/arch/i386/mach-es7000/es7000plat.c linux-2.6.7rc1/arch/i386/mach-es7000/es7000plat.c
--- linux/arch/i386/mach-es7000/es7000plat.c	2004-05-24 17:16:51.000000000 +0200
+++ linux-2.6.7rc1/arch/i386/mach-es7000/es7000plat.c	2004-05-23 15:41:41.000000000 +0200
@@ -50,6 +50,29 @@ struct mip_reg		*mip_reg;  
 struct mip_reg		*host_reg;
 int 			mip_port;
 unsigned long		mip_addr, host_addr;
+extern int (*platform_rename_gsi)();
+
+static int __init
+es7000_rename_gsi(int ioapic, int gsi)
+{
+	if (ioapic)
+		return gsi;
+	else {
+		if (gsi == 0)
+			return 13;
+		if (gsi == 1)
+			return 16;
+		if (gsi == 4)
+			return 17;
+		if (gsi == 6)
+			return 18;
+		if (gsi == 7)
+			return 19;
+		if (gsi == 8)
+			return 20;
+		return gsi;
+        }
+}
 
 /*
  * Parse the OEM Table
@@ -116,6 +139,7 @@ parse_unisys_oem (char *oemptr, int oem_
 	} else {
 		printk("\nEnabling ES7000 specific features...\n");
 		es7000_plat = 1;
+		platform_rename_gsi = es7000_rename_gsi;
 	}
 	return es7000_plat;
 }
