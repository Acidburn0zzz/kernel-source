From: trenn@suse.de
Subject: Enables important ACPI errors even ACPI_DEBUG is not set.
Patch-mainline: not yet

Full ACPI_DEBUG output slows down the system significantly,
even if not enabled during runtime.
This variable takes care that errors and warnings will still be printed,
but higher debug levels can not be enabled any more during runtime.
The proper and bigger solution will come mainline soon, but possilby too
late for Code10. All ACPI_PRINT_DEBUG ((ACPI_DB_ERROR|ACPI_DB_WARN,...)) 
will be replaced with the ACPI_REPORT_WARNING and ACPI_REPORT_ERROR macros that
are also available if ACPI_DEBUG is not compiled in. However this will affect 
about 600 lines in some dozen files:
Answer from Robert Moore (some months ago):
"This is on my list of things to do; I believe that we need to take a
pass through the code and evaluate each message."
Answer from Len Brown (some weeks ago):
"Bob is on vacation till Jan 6th, ...
, Can the debug print issue wait till Jan 6th when bob returns?"
So if Code10 is 2.6.15 based we'll probably need this...


+++ y/include/acpi/acoutput.h	2006-01-04 16:06:19.000000000 +0100
Index: linux-2.6.15/include/acpi/acoutput.h
===================================================================
--- linux-2.6.15.orig/include/acpi/acoutput.h
+++ linux-2.6.15/include/acpi/acoutput.h
@@ -172,7 +172,12 @@
 
 /* Defaults for debug_level, debug and normal */
 
+#ifdef CONFIG_ACPI_DEBUG_LITE
+/* Don't print warnings and other noise by default. Can be still enabled on the command line. */
+#define ACPI_DEBUG_DEFAULT          (ACPI_LV_INIT | ACPI_LV_ERROR)
+#else
 #define ACPI_DEBUG_DEFAULT          (ACPI_LV_INIT | ACPI_LV_WARN | ACPI_LV_ERROR | ACPI_LV_DEBUG_OBJECT)
+#endif
 #define ACPI_NORMAL_DEFAULT         (ACPI_LV_INIT | ACPI_LV_WARN | ACPI_LV_ERROR | ACPI_LV_DEBUG_OBJECT)
 #define ACPI_DEBUG_ALL              (ACPI_LV_AML_DISASSEMBLE | ACPI_LV_ALL_EXCEPTIONS | ACPI_LV_ALL)
 
Index: linux-2.6.15/include/acpi/acmacros.h
===================================================================
--- linux-2.6.15.orig/include/acpi/acmacros.h
+++ linux-2.6.15/include/acpi/acmacros.h
@@ -605,7 +605,18 @@
 #define ACPI_DUMP_PATHNAME(a,b,c,d)
 #define ACPI_DUMP_RESOURCE_LIST(a)
 #define ACPI_DUMP_BUFFER(a,b)
+
+
+#ifdef ACPI_DEBUG_LITE
+/* compiler must optimize, no solution to only integrate
+   this in preprocessing directives found */
+#define ACPI_DEBUG_PRINT_SUB(L, DB_INFO, A...) (L == ACPI_LV_ERROR || L == ACPI_LV_WARN) ? \
+ (ACPI_REPORT_WARNING ((A))) : (0)
+#define ACPI_DEBUG_PRINT(pl)  ACPI_DEBUG_PRINT_SUB pl
+#else
 #define ACPI_DEBUG_PRINT(pl)
+#endif
+
 #define ACPI_DEBUG_PRINT_RAW(pl)
 #define ACPI_BREAK_MSG(a)
 
Index: linux-2.6.15/include/acpi/acutils.h
===================================================================
--- linux-2.6.15.orig/include/acpi/acutils.h
+++ linux-2.6.15/include/acpi/acutils.h
@@ -44,6 +44,8 @@
 #ifndef _ACUTILS_H
 #define _ACUTILS_H
 
+#include <linux/module.h>
+
 typedef
 acpi_status(*acpi_pkg_callback) (u8 object_type,
 				 union acpi_operand_object * source_object,
Index: linux-2.6.15/include/acpi/aclocal.h
===================================================================
--- linux-2.6.15.orig/include/acpi/aclocal.h
+++ linux-2.6.15/include/acpi/aclocal.h
@@ -91,7 +91,7 @@ union acpi_parse_object;
 #define MAX_MUTEX                       12
 #define NUM_MUTEX                       MAX_MUTEX+1
 
-#if defined(ACPI_DEBUG_OUTPUT) || defined(ACPI_DEBUGGER)
+#if defined(ACPI_DEBUG_OUTPUT) || defined(ACPI_DEBUGGER) || defined(ACPI_DEBUG_LITE)
 #ifdef DEFINE_ACPI_GLOBALS
 
 /* Names for the mutexes used in the subsystem */
Index: linux-2.6.15/drivers/acpi/Makefile
===================================================================
--- linux-2.6.15.orig/drivers/acpi/Makefile
+++ linux-2.6.15/drivers/acpi/Makefile
@@ -10,6 +10,10 @@ ifdef CONFIG_ACPI_DEBUG
   ACPI_CFLAGS	+= -DACPI_DEBUG_OUTPUT
 endif
 
+ifdef CONFIG_ACPI_DEBUG_LITE
+  ACPI_CFLAGS	+= -DACPI_DEBUG_LITE
+endif
+
 EXTRA_CFLAGS	+= $(ACPI_CFLAGS)
 
 #
Index: linux-2.6.15/drivers/acpi/Kconfig
===================================================================
--- linux-2.6.15.orig/drivers/acpi/Kconfig
+++ linux-2.6.15/drivers/acpi/Kconfig
@@ -352,6 +352,17 @@ config ACPI_INITRD
 	  If there is no DSDT found in the initrd, the DSDT from the BIOS is
 	  used. It is safe to say yes here.
 
+config ACPI_DEBUG_LITE
+        bool "Print ACPI errors and warnings"
+        depends on ACPI
+        default n
+        help
+          Full ACPI_DEBUG output slows down the system significantly,
+	  even if not enabled during runtime.
+	  This variable takes care that errors and warnings will still be printed,
+	  but higher debug levels can not be enabled any more during runtime.
+
+
 endif	# ACPI
 
 endmenu
Index: linux-2.6.15/drivers/acpi/dispatcher/dswload.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/dispatcher/dswload.c
+++ linux-2.6.15/drivers/acpi/dispatcher/dswload.c
@@ -727,8 +727,10 @@ acpi_status acpi_ds_load2_end_op(struct 
 	ACPI_FUNCTION_TRACE("ds_load2_end_op");
 
 	op = walk_state->op;
+#ifdef ACPI_DEBUG_OUTPUT
 	ACPI_DEBUG_PRINT((ACPI_DB_DISPATCH, "Opcode [%s] Op %p State %p\n",
 			  walk_state->op_info->name, op, walk_state));
+#endif
 
 	/* Check if opcode had an associated namespace object */
 
Index: linux-2.6.15/drivers/acpi/events/evmisc.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/events/evmisc.c
+++ linux-2.6.15/drivers/acpi/events/evmisc.c
@@ -133,6 +133,7 @@ acpi_ev_queue_notify_request(struct acpi
 	 * For value 0x80 (Status Change) on the power button or sleep button,
 	 *   initiate soft-off or sleep operation?
 	 */
+#ifdef ACPI_DEBUG_OUTPUT
 	ACPI_DEBUG_PRINT((ACPI_DB_INFO,
 			  "Dispatching Notify(%X) on node %p\n", notify_value,
 			  node));
@@ -145,6 +146,7 @@ acpi_ev_queue_notify_request(struct acpi
 				  "Notify value: 0x%2.2X **Device Specific**\n",
 				  notify_value));
 	}
+#endif
 
 	/* Get the notify object attached to the NS Node */
 
Index: linux-2.6.15/drivers/acpi/executer/exconvrt.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/executer/exconvrt.c
+++ linux-2.6.15/drivers/acpi/executer/exconvrt.c
@@ -660,13 +660,6 @@ acpi_ex_convert_to_target_type(acpi_obje
 		break;
 
 	default:
-		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
-				  "Unknown Target type ID 0x%X Op %s dest_type %s\n",
-				  GET_CURRENT_ARG_TYPE(walk_state->op_info->
-						       runtime_args),
-				  walk_state->op_info->name,
-				  acpi_ut_get_type_name(destination_type)));
-
 		ACPI_REPORT_ERROR(("Bad Target Type (ARGI): %X\n",
 				   GET_CURRENT_ARG_TYPE(walk_state->op_info->
 							runtime_args)))
Index: linux-2.6.15/drivers/acpi/executer/exresop.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/executer/exresop.c
+++ linux-2.6.15/drivers/acpi/executer/exresop.c
@@ -156,9 +156,11 @@ acpi_ex_resolve_operands(u16 opcode,
 		return_ACPI_STATUS(AE_AML_INTERNAL);
 	}
 
+#ifdef ACPI_DEBUG
 	ACPI_DEBUG_PRINT((ACPI_DB_EXEC,
 			  "Opcode %X [%s] required_operand_types=%8.8X \n",
 			  opcode, op_info->name, arg_types));
+#endif
 
 	/*
 	 * Normal exit is with (arg_types == 0) at end of argument list.
@@ -238,13 +240,10 @@ acpi_ex_resolve_operands(u16 opcode,
 					break;
 
 				default:
-					ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
-							  "Operand is a Reference, Unknown Reference Opcode %X [%s]\n",
+					ACPI_REPORT_ERROR ((
+							  "Operand is a Reference, Unknown Reference Opcode %X\n",
 							  obj_desc->reference.
-							  opcode,
-							  (acpi_ps_get_opcode_info
-							   (obj_desc->reference.
-							    opcode))->name));
+							  opcode));
 
 					return_ACPI_STATUS(AE_AML_OPERAND_TYPE);
 				}
Index: linux-2.6.15/drivers/acpi/namespace/nsalloc.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/namespace/nsalloc.c
+++ linux-2.6.15/drivers/acpi/namespace/nsalloc.c
@@ -281,9 +281,11 @@ void acpi_ns_delete_children(struct acpi
 
 		ACPI_MEM_TRACKING(acpi_gbl_ns_node_list->total_freed++);
 
+#ifdef ACPI_DEBUG_OUTPUT
 		ACPI_DEBUG_PRINT((ACPI_DB_ALLOCATIONS,
 				  "Object %p, Remaining %X\n", child_node,
 				  acpi_gbl_current_node_count));
+#endif
 
 		/*
 		 * Detach an object if there is one, then free the child node
Index: linux-2.6.15/drivers/acpi/parser/psloop.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/parser/psloop.c
+++ linux-2.6.15/drivers/acpi/parser/psloop.c
@@ -375,6 +375,7 @@ acpi_status acpi_ps_parse_loop(struct ac
 
 			op->common.aml_offset = walk_state->aml_offset;
 
+#ifdef ACPI_DEBUG_OUTPUT
 			if (walk_state->op_info) {
 				ACPI_DEBUG_PRINT((ACPI_DB_PARSE,
 						  "Opcode %4.4X [%s] Op %p Aml %p aml_offset %5.5X\n",
@@ -383,6 +384,7 @@ acpi_status acpi_ps_parse_loop(struct ac
 						  parser_state->aml,
 						  op->common.aml_offset));
 			}
+#endif
 		}
 
 		/*
Index: linux-2.6.15/drivers/acpi/utilities/utglobal.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/utilities/utglobal.c
+++ linux-2.6.15/drivers/acpi/utilities/utglobal.c
@@ -692,7 +692,7 @@ char *acpi_ut_get_descriptor_name(void *
 
 }
 
-#if defined(ACPI_DEBUG_OUTPUT) || defined(ACPI_DEBUGGER)
+#if defined(ACPI_DEBUG_OUTPUT) || defined(ACPI_DEBUGGER) || defined(ACPI_DEBUG_LITE)
 /*
  * Strings and procedures used for debug only
  */
Index: linux-2.6.15/drivers/acpi/utilities/utmisc.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/utilities/utmisc.c
+++ linux-2.6.15/drivers/acpi/utilities/utmisc.c
@@ -44,6 +44,10 @@
 #include <acpi/acpi.h>
 #include <acpi/acnamesp.h>
 
+#ifdef CONFIG_ACPI_DEBUG_LITE
+#define acpi_ut_get_mutex_name(x) NULL
+#endif
+
 #define _COMPONENT          ACPI_UTILITIES
 ACPI_MODULE_NAME("utmisc")
 
@@ -877,6 +881,8 @@ acpi_ut_report_warning(char *module_name
 	acpi_os_printf("%8s-%04d: *** Warning: ", module_name, line_number);
 }
 
+EXPORT_SYMBOL(acpi_ut_report_warning);
+
 /*******************************************************************************
  *
  * FUNCTION:    acpi_ut_report_info
Index: linux-2.6.15/drivers/acpi/utilities/utmutex.c
===================================================================
--- linux-2.6.15.orig/drivers/acpi/utilities/utmutex.c
+++ linux-2.6.15/drivers/acpi/utilities/utmutex.c
@@ -236,27 +236,27 @@ acpi_status acpi_ut_acquire_mutex(acpi_m
 			}
 		}
 	}
-#endif
-
 	ACPI_DEBUG_PRINT((ACPI_DB_MUTEX,
 			  "Thread %X attempting to acquire Mutex [%s]\n",
 			  this_thread_id, acpi_ut_get_mutex_name(mutex_id)));
+#endif
 
 	status = acpi_os_wait_semaphore(acpi_gbl_mutex_info[mutex_id].mutex,
 					1, ACPI_WAIT_FOREVER);
 	if (ACPI_SUCCESS(status)) {
+#ifdef ACPI_DEBUG_OUTPUT
 		ACPI_DEBUG_PRINT((ACPI_DB_MUTEX,
 				  "Thread %X acquired Mutex [%s]\n",
 				  this_thread_id,
 				  acpi_ut_get_mutex_name(mutex_id)));
+#endif
 
 		acpi_gbl_mutex_info[mutex_id].use_count++;
 		acpi_gbl_mutex_info[mutex_id].thread_id = this_thread_id;
 	} else {
 		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
-				  "Thread %X could not acquire Mutex [%s] %s\n",
+				  "Thread %X could not acquire Mutex %s\n",
 				  this_thread_id,
-				  acpi_ut_get_mutex_name(mutex_id),
 				  acpi_format_exception(status)));
 	}
 
@@ -283,9 +283,12 @@ acpi_status acpi_ut_release_mutex(acpi_m
 	ACPI_FUNCTION_NAME("ut_release_mutex");
 
 	this_thread_id = acpi_os_get_thread_id();
+
+#ifdef ACPI_DEBUG_OUTPUT
 	ACPI_DEBUG_PRINT((ACPI_DB_MUTEX,
 			  "Thread %X releasing Mutex [%s]\n", this_thread_id,
 			  acpi_ut_get_mutex_name(mutex_id)));
+#endif
 
 	if (mutex_id > MAX_MUTEX) {
 		return (AE_BAD_PARAMETER);
@@ -296,8 +299,7 @@ acpi_status acpi_ut_release_mutex(acpi_m
 	 */
 	if (acpi_gbl_mutex_info[mutex_id].thread_id == ACPI_MUTEX_NOT_ACQUIRED) {
 		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
-				  "Mutex [%s] is not acquired, cannot release\n",
-				  acpi_ut_get_mutex_name(mutex_id)));
+				  "Mutex is not acquired, cannot release\n"));
 
 		return (AE_NOT_ACQUIRED);
 	}
@@ -339,15 +341,17 @@ acpi_status acpi_ut_release_mutex(acpi_m
 
 	if (ACPI_FAILURE(status)) {
 		ACPI_DEBUG_PRINT((ACPI_DB_ERROR,
-				  "Thread %X could not release Mutex [%s] %s\n",
+				  "Thread %X could not release Mutex %s\n",
 				  this_thread_id,
-				  acpi_ut_get_mutex_name(mutex_id),
 				  acpi_format_exception(status)));
 	} else {
+#ifdef ACPI_DEBUG_OUTPUT
 		ACPI_DEBUG_PRINT((ACPI_DB_MUTEX,
 				  "Thread %X released Mutex [%s]\n",
 				  this_thread_id,
 				  acpi_ut_get_mutex_name(mutex_id)));
+#endif
+
 	}
 
 	return (status);
