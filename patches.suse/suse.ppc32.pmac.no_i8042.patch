diff -purNX /home/olaf/kernel/kernel_exclude.txt linux-2.6.0-test11.orig/drivers/input/serio/i8042-ppcio.h linux-2.6.0-test11.SuSE/drivers/input/serio/i8042-ppcio.h
--- linux-2.6.0-test11.orig/drivers/input/serio/i8042-ppcio.h	2003-11-26 20:43:24.000000000 +0000
+++ linux-2.6.0-test11.SuSE/drivers/input/serio/i8042-ppcio.h	2003-11-29 16:07:15.000000000 +0000
@@ -127,6 +127,73 @@ static inline void i8042_platform_exit(v
 {
 }
 
+#elif defined(CONFIG_PPC_MULTIPLATFORM)
+
+#include <asm/processor.h>
+
+/*
+ * Names.
+ */
+
+#define I8042_KBD_PHYS_DESC "isa0060/serio0"
+#define I8042_AUX_PHYS_DESC "isa0060/serio1"
+#define I8042_MUX_PHYS_DESC "isa0060/serio%d"
+
+/*
+ * IRQs.
+ */
+
+# define I8042_KBD_IRQ	1
+# define I8042_AUX_IRQ	12
+
+/*
+ * Register numbers.
+ */
+
+#define I8042_COMMAND_REG	0x64	
+#define I8042_STATUS_REG	0x64	
+#define I8042_DATA_REG		0x60
+
+static inline int i8042_read_data(void)
+{
+	return inb(I8042_DATA_REG);
+}
+
+static inline int i8042_read_status(void)
+{
+	return inb(I8042_STATUS_REG);
+}
+
+static inline void i8042_write_data(int val)
+{
+	outb(val, I8042_DATA_REG);
+	return;
+}
+
+static inline void i8042_write_command(int val)
+{
+	outb(val, I8042_COMMAND_REG);
+	return;
+}
+
+static inline int i8042_platform_init(void)
+{
+	if(_machine == _MACH_Pmac) {
+		printk("%s: nothing to do on PowerMac\n",__FUNCTION__);
+		return -ENODEV;
+	}
+	if (!request_region(I8042_DATA_REG, 16, "i8042"))
+		return -1;
+
+        i8042_reset = 1;
+	return 0;
+}
+
+static inline void i8042_platform_exit(void)
+{
+	release_region(I8042_DATA_REG, 16);
+}
+
 #else
 
 #include "i8042-io.h"
