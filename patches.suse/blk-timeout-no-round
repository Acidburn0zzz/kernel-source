From: NeilBrown <neilb@suse.de>
Subject: Allow a queue to request that timeouts don't get rounded up
Patch-mainline: Not yet, failfast is poorly defined
References: bnc#768084

Rounding a timeout up to the next second, plus a bit for different
CPUs, can add more than a second to a timeout.  But sometimes we
really want the timeout we request.  So allow that possibilty via a flag.

Signed-off-by: Neil Brown <neilb@suse.de>

---
 block/blk-timeout.c    |    9 +++++++--
 include/linux/blkdev.h |    1 +
 2 files changed, 8 insertions(+), 2 deletions(-)

--- a/block/blk-timeout.c
+++ b/block/blk-timeout.c
@@ -141,8 +141,10 @@ void blk_timeout_work(struct work_struct
 	list_for_each_entry_safe(rq, tmp, &q->timeout_list, timeout_list)
 		blk_rq_check_expired(rq, &next, &next_set);
 
+	if (!test_bit(QUEUE_FLAG_NO_ROUND, &q->queue_flags))
+		next = round_jiffies_up(next);
 	if (next_set)
-		mod_timer(&q->timeout, round_jiffies_up(next));
+		mod_timer(&q->timeout, next);
 
 	spin_unlock_irqrestore(q->queue_lock, flags);
 	blk_queue_exit(q);
@@ -223,7 +225,10 @@ void blk_add_timer(struct request *req)
 	 * than an existing one, modify the timer. Round up to next nearest
 	 * second.
 	 */
-	expiry = blk_rq_timeout(round_jiffies_up(req->deadline));
+	if (test_bit(QUEUE_FLAG_NO_ROUND, &q->queue_flags))
+		expiry = req->deadline;
+	else
+		expiry = blk_rq_timeout(round_jiffies_up(req->deadline));
 
 	if (!timer_pending(&q->timeout) ||
 	    time_before(expiry, q->timeout.expires)) {
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -622,6 +622,7 @@ struct request_queue {
 #define QUEUE_FLAG_STATS       27	/* track rq completion times */
 #define QUEUE_FLAG_POLL_STATS  28	/* collecting stats for hybrid polling */
 #define QUEUE_FLAG_REGISTERED  29	/* queue has been registered to a disk */
+#define QUEUE_FLAG_NO_ROUND    30	/* Don't round timeout up to next second */
 
 #define QUEUE_FLAG_DEFAULT	((1 << QUEUE_FLAG_IO_STAT) |		\
 				 (1 << QUEUE_FLAG_STACKABLE)	|	\
