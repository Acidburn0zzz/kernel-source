Date: Wed Apr  5 16:19:11 CDT 2006
From: Bob Kierski <bobo@sgi.com>
Subject: Fix event mask check

When you try to dmget a memory-mapped region of a file, it fails with a
DMAPI error. The protection bit used in the mmap() call is PROT_READ.

The problem here is in xfs_dmapi.c in xfs_dm_set_region().  In that
function we are about to modify the event mask based on 3 possible
events (read, write, and truncate).  The only one that we can change on
a mmaped file is read.  The others should generate an error.  But the
event mask comming in may contain other events besides those three.  In
this particular case, the destroy event was also on the io_dmevmask.
The logic around line 2816 is trying to determine if we're about to
change something that shouldnt' be changed.  But it doesn't take into
consideration that there are other events besides the 3 we're likely to
be changing.

The fix is to just check that we're not changing the WRITE or TRUNC
event mask values -- if we came in with them set, we have to leave with
them set, but we can change the value of the READ event mask value.

Acked-by: Andreas Gruenbacher <agruen@suse.de>

--- a/fs/xfs/dmapi/xfs_dm.c	2006-04-05 16:08:48.000000000 -0500
+++ b/fs/xfs/dmapi/xfs_dm.c	2006-04-04 14:06:36.344691818 -0500
@@ -2793,7 +2793,7 @@ xfs_dm_set_region(
 		 * bit, then that's always okay.  Otherwise, it's busy.
 		 */
 		dm_eventset_t m1;
-		m1 = ip->i_iocore.io_dmevmask & ~(1 << DM_EVENT_READ);
+		m1 = ip->i_iocore.io_dmevmask & ((1 << DM_EVENT_WRITE) | (1 << DM_EVENT_TRUNCATE));
 		if (m1 != new_mask) {
 			return -EBUSY;
 		}
