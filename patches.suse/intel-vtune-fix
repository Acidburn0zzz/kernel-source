Index: linux-2.6.5/drivers/char/vtune/Makefile
===================================================================
--- linux-2.6.5.orig/drivers/char/vtune/Makefile
+++ linux-2.6.5/drivers/char/vtune/Makefile
@@ -1,7 +1,13 @@
-flags-$(CONFIG_X86)	+= -Dlinux32
+ifeq ($(CONFIG_X86),y)
+ifeq ($(CONFIG_X86_64),)
+CONFIG_IA32=y
+endif
+endif
+
+flags-$(CONFIG_IA32)	+= -Dlinux32
 flags-$(CONFIG_X86_64)	+= -Dlinux32_64
 flags-$(CONFIG_IA64)	+= -Dlinux64
-#flags-$(CONFIG_PERFMON)	+= -DPERFMON_SUPPORTED
+#flags-$(CONFIG_PERFMON) += -DPERFMON_SUPPORTED
 
 EXTRA_CFLAGS += -I$(src)/include \
 		-DKERNEL_26X \
@@ -18,7 +24,7 @@ EXTRA_CFLAGS += -I$(src)/include \
 
 obj-$(CONFIG_VTUNE)	:= vtune_drv.o
 vtune_drv-y		:= vtune.o sys_call_table.o
-vtune_drv-$(CONFIG_X86)	+= vtlib32.o vtoshooks32.o vtxsys32.o \
+vtune_drv-$(CONFIG_IA32) += vtlib32.o vtoshooks32.o vtxsys32.o \
 			   vtlibcommon32.o apic32.o
 vtune_drv-$(CONFIG_X86_64) += vtlib32_64.o vtoshooks32_64.o vtxsys32_64.o \
 			      apic32_64.o vtlibcommon32.o
Index: linux-2.6.5/drivers/char/vtune/vtdef.h
===================================================================
--- linux-2.6.5.orig/drivers/char/vtune/vtdef.h
+++ linux-2.6.5/drivers/char/vtune/vtdef.h
@@ -274,9 +274,9 @@ typedef struct _KDESCRIPTOR_UNSCRAM {
 
 #define MAX_REG_SET_ENTRIES      120
 
-#define IA32_FAMILY5_MAX_COUNTER 0x0ffffffffff  // max counter on P5... cpu counters are 40 bits
-#define IA32_FAMILY6_MAX_COUNTER 0x0ffffffffff  // max counter on P6... cpu counters are 40 bits
-#define IA32_FAMILYF_MAX_COUNTER 0x0ffffffffff  // max counter on Pentium(R) 4 processor ... cpu counters are 40 bits
+#define IA32_FAMILY5_MAX_COUNTER 0x0ffffffffffULL  // max counter on P5... cpu counters are 40 bits
+#define IA32_FAMILY6_MAX_COUNTER 0x0ffffffffffULL  // max counter on P6... cpu counters are 40 bits
+#define IA32_FAMILYF_MAX_COUNTER 0x0ffffffffffULL  // max counter on Pentium(R) 4 processor ... cpu counters are 40 bits
 
 typedef struct _REG_SET {
     __u8 options;
Index: linux-2.6.5/drivers/char/vtune/vtproto.h
===================================================================
--- linux-2.6.5.orig/drivers/char/vtune/vtproto.h
+++ linux-2.6.5/drivers/char/vtune/vtproto.h
@@ -63,11 +63,10 @@ void samp_apic_set_perf_lvt_int_mask(voi
 void samp_apic_clear_perf_lvt_int_mask(void);
 __u32 SAMP_Set_apic_perf_lvt(long apic_perf_lvt);
 void SAMP_Set_Apic_Virtual_Wire_Mode(void);
-#elif defined(linux64)
-void ebs_intr(int irq, void *arg, struct pt_regs *regs);
-#else
+#elif !defined(linux64)
 #error Compiling for unsupported architecture
 #endif
+int ebs_intr(int irq, void *arg, struct pt_regs *regs);
 
 ssize_t samp_write_module_file(struct file *, char *, size_t, loff_t *);
 void samp_write_sample_file(void);
Index: linux-2.6.5/drivers/char/vtune/vtune.c
===================================================================
--- linux-2.6.5.orig/drivers/char/vtune/vtune.c
+++ linux-2.6.5/drivers/char/vtune/vtune.c
@@ -1988,15 +1988,8 @@ samp_get_parm(samp_parm3 * out_buf)
  * @todo Is there anyway to make the func declaration the same? Is it worth it?
  *
  */
-#if defined(linux32) || defined(linux32_64)
-asmlinkage void
-ebs_intr(struct pt_regs *regs)
-#elif defined(linux64)
-void
+int
 ebs_intr(int irq, void *arg, struct pt_regs *regs)
-#else
-#error Unknown architecture
-#endif
 {
     INT_FRAME int_frame;
     u32 wake_up_thread;
@@ -2071,7 +2064,7 @@ ebs_intr(int irq, void *arg, struct pt_r
     ack_APIC_irq();     // C code responsible for ACK'ing the APIC
 #endif
 
-    return;
+    return IRQ_HANDLED;
 }
 
 /*
