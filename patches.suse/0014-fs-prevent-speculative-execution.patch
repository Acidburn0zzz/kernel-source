From: Elena Reshetova <elena.reshetova@intel.com>
Date: Wed, 30 Aug 2017 13:52:22 +0300
Subject: fs: prevent speculative execution
Patch-mainline: submitted on 2018/1/9
References: bsc#1068032 CVE-2017-5753

Since the fd value in function __fcheck_files()
seems to be controllable by userspace and later on
conditionally (upon bound check) used to resolve
fdt->fd, insert an observable speculation
barrier before its usage. This should prevent
observable speculation on that branch and avoid
kernel memory leak.

Signed-off-by: Elena Reshetova <elena.reshetova@intel.com>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/linux/fdtable.h |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/include/linux/fdtable.h
+++ b/include/linux/fdtable.h
@@ -84,8 +84,10 @@ static inline struct file *__fcheck_file
 	struct file __rcu **fdp;
 
 	fdp = array_ptr(fdt->fd, fd, fdt->max_fds);
-	if (fdp)
+	if (fdp) {
+		osb();
 		return rcu_dereference_raw(*fdp);
+	}
 	return NULL;
 }
 
