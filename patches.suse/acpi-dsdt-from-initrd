Index: linux-2.6.8/drivers/acpi/osl.c
===================================================================
--- linux-2.6.8.orig/drivers/acpi/osl.c
+++ linux-2.6.8/drivers/acpi/osl.c
@@ -34,6 +34,7 @@
 #include <linux/interrupt.h>
 #include <linux/kmod.h>
 #include <linux/delay.h>
+#include <linux/initrd.h>
 #include <linux/workqueue.h>
 #include <linux/nmi.h>
 #include <acpi/acpi.h>
@@ -234,6 +235,38 @@ acpi_os_predefined_override (const struc
 	return AE_OK;
 }
 
+#ifdef CONFIG_ACPI_INITRD
+static char *
+acpi_find_dsdt_initrd(void)
+{
+	static const char signature[] = "INITRDDSDT123DSDT123";
+	char *dsdt_start = NULL;
+
+	if (initrd_start) {
+		char *data = (char *)initrd_start;
+
+		printk(KERN_INFO PREFIX "Looking for DSDT in initrd...");
+
+		/* Search for the start signature */
+		while (data < (char *)initrd_end - sizeof(signature) - 4) {
+			if (!memcmp(data, signature, sizeof(signature) - 1)) {
+				data += sizeof(signature);
+				if (!memcmp(data, "DSDT", 4))
+					dsdt_start = data;
+				break;
+			}
+			data++;
+		}
+		if (dsdt_start != NULL)
+			printk(" found at offset %zu\n",
+			       dsdt_start - (char *)initrd_start);
+		else
+			printk(" not found!\n");
+	}
+	return dsdt_start;
+}
+#endif
+
 acpi_status
 acpi_os_table_override (struct acpi_table_header *existing_table,
 			struct acpi_table_header **new_table)
@@ -242,6 +275,13 @@ acpi_os_table_override (struct acpi_tabl
 		return AE_BAD_PARAMETER;
 
 	*new_table = NULL;
+#ifdef CONFIG_ACPI_INITRD
+	if (!strncmp(existing_table->signature, "DSDT", 4)) {
+		*new_table = (struct acpi_table_header*)acpi_find_dsdt_initrd();
+		if (*new_table)
+			printk(KERN_INFO PREFIX "Using customized DSDT\n");
+	}
+#endif
 	return AE_OK;
 }
 
Index: linux-2.6.8/drivers/acpi/Kconfig
===================================================================
--- linux-2.6.8.orig/drivers/acpi/Kconfig
+++ linux-2.6.8/drivers/acpi/Kconfig
@@ -270,5 +270,19 @@ config X86_PM_TIMER
 	  kernel logs, and/or you are using this on a notebook which
 	  does not yet have an HPET, you should say "Y" here.
 
+config ACPI_INITRD
+	bool "Read DSDT from initrd"
+	depends on ACPI && BLK_DEV_INITRD
+	default y
+	help
+	  The DSDT (Differentiated System Description Table) often needs to be
+	  overridden because of broken BIOS implementations. If you want to use
+	  a customized DSDT, please use the mkinitrd tool (mkinitrd package) to 
+	  attach the  DSDT to the initrd) or see http://gaugusch.at/kernel.shtml 
+	  for instructions on using an existing initrd with ACPI. If there is no 
+	  one found in the initrd, the DSDT from the BIOS is used. Even you do not 
+	  need a new one at the moment, you may want to use a better implemented 
+	  DSDT later. It is save to say yes here
+
 endmenu
 
