From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH 10/15] ocfs2: allow per-resource callbacks

 The following patch adds a heartbeat resource pointer to callbacks and
 events, allowing users to specify on a per-callback function basis whether
 to listen to a specific heartbeat resource or receive events for any
 resource.

 This functionality is not used by this patch, but will be with the next patch.

 Updates:
 Aug 30, 2007: Fixed problem where events wouldn't properly get delivered
               for all nodes while using disk heartbeat.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

---

 fs/ocfs2/cluster/heartbeat.c |   11 +++++++----
 fs/ocfs2/cluster/heartbeat.h |    1 +
 fs/ocfs2/super.c             |    4 ++++
 3 files changed, 12 insertions(+), 4 deletions(-)

--- a/fs/ocfs2/cluster/heartbeat.c	2008-02-08 15:53:41.000000000 -0500
+++ b/fs/ocfs2/cluster/heartbeat.c	2008-02-08 15:53:42.000000000 -0500
@@ -69,16 +69,19 @@ static struct o2hb_callback {
 static struct o2hb_callback *hbcall_from_type(enum o2hb_callback_type type);
 
 static void o2hb_fire_callbacks(struct o2hb_callback *hbcall,
-				struct o2nm_node *node,
-				int idx)
+                                struct o2hb_node_event *event)
 {
 	struct list_head *iter;
 	struct o2hb_callback_func *f;
+	struct o2nm_node *node = event->hn_node;
+	int idx = event->hn_node_num;
 
 	list_for_each(iter, &hbcall->list) {
 		f = list_entry(iter, struct o2hb_callback_func, hc_item);
 		mlog(ML_HEARTBEAT, "calling funcs %p\n", f);
-		(f->hc_func)(node, idx, f->hc_data);
+		if (f->hc_res == NULL || event->hn_res == NULL ||
+		    f->hc_res == event->hn_res)
+			(f->hc_func)(node, idx, f->hc_data);
 	}
 }
 
@@ -120,7 +123,7 @@ void o2hb_run_event_list(struct o2hb_nod
 		 * to recover from. */
 		BUG_ON(IS_ERR(hbcall));
 
-		o2hb_fire_callbacks(hbcall, event->hn_node, event->hn_node_num);
+		o2hb_fire_callbacks(hbcall, event);
 
 		spin_lock(&o2hb_live_lock);
 	}
--- a/fs/ocfs2/cluster/heartbeat.h	2008-02-08 15:53:41.000000000 -0500
+++ b/fs/ocfs2/cluster/heartbeat.h	2008-02-08 15:53:42.000000000 -0500
@@ -93,6 +93,7 @@ struct o2hb_node_event {
 	enum o2hb_callback_type hn_event_type;
 	struct o2nm_node        *hn_node;
 	int                     hn_node_num;
+	struct o2hb_heartbeat_resource *hn_res;
 };
 void o2hb_queue_node_event(struct o2hb_node_event *event,
                            enum o2hb_callback_type type,
--- a/fs/ocfs2/super.c	2008-02-08 15:53:31.000000000 -0500
+++ b/fs/ocfs2/super.c	2008-02-08 15:53:42.000000000 -0500
@@ -570,6 +570,9 @@ static int ocfs2_fill_super(struct super
 		goto read_super_error;
 	}
 
+#if 0
+	/* We do this in the DLM as well. If it fails there, we still fail
+	 * the mount. -jeffm */
 	/* for now we only have one cluster/node, make sure we see it
 	 * in the heartbeat universe */
 	if (parsed_options.mount_opt & OCFS2_MOUNT_HB_LOCAL) {
@@ -578,6 +581,7 @@ static int ocfs2_fill_super(struct super
 			goto read_super_error;
 		}
 	}
+#endif
 
 	/* probe for superblock */
 	status = ocfs2_sb_probe(sb, &bh, &sector_size);
