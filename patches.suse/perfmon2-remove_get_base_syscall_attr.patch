From: Tony Jones <tonyj@suse.de>
Subject: remove perfmon syscall_base attribyute
Patch-mainline: never

Syscalls were removed, delete the old sysfs attribute that reported the 
syscall base.

Signed-off-by: Tony Jones <tonyj@suse.de>

---

 arch/ia64/include/asm/perfmon_kern.h    |    5 -----
 arch/powerpc/include/asm/perfmon_kern.h |    5 -----
 arch/x86/include/asm/perfmon_kern.h     |   10 ----------
 perfmon/perfmon_sysfs.c                 |    8 --------
 4 files changed, 28 deletions(-)

--- a/arch/ia64/include/asm/perfmon_kern.h
+++ b/arch/ia64/include/asm/perfmon_kern.h
@@ -324,11 +324,6 @@ static inline void pfm_release_dbregs(st
 
 #define pfm_use_dbregs(_t)     __pfm_use_dbregs(_t)
 
-static inline int pfm_arch_get_base_syscall(void)
-{
-	return __NR_pfm_create_context;
-}
-
 struct pfm_arch_pmu_info {
 	unsigned long mask_pmcs[PFM_PMC_BV]; /* modify on when masking */
 };
--- a/arch/powerpc/include/asm/perfmon_kern.h
+++ b/arch/powerpc/include/asm/perfmon_kern.h
@@ -359,11 +359,6 @@ static inline void pfm_arch_arm_handle_w
 static inline void pfm_arch_disarm_handle_work(struct task_struct *task)
 {}
 
-static inline int pfm_arch_get_base_syscall(void)
-{
-	return __NR_pfm_create_context;
-}
-
 struct pfm_arch_context {
 	/* Cell: Most recent value of the pm_status
 	 * register read by the interrupt handler.
--- a/arch/x86/include/asm/perfmon_kern.h
+++ b/arch/x86/include/asm/perfmon_kern.h
@@ -525,16 +525,6 @@ static inline void pfm_arch_arm_handle_w
 static inline void pfm_arch_disarm_handle_work(struct task_struct *task)
 {}
 
-static inline int pfm_arch_get_base_syscall(void)
-{
-#ifdef __x86_64__
-	/* 32-bit syscall definition coming from ia32_unistd.h */
-	if (test_thread_flag(TIF_IA32))
-		return __NR_ia32_pfm_create_context;
-#endif
-	return __NR_pfm_create_context;
-}
-
 #define PFM_ARCH_CTX_SIZE	(sizeof(struct pfm_arch_context))
 /*
  * x86 does not need extra alignment requirements for the sampling buffer
--- a/perfmon/perfmon_sysfs.c
+++ b/perfmon/perfmon_sysfs.c
@@ -115,12 +115,6 @@ static ssize_t pfm_controls_show(struct
 
 	if (is_attr_name(attr, "arg_mem_max"))
 		return snprintf(buf, PAGE_SIZE, "%zu\n", pfm_controls.arg_mem_max);
-
-	if (is_attr_name(attr, "syscall")) {
-		base = pfm_arch_get_base_syscall();
-		return snprintf(buf, PAGE_SIZE, "%d\n",  base);
-	}
-
 	if (is_attr_name(attr, "sys_sessions_count"))
 		return pfm_sysfs_res_show(buf, PAGE_SIZE, 1);
 
@@ -192,7 +186,6 @@ skip:
  */
 static PFM_RO_ATTR(version, pfm_controls_show);
 static PFM_RO_ATTR(task_sessions_count, pfm_controls_show);
-static PFM_RO_ATTR(syscall, pfm_controls_show);
 static PFM_RO_ATTR(sys_sessions_count, pfm_controls_show);
 static PFM_RO_ATTR(smpl_buffer_mem_cur, pfm_controls_show);
 
@@ -206,7 +199,6 @@ static PFM_RW_ATTR(reset_stats, pfm_cont
 
 static struct attribute *pfm_kernel_attrs[] = {
 	&attr_version.attr,
-	&attr_syscall.attr,
 	&attr_task_sessions_count.attr,
 	&attr_sys_sessions_count.attr,
 	&attr_smpl_buffer_mem_cur.attr,
