Index: linux-2.6.5/fs/jfs/dmapi/dmapi_jfs.c
===================================================================
--- linux-2.6.5.orig/fs/jfs/dmapi/dmapi_jfs.c
+++ linux-2.6.5/fs/jfs/dmapi/dmapi_jfs.c
@@ -284,7 +284,7 @@ prohibited_mr_events(
 	struct list_head *l;
 	int		prohibited;
 
-	if (list_empty(&ip->i_mapping->i_mmap))
+	if (prio_tree_empty(&ip->i_mapping->i_mmap))
 		return 0;
 
 	prohibited = 1 << DM_EVENT_READ;
@@ -311,6 +311,7 @@ prohibited_mr_events(
 {
 	struct address_space *mapping;
 	struct vm_area_struct *vma;
+	prio_tree_iter iter;
 	struct list_head *l;
 	int		prohibited = 0;
 	dm_off_t	rgnbeg = rgn->rg_offset;
@@ -318,27 +319,19 @@ prohibited_mr_events(
 	dm_off_t	mmbeg;
 	dm_off_t	mmend;
 
-	if (list_empty(&ip->i_mapping->i_mmap))
+	if (prio_tree_empty(&ip->i_mapping->i_mmap))
 		return 0;
 
 	mapping = ip->i_mapping;
 
 	down(&mapping->i_shared_sem);
-	list_for_each(l, &mapping->i_mmap_shared) {
-		vma = list_entry(l, struct vm_area_struct, shared);
-		mmbeg = vma->vm_pgoff * PAGE_SIZE;
-		mmend = mmbeg + (vma->vm_end - vma->vm_start);
-
-		// Region intersects memory-mapped area
-		if (((rgnbeg > mmbeg) && (rgnbeg < mmend)) || 
-		    ((rgnend > mmbeg) && (rgnend < mmend)) || 
-		    ((rgnbeg <= mmbeg) && (rgnend >= mmend))) {
-			prohibited = 1 << DM_EVENT_READ;
-			
-			if (!(vma->vm_flags & VM_DENYWRITE)) {
-				prohibited |= 1 << DM_EVENT_WRITE;
-			}
-			break;
+	vma = __vma_prio_tree_first(&mapping->i_mmap_shared, &iter,
+				    rgnbeg, rgnend);
+	if (vma) {
+		prohibited = 1 << DM_EVENT_READ;
+		
+		if (!(vma->vm_flags & VM_DENYWRITE)) {
+			prohibited |= 1 << DM_EVENT_WRITE;
 		}
 	}
 	up(&mapping->i_shared_sem);
@@ -2403,7 +2396,7 @@ jfs_dm_punch_hole(
 
 	if (!S_ISREG(ip->i_mode))
 		return(-EINVAL);
-	if (!list_empty(&ip->i_mapping->i_mmap))
+	if (!prio_tree_empty(&ip->i_mapping->i_mmap))
 		return(-EBUSY);
 
 	IWRITE_LOCK(ip);
