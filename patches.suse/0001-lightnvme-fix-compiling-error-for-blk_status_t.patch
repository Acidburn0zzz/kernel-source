From: Coly Li <colyli@suse.de>
Subject: lightnvme: fix compiling error for blk_status_t
Patch-mainline: Never, the fixed compiling error will be updated by following nvme backport.
References: fate#322738,fate#322919,fate#322950,fate#323773

Patch patches.suse/0023-block-switch-bios-to-blk_status_t.patch changes
function pointer type of rq_end_io_fn from blk_execute_rq_nowait().

The new function pointer type is defined as,
	typedef void (rq_end_io_fn)(struct request *, blk_status_t);

Because at this moment nvme patches are depended on the block layer
backport and not merged yet, second parameter of nvme_nvm_end_user_vio()
is still "int error", not update to "blk_status_t status". Then IBS
build system reports a compiling error for incompatible parameter data
type.

Fortunately "int error" in nvme_nvm_end_user_vio() is not referenced at
all, so change it to "blk_status_t status" does not change any execution
logic.

Purpose of this patch is just to remove a compiling error, make the block
layer backport pass compiling. Following nvme and lightnvme backport will
update the code into a correct shape.

Signed-off-by: Coly Li <colyli@suse.de>
---
 drivers/nvme/host/lightnvm.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/nvme/host/lightnvm.c
+++ b/drivers/nvme/host/lightnvm.c
@@ -571,7 +571,7 @@ static struct nvm_dev_ops nvme_nvm_dev_o
 	.max_phys_sect		= 64,
 };
 
-static void nvme_nvm_end_user_vio(struct request *rq, int error)
+static void nvme_nvm_end_user_vio(struct request *rq, blk_status_t status)
 {
 	struct completion *waiting = rq->end_io_data;
 
