From: Andres Gruenbacher <agruen@suse.de>
Subject: Also mark rodata pages executable in mark_rodata_rw()

For review: do we also need to mark rodata pages executable in
mark_rodata_rw() to fully undo mark_rodata_ro()?

Signed-off-by: Andres Gruenbacher <agruen@suse.de>

---
 arch/x86/mm/init_64-xen.c |    6 ++++++
 arch/x86/mm/init_64.c     |    6 ++++++
 2 files changed, 12 insertions(+)

reverted:
Index: b/arch/x86/mm/init_64-xen.c
===================================================================
--- a/arch/x86/mm/init_64-xen.c
+++ b/arch/x86/mm/init_64-xen.c
@@ -1234,6 +1234,12 @@ void mark_rodata_rw(void)
 	printk(KERN_INFO "Write enabling the kernel read-only data: %luk\n",
 	       (end - start) >> 10);
 	set_memory_rw_force(start, (end - start) >> PAGE_SHIFT);
+
+	/*
+	 * The rodata section should also be executable. (The kernel text
+	 * still is!)
+	 */
+	set_memory_x(rodata_start, (end - rodata_start) >> PAGE_SHIFT);
 }
 EXPORT_SYMBOL(mark_rodata_rw);
 #endif
Index: b/arch/x86/mm/init_64.c
===================================================================
--- a/arch/x86/mm/init_64.c
+++ b/arch/x86/mm/init_64.c
@@ -912,6 +912,12 @@ void mark_rodata_rw(void)
 	printk(KERN_INFO "Write enabling the kernel read-only data: %luk\n",
 	       (end - start) >> 10);
 	set_memory_rw_force(start, (end - start) >> PAGE_SHIFT);
+
+	/*
+	 * The rodata section should also be executable. (The kernel text
+	 * still is!)
+	 */
+	set_memory_x(rodata_start, (end - rodata_start) >> PAGE_SHIFT);
 }
 EXPORT_SYMBOL(mark_rodata_rw);
 #endif
