From: Jeff Mahoney <jeffm@suse.com>
Subject: [PATCH] kABI: rework tcp_sendmsg fix from 2.6.22.6
References: None, proactive fix.
Patch-mainline: Never

This patch adds a trampoline so we don't change the prototype of tcp_sendmsg.

Modification from bwalle@suse.de:
Do the same for IPv6.

Signed-off-by: Jeff Mahoney <jeffm@suse.com>

---
 include/net/tcp.h   |    2 +-
 net/ipv4/af_inet.c  |    8 +++++++-
 net/ipv4/tcp.c      |    3 +--
 net/ipv6/af_inet6.c |    9 ++++++++-
 4 files changed, 17 insertions(+), 5 deletions(-)

--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@ -281,7 +281,7 @@ extern int			tcp_v4_remember_stamp(struc
 
 extern int		    	tcp_v4_tw_remember_stamp(struct inet_timewait_sock *tw);
 
-extern int			tcp_sendmsg(struct kiocb *iocb, struct socket *sock,
+extern int			tcp_sendmsg(struct kiocb *iocb, struct sock *sk,
 					    struct msghdr *msg, size_t size);
 extern ssize_t			tcp_sendpage(struct socket *sock, struct page *page, int offset, size_t size, int flags);
 
--- a/net/ipv4/af_inet.c
+++ b/net/ipv4/af_inet.c
@@ -692,6 +692,12 @@ int inet_sendmsg(struct kiocb *iocb, str
 	return sk->sk_prot->sendmsg(iocb, sk, msg, size);
 }
 
+/* KABI safe workaround for 2.6.22.6 tcp_sendmsg change -jeffm */
+static int inet_tcp_sendmsg(struct kiocb *iocb, struct socket *sock,
+                     struct msghdr *msg, size_t size)
+{
+	return tcp_sendmsg(iocb, sock->sk, msg, size);
+}
 
 static ssize_t inet_sendpage(struct socket *sock, struct page *page, int offset, size_t size, int flags)
 {
@@ -831,7 +837,7 @@ const struct proto_ops inet_stream_ops =
 	.shutdown	   = inet_shutdown,
 	.setsockopt	   = sock_common_setsockopt,
 	.getsockopt	   = sock_common_getsockopt,
-	.sendmsg	   = tcp_sendmsg,
+	.sendmsg	   = inet_tcp_sendmsg,
 	.recvmsg	   = sock_common_recvmsg,
 	.mmap		   = sock_no_mmap,
 	.sendpage	   = tcp_sendpage,
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -658,10 +658,9 @@ static inline int select_size(struct soc
 	return tmp;
 }
 
-int tcp_sendmsg(struct kiocb *iocb, struct socket *sock, struct msghdr *msg,
+int tcp_sendmsg(struct kiocb *iocb, struct sock *sk, struct msghdr *msg,
 		size_t size)
 {
-	struct sock *sk = sock->sk;
 	struct iovec *iov;
 	struct tcp_sock *tp = tcp_sk(sk);
 	struct sk_buff *skb;
--- a/net/ipv6/af_inet6.c
+++ b/net/ipv6/af_inet6.c
@@ -472,6 +472,13 @@ int inet6_ioctl(struct socket *sock, uns
 
 EXPORT_SYMBOL(inet6_ioctl);
 
+/* KABI safe workaround for 2.6.22.6 tcp_sendmsg change -bwalle, copied from ipv4 */
+static int inet_tcp_sendmsg(struct kiocb *iocb, struct socket *sock,
+                     struct msghdr *msg, size_t size)
+{
+	return tcp_sendmsg(iocb, sock->sk, msg, size);
+}
+
 const struct proto_ops inet6_stream_ops = {
 	.family		   = PF_INET6,
 	.owner		   = THIS_MODULE,
@@ -487,7 +494,7 @@ const struct proto_ops inet6_stream_ops 
 	.shutdown	   = inet_shutdown,		/* ok		*/
 	.setsockopt	   = sock_common_setsockopt,	/* ok		*/
 	.getsockopt	   = sock_common_getsockopt,	/* ok		*/
-	.sendmsg	   = tcp_sendmsg,		/* ok		*/
+	.sendmsg	   = inet_tcp_sendmsg,		/* ok		*/
 	.recvmsg	   = sock_common_recvmsg,	/* ok		*/
 	.mmap		   = sock_no_mmap,
 	.sendpage	   = tcp_sendpage,
