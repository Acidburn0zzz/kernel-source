--- linux-2.6.5/arch/ia64/ia32/sys_ia32.c.~1~	2004-05-08 23:08:02.053145041 +0200
+++ linux-2.6.5/arch/ia64/ia32/sys_ia32.c	2004-05-09 00:00:52.100896160 +0200
@@ -1591,7 +1591,7 @@ sys32_ptrace (int request, pid_t pid, un
 	put_task_struct(child);
   out:
 	unlock_kernel();
-	return audit_result(ret);
+	return audit_lresult(ret);
 }
 
 /*
--- linux-2.6.5/arch/ia64/kernel/ptrace.c.~1~	2004-05-08 23:08:02.061934111 +0200
+++ linux-2.6.5/arch/ia64/kernel/ptrace.c	2004-05-08 23:53:57.729411900 +0200
@@ -1447,7 +1447,7 @@ sys_ptrace (long request, pid_t pid, uns
 	put_task_struct(child);
   out:
 	unlock_kernel();
-	return audit_result(ret);
+	return audit_lresult(ret);
 }
 
 /* "asmlinkage" so the input arguments are preserved... */
--- linux-2.6.5/arch/x86_64/kernel/ptrace.c.~1~	2004-05-08 23:08:02.142012303 +0200
+++ linux-2.6.5/arch/x86_64/kernel/ptrace.c	2004-05-09 00:06:35.493787609 +0200
@@ -486,7 +486,7 @@ out_tsk:
 	put_task_struct(child);
 out:
 	unlock_kernel();
-	return audit_result(ret);
+	return audit_lresult(ret);
 }
 
 asmlinkage void syscall_trace(struct pt_regs *regs)
--- linux-2.6.5/ipc/msg.c.~1~	2004-05-08 23:08:02.199629539 +0200
+++ linux-2.6.5/ipc/msg.c	2004-05-09 00:12:47.737284606 +0200
@@ -822,7 +822,7 @@ out_success:
 			    msgsz = -EFAULT;
 		}
 		free_msg(msg);
-		return audit_result(msgsz);
+		return audit_lresult(msgsz);
 	} else
 	{
 		/* no message waiting. Prepare for pipelined
