Make sure reiserfs uses a reasonable number when restarting long
unbounded transactions (creating holes or deleting files).  

Without this patch, the number of blocks requested grows with each transaction
restart, until it hits MAX_BATCH_COUNT and starts forcing commits with
every new transaction.

Oleg Drokin tracked this bug down

Index: linux.lkcd/fs/reiserfs/stree.c
===================================================================
--- linux.lkcd.orig/fs/reiserfs/stree.c	2004-02-22 19:21:16.518076629 -0500
+++ linux.lkcd/fs/reiserfs/stree.c	2004-02-22 19:25:31.350296824 -0500
@@ -1754,7 +1754,7 @@
 	  reiserfs_update_sd(th, p_s_inode) ;
 
 	  journal_end(th, p_s_inode->i_sb, orig_len_alloc) ;
-	  journal_begin(th, p_s_inode->i_sb, orig_len_alloc) ;
+	  journal_begin(th, p_s_inode->i_sb, JOURNAL_PER_BALANCE_CNT * 6) ;
 	  reiserfs_update_inode_transaction(p_s_inode) ;
 	}
     } while ( n_file_size > ROUND_UP (n_new_file_size) &&
Index: linux.lkcd/fs/reiserfs/inode.c
===================================================================
--- linux.lkcd.orig/fs/reiserfs/inode.c	2004-02-05 16:56:29.000000000 -0500
+++ linux.lkcd/fs/reiserfs/inode.c	2004-02-22 19:27:21.758829857 -0500
@@ -209,7 +209,7 @@
   pathrelse(path) ;
   reiserfs_update_sd(th, inode) ;
   journal_end(th, s, len) ;
-  journal_begin(th, s, len) ;
+  journal_begin(th, s, JOURNAL_PER_BALANCE_CNT * 6) ;
   reiserfs_update_inode_transaction(inode) ;
 }
 
