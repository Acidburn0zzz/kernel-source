From: Hans Reiser <reiser@namesys.com>
Subject: make kswapd non-static

When kernel is compiled with CONFIG_FRAME_POINTER reiser4 turns on debugging
code which provides stack back-trace.  It is collected through
__builtin_return_address() gcc builtin.  Unfortunately,
__builtin_return_address() doesn't provide means to detect when bottom of the
stack is reached, and just crashed when trying to access non-existent frame.

Reiser4 implements a work around for this problem.  For this it needs kswapd
to be not static.

Signed-off-by: Andrew Morton <akpm@osdl.org>
Acked-by: Chris Mason <mason@suse.com>

Index: linux.h/mm/vmscan.c
===================================================================
--- linux.h.orig/mm/vmscan.c	2005-01-05 09:59:00.209853522 -0500
+++ linux.h/mm/vmscan.c	2005-01-05 10:06:51.070507136 -0500
@@ -1128,7 +1128,7 @@ out:
  * If there are applications that are active memory-allocators
  * (most normal use), this basically shouldn't matter.
  */
-static int kswapd(void *p)
+int kswapd(void *p)
 {
 	pg_data_t *pgdat = (pg_data_t*)p;
 	struct task_struct *tsk = current;
