===== drivers/block/ll_rw_blk.c 1.243 vs edited =====
--- 1.243/drivers/block/ll_rw_blk.c	Sun Apr 18 18:13:18 2004
+++ edited/drivers/block/ll_rw_blk.c	Tue Apr 27 13:11:32 2004
@@ -1821,13 +1821,14 @@
  * Description:
  *    Unmap a request previously mapped by blk_rq_map_user().
  */
-int blk_rq_unmap_user(struct request *rq, void __user *ubuf, unsigned int ulen)
+int blk_rq_unmap_user(struct request *rq, void __user *ubuf, struct bio *bio,
+		      unsigned int ulen)
 {
 	const int read = rq_data_dir(rq) == READ;
 	int ret = 0;
 
-	if (rq->biotail)
-		bio_unmap_user(rq->biotail, read);
+	if (bio)
+		bio_unmap_user(bio, read);
 	if (rq->buffer) {
 		if (read && copy_to_user(ubuf, rq->buffer, ulen))
 			ret = -EFAULT;
===== drivers/block/scsi_ioctl.c 1.41 vs edited =====
--- 1.41/drivers/block/scsi_ioctl.c	Thu Mar 11 13:19:52 2004
+++ edited/drivers/block/scsi_ioctl.c	Tue Apr 27 13:20:34 2004
@@ -111,6 +111,7 @@
 	unsigned long start_time;
 	int reading, writing;
 	struct request *rq;
+	struct bio *bio;
 	char sense[SCSI_SENSE_BUFFERSIZE];
 
 	if (hdr->interface_id != 'S')
@@ -164,6 +165,7 @@
 	rq->sense_len = 0;
 
 	rq->flags |= REQ_BLOCK_PC;
+	bio = rq->bio;
 
 	rq->timeout = (hdr->timeout * HZ) / 1000;
 	if (!rq->timeout)
@@ -199,7 +201,7 @@
 			hdr->sb_len_wr = len;
 	}
 
-	if (blk_rq_unmap_user(rq, hdr->dxferp, hdr->dxfer_len))
+	if (blk_rq_unmap_user(rq, hdr->dxferp, bio, hdr->dxfer_len))
 		return -EFAULT;
 
 	/* may not have succeeded, but output values written to control
===== drivers/cdrom/cdrom.c 1.51 vs edited =====
--- 1.51/drivers/cdrom/cdrom.c	Thu Mar 25 09:39:55 2004
+++ edited/drivers/cdrom/cdrom.c	Tue Apr 27 13:11:55 2004
@@ -1946,6 +1946,7 @@
 {
 	request_queue_t *q = cdi->disk->queue;
 	struct request *rq;
+	struct bio *bio;
 	unsigned int len;
 	int nr, ret = 0;
 
@@ -1980,6 +1981,7 @@
 		rq->cmd_len = 12;
 		rq->flags |= REQ_BLOCK_PC;
 		rq->timeout = 60 * HZ;
+		bio = rq->bio;
 
 		if (blk_execute_rq(q, cdi->disk, rq)) {
 			struct request_sense *s = rq->sense;
@@ -1987,7 +1989,7 @@
 			cdi->last_sense = s->sense_key;
 		}
 
-		if (blk_rq_unmap_user(rq, ubuf, len))
+		if (blk_rq_unmap_user(rq, ubuf, bio, len))
 			ret = -EFAULT;
 
 		if (ret)
===== include/linux/blkdev.h 1.141 vs edited =====
--- 1.141/include/linux/blkdev.h	Tue Apr 27 07:24:48 2004
+++ edited/include/linux/blkdev.h	Tue Apr 27 13:18:18 2004
@@ -522,7 +522,7 @@
 extern void blk_run_queue(request_queue_t *);
 extern void blk_queue_activity_fn(request_queue_t *, activity_fn *, void *);
 extern struct request *blk_rq_map_user(request_queue_t *, int, void __user *, unsigned int);
-extern int blk_rq_unmap_user(struct request *, void __user *, unsigned int);
+extern int blk_rq_unmap_user(struct request *, void __user *, struct bio *, unsigned int);
 extern int blk_execute_rq(request_queue_t *, struct gendisk *, struct request *);
 
 static inline request_queue_t *bdev_get_queue(struct block_device *bdev)
