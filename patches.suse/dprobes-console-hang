diff -urNp linux-2.6.5/drivers/dprobes/dprobes.c linux-2.6.5.SUSE/drivers/dprobes/dprobes.c
--- linux-2.6.5/drivers/dprobes/dprobes.c	2004-06-28 15:43:21.073110363 +0200
+++ linux-2.6.5.SUSE/drivers/dprobes/dprobes.c	2004-06-28 15:47:38.660507837 +0200
@@ -1619,10 +1619,8 @@ static int __init dprobes_init_module(vo
 		printk("<1>register_sysrq_key returned %i\n", retval);
 #endif
 	return retval;
-err2:	unregister_rmmodule_notifier(&dp_module_load_nb);
-	printk("called unreg\n");
-err1:	unregister_module_notifier(&dp_rmmodule_load_nb);
-	printk("called unreg\n");
+err2:	unregister_rmmodule_notifier(&dp_rmmodule_load_nb);
+err1:	unregister_module_notifier(&dp_module_load_nb);
 err:	return retval;
 
 }
@@ -1635,8 +1633,8 @@ static void __exit dprobes_cleanup_modul
 	printk("IBM Dynamic Probes v%d.%d.%d unloaded.\n", DP_MAJOR_VER, 
 			DP_MINOR_VER, DP_PATCH_VER);
 
-	unregister_rmmodule_notifier(&dp_module_load_nb);
-	unregister_module_notifier(&dp_rmmodule_load_nb);
+	unregister_rmmodule_notifier(&dp_rmmodule_load_nb);
+	unregister_module_notifier(&dp_module_load_nb);
 #ifdef CONFIG_MAGIC_SYSRQ        
 	destroy_workqueue(dprobes_wq);
 	if ((retval = unregister_sysrq_key('v', &key_op)))
diff -urNp linux-2.6.5/kernel/module.c linux-2.6.5.SUSE/kernel/module.c
--- linux-2.6.5/kernel/module.c	2004-06-28 15:43:21.108110825 +0200
+++ linux-2.6.5.SUSE/kernel/module.c	2004-06-28 15:47:38.662507863 +0200
@@ -117,7 +117,7 @@ int unregister_rmmodule_notifier(struct 
 {
 	int err;
 	down(&rmmod_notify_mutex);
-	err = notifier_chain_unregister(&module_notify_list, nb);
+	err = notifier_chain_unregister(&rmmodule_notify_list, nb);
 	up(&rmmod_notify_mutex);
 	return err;
 }
@@ -1002,15 +1002,15 @@ static unsigned long resolve_symbol(Elf_
 static void free_module(struct module *mod)
 {
 	TRIG_EVENT(free_module_hook, mod);
+	down(&rmmod_notify_mutex);
+	notifier_call_chain(&rmmodule_notify_list, MODULE_STATE_GOING, mod);
+	up(&rmmod_notify_mutex);
+
 	/* Delete from various lists */
 	spin_lock_irq(&modlist_lock);
 	list_del(&mod->list);
 	spin_unlock_irq(&modlist_lock);
 
-	down(&rmmod_notify_mutex);
-	notifier_call_chain(&rmmodule_notify_list, MODULE_STATE_GOING, mod);
-	up(&rmmod_notify_mutex);
-
 	/* Arch-specific cleanup. */
 	module_arch_cleanup(mod);
 
