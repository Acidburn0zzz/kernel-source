From: Kurt Garloff <garloff@suse.de>
Subject: Reorder stubs in security.h, step 2

This is the manual cleanups after the mangle-ifdef.py step.
Its goal is to  minimize the chances of screwing up in the next step.

This is patch 2b/5 of the LSM overhaul.

 security.h |  316 ++++++++++++-------------------------------------------------
 1 file changed, 66 insertions(+), 250 deletions(-)

Signed-off-by: Kurt Garloff <garloff@suse.de>

Index: linux-2.6.17/include/linux/security.h
===================================================================
--- linux-2.6.17.orig/include/linux/security.h
+++ linux-2.6.17/include/linux/security.h
@@ -1361,17 +1361,17 @@ struct security_operations {
 /* global variables */
 extern struct security_operations *security_ops;
 
+#endif /* CONFIG_SECURITY */
+
 /* inline stuff */
-static inline int security_ptrace (struct task_struct * parent, struct task_struct * child)
+static inline int security_ptrace (struct task_struct *parent, struct task_struct * child)
 {
+#ifdef CONFIG_SECURITY
 	return security_ops->ptrace (parent, child);
-}
 #else /* CONFIG_SECURITY */
-static inline int security_ptrace (struct task_struct *parent, struct task_struct * child)
-{
 	return cap_ptrace (parent, child);
-}
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_capget (struct task_struct *target,
 				   kernel_cap_t *effective,
@@ -1437,13 +1437,11 @@ static inline int security_sysctl(struct
 }
 
 static inline int security_quotactl (int cmds, int type, int id,
-#ifdef CONFIG_SECURITY
 				     struct super_block *sb)
 {
+#ifdef CONFIG_SECURITY
 	return security_ops->quotactl (cmds, type, id, sb);
 #else /* CONFIG_SECURITY */
-				     struct super_block * sb)
-{
 	return 0;
 #endif /* CONFIG_SECURITY */
 }
@@ -1493,14 +1491,14 @@ static inline int security_bprm_alloc (s
 	return 0;
 #endif /* CONFIG_SECURITY */
 }
+
 static inline void security_bprm_free (struct linux_binprm *bprm)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->bprm_free_security (bprm);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
+
 static inline void security_bprm_apply_creds (struct linux_binprm *bprm, int unsafe)
 {
 #ifdef CONFIG_SECURITY
@@ -1509,6 +1507,7 @@ static inline void security_bprm_apply_c
 	cap_bprm_apply_creds (bprm, unsafe);
 #endif /* CONFIG_SECURITY */
 }
+
 static inline void security_bprm_post_apply_creds (struct linux_binprm *bprm)
 {
 #ifdef CONFIG_SECURITY
@@ -1517,6 +1516,7 @@ static inline void security_bprm_post_ap
 	return;
 #endif /* CONFIG_SECURITY */
 }
+
 static inline int security_bprm_set (struct linux_binprm *bprm)
 {
 #ifdef CONFIG_SECURITY
@@ -1554,13 +1554,11 @@ static inline int security_sb_alloc (str
 }
 
 static inline void security_sb_free (struct super_block *sb)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->sb_free_security (sb);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_sb_copy_data (struct file_system_type *type,
 					 void *orig, void *copy)
@@ -1621,51 +1619,41 @@ static inline int security_sb_umount (st
 }
 
 static inline void security_sb_umount_close (struct vfsmount *mnt)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->sb_umount_close (mnt);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline void security_sb_umount_busy (struct vfsmount *mnt)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->sb_umount_busy (mnt);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline void security_sb_post_remount (struct vfsmount *mnt,
 					     unsigned long flags, void *data)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->sb_post_remount (mnt, flags, data);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline void security_sb_post_mountroot (void)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->sb_post_mountroot ();
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline void security_sb_post_addmount (struct vfsmount *mnt,
 					      struct nameidata *mountpoint_nd)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->sb_post_addmount (mnt, mountpoint_nd);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_sb_pivotroot (struct nameidata *old_nd,
 					 struct nameidata *new_nd)
@@ -1679,13 +1667,11 @@ static inline int security_sb_pivotroot 
 
 static inline void security_sb_post_pivotroot (struct nameidata *old_nd,
 					       struct nameidata *new_nd)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->sb_post_pivotroot (old_nd, new_nd);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_inode_alloc (struct inode *inode)
 {
@@ -1697,13 +1683,11 @@ static inline int security_inode_alloc (
 }
 
 static inline void security_inode_free (struct inode *inode)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->inode_free_security (inode);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_inode_init_security (struct inode *inode,
 						struct inode *dir,
@@ -1885,15 +1869,13 @@ static inline int security_inode_getattr
 }
 
 static inline void security_inode_delete (struct inode *inode)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	if (unlikely (IS_PRIVATE (inode)))
 		return;
 	security_ops->inode_delete (inode);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_inode_setxattr (struct dentry *dentry, char *name,
 					   void *value, size_t size, int flags)
@@ -1909,15 +1891,13 @@ static inline int security_inode_setxatt
 
 static inline void security_inode_post_setxattr (struct dentry *dentry, char *name,
 						void *value, size_t size, int flags)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	if (unlikely (IS_PRIVATE (dentry->d_inode)))
 		return;
 	security_ops->inode_post_setxattr (dentry, name, value, size, flags);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_inode_getxattr (struct dentry *dentry, char *name)
 {
@@ -1952,17 +1932,14 @@ static inline int security_inode_removex
 #endif /* CONFIG_SECURITY */
 }
 
-#ifdef CONFIG_SECURITY
-static inline const char *security_inode_xattr_getsuffix(void)
+static inline const char *security_inode_xattr_getsuffix (void)
 {
+#ifdef CONFIG_SECURITY
 	return security_ops->inode_xattr_getsuffix();
-}
 #else /* CONFIG_SECURITY */
-static inline const char *security_inode_xattr_getsuffix (void)
-{
 	return NULL ;
-}
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_inode_getsecurity(const struct inode *inode, const char *name, void *buffer, size_t size, int err)
 {
@@ -2016,13 +1993,11 @@ static inline int security_file_alloc (s
 }
 
 static inline void security_file_free (struct file *file)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->file_free_security (file);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_file_ioctl (struct file *file, unsigned int cmd,
 				       unsigned long arg)
@@ -2123,13 +2098,11 @@ static inline int security_task_alloc (s
 }
 
 static inline void security_task_free (struct task_struct *p)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->task_free_security (p);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_task_setuid (uid_t id0, uid_t id1, uid_t id2,
 					int flags)
@@ -2189,13 +2162,11 @@ static inline int security_task_getsid (
 }
 
 static inline void security_task_getsecid (struct task_struct *p, u32 *secid)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->task_getsecid (p, secid);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_task_setgroups (struct group_info *group_info)
 {
@@ -2314,13 +2285,11 @@ static inline void security_task_reparen
 }
 
 static inline void security_task_to_inode(struct task_struct *p, struct inode *inode)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->task_to_inode(p, inode);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_ipc_permission (struct kern_ipc_perm *ipcp,
 					   short flag)
@@ -2342,13 +2311,11 @@ static inline int security_msg_msg_alloc
 }
 
 static inline void security_msg_msg_free (struct msg_msg * msg)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->msg_msg_free_security(msg);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_msg_queue_alloc (struct msg_queue *msq)
 {
@@ -2360,13 +2327,11 @@ static inline int security_msg_queue_all
 }
 
 static inline void security_msg_queue_free (struct msg_queue *msq)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->msg_queue_free_security (msq);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_msg_queue_associate (struct msg_queue * msq, 
 						int msqflg)
@@ -2419,13 +2384,11 @@ static inline int security_shm_alloc (st
 }
 
 static inline void security_shm_free (struct shmid_kernel *shp)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->shm_free_security (shp);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_shm_associate (struct shmid_kernel * shp, 
 					  int shmflg)
@@ -2466,13 +2429,11 @@ static inline int security_sem_alloc (st
 }
 
 static inline void security_sem_free (struct sem_array *sma)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	security_ops->sem_free_security (sma);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_sem_associate (struct sem_array * sma, int semflg)
 {
@@ -2504,15 +2465,13 @@ static inline int security_sem_semop (st
 }
 
 static inline void security_d_instantiate (struct dentry *dentry, struct inode *inode)
-#ifdef CONFIG_SECURITY
 {
+#ifdef CONFIG_SECURITY
 	if (unlikely (inode && IS_PRIVATE (inode)))
 		return;
 	security_ops->d_instantiate (dentry, inode);
-}
-#else /* CONFIG_SECURITY */
-{ }
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_getprocattr(struct task_struct *p, char *name, void *value, size_t size)
 {
@@ -2532,29 +2491,23 @@ static inline int security_setprocattr(s
 #endif /* CONFIG_SECURITY */
 }
 
-#ifdef CONFIG_SECURITY
-static inline int security_netlink_send(struct sock *sk, struct sk_buff * skb)
+static inline int security_netlink_send(struct sock *sk, struct sk_buff *skb)
 {
+#ifdef CONFIG_SECURITY
 	return security_ops->netlink_send(sk, skb);
-}
 #else /* CONFIG_SECURITY */
-static inline int security_netlink_send (struct sock *sk, struct sk_buff *skb)
-{
 	return cap_netlink_send (sk, skb);
-}
 #endif /* CONFIG_SECURITY */
-#ifdef CONFIG_SECURITY
+}
 
-static inline int security_netlink_recv(struct sk_buff * skb, int cap)
+static inline int security_netlink_recv(struct sk_buff *skb, int cap)
 {
+#ifdef CONFIG_SECURITY
 	return security_ops->netlink_recv(skb, cap);
-}
 #else /* CONFIG_SECURITY */
-static inline int security_netlink_recv (struct sk_buff *skb, int cap)
-{
 	return cap_netlink_recv (skb, cap);
-}
 #endif /* CONFIG_SECURITY */
+}
 
 static inline int security_secid_to_secctx(u32 secid, char **secdata, u32 *seclen)
 {
@@ -2572,6 +2525,8 @@ static inline void security_release_secc
 #endif /* CONFIG_SECURITY */
 }
 
+
+
 #ifdef CONFIG_SECURITY
 /* prototypes */
 extern int security_init	(void);
@@ -2600,122 +2555,6 @@ static inline int security_init(void)
 
 
 
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-	
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
 static inline struct dentry *securityfs_create_dir(const char *name,
 					struct dentry *parent)
 {
@@ -2735,9 +2574,13 @@ static inline void securityfs_remove(str
 {
 }
 
-
 #endif /* CONFIG_SECURITY */
 
+
+
+
+
+
 static inline int security_unix_stream_connect(struct socket * sock,
 					       struct socket * other, 
 					       struct sock * newsk)
@@ -2954,24 +2797,6 @@ static inline unsigned int security_sk_s
 
 
 
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
 static inline int security_xfrm_policy_alloc(struct xfrm_policy *xp, struct xfrm_user_sec_ctx *sec_ctx)
 {
 #ifdef CONFIG_SECURITY_NETWORK_XFRM
@@ -3041,12 +2866,6 @@ static inline int security_xfrm_policy_l
 }
 
 
-
-
-
-
-
-
 #ifdef CONFIG_KEYS
 static inline int security_key_alloc(struct key *key,
 				     struct task_struct *tsk,
@@ -3078,9 +2897,6 @@ static inline int security_key_permissio
 }
 
 
-
-
-
 #endif /* CONFIG_KEYS */
 #endif /* __LINUX_SECURITY_H */
 
