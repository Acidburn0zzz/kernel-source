From: Jiri Slaby <jslaby@suse.cz>
Date: Tue, 2 Jul 2019 12:36:55 +0200
Subject: Revert "ovl: don't fail with disconnected lower NFS"
Patch-mainline: never, suse specific
References: bnc#1140057

This reverts commit 168835bbb0bff4c6294b7040e006251f105f7599, upstream
commit 9179c21dc6ed1c993caa5fe4da876a6765c26af7. It depends on the
following patch which is being reverted.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 fs/overlayfs/super.c |   26 +++++++++++++++++---------
 1 file changed, 17 insertions(+), 9 deletions(-)

--- a/fs/overlayfs/super.c
+++ b/fs/overlayfs/super.c
@@ -1472,20 +1472,23 @@ out_err:
  * Check if this layer root is a descendant of:
  * - another layer of this overlayfs instance
  * - upper/work dir of any overlayfs instance
+ * - a disconnected dentry (detached root)
  */
 static int ovl_check_layer(struct super_block *sb, struct dentry *dentry,
 			   const char *name)
 {
-	struct dentry *next = dentry, *parent;
+	struct dentry *next, *parent;
+	bool is_root = false;
 	int err = 0;
 
-	if (!dentry)
+	if (!dentry || dentry == dentry->d_sb->s_root)
 		return 0;
 
-	parent = dget_parent(next);
-
-	/* Walk back ancestors to root (inclusive) looking for traps */
-	while (!err && parent != next) {
+	next = dget(dentry);
+	/* Walk back ancestors to fs root (inclusive) looking for traps */
+	do {
+		parent = dget_parent(next);
+		is_root = (parent == next);
 		if (ovl_is_inuse(parent)) {
 			err = -EBUSY;
 			pr_err("overlayfs: %s path overlapping in-use upperdir/workdir\n",
@@ -1494,12 +1497,17 @@ static int ovl_check_layer(struct super_
 			err = -ELOOP;
 			pr_err("overlayfs: overlapping %s path\n", name);
 		}
-		next = parent;
-		parent = dget_parent(next);
 		dput(next);
+		next = parent;
+	} while (!err && !is_root);
+
+	/* Did we really walk to fs root or found a detached root? */
+	if (!err && next != dentry->d_sb->s_root) {
+		err = -ESTALE;
+		pr_err("overlayfs: disconnected %s path\n", name);
 	}
 
-	dput(parent);
+	dput(next);
 
 	return err;
 }
