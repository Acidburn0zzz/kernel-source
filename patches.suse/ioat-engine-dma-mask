From: Intel
Subject: IOAT: Set DMA mask in ioatdma driver
References: 142510

The ioatdma driver was not calling pci_set_dma_mask, causing performance
problems when running x86_64 kernels with more that 4GB of RAM.

Acked-by: okir@suse.de

diff -u
--- linux-2.6.15-20060109195850.ioat.40/drivers/dma/ioatdma.c	2006-01-11 06:48:04.000000000 -0800
+++ linux-2.6.15-20060109195850.ioat.42/drivers/dma/ioatdma.c	2006-01-17 07:03:50.000000000 -0800
@@ -576,17 +576,23 @@ static void cb_start_null_desc(struct cb
 
 static int __devinit cb_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 {
-	int result;
+	int err;
 	unsigned long mmio_start, mmio_len;
 	void *reg_base;
 	struct cb_device *device;
 
-	result = pci_enable_device(pdev);
-	if (result)
+	err = pci_enable_device(pdev);
+	if (err)
 		goto err_enable_device;
 
-	result = pci_request_regions(pdev, cb_pci_drv.name);
-	if (result)
+	err = pci_set_dma_mask(pdev, DMA_64BIT_MASK);
+	if (err)
+		err = pci_set_dma_mask(pdev, DMA_32BIT_MASK);
+	if (err)
+		goto err_set_dma_mask;
+
+	err = pci_request_regions(pdev, cb_pci_drv.name);
+	if (err)
 		goto err_request_regions;
 
 	mmio_start = pci_resource_start(pdev, 0);
@@ -594,13 +600,13 @@ static int __devinit cb_probe(struct pci
 
 	reg_base = ioremap(mmio_start, mmio_len);
 	if (!reg_base) {
-		result = -ENOMEM;
+		err = -ENOMEM;
 		goto err_ioremap;
 	}
 
 	device = kmalloc(sizeof(*device), GFP_KERNEL);
 	if (!device) {
-		result = -ENOMEM;
+		err = -ENOMEM;
 		goto err_kmalloc;
 	}
 	memset(device, 0, sizeof(*device));
@@ -609,7 +615,7 @@ static int __devinit cb_probe(struct pci
 	device->dma_pool = dma_pool_create("dma_desc_pool", &pdev->dev,
 		sizeof(struct cb_dma_descriptor), 64, 0);
 	if (!device->dma_pool) {
-		result = -ENOMEM;
+		err = -ENOMEM;
 		goto err_dma_pool;
 	}
 
@@ -622,9 +628,9 @@ static int __devinit cb_probe(struct pci
 		device->msi = 0;
 	}
 #endif
-	result = request_irq(pdev->irq, &cb_do_interrupt, SA_SHIRQ, "ioat",
+	err = request_irq(pdev->irq, &cb_do_interrupt, SA_SHIRQ, "ioat",
 		device);
-	if (result)
+	if (err)
 		goto err_irq;
 
 	device->reg_base = reg_base;
@@ -657,8 +663,9 @@ err_kmalloc:
 err_ioremap:
 	pci_release_regions(pdev);
 err_request_regions:
+err_set_dma_mask:
 err_enable_device:
-	return result;
+	return err;
 }
 
 static void __devexit cb_remove(struct pci_dev *pdev)
