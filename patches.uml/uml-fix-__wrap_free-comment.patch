Subject: [patch] uml fix __wrap_free comment.patch
From: blaisorblade_spam@yahoo.it
Patch-mainline: 2.6.11-rc1

Reworded the comment about __wrap_free detection of the allocator used to
allocate the pointer (it can free a pointer created by either the host
malloc(), kmalloc() or vmalloc()).

Signed-off-by: Paolo 'Blaisorblade' Giarrusso <blaisorblade_spam@yahoo.it>
Signed-off-by: Andrew Morton <akpm@osdl.org>
Acked-by: Gerd Knorr <kraxel@suse.de>
---
 arch/um/kernel/main.c |    9 ++++++---
 1 files changed, 6 insertions(+), 3 deletions(-)

diff -puN arch/um/kernel/main.c~uml-fix-__wrap_free-comment arch/um/kernel/main.c
--- 25/arch/um/kernel/main.c~uml-fix-__wrap_free-comment	2004-11-18 23:29:11.808060576 -0800
+++ 25-akpm/arch/um/kernel/main.c	2004-11-18 23:29:11.811060120 -0800
@@ -222,13 +222,16 @@ void __wrap_free(void *ptr)
 	 * 	physical memory - kmalloc/kfree
 	 *	kernel virtual memory - vmalloc/vfree
 	 * 	anywhere else - malloc/free
-	 * If kmalloc is not yet possible, then the kernel memory regions
-	 * may not be set up yet, and the variables not initialized.  So,
-	 * free is called.
+	 * If kmalloc is not yet possible, then either high_physmem and/or
+	 * end_vm are still 0 (as at startup), in which case we call free, or
+	 * we have set them, but anyway addr has not been allocated from those
+	 * areas. So, in both cases __real_free is called.
 	 *
 	 * CAN_KMALLOC is checked because it would be bad to free a buffer
 	 * with kmalloc/vmalloc after they have been turned off during
 	 * shutdown.
+	 * XXX: However, we sometimes shutdown CAN_KMALLOC temporarily, so
+	 * there is a possibility for memory leaks.
 	 */
 
 	if((addr >= uml_physmem) && (addr < high_physmem)){
_
