Index: linux-2.6.8/arch/um/include/skas_ptrace.h
===================================================================
--- linux-2.6.8.orig/arch/um/include/skas_ptrace.h	2004-08-19 10:34:12.979410607 +0200
+++ linux-2.6.8/arch/um/include/skas_ptrace.h	2004-08-19 10:35:52.863092371 +0200
@@ -6,6 +6,8 @@
 #ifndef __SKAS_PTRACE_H
 #define __SKAS_PTRACE_H
 
+#ifndef PTRACE_FAULTINFO
+
 struct ptrace_faultinfo {
 	int is_write;
 	unsigned long addr;
@@ -22,6 +24,8 @@ struct ptrace_ldt {
 #define PTRACE_LDT 54
 #define PTRACE_SWITCH_MM 55
 
+#endif /* def PTRACE_FAULTINFO */
+
 #endif
 
 /*
Index: linux-2.6.8/arch/um/kernel/syscall_kern.c
===================================================================
--- linux-2.6.8.orig/arch/um/kernel/syscall_kern.c	2004-08-19 10:34:12.979410607 +0200
+++ linux-2.6.8/arch/um/kernel/syscall_kern.c	2004-08-19 10:35:52.847094984 +0200
@@ -82,7 +82,7 @@ long do_mmap2(struct mm_struct *mm, unsi
 	}
 
 	down_write(&mm->mmap_sem);
-	error = do_mmap_pgoff(mm, file, addr, len, prot, flags, pgoff);
+	error = __do_mmap_pgoff(mm, file, addr, len, prot, flags, pgoff);
 	up_write(&mm->mmap_sem);
 
 	if (file)
Index: linux-2.6.8/include/linux/mm.h
===================================================================
--- linux-2.6.8.orig/include/linux/mm.h	2004-08-19 10:34:12.981410281 +0200
+++ linux-2.6.8/include/linux/mm.h	2004-08-19 10:35:52.852094168 +0200
@@ -657,8 +657,7 @@ static inline unsigned long do_mmap(stru
 	if ((offset + PAGE_ALIGN(len)) < offset)
 		goto out;
 	if (!(offset & ~PAGE_MASK))
-		ret = do_mmap_pgoff(current->mm, file, addr, len, prot, flag, 
-				    offset >> PAGE_SHIFT);
+		ret = do_mmap_pgoff(file, addr, len, prot, flag, offset >> PAGE_SHIFT);
 out:
 	return ret;
 }
--- linux-2.6.8-uml/include/asm-um/processor-generic.h.skas	2004-08-19 14:30:23.236184384 +0200
+++ linux-2.6.8-uml/include/asm-um/processor-generic.h	2004-08-19 14:30:50.778706348 +0200
@@ -97,7 +97,7 @@
 
 extern unsigned long thread_saved_pc(struct task_struct *t);
 
-static inline void mm_copy_segments(struct mm_struct *from_mm, 
+static inline void __init_new_context(struct mm_struct *from_mm, 
 				    struct mm_struct *new_mm)
 {
 }
