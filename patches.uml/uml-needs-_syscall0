Subject: Fix uml build with 2.6.18+ kernel headers.
From: kraxel@suse.de

Someone wrapped the syscall defines into #ifdef __KERNEL__,
breaking the uml kernel build.  Workaround that.

---
 arch/um/os-Linux/process.c      |    8 +++++++-
 arch/um/os-Linux/sys-i386/tls.c |    8 +++++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

Index: linux-2.6.18/arch/um/os-Linux/process.c
===================================================================
--- linux-2.6.18.orig/arch/um/os-Linux/process.c
+++ linux-2.6.18/arch/um/os-Linux/process.c
@@ -3,6 +3,10 @@
  * Licensed under the GPL
  */
 
+#define __KERNEL__ /* need _syscall0 */
+#include <asm/unistd.h>
+#undef __KERNEL__
+
 #include <unistd.h>
 #include <stdio.h>
 #include <errno.h>
@@ -141,9 +145,11 @@ void os_usr1_process(int pid)
  * syscalls, and also breaks with clone(), which does not unshare the TLS.
  */
 
+inline _syscall0(pid_t, getpid)
+
 int os_getpid(void)
 {
-	return syscall(__NR_getpid);
+	return(getpid());
 }
 
 int os_getpgrp(void)
Index: linux-2.6.18/arch/um/os-Linux/sys-i386/tls.c
===================================================================
--- linux-2.6.18.orig/arch/um/os-Linux/sys-i386/tls.c
+++ linux-2.6.18/arch/um/os-Linux/sys-i386/tls.c
@@ -1,8 +1,14 @@
+#define __KERNEL__ /* need _syscall1 */
+#include <asm/unistd.h>
+#undef __KERNEL__
+
 #include <errno.h>
 #include <linux/unistd.h>
 #include "sysdep/tls.h"
 #include "user_util.h"
 
+static _syscall1(int, get_thread_area, user_desc_t *, u_info);
+
 /* Checks whether host supports TLS, and sets *tls_min according to the value
  * valid on the host.
  * i386 host have it == 6; x86_64 host have it == 12, for i386 emulation. */
@@ -15,7 +21,7 @@ void check_host_supports_tls(int *suppor
 		user_desc_t info;
 		info.entry_number = val[i];
 
-		if(syscall(__NR_get_thread_area, &info) == 0){
+		if (get_thread_area(&info) == 0) {
 			*tls_min = val[i];
 			*supports_tls = 1;
 			return;
