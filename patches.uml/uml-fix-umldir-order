Only in linux-fixed-uml/arch/um/include: kern_constants.h
Only in linux-fixed-uml/arch/um/include: skas_ptregs.h
Only in linux-fixed-uml/arch/um/include: sysdep
Only in linux-fixed-uml/arch/um/include/sysdep-i386: sc.h
Only in linux-fixed-uml/arch/um/include/sysdep-i386: thread.h
Only in linux-fixed-uml/arch/um/include: task.h
Only in linux-fixed-uml/arch/um/include: uml-config.h
Only in linux-fixed-uml/arch/um/kernel: config.c
Only in linux-fixed-uml/arch/um/kernel/skas/util: mk_ptregs
diff -pu -X /home/kraxel/.kdontdiff -r scratch/linux-2.6.3/arch/um/kernel/umid.c linux-fixed-uml/arch/um/kernel/umid.c
--- scratch/linux-2.6.3/arch/um/kernel/umid.c	2004-03-03 16:48:48.511803874 +0100
+++ linux-fixed-uml/arch/um/kernel/umid.c	2004-03-03 13:51:40.648167461 +0100
@@ -92,8 +92,8 @@ static int __init create_pid_file(void)
 	fd = os_open_file(file, of_create(of_excl(of_rdwr(OPENFLAGS()))), 
 			  0644);
 	if(fd < 0){
-		printf("Open of machine pid file \"%s\" failed - "
-		       "err = %d\n", file, -fd);
+		printf("Open of machine pid file \"%s\" failed: %s\n",
+		       file, strerror(-fd));
 		return 0;
 	}
 
@@ -244,7 +244,7 @@ static int __init make_uml_dir(void)
 	strcpy(uml_dir, dir);
 	
 	if((mkdir(uml_dir, 0777) < 0) && (errno != EEXIST)){
-	        printf("Failed to mkdir %s - errno = %i\n", uml_dir, errno);
+	        printf("Failed to mkdir %s: %s\n", uml_dir, strerror(errno));
 		return(-1);
 	}
 	return 0;
@@ -261,8 +261,8 @@ static int __init make_umid(int (*printe
 		strcat(tmp, "XXXXXX");
 		fd = mkstemp(tmp);
 		if(fd < 0){
-			(*printer)("make_umid - mkstemp failed, errno = %d\n",
-				   errno);
+			(*printer)("make_umid - mkstemp(%s) failed: %s\n",
+				   tmp,strerror(errno));
 			return(1);
 		}
 
@@ -300,15 +300,14 @@ __uml_setup("uml_dir=", set_uml_dir,
 "    The location to place the pid and umid files.\n\n"
 );
 
-__uml_postsetup(make_uml_dir);
-
 static int __init make_umid_setup(void)
 {
-	return(make_umid(printf));
+	/* one function with the ordering we need ... */
+	make_uml_dir();
+	make_umid(printf);
+	return create_pid_file();
 }
-
 __uml_postsetup(make_umid_setup);
-__uml_postsetup(create_pid_file);
 
 /*
  * Overrides for Emacs so that we follow Linus's tabbing style.
Only in linux-fixed-uml/arch/um: os
Only in linux-fixed-uml/arch/um/sys-i386: module.c
Only in linux-fixed-uml/arch/um/sys-i386: semaphore.c
Only in linux-fixed-uml/arch/um/sys-i386/util: mk_sc
Only in linux-fixed-uml/arch/um/sys-i386/util: mk_thread
Only in linux-fixed-uml/arch/um: uml.lds.s
Only in linux-fixed-uml/arch/um/util: mk_constants
Only in linux-fixed-uml/arch/um/util: mk_task
