# From Gerd Knorr - this avoids a network deadlock that can happen when the
# host side of an interface is full when the UML interface is brought up.
# In this case, SIGIOs will never be delivered since no new data is ever
# queued to the host side.
Index: uml-2.6.9-rc2/arch/um/drivers/net_kern.c
===================================================================
--- uml-2.6.9-rc2.orig/arch/um/drivers/net_kern.c	2004-09-16 16:35:07.122127377 +0200
+++ uml-2.6.9-rc2/arch/um/drivers/net_kern.c	2004-09-16 16:37:08.438416530 +0200
@@ -127,6 +127,13 @@ static int uml_net_open(struct net_devic
 	spin_lock(&opened_lock);
 	list_add(&lp->list, &opened);
 	spin_unlock(&opened_lock);
+
+	/* clear buffer - it can happen that the host side of the interface
+	 * is full when we get here.  In this case, new data is never queued,
+	 * SIGIOs never arrive, and the net never works.
+	 */
+	while((err = uml_net_rx(dev)) > 0) ;
+
  out:
 	spin_unlock(&lp->lock);
 	return(err);
