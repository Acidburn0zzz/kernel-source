# Do not flush the whole kernel page table instead of flushing only a range 
# in SKAS mode:
# loop from start to end instead than to start_vm to end_vm. To test a lot, 
# since it could well be wrong, or some callers could be passing wrong 
# parameters (they were ignored!). Anyway, it seems that this is safe and 
# that most callers are in arch-independent code (i.e. correct one). 
# But actually I did not test modules well.
#
# Signed-off-by: Paolo 'Blaisorblade' Giarrusso <blaisorblade_spam@yahoo.it>
# 
# I eyeballed all the callers, and they seem to be doing the right 
# thing - jdike
Index: uml-2.6.9-rc2/arch/um/kernel/skas/tlb.c
===================================================================
--- uml-2.6.9-rc2.orig/arch/um/kernel/skas/tlb.c	2004-09-16 16:35:05.394408156 +0200
+++ uml-2.6.9-rc2/arch/um/kernel/skas/tlb.c	2004-09-16 16:37:08.679377388 +0200
@@ -77,7 +77,7 @@ void flush_tlb_kernel_range_skas(unsigne
 	int updated = 0, err;
 
 	mm = &init_mm;
-	for(addr = start_vm; addr < end_vm;){
+	for(addr = start; addr < end;){
 		pgd = pgd_offset(mm, addr);
 		pmd = pmd_offset(pgd, addr);
 		if(pmd_present(*pmd)){
