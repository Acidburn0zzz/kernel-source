#!/bin/sh
#
# Script to merge the scripts branch into another branch, e.g.
# ... hack on scripts branch ...
# git commit
# ./scripts/merge-scripts-branch SLE11_BRANCH SL110_BRANCH SL103_BRANCH ...

SUBDIRECTORY_OK=true
. "$(git --exec-path)/git-sh-setup"
require_work_tree

if test $# = 0; then
	die "Usage: $0 <branch>..."
fi

if test -z "$merge_scripts_branch_copy"; then
	# copy ourself out of the git working dir
	copy=$(mktemp)
	cp "$0" "$copy"
	chmod +x "$copy"
	merge_scripts_branch_copy=true exec /bin/sh -$- "$copy" "$@"
fi

# remove the copy
trap 'rm -f "$0"' EXIT

cd_to_toplevel

if test "$1" = "--overwrite"; then
	shift
	# temporarily set up an overwriting merge driver
	git config merge.overwrite.name "overwrite our files by theirs"
	git config merge.overwrite.driver "cp %B %A"
	mkdir -p "$GIT_DIR"/info
	echo '* merge=overwrite' >>"$GIT_DIR"/info/attributes
	trap "sed -i '/merge=overwrite/d' \"$GIT_DIR\"/info/attributes;
		rm -f $0" EXIT
fi

oldbranch=$(sed -n 's|^ref: refs/heads/||p' "$GIT_DIR"/HEAD 2>/dev/null)
if test -z "$oldbranch"; then
	oldbranch=$(git rev-parse HEAD)
fi

for branch; do
	if test "$branch" = "scripts"; then
		echo "warning: skipping branch 'scripts'" >&2
		continue
	fi
	git checkout "$branch" || exit
	git merge "scripts" || exit
done

git checkout "$oldbranch"

