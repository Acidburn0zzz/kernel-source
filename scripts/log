#! /bin/sh

# Construct a changes entry and commit log from a patch.

CHANGES=kernel-source.changes

message=$(mktemp /tmp/${0##*/}.XXXXXX)
trap "rm -f $message" EXIT

log_entry() {
    local entry=$1

    echo "$entry" \
    | fmt --width 65 \
    | sed -e '1s/^/- /' -e '2,$s/^/  /' \
    >> $message
}

patch_log_entry() {
    local patch=$1

    if [ ! -e "$patch" ]; then
	log_entry "$patch: "
	return
    fi

    subject=$(formail -c -x Subject < "$patch")
    subject=${subject## }

    references=$(formail -c -x References < "$patch")
    references=${references## }

    log_entry "$patch: $subject${references:+ ($references)}"
}

for file in "$@" $(scripts/cvs-touched-files); do
    [ "${file:(-8)}" = ".changes" ] && continue
    files[${#files[@]}]=$file
done

for file in "${files[@]}"; do
    case "$file" in
	patches.*)  patch_log_entry "$file" ;;
	*)	    log_entry "$file: " ;;
    esac
done

if [ ! -s $message ]; then
    echo "- " >> $message
fi

if [ -z "$VC" ]; then
    VC=vc
    for search in /work/src/bin; do
	if [ -x $search/$VC ]; then
	    VC=$search/$VC
	    break
	fi
    done
fi

if $VC $CHANGES $message; then
    entry=$(sed -ne '1,2d' -e '/^--*$/!p' -e '/^--*$/q' $CHANGES)
    entry=${entry##$'\n'}
    entry=${entry%%$'\n'}
    echo "$entry" > $message

    while :; do
	echo
	sed -e 's:^:| :' $message
	echo
	echo -n "Commit with the above changelog entry ([y]es, [n]o, [e]dit)? "
	read yesno && \
	case "$yesno" in
	    [yY] | yes)
		cvs commit -F $message
		break ;;
	    [nN] | no)
		break ;;
	    [eE] | edit)
		${EDITOR:-vi} $message
		;;
	esac
    done
fi
