#! /bin/sh

# Construct a changes entry and commit log from a patch.

CHANGES=kernel-source.changes

for file in "$@" $(scripts/cvs-touched-files); do
    [ "${file:(-8)}" = ".changes" ] && continue
    files[${#files[@]}]=$file
done

for file in "${files[@]}"; do
    if [ "${file:0:8}" = "patches." ]; then
	patch=$file
	break
    fi
done

if [ -r "$patch" ]; then
    subject=$(formail -c -x Subject < "$patch")
    subject=${subject## }

    references=$(formail -c -x References < "$patch")
    references=${references## }
    if [ -n "$references" ]; then
	references=" ($references)"
    fi
fi

message=$(mktemp /tmp/${0##*/}.XXXXXX)
trap "rm -f $message" EXIT

#for ((n=0; n<${#files[@]}; n++)); do
#    files[n]=${files[n]/#patches./p.}
#    files[n]=${files[n]/#config/c.}
#done

if [ ${#files[@]} -gt 0 ]; then
    where=${files[0]}
    for ((n=1; n<${#files[@]}; n++)); do
	where="$where, ${files[n]}"
    done
    where="$where: "
fi

echo "$where$subject$references" \
| fmt --width 65 \
| sed -e '1s/^/- /' -e '2,$s/^/  /' \
> $message

if [ -z "$VC" ]; then
    VC=vc
    for search in /work/src/bin; do
	if [ -x $search/$VC ]; then
	    VC=$search/$VC
	    break
	fi
    done
fi

$VC $CHANGES $message

#if $VC $CHANGES $message && \
#    ! diff -q $old $CHANGES > /dev/null; then
#    echo "COM"
#    rm -f $old
#    unset $old
#fi
