#!/usr/bin/perl

use strict;
use Date::Parse;
use Getopt::Long;

my @users = ();
my %missing_users = ();
my $date = "";
my %commits = ();
my $start_date;
my $end_date;
my $start_time;
my $end_time;
my $total_commits = 0;

sub print_usage { 
    print STDERR "usage: commit_stats [-s date] [-e date] [-u user]\n";
    print STDERR "\t-s start date\n";
    print STDERR "\t-s end date\n";
    print STDERR "\t\tmany date formats are legal, see perldoc Date::Parse\n";
    print STDERR "\t-u user (can be supplied more then once)\n";
    print STDERR "\t\t-u is a substring match.  -u user will find user\@foo\n";
    exit(1);
}

GetOptions("start=s" => \$start_date,
	   "end=s" => \$end_date,
	   "user=s" => \@users) || print_usage();

if (defined($start_date)) {
    $start_time = str2time($start_date);
    if (defined($end_date)) {
        $end_time = str2time($end_date);
    } else {
	$end_date = "today";
        $end_time = time();
    }
} elsif (defined($end_date)) {
    $end_time = str2time($end_date);
    $start_date = "1 Jan CET";
    $start_time = str2time($start_date);
}

if (defined($start_time)) {
    print STDERR "Print commits between $start_date and $end_date\n";
}

foreach my $u (@users) {
    $missing_users{$u} = 0;
}

while(<>) {
    if (m/^-----/) {
        my $line = <>;
	chomp($line);
	my @words = split /\s*-\s*/, $line;
	my $date = $words[0];
	my $user = $words[1];
	if (defined($start_time)) {
	    my $t = str2time($date);
	    if ($t < $start_time || $t > $end_time) {
	        next;
	    }
	}
	if (scalar(@users)) {
	    foreach my $u (@users) {
	        if ($user =~ m/$u/) {
		    $commits{$user}++;
		    $total_commits++;
		    delete $missing_users{$u};
		    last;
		}
	    }
	} else {
	    $commits{$user}++;
	    $total_commits++;
	}
    }
}

print "total commits found $total_commits\n";
foreach my $u (sort(keys(%commits))) {
    print "$commits{$u}\t$u\n";
}

foreach my $u (sort(keys(%missing_users))) {
    print "$missing_users{$u}\t$u\n";
}

