#!/bin/bash
#############################################################################
# Copyright (c) 2008,2009,2015 Novell, Inc.
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, contact Novell, Inc.
#
# To contact Novell about this file by physical or electronic mail,
# you may find current contact information at www.novell.com
#############################################################################
#
# to be run from the pre-commit hook, runs check-patch on every added or
# modified file in patches.*/

for dir in "$(git rev-parse --show-cdup)" "" "../"; do
        dir="${dir}scripts"
	if test -x "$dir/check-patchfmt"; then
		break
	fi
done

tmp=$(mktemp /tmp/check-patch.XXXXXXXXXX)
trap "rm -f $tmp" EXIT

err=0
git diff-index -C --name-status --diff-filter=ACMR --cached HEAD | (
while read status file file2 xx; do
    case "$status" in
    A)
        opts=
        ;;
    *)
        # Be less strict about pre-existing patches
        opts="--relaxed"
        ;;
    esac
    if test -n "$file2"; then
        # For renamed or copied files, the output looks like
        # R<percent> <old name> <new name>
        file="$file2"
    fi
    case "$file" in
    patches.*/*)
        git cat-file blob :$file >"$tmp"
        "$dir/check-patch" $opts --stdin $file <"$tmp" || err=1
        "$dir/check-patchfmt" --stdin "$file" <"$tmp"  || err=1
    esac
done
if test "$err" != 0; then
    echo "Aborting."
    exit "$err"
fi ) || exit
