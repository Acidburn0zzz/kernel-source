#! /bin/bash

usage() {
    echo "USAGE: ${0##*/} [--only-symvers|--only-symsets] rpm ..." >&2
}

symsets_are_equal() {
    local a=$1 b=$2

    cmp -s <(tar tfz $a | sed -e 's:.*/::' | sort) \
	   <(tar tfz $b | sed -e 's:.*/::' | sort)
}

add_gz_files() {
    local file flavor type f
    for file; do
	gzip -cd "$file" > "${file%.gz}"
	file=${file%.gz}
	flavor=${file##*-}
	type=${file##*/}
	type=${type%%-*}

	f=kabi/$arch/$type-$flavor
	if [ -e $f ] && cmp -s "$file" "$f"; then
	    echo "${f%%*/} is unchanged"
	    continue
	fi
	if [ -z "$opt_dry_run" ]; then
	    mkdir -p ${f%/*}
	    cp "$file" $f
	fi
	echo "${f%%*/} added"
    done
}

options=`getopt -o h --long only-symvers,only-symsets,only-symtypes,dry-run,help -- "$@"`
if [ $? -ne 0 ]; then
    usage
    exit 1
fi
eval set -- "$options"

opt_add_symsets=1
opt_add_symvers=1
opt_add_symtypes=1
while :; do
    case "$1" in
	--only-symsets)
	    opt_add_symvers=
	    opt_add_symtypes=
	    ;;
	--only-symvers)
	    opt_add_symsets=
	    opt_add_symtypes=
	    ;;
	--only-symtypes)
	    opt_add_symsets=
	    opt_add_symvers=
	    ;;
	--dry-run)
	    opt_dry_run=1
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
	--)
	    shift
	    break;
    esac
    shift
done

if [ $# -eq 0 ]; then
    usage
    exit 1
fi

tmpdir=$(mktemp -td ${0##*/}.XXXXXX)
trap "rm -rf $tmpdir" EXIT

shopt -s nullglob

echo "Packages to process:"
unset ${!found_rmps_*}
for rpm in "$@"; do
    case "$rpm" in
	*.src.rpm | *.nosrc.rpm | *.noarch.rpm | *.delta.rpm)
	    continue
	    ;;
    esac

    # There may be symlinks as well as regular files. Skip duplicates.
    for file in "${rpms[@]}"; do
	[ "$rpm" -ef "$file" ] && continue 2
    done

    set -- $(rpm -qp --qf '%{ARCH} %{NAME}' "$rpm")
    var=found_rmps_$1_${2//-/_}
    eval "$var=\"\$$var $rpm\""

    rpms[${#rpms[@]}]=$rpm
done
for rpm in ${!found_rmps_*}; do
    set -- ${!rpm}
    if [ $# -ne 1 ]; then
	echo "*** Duplicate: ${*##*/}" >&2
	failed=1
    fi
done
[ -z "$failed" ] || exit 1
for rpm in ${!found_rmps_*}; do
    set -- ${!rpm}
    echo ${1##*/}
done
echo

archs_flavors="$(scripts/guards --list < config.conf)"
for rpm in "${rpms[@]}"; do
    exec 3< <(rpm -qp --qf '%{NAME}\n%{ARCH}\n%{VERSION}\n%{RELEASE}' "$rpm")
    read name <&3
    read arch <&3
    read version <&3
    read release <&3
    exec 3<&-

    # skip the main package if there is a base subpackage
    base=found_rmps_${arch}_${name//-/_}_base
    if [ -n "${!base}" ]; then
	continue
    fi

    build_arch=$arch
    case "$arch" in
	i?86)
	    arch=i386 ;;
	s390*)
	    arch=s390 ;;
    esac
    flavor=${name#kernel-}
    flavor=${flavor%-base}

    if ! echo "$archs_flavors" | grep -q "$arch/$flavor"; then
	case "$flavor" in
	source | syms | *-extra)
	    ;;
	*)
	    echo "${rpm%%*/}: not a known arch/flavor; skipping" >&2
	    ;;
	esac
	continue
    fi

    echo "[$name-$version-$release.$build_arch.rpm]"

    rm -rf $tmpdir/boot
    rpm2cpio "$rpm" \
    | ( cd $tmpdir && cpio -dim --quiet './boot/symvers-*' './boot/symsets-*' \
	'./boot/symtypes-*' )

    if [ -n "$opt_add_symvers" ]; then
	set -- $tmpdir/boot/symvers-*.gz
	if [ $# -eq 0 ]; then
	    echo "No symvers file found in $rpm" >&2
	    status=1
	fi
	add_gz_files "$@"
    fi

    if [ -n "$opt_add_symtypes" ]; then
	set -- $tmpdir/boot/symtypes-*.gz
	if [ $# -eq 0 ]; then
	    echo "No symtypes file found in $rpm" >&2
	    status=1
	fi
	add_gz_files "$@"
    fi

    if [ -n "$opt_add_symsets" ]; then
	set -- $tmpdir/boot/symsets-*
	if [ $# -eq 0 ]; then
	    echo "No symsets file found in $rpm" >&2
	    status=1
	fi

	for symsets in "$@"; do
	    flavor=${symsets%.tar.gz}
	    flavor=${flavor##*-}

	    f=kabi/$arch/symsets-$flavor.tar.gz
	    if [ -e $f ] && symsets_are_equal "$symsets" $f; then
		echo "${f%%*/} is unchanged"
		continue
	    fi
	    if [ -z "$opt_dry_run" ]; then
		mkdir -p ${f%/*}
		cp "$symsets" $f
	    fi
	    echo "${f%%*/} added"
	done
    fi
done

exit $status

# vim:shiftwidth=4 softtabstop=4
