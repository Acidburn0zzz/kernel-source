#! /bin/bash

usage() {
    echo "USAGE: ${0##*/} [--dry-run] rpm ..." >&2
}

options=`getopt -o h --long dry-run,help -- "$@"`
if [ $? -ne 0 ]; then
    usage
    exit 1
fi
eval set -- "$options"

while :; do
    case "$1" in
	--dry-run)
	    opt_dry_run=1
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
	--)
	    shift
	    break;
    esac
    shift
done

if [ $# -eq 0 ]; then
    usage
    exit 1
fi

tmpdir=$(mktemp -td ${0##*/}.XXXXXX)
trap "rm -rf $tmpdir" EXIT

shopt -s nullglob

archs_flavors="$(scripts/guards --list < config.conf)"
for rpm in "$@"; do
    case "$rpm" in
	*.src.rpm | *.nosrc.rpm | *.delta.rpm)
	    continue
	    ;;
    esac

    # There may be symlinks and regular files. Skip duplicates.
    for file in "${files_processed[@]}"; do
	[ "$rpm" -ef "$file" ] && continue 2
    done
    files_processed[${#files_processed[@]}]=$rpm

    exec 3< <(rpm -qp --qf '%{NAME}\n%{ARCH}\n%{VERSION}\n%{RELEASE}' "$rpm")
    read name <&3
    read arch <&3
    read version <&3
    read release <&3
    exec 3<&-

    build_arch=$arch
    case "$arch" in
	i?86)
	    arch=i386 ;;
	ppc*)
	    arch=powerpc ;;
	s390*)
	    arch=s390 ;;
    esac
    flavor=${name#kernel-}

    if ! echo "$archs_flavors" | grep -q "$arch/$flavor"; then
	case "$flavor" in
	source | syms)
	    ;;
	*)
	    echo "${rpm%%*/}: not a known arch/flavor; skipping $rpm" >&2
	    ;;
	esac
	continue
    fi

    echo "[$name-$version-$release.$build_arch.rpm]"

    symvers=kabi/$arch/symvers-$flavor
    if [ ! -e $symvers ]; then
	echo "File $symvers not found; skipping $rpm" >&2
	continue
    fi

    rpm2cpio "$rpm" \
    | ( cd $tmpdir && cpio -dim --quiet './boot/symvers-*' )

    set -- $tmpdir/boot/symvers-*
    if [ $# -ne 1 ]; then
	echo "Only one /boot/symvers-* file expected in $rpm; skipping" >&2
	continue
    fi
    new_symvers=$1

    awk -f <(
	echo "BEGIN {"
	echo $'\tsymvers="'$symvers'"'
	echo $'\tOFS="\t"'
	zcat $new_symvers \
	| sed -nre 's:^(0x[a-fA-Z0-9]+)[ \t]+([^ \t]+).*:\tsymver["\2"]="\1":p'
	echo "}"
	echo '
/^0x/	{ sub(/=>.*/, "", $1)
	  if ($2 in symver && $1 != symver[$2]) {
	    print symvers ": " $2 "(" $1 " => " symver[$2] ")" > "/dev/stderr"
	    there_are_changes=1
	    $1 = $1 "=>" symver[$2]
	  }
	}
	{ print }
	END {
	  if (!there_are_changes)
	    print symvers ": no changes" > "/dev/stderr"
	}
	'
	) $symvers > $symvers.new
    [ $? = 0 ] || continue
    if [ -z "$dry_run" ]; then
	mkdir ${symvers%/*}
	mv $symvers.new $symvers
    fi
    rm -rf $tmpdir/boot
done
