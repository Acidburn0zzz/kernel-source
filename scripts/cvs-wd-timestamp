#! /bin/sh

# Compute the timetamp in the cvs that corresponds to the working
# directory (= the change timestamp of the file in the working
# directory that was most recently modified). Assuming that the
# working directory contains no changes that are not committed
# into the cvs, a 'cvs up -D $timestamp' will bring the working
# directory into exactly the same state.

# Produce a list of current revisions for all files in the working
# directory (recursive).
revisions() {
    local dir=$1

    while IFS=/ read type file rev timestamp flags; do
	case "$type" in
	    D)	[ -n "$file" -a "$file" != '.' ] && revisions $dir$file/ ;;
	    '')	echo "$rev $dir$file" ;;
	    *)  echo "Unknown Entries type $type" >&2 ;;
	esac
    done < ${dir}CVS/Entries
}

query_timestamp() {
    echo "("
    revisions \
    | while read rev file; do
	echo "echo file: $file"
	echo "cvs -d $cvsroot rlog -r$rev $repository/$file &&"
    done
    # The sed expression folds this:
    #   file: name
    #   date: date
    # into "date file"
    cat <<-'EOF'
	: ) \
	| sed -n '
	    s/^file: //
	    t hold
	    s/^date: \([^;]*\).*/\1 UTC/
	    t print
	    b

	    :hold
	    h
	    b

	    :print
	    G
	    s/\n/ /
	    p' \
	| sort | tail -n 1
	EOF
}

IFS=: read server cvsroot < CVS/Root
read repository < CVS/Repository
set -- $($CVS_RSH -q $server "$(query_timestamp)")
# echo "$@"
echo $1 $2 $3
