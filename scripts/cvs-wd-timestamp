#! /bin/sh

# Compute the timetamp in the cvs that corresponds to the working
# directory (= the change timestamp of the file in the working
# directory that was most recently modified). Assuming that the
# working directory contains no changes that are not committed
# into the cvs, a 'cvs up -D $timestamp' will bring the working
# directory into exactly the same state.

. ${0%/*}/wd-functions.sh

if $using_git; then
    # Just echo the commit timestamp of HEAD
    git show --pretty=format:%ci HEAD | head -n 1
    exit
fi

if [ -z "$CVS_RSH" ]; then
    echo "CVS_RSH is not set -- assuming that this user does not" \
	 "have read access to the cvs repository." >&2
    exit 1
fi

# Produce a list of current revisions for all files in the working
# directory (recursive).
revisions() {
    local dir=$1

    while IFS=/ read type file rev timestamp flags; do
	case "$type" in
	    D)	[ -n "$file" -a "$file" != '.' ] && revisions $dir$file/ ;;
	    '')	[ ${rev:0:1} != - -a "$rev" != "dummy timestamp" ] \
	        && echo "$rev $dir$file" ;;
	    *)  echo "Unknown Entries type $type" >&2 ;;
	esac
    done < ${dir}CVS/Entries
}

query_timestamp() {
    echo "("
    revisions \
    | while read rev file; do
	echo "echo file: $file"
	echo "cvs -d $cvsroot rlog -r$rev $repository/$file &&"
    done
    # The sed expression folds this:
    #   file: name
    #   date: date
    # into "date file"
    cat <<-'EOF'
	: ) \
	| sed -n '
	    s/^file: //
	    t hold
	    s/^date: \([^;]*\).*/\1 UTC/
	    t print
	    b

	    :hold
	    h
	    b

	    :print
	    G
	    s/\n/ /
	    p' \
	| sort | tail -n 1
	EOF
}

# Various forms of CVS/Root entries exist:
#   :ext:user@host:/repository
#   :pserver:user@host:/repository
#   user@host:/repository
#   :local:/repository
#   /repository
cvsroot=$(cat CVS/Root)
case "$cvsroot" in
    :ext:*)
	cvsroot=${cvsroot#:ext:}
	;;
#    :pserver:*)
#	cvsroot=${cvsroot#:pserver:}
#	;;
    :local:*|/*)
	cvsroot="local:${cvsroot#:local:}"
	;;
esac
set -- $(IFS=: ; echo $cvsroot)
server=$1 cvsroot=$2
if [ -z "$server" -o -z "$cvsroot" ]; then
    echo "Failed to parse CVS/Root" >&2
    exit 1
fi

read repository < CVS/Repository
if [ "$server" = "local" ] ; then
    set -- $(echo "$(query_timestamp)" | /bin/sh)
else
    set -- $(echo "$(query_timestamp)" | ${CVS_RSH:-rsh} -q $server "/bin/sh")
fi
# echo "$@"
echo $1 $2 $3
