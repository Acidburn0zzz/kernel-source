#! /bin/sh

export CVS_RSH=ssh
CVS_ROOT=kerncvs.suse.de:/home.stand/cvsroot
REPO=kernel-source-26
TAGS=~kbuild/modver/tags

usage() {
    cat <<EOF
Usage: ${0##*/} --list
       ${0##*/} [-F] [--dry-run] --tag=name tag ...

List available tags, or tag a specific release with the specified
name in CVS. Examples:

  ${0##*/} --tag=CODE10_BETA9 'SLES-10-CD-*-Beta9'

EOF
    exit $1
}

options=`getopt -o Fh --long list,tag:,dry-run -- "$@"`

if [ $? -ne 0 ]
then
        usage 1
fi

eval set -- "$options"

while :; do
    case "$1" in
	-F)
	    opt_F=-F
	    ;;
	--list)
	    opt_list=1
	    ls $TAGS
	    ;;
	--tag)
	    opt_tag=$2
	    shift
	    ;;
	--dry-run)
	    opt_dry_run=1
	    ;;
	-h|--help)
	    usage 0
	    exit
	    ;;
	--)
	    shift
	    break
	    ;;
    esac
    shift
done

[ "${opt_list:+x}${opt_tag:+x}" != x ] && usage 1

doit() {
    echo "$@"
    if [ -z "$opt_dry_run" ]; then
	"$@"
    fi
}

if [ -n "$opt_list" ]; then
    ls $TAGS
else
    [ $# -eq 0 ] && usage 1

    source $(dirname $0)/config.sh

    status=0
    for tag in "$@"; do
	shopt -s nullglob
	set -- $TAGS/$tag/*/kernel-*
	if [ $# -eq 0 ]; then
	    echo "No kernels found in $tag" >&2
	    status=1
	    continue
	fi
	for package in "$@"; do
	    packages[${#packages[@]}]=$package

	    if ! [ -h "$package" ]; then
		echo "${package#$TAGS/} is not a symlink" >&2
		status=1
		continue
	    fi
	    if ! [ -e "$package/cvsinfo" ]; then
		echo "No CVS information found for ${package#$TAGS/}" >&2
		status=1
		continue
	    fi
	    timestamp=$(sed -nre 's,^Source Timestamp: ,,p' "$package/cvsinfo")
	    if [ -z "$timestamp" ]; then
		echo "Could not extract a timestamp from" \
		     "${package#$TAGS/}/cvsinfo" >&2
		status=1
		continue
	    fi
	    timestamps[${#timestamps[@]}]=$timestamp
	    branch=$(sed -nre 's,^CVS Branch: ,,p' "$package/cvsinfo")
	    [ -n "$branch" ] || branch=HEAD
	    branches[${#branches[@]}]=$branch
	done
    done
    for ((n=1; n<${#packages[@]}; n++)); do
	if [ "${branches[0]}" != "${branches[n]}" ]; then
	    echo "CVS branches differ for ${packages[0]#$TAGS/} and" \
		 "${packages[n]#$TAGS/}" >&2
	    status=1
	fi
	if [ "${timestamps[0]}" != "${timestamps[n]}" ]; then
	    echo "Timestamps differ for ${packages[0]#$TAGS/} and" \
		 "${packages[n]#$TAGS/}" >&2
	    status=1
	fi
    done

    [ $status -eq 0 ] || exit $status

    branch=${branches[0]}
    timestamp=${timestamps[0]}
    #echo "Repository: $REPO"
    #echo "Branch: $branch"
    #echo "Timestamp: $timestamp"
    #echo "Tag: $opt_tag"
    if [ "$branch" = HEAD ]; then
	doit cvs -Q -d "$CVS_ROOT" rtag $opt_F -D "$timestamp" $opt_tag $REPO
    else
	tmpdir=$(mktemp -dt ${0##*/}.XXXXXX) || exit 1
	trap "rm -rf $tmpdir" EXIT
	cd ${tmpdir%/*} && \
	doit cvs -Q -d "$CVS_ROOT" checkout -d ${tmpdir##*/} \
		 -r "$branch" -D"$timestamp" "$REPO" && \
	cd $tmpdir && \
	doit cvs -Q tag $opt_F "$opt_tag"
    fi
fi

exit $status

# vim:shiftwidth=4 softtabstop=4
