#! /bin/bash

# Find out which files appear to have changed (by comparing the
# CVS checkout timestamps with the actual timestamps).

. ${0%/*}/wd-functions.sh

if $using_git; then
    git diff --name-only HEAD
    exit
fi

if [ -z "$CVS_RSH" ]; then
    echo "CVS_RSH is not set -- assuming that this user does not" \
	 "have read access to the cvs repository." >&2
    exit 1
fi

# create a list of files in the repository.
list_files() {
    local dir=$1

    while IFS=/ read type file rev timestamp flags; do
	case "$type" in
	    D)	[ -n "$file" -a "$file" != '.' ] && list_files $dir$file/ ;;
	    '')	echo "$dir$file" $timestamp ;;
	    *)  echo "Unknown Entries type $type" >&2 ;;
	esac
    done < ${dir}CVS/Entries
}

files="$(list_files)"

# Make a list of existing files and their timestamps. Print missing files
# immediately.

exec 3>&1

existing_files="$(
    echo "$files" \
    | while read file timestamp; do
	if [ -e $file ]; then
	    echo "$file" $timestamp
	else
	    # print now
	    echo "-$file" >&3
	fi
    done)"

# Fetch the timestamps of the files on the filesystem. Pipe the result to
# file descriptor 3.
exec 3< <(
    export TZ=UTC LC_TIME=C
    echo "$existing_files" \
    | awk '{ print $1 }' \
    | xargs ls -Ul --time-style='+%a %b %e %H:%M:%S %Y' \
    | awk '{ print $6, $7, $8, $9, $10, $11}')

# Compare CVS timestamps and filesystem timestamps.
echo "$existing_files" \
| while read file timestamp; do
    read wday mon day time year file2 <&3
    if [ "$file" != "$file2" ]; then
	echo "Oops: $file != $file2" >&2
	exit 1
    fi
    [ "$timestamp" = "$wday $mon $day $time $year" ] || echo "$file"
done
