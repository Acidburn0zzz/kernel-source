#!/bin/bash
# testmodule
# 
# Usage: testmodule versiondumpfile module.ko [module.ko [...]]
# 
# Reads the undefined symbols and the versions of the imported
# symbols from module.ko and compares them to the list of
# symbol versions found in versiondumpfile.
# versiondumpfile should be produced by collect_ksyms
#
# (c) Kurt Garloff <garloff@suse.de>, 2005-05-17
# License: GNU GPL

unset LANG
export LC_ALL=POSIX
export PATH=$PATH:/sbin
# Arg: filename
parse_prov_list()
{
	if test ! -r $1; then
		echo "$1 not accessible"
		exit 5
	fi
	provided=$(cat $1 | egrep '^[^	 ]+	[0-9a-f]+')
	
}
# Arg: filename
collect_needed_versions()
{
	declare -i no=0
	if test ! -r $1; then
		echo "$1 not accessible"
		exit 6
	fi
	while read ver sym; do
		ver=$(printf %08x $ver)
		match=$(echo "$provided" | quickfilter $sym)
		#echo "$provided" | grep $sym
		#echo \"$sym\"
		#echo $match
		if test -z "$match"; then
			unresolved="$unresolved\n$sym\t$ver"
		else
			verm=$(echo "$match" | sed 's/^[^ \t]*\t\([^ \t]*\).*$/\1/')
			if test "$ver" != "$verm"; then
				unmatched="$unmatched\n$sym\t$ver\t$verm"
			fi
		fi
		let no+=1
	done < <(modprobe --dump-modversions $1)
	# Consolidate
	unresolved=$(echo -e "$unresolved" | sort -u | sed '/^$/d')
	unmatched=$(echo -e "$unmatched" | sort -u | sed '/^$/d')
	# Find undefined unversioned symbols
	need=$(nm $1 | grep '^ *[uU]' | sed "s/^ *[uU] \(.*\)$/\1/")
	provfilt=$(echo "$provided" | sed 's/	.*$//' | sort -u)
	unrefilt=$(echo "$unresolved" | sed 's/	.*$//')
	need=$(echo "$need" | quickfilter -v $provfilt)
	need=$(echo "$need" | quickfilter -v $unrefilt)
	unresolved="$unresolved\n$need"
	unresolved=$(echo -e "$unresolved" | sort -u | sed '/^$/d')
	echo -en "Module $1:\n$no imported versioned symbols, "
	echo -n $(echo "$need" | sed '/^$/d' | wc -l)
	echo " unversioned"
}

#main
if test -z "$2"; then
	echo "Usage: testmodule Versiondumpfile Module.ko [Module.ko [...]]"
	echo "Versiondumpfile is the file produced by collect_ksyms"
	exit 3
fi
if ! type -p quickfilter >/dev/null; then
	echo "This script needs quickfilter"
	exit 4
fi

# List of provided syms
parse_prov_list $1
# MOdules to test
while test ! -z "$2"; do
	collect_needed_versions $2
	shift
done
# Summary
rv=0
echo "Unmatched symbol versions: $(echo "$unmatched" | sed '/^$/d' | wc -l)"
test -z "$unmatched" || { echo "$unmatched"; rv=1 }
echo "Unresolved symbols: $(echo "$unresolved" | sed '/^$/d' | wc -l)"
test -z "$unresolved" || { echo "$unresolved"; rv=2 }
exit rv
 
